// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CommonActionSignalGift.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_CommonActionSignalGift_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_CommonActionSignalGift_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3013000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3013000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "ZtLiveUserInfo.pb.h"
#include "ZtDrawGiftInfo.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_CommonActionSignalGift_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_CommonActionSignalGift_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_CommonActionSignalGift_2eproto;
namespace AcFunDanmu {
class CommonActionSignalGift;
class CommonActionSignalGiftDefaultTypeInternal;
extern CommonActionSignalGiftDefaultTypeInternal _CommonActionSignalGift_default_instance_;
}  // namespace AcFunDanmu
PROTOBUF_NAMESPACE_OPEN
template<> ::AcFunDanmu::CommonActionSignalGift* Arena::CreateMaybeMessage<::AcFunDanmu::CommonActionSignalGift>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace AcFunDanmu {

// ===================================================================

class CommonActionSignalGift PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:AcFunDanmu.CommonActionSignalGift) */ {
 public:
  inline CommonActionSignalGift() : CommonActionSignalGift(nullptr) {}
  virtual ~CommonActionSignalGift();

  CommonActionSignalGift(const CommonActionSignalGift& from);
  CommonActionSignalGift(CommonActionSignalGift&& from) noexcept
    : CommonActionSignalGift() {
    *this = ::std::move(from);
  }

  inline CommonActionSignalGift& operator=(const CommonActionSignalGift& from) {
    CopyFrom(from);
    return *this;
  }
  inline CommonActionSignalGift& operator=(CommonActionSignalGift&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CommonActionSignalGift& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CommonActionSignalGift* internal_default_instance() {
    return reinterpret_cast<const CommonActionSignalGift*>(
               &_CommonActionSignalGift_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(CommonActionSignalGift& a, CommonActionSignalGift& b) {
    a.Swap(&b);
  }
  inline void Swap(CommonActionSignalGift* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CommonActionSignalGift* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CommonActionSignalGift* New() const final {
    return CreateMaybeMessage<CommonActionSignalGift>(nullptr);
  }

  CommonActionSignalGift* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CommonActionSignalGift>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CommonActionSignalGift& from);
  void MergeFrom(const CommonActionSignalGift& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CommonActionSignalGift* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "AcFunDanmu.CommonActionSignalGift";
  }
  protected:
  explicit CommonActionSignalGift(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_CommonActionSignalGift_2eproto);
    return ::descriptor_table_CommonActionSignalGift_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kComboIdFieldNumber = 7,
    kUserFieldNumber = 1,
    kDrawGiftInfoFieldNumber = 10,
    kSendTimeMsFieldNumber = 2,
    kGiftIdFieldNumber = 3,
    kCountFieldNumber = 4,
    kComboFieldNumber = 5,
    kValueFieldNumber = 6,
    kSlotDisplayDurationMsFieldNumber = 8,
    kExpireDurationMsFieldNumber = 9,
  };
  // string comboId = 7;
  void clear_comboid();
  const std::string& comboid() const;
  void set_comboid(const std::string& value);
  void set_comboid(std::string&& value);
  void set_comboid(const char* value);
  void set_comboid(const char* value, size_t size);
  std::string* mutable_comboid();
  std::string* release_comboid();
  void set_allocated_comboid(std::string* comboid);
  private:
  const std::string& _internal_comboid() const;
  void _internal_set_comboid(const std::string& value);
  std::string* _internal_mutable_comboid();
  public:

  // .AcFunDanmu.ZtLiveUserInfo user = 1;
  bool has_user() const;
  private:
  bool _internal_has_user() const;
  public:
  void clear_user();
  const ::AcFunDanmu::ZtLiveUserInfo& user() const;
  ::AcFunDanmu::ZtLiveUserInfo* release_user();
  ::AcFunDanmu::ZtLiveUserInfo* mutable_user();
  void set_allocated_user(::AcFunDanmu::ZtLiveUserInfo* user);
  private:
  const ::AcFunDanmu::ZtLiveUserInfo& _internal_user() const;
  ::AcFunDanmu::ZtLiveUserInfo* _internal_mutable_user();
  public:
  void unsafe_arena_set_allocated_user(
      ::AcFunDanmu::ZtLiveUserInfo* user);
  ::AcFunDanmu::ZtLiveUserInfo* unsafe_arena_release_user();

  // .AcFunDanmu.ZtDrawGiftInfo drawGiftInfo = 10;
  bool has_drawgiftinfo() const;
  private:
  bool _internal_has_drawgiftinfo() const;
  public:
  void clear_drawgiftinfo();
  const ::AcFunDanmu::ZtDrawGiftInfo& drawgiftinfo() const;
  ::AcFunDanmu::ZtDrawGiftInfo* release_drawgiftinfo();
  ::AcFunDanmu::ZtDrawGiftInfo* mutable_drawgiftinfo();
  void set_allocated_drawgiftinfo(::AcFunDanmu::ZtDrawGiftInfo* drawgiftinfo);
  private:
  const ::AcFunDanmu::ZtDrawGiftInfo& _internal_drawgiftinfo() const;
  ::AcFunDanmu::ZtDrawGiftInfo* _internal_mutable_drawgiftinfo();
  public:
  void unsafe_arena_set_allocated_drawgiftinfo(
      ::AcFunDanmu::ZtDrawGiftInfo* drawgiftinfo);
  ::AcFunDanmu::ZtDrawGiftInfo* unsafe_arena_release_drawgiftinfo();

  // int64 sendTimeMs = 2;
  void clear_sendtimems();
  ::PROTOBUF_NAMESPACE_ID::int64 sendtimems() const;
  void set_sendtimems(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_sendtimems() const;
  void _internal_set_sendtimems(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int64 giftId = 3;
  void clear_giftid();
  ::PROTOBUF_NAMESPACE_ID::int64 giftid() const;
  void set_giftid(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_giftid() const;
  void _internal_set_giftid(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int32 count = 4;
  void clear_count();
  ::PROTOBUF_NAMESPACE_ID::int32 count() const;
  void set_count(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_count() const;
  void _internal_set_count(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 combo = 5;
  void clear_combo();
  ::PROTOBUF_NAMESPACE_ID::int32 combo() const;
  void set_combo(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_combo() const;
  void _internal_set_combo(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int64 value = 6;
  void clear_value();
  ::PROTOBUF_NAMESPACE_ID::int64 value() const;
  void set_value(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_value() const;
  void _internal_set_value(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int64 slotDisplayDurationMs = 8;
  void clear_slotdisplaydurationms();
  ::PROTOBUF_NAMESPACE_ID::int64 slotdisplaydurationms() const;
  void set_slotdisplaydurationms(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_slotdisplaydurationms() const;
  void _internal_set_slotdisplaydurationms(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int64 expireDurationMs = 9;
  void clear_expiredurationms();
  ::PROTOBUF_NAMESPACE_ID::int64 expiredurationms() const;
  void set_expiredurationms(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_expiredurationms() const;
  void _internal_set_expiredurationms(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:AcFunDanmu.CommonActionSignalGift)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr comboid_;
  ::AcFunDanmu::ZtLiveUserInfo* user_;
  ::AcFunDanmu::ZtDrawGiftInfo* drawgiftinfo_;
  ::PROTOBUF_NAMESPACE_ID::int64 sendtimems_;
  ::PROTOBUF_NAMESPACE_ID::int64 giftid_;
  ::PROTOBUF_NAMESPACE_ID::int32 count_;
  ::PROTOBUF_NAMESPACE_ID::int32 combo_;
  ::PROTOBUF_NAMESPACE_ID::int64 value_;
  ::PROTOBUF_NAMESPACE_ID::int64 slotdisplaydurationms_;
  ::PROTOBUF_NAMESPACE_ID::int64 expiredurationms_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_CommonActionSignalGift_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CommonActionSignalGift

// .AcFunDanmu.ZtLiveUserInfo user = 1;
inline bool CommonActionSignalGift::_internal_has_user() const {
  return this != internal_default_instance() && user_ != nullptr;
}
inline bool CommonActionSignalGift::has_user() const {
  return _internal_has_user();
}
inline const ::AcFunDanmu::ZtLiveUserInfo& CommonActionSignalGift::_internal_user() const {
  const ::AcFunDanmu::ZtLiveUserInfo* p = user_;
  return p != nullptr ? *p : *reinterpret_cast<const ::AcFunDanmu::ZtLiveUserInfo*>(
      &::AcFunDanmu::_ZtLiveUserInfo_default_instance_);
}
inline const ::AcFunDanmu::ZtLiveUserInfo& CommonActionSignalGift::user() const {
  // @@protoc_insertion_point(field_get:AcFunDanmu.CommonActionSignalGift.user)
  return _internal_user();
}
inline void CommonActionSignalGift::unsafe_arena_set_allocated_user(
    ::AcFunDanmu::ZtLiveUserInfo* user) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(user_);
  }
  user_ = user;
  if (user) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:AcFunDanmu.CommonActionSignalGift.user)
}
inline ::AcFunDanmu::ZtLiveUserInfo* CommonActionSignalGift::release_user() {
  
  ::AcFunDanmu::ZtLiveUserInfo* temp = user_;
  user_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::AcFunDanmu::ZtLiveUserInfo* CommonActionSignalGift::unsafe_arena_release_user() {
  // @@protoc_insertion_point(field_release:AcFunDanmu.CommonActionSignalGift.user)
  
  ::AcFunDanmu::ZtLiveUserInfo* temp = user_;
  user_ = nullptr;
  return temp;
}
inline ::AcFunDanmu::ZtLiveUserInfo* CommonActionSignalGift::_internal_mutable_user() {
  
  if (user_ == nullptr) {
    auto* p = CreateMaybeMessage<::AcFunDanmu::ZtLiveUserInfo>(GetArena());
    user_ = p;
  }
  return user_;
}
inline ::AcFunDanmu::ZtLiveUserInfo* CommonActionSignalGift::mutable_user() {
  // @@protoc_insertion_point(field_mutable:AcFunDanmu.CommonActionSignalGift.user)
  return _internal_mutable_user();
}
inline void CommonActionSignalGift::set_allocated_user(::AcFunDanmu::ZtLiveUserInfo* user) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(user_);
  }
  if (user) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(user)->GetArena();
    if (message_arena != submessage_arena) {
      user = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, user, submessage_arena);
    }
    
  } else {
    
  }
  user_ = user;
  // @@protoc_insertion_point(field_set_allocated:AcFunDanmu.CommonActionSignalGift.user)
}

// int64 sendTimeMs = 2;
inline void CommonActionSignalGift::clear_sendtimems() {
  sendtimems_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 CommonActionSignalGift::_internal_sendtimems() const {
  return sendtimems_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 CommonActionSignalGift::sendtimems() const {
  // @@protoc_insertion_point(field_get:AcFunDanmu.CommonActionSignalGift.sendTimeMs)
  return _internal_sendtimems();
}
inline void CommonActionSignalGift::_internal_set_sendtimems(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  sendtimems_ = value;
}
inline void CommonActionSignalGift::set_sendtimems(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_sendtimems(value);
  // @@protoc_insertion_point(field_set:AcFunDanmu.CommonActionSignalGift.sendTimeMs)
}

// int64 giftId = 3;
inline void CommonActionSignalGift::clear_giftid() {
  giftid_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 CommonActionSignalGift::_internal_giftid() const {
  return giftid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 CommonActionSignalGift::giftid() const {
  // @@protoc_insertion_point(field_get:AcFunDanmu.CommonActionSignalGift.giftId)
  return _internal_giftid();
}
inline void CommonActionSignalGift::_internal_set_giftid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  giftid_ = value;
}
inline void CommonActionSignalGift::set_giftid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_giftid(value);
  // @@protoc_insertion_point(field_set:AcFunDanmu.CommonActionSignalGift.giftId)
}

// int32 count = 4;
inline void CommonActionSignalGift::clear_count() {
  count_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CommonActionSignalGift::_internal_count() const {
  return count_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CommonActionSignalGift::count() const {
  // @@protoc_insertion_point(field_get:AcFunDanmu.CommonActionSignalGift.count)
  return _internal_count();
}
inline void CommonActionSignalGift::_internal_set_count(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  count_ = value;
}
inline void CommonActionSignalGift::set_count(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_count(value);
  // @@protoc_insertion_point(field_set:AcFunDanmu.CommonActionSignalGift.count)
}

// int32 combo = 5;
inline void CommonActionSignalGift::clear_combo() {
  combo_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CommonActionSignalGift::_internal_combo() const {
  return combo_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CommonActionSignalGift::combo() const {
  // @@protoc_insertion_point(field_get:AcFunDanmu.CommonActionSignalGift.combo)
  return _internal_combo();
}
inline void CommonActionSignalGift::_internal_set_combo(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  combo_ = value;
}
inline void CommonActionSignalGift::set_combo(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_combo(value);
  // @@protoc_insertion_point(field_set:AcFunDanmu.CommonActionSignalGift.combo)
}

// int64 value = 6;
inline void CommonActionSignalGift::clear_value() {
  value_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 CommonActionSignalGift::_internal_value() const {
  return value_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 CommonActionSignalGift::value() const {
  // @@protoc_insertion_point(field_get:AcFunDanmu.CommonActionSignalGift.value)
  return _internal_value();
}
inline void CommonActionSignalGift::_internal_set_value(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  value_ = value;
}
inline void CommonActionSignalGift::set_value(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:AcFunDanmu.CommonActionSignalGift.value)
}

// string comboId = 7;
inline void CommonActionSignalGift::clear_comboid() {
  comboid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& CommonActionSignalGift::comboid() const {
  // @@protoc_insertion_point(field_get:AcFunDanmu.CommonActionSignalGift.comboId)
  return _internal_comboid();
}
inline void CommonActionSignalGift::set_comboid(const std::string& value) {
  _internal_set_comboid(value);
  // @@protoc_insertion_point(field_set:AcFunDanmu.CommonActionSignalGift.comboId)
}
inline std::string* CommonActionSignalGift::mutable_comboid() {
  // @@protoc_insertion_point(field_mutable:AcFunDanmu.CommonActionSignalGift.comboId)
  return _internal_mutable_comboid();
}
inline const std::string& CommonActionSignalGift::_internal_comboid() const {
  return comboid_.Get();
}
inline void CommonActionSignalGift::_internal_set_comboid(const std::string& value) {
  
  comboid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void CommonActionSignalGift::set_comboid(std::string&& value) {
  
  comboid_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:AcFunDanmu.CommonActionSignalGift.comboId)
}
inline void CommonActionSignalGift::set_comboid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  comboid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:AcFunDanmu.CommonActionSignalGift.comboId)
}
inline void CommonActionSignalGift::set_comboid(const char* value,
    size_t size) {
  
  comboid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:AcFunDanmu.CommonActionSignalGift.comboId)
}
inline std::string* CommonActionSignalGift::_internal_mutable_comboid() {
  
  return comboid_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* CommonActionSignalGift::release_comboid() {
  // @@protoc_insertion_point(field_release:AcFunDanmu.CommonActionSignalGift.comboId)
  return comboid_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CommonActionSignalGift::set_allocated_comboid(std::string* comboid) {
  if (comboid != nullptr) {
    
  } else {
    
  }
  comboid_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), comboid,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:AcFunDanmu.CommonActionSignalGift.comboId)
}

// int64 slotDisplayDurationMs = 8;
inline void CommonActionSignalGift::clear_slotdisplaydurationms() {
  slotdisplaydurationms_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 CommonActionSignalGift::_internal_slotdisplaydurationms() const {
  return slotdisplaydurationms_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 CommonActionSignalGift::slotdisplaydurationms() const {
  // @@protoc_insertion_point(field_get:AcFunDanmu.CommonActionSignalGift.slotDisplayDurationMs)
  return _internal_slotdisplaydurationms();
}
inline void CommonActionSignalGift::_internal_set_slotdisplaydurationms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  slotdisplaydurationms_ = value;
}
inline void CommonActionSignalGift::set_slotdisplaydurationms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_slotdisplaydurationms(value);
  // @@protoc_insertion_point(field_set:AcFunDanmu.CommonActionSignalGift.slotDisplayDurationMs)
}

// int64 expireDurationMs = 9;
inline void CommonActionSignalGift::clear_expiredurationms() {
  expiredurationms_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 CommonActionSignalGift::_internal_expiredurationms() const {
  return expiredurationms_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 CommonActionSignalGift::expiredurationms() const {
  // @@protoc_insertion_point(field_get:AcFunDanmu.CommonActionSignalGift.expireDurationMs)
  return _internal_expiredurationms();
}
inline void CommonActionSignalGift::_internal_set_expiredurationms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  expiredurationms_ = value;
}
inline void CommonActionSignalGift::set_expiredurationms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_expiredurationms(value);
  // @@protoc_insertion_point(field_set:AcFunDanmu.CommonActionSignalGift.expireDurationMs)
}

// .AcFunDanmu.ZtDrawGiftInfo drawGiftInfo = 10;
inline bool CommonActionSignalGift::_internal_has_drawgiftinfo() const {
  return this != internal_default_instance() && drawgiftinfo_ != nullptr;
}
inline bool CommonActionSignalGift::has_drawgiftinfo() const {
  return _internal_has_drawgiftinfo();
}
inline const ::AcFunDanmu::ZtDrawGiftInfo& CommonActionSignalGift::_internal_drawgiftinfo() const {
  const ::AcFunDanmu::ZtDrawGiftInfo* p = drawgiftinfo_;
  return p != nullptr ? *p : *reinterpret_cast<const ::AcFunDanmu::ZtDrawGiftInfo*>(
      &::AcFunDanmu::_ZtDrawGiftInfo_default_instance_);
}
inline const ::AcFunDanmu::ZtDrawGiftInfo& CommonActionSignalGift::drawgiftinfo() const {
  // @@protoc_insertion_point(field_get:AcFunDanmu.CommonActionSignalGift.drawGiftInfo)
  return _internal_drawgiftinfo();
}
inline void CommonActionSignalGift::unsafe_arena_set_allocated_drawgiftinfo(
    ::AcFunDanmu::ZtDrawGiftInfo* drawgiftinfo) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(drawgiftinfo_);
  }
  drawgiftinfo_ = drawgiftinfo;
  if (drawgiftinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:AcFunDanmu.CommonActionSignalGift.drawGiftInfo)
}
inline ::AcFunDanmu::ZtDrawGiftInfo* CommonActionSignalGift::release_drawgiftinfo() {
  
  ::AcFunDanmu::ZtDrawGiftInfo* temp = drawgiftinfo_;
  drawgiftinfo_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::AcFunDanmu::ZtDrawGiftInfo* CommonActionSignalGift::unsafe_arena_release_drawgiftinfo() {
  // @@protoc_insertion_point(field_release:AcFunDanmu.CommonActionSignalGift.drawGiftInfo)
  
  ::AcFunDanmu::ZtDrawGiftInfo* temp = drawgiftinfo_;
  drawgiftinfo_ = nullptr;
  return temp;
}
inline ::AcFunDanmu::ZtDrawGiftInfo* CommonActionSignalGift::_internal_mutable_drawgiftinfo() {
  
  if (drawgiftinfo_ == nullptr) {
    auto* p = CreateMaybeMessage<::AcFunDanmu::ZtDrawGiftInfo>(GetArena());
    drawgiftinfo_ = p;
  }
  return drawgiftinfo_;
}
inline ::AcFunDanmu::ZtDrawGiftInfo* CommonActionSignalGift::mutable_drawgiftinfo() {
  // @@protoc_insertion_point(field_mutable:AcFunDanmu.CommonActionSignalGift.drawGiftInfo)
  return _internal_mutable_drawgiftinfo();
}
inline void CommonActionSignalGift::set_allocated_drawgiftinfo(::AcFunDanmu::ZtDrawGiftInfo* drawgiftinfo) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(drawgiftinfo_);
  }
  if (drawgiftinfo) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(drawgiftinfo)->GetArena();
    if (message_arena != submessage_arena) {
      drawgiftinfo = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, drawgiftinfo, submessage_arena);
    }
    
  } else {
    
  }
  drawgiftinfo_ = drawgiftinfo;
  // @@protoc_insertion_point(field_set_allocated:AcFunDanmu.CommonActionSignalGift.drawGiftInfo)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace AcFunDanmu

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_CommonActionSignalGift_2eproto
