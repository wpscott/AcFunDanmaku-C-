// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CommonStateSignalWishSheetCurrentState.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_CommonStateSignalWishSheetCurrentState_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_CommonStateSignalWishSheetCurrentState_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3014000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3014000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_CommonStateSignalWishSheetCurrentState_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_CommonStateSignalWishSheetCurrentState_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_CommonStateSignalWishSheetCurrentState_2eproto;
namespace AcFunDanmu {
class CommonStateSignalWishSheetCurrentState;
class CommonStateSignalWishSheetCurrentStateDefaultTypeInternal;
extern CommonStateSignalWishSheetCurrentStateDefaultTypeInternal _CommonStateSignalWishSheetCurrentState_default_instance_;
class CommonStateSignalWishSheetCurrentState_WishCurrentState;
class CommonStateSignalWishSheetCurrentState_WishCurrentStateDefaultTypeInternal;
extern CommonStateSignalWishSheetCurrentState_WishCurrentStateDefaultTypeInternal _CommonStateSignalWishSheetCurrentState_WishCurrentState_default_instance_;
}  // namespace AcFunDanmu
PROTOBUF_NAMESPACE_OPEN
template<> ::AcFunDanmu::CommonStateSignalWishSheetCurrentState* Arena::CreateMaybeMessage<::AcFunDanmu::CommonStateSignalWishSheetCurrentState>(Arena*);
template<> ::AcFunDanmu::CommonStateSignalWishSheetCurrentState_WishCurrentState* Arena::CreateMaybeMessage<::AcFunDanmu::CommonStateSignalWishSheetCurrentState_WishCurrentState>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace AcFunDanmu {

// ===================================================================

class CommonStateSignalWishSheetCurrentState_WishCurrentState PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:AcFunDanmu.CommonStateSignalWishSheetCurrentState.WishCurrentState) */ {
 public:
  inline CommonStateSignalWishSheetCurrentState_WishCurrentState() : CommonStateSignalWishSheetCurrentState_WishCurrentState(nullptr) {}
  virtual ~CommonStateSignalWishSheetCurrentState_WishCurrentState();

  CommonStateSignalWishSheetCurrentState_WishCurrentState(const CommonStateSignalWishSheetCurrentState_WishCurrentState& from);
  CommonStateSignalWishSheetCurrentState_WishCurrentState(CommonStateSignalWishSheetCurrentState_WishCurrentState&& from) noexcept
    : CommonStateSignalWishSheetCurrentState_WishCurrentState() {
    *this = ::std::move(from);
  }

  inline CommonStateSignalWishSheetCurrentState_WishCurrentState& operator=(const CommonStateSignalWishSheetCurrentState_WishCurrentState& from) {
    CopyFrom(from);
    return *this;
  }
  inline CommonStateSignalWishSheetCurrentState_WishCurrentState& operator=(CommonStateSignalWishSheetCurrentState_WishCurrentState&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CommonStateSignalWishSheetCurrentState_WishCurrentState& default_instance();

  static inline const CommonStateSignalWishSheetCurrentState_WishCurrentState* internal_default_instance() {
    return reinterpret_cast<const CommonStateSignalWishSheetCurrentState_WishCurrentState*>(
               &_CommonStateSignalWishSheetCurrentState_WishCurrentState_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(CommonStateSignalWishSheetCurrentState_WishCurrentState& a, CommonStateSignalWishSheetCurrentState_WishCurrentState& b) {
    a.Swap(&b);
  }
  inline void Swap(CommonStateSignalWishSheetCurrentState_WishCurrentState* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CommonStateSignalWishSheetCurrentState_WishCurrentState* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CommonStateSignalWishSheetCurrentState_WishCurrentState* New() const final {
    return CreateMaybeMessage<CommonStateSignalWishSheetCurrentState_WishCurrentState>(nullptr);
  }

  CommonStateSignalWishSheetCurrentState_WishCurrentState* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CommonStateSignalWishSheetCurrentState_WishCurrentState>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CommonStateSignalWishSheetCurrentState_WishCurrentState& from);
  void MergeFrom(const CommonStateSignalWishSheetCurrentState_WishCurrentState& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CommonStateSignalWishSheetCurrentState_WishCurrentState* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "AcFunDanmu.CommonStateSignalWishSheetCurrentState.WishCurrentState";
  }
  protected:
  explicit CommonStateSignalWishSheetCurrentState_WishCurrentState(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_CommonStateSignalWishSheetCurrentState_2eproto);
    return ::descriptor_table_CommonStateSignalWishSheetCurrentState_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCFieldNumber = 1,
    kGFieldNumber = 5,
    kHFieldNumber = 6,
    kDFieldNumber = 2,
    kEFieldNumber = 3,
    kFFieldNumber = 4,
  };
  // string c = 1;
  void clear_c();
  const std::string& c() const;
  void set_c(const std::string& value);
  void set_c(std::string&& value);
  void set_c(const char* value);
  void set_c(const char* value, size_t size);
  std::string* mutable_c();
  std::string* release_c();
  void set_allocated_c(std::string* c);
  private:
  const std::string& _internal_c() const;
  void _internal_set_c(const std::string& value);
  std::string* _internal_mutable_c();
  public:

  // string g = 5;
  void clear_g();
  const std::string& g() const;
  void set_g(const std::string& value);
  void set_g(std::string&& value);
  void set_g(const char* value);
  void set_g(const char* value, size_t size);
  std::string* mutable_g();
  std::string* release_g();
  void set_allocated_g(std::string* g);
  private:
  const std::string& _internal_g() const;
  void _internal_set_g(const std::string& value);
  std::string* _internal_mutable_g();
  public:

  // string h = 6;
  void clear_h();
  const std::string& h() const;
  void set_h(const std::string& value);
  void set_h(std::string&& value);
  void set_h(const char* value);
  void set_h(const char* value, size_t size);
  std::string* mutable_h();
  std::string* release_h();
  void set_allocated_h(std::string* h);
  private:
  const std::string& _internal_h() const;
  void _internal_set_h(const std::string& value);
  std::string* _internal_mutable_h();
  public:

  // int64 d = 2;
  void clear_d();
  ::PROTOBUF_NAMESPACE_ID::int64 d() const;
  void set_d(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_d() const;
  void _internal_set_d(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int64 e = 3;
  void clear_e();
  ::PROTOBUF_NAMESPACE_ID::int64 e() const;
  void set_e(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_e() const;
  void _internal_set_e(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int64 f = 4;
  void clear_f();
  ::PROTOBUF_NAMESPACE_ID::int64 f() const;
  void set_f(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_f() const;
  void _internal_set_f(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:AcFunDanmu.CommonStateSignalWishSheetCurrentState.WishCurrentState)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr c_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr g_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr h_;
  ::PROTOBUF_NAMESPACE_ID::int64 d_;
  ::PROTOBUF_NAMESPACE_ID::int64 e_;
  ::PROTOBUF_NAMESPACE_ID::int64 f_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_CommonStateSignalWishSheetCurrentState_2eproto;
};
// -------------------------------------------------------------------

class CommonStateSignalWishSheetCurrentState PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:AcFunDanmu.CommonStateSignalWishSheetCurrentState) */ {
 public:
  inline CommonStateSignalWishSheetCurrentState() : CommonStateSignalWishSheetCurrentState(nullptr) {}
  virtual ~CommonStateSignalWishSheetCurrentState();

  CommonStateSignalWishSheetCurrentState(const CommonStateSignalWishSheetCurrentState& from);
  CommonStateSignalWishSheetCurrentState(CommonStateSignalWishSheetCurrentState&& from) noexcept
    : CommonStateSignalWishSheetCurrentState() {
    *this = ::std::move(from);
  }

  inline CommonStateSignalWishSheetCurrentState& operator=(const CommonStateSignalWishSheetCurrentState& from) {
    CopyFrom(from);
    return *this;
  }
  inline CommonStateSignalWishSheetCurrentState& operator=(CommonStateSignalWishSheetCurrentState&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CommonStateSignalWishSheetCurrentState& default_instance();

  static inline const CommonStateSignalWishSheetCurrentState* internal_default_instance() {
    return reinterpret_cast<const CommonStateSignalWishSheetCurrentState*>(
               &_CommonStateSignalWishSheetCurrentState_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(CommonStateSignalWishSheetCurrentState& a, CommonStateSignalWishSheetCurrentState& b) {
    a.Swap(&b);
  }
  inline void Swap(CommonStateSignalWishSheetCurrentState* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CommonStateSignalWishSheetCurrentState* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CommonStateSignalWishSheetCurrentState* New() const final {
    return CreateMaybeMessage<CommonStateSignalWishSheetCurrentState>(nullptr);
  }

  CommonStateSignalWishSheetCurrentState* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CommonStateSignalWishSheetCurrentState>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CommonStateSignalWishSheetCurrentState& from);
  void MergeFrom(const CommonStateSignalWishSheetCurrentState& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CommonStateSignalWishSheetCurrentState* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "AcFunDanmu.CommonStateSignalWishSheetCurrentState";
  }
  protected:
  explicit CommonStateSignalWishSheetCurrentState(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_CommonStateSignalWishSheetCurrentState_2eproto);
    return ::descriptor_table_CommonStateSignalWishSheetCurrentState_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef CommonStateSignalWishSheetCurrentState_WishCurrentState WishCurrentState;

  // accessors -------------------------------------------------------

  enum : int {
    kBFieldNumber = 2,
    kAFieldNumber = 1,
  };
  // repeated .AcFunDanmu.CommonStateSignalWishSheetCurrentState.WishCurrentState b = 2;
  int b_size() const;
  private:
  int _internal_b_size() const;
  public:
  void clear_b();
  ::AcFunDanmu::CommonStateSignalWishSheetCurrentState_WishCurrentState* mutable_b(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::AcFunDanmu::CommonStateSignalWishSheetCurrentState_WishCurrentState >*
      mutable_b();
  private:
  const ::AcFunDanmu::CommonStateSignalWishSheetCurrentState_WishCurrentState& _internal_b(int index) const;
  ::AcFunDanmu::CommonStateSignalWishSheetCurrentState_WishCurrentState* _internal_add_b();
  public:
  const ::AcFunDanmu::CommonStateSignalWishSheetCurrentState_WishCurrentState& b(int index) const;
  ::AcFunDanmu::CommonStateSignalWishSheetCurrentState_WishCurrentState* add_b();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::AcFunDanmu::CommonStateSignalWishSheetCurrentState_WishCurrentState >&
      b() const;

  // string a = 1;
  void clear_a();
  const std::string& a() const;
  void set_a(const std::string& value);
  void set_a(std::string&& value);
  void set_a(const char* value);
  void set_a(const char* value, size_t size);
  std::string* mutable_a();
  std::string* release_a();
  void set_allocated_a(std::string* a);
  private:
  const std::string& _internal_a() const;
  void _internal_set_a(const std::string& value);
  std::string* _internal_mutable_a();
  public:

  // @@protoc_insertion_point(class_scope:AcFunDanmu.CommonStateSignalWishSheetCurrentState)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::AcFunDanmu::CommonStateSignalWishSheetCurrentState_WishCurrentState > b_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr a_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_CommonStateSignalWishSheetCurrentState_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CommonStateSignalWishSheetCurrentState_WishCurrentState

// string c = 1;
inline void CommonStateSignalWishSheetCurrentState_WishCurrentState::clear_c() {
  c_.ClearToEmpty();
}
inline const std::string& CommonStateSignalWishSheetCurrentState_WishCurrentState::c() const {
  // @@protoc_insertion_point(field_get:AcFunDanmu.CommonStateSignalWishSheetCurrentState.WishCurrentState.c)
  return _internal_c();
}
inline void CommonStateSignalWishSheetCurrentState_WishCurrentState::set_c(const std::string& value) {
  _internal_set_c(value);
  // @@protoc_insertion_point(field_set:AcFunDanmu.CommonStateSignalWishSheetCurrentState.WishCurrentState.c)
}
inline std::string* CommonStateSignalWishSheetCurrentState_WishCurrentState::mutable_c() {
  // @@protoc_insertion_point(field_mutable:AcFunDanmu.CommonStateSignalWishSheetCurrentState.WishCurrentState.c)
  return _internal_mutable_c();
}
inline const std::string& CommonStateSignalWishSheetCurrentState_WishCurrentState::_internal_c() const {
  return c_.Get();
}
inline void CommonStateSignalWishSheetCurrentState_WishCurrentState::_internal_set_c(const std::string& value) {
  
  c_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CommonStateSignalWishSheetCurrentState_WishCurrentState::set_c(std::string&& value) {
  
  c_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:AcFunDanmu.CommonStateSignalWishSheetCurrentState.WishCurrentState.c)
}
inline void CommonStateSignalWishSheetCurrentState_WishCurrentState::set_c(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  c_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:AcFunDanmu.CommonStateSignalWishSheetCurrentState.WishCurrentState.c)
}
inline void CommonStateSignalWishSheetCurrentState_WishCurrentState::set_c(const char* value,
    size_t size) {
  
  c_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:AcFunDanmu.CommonStateSignalWishSheetCurrentState.WishCurrentState.c)
}
inline std::string* CommonStateSignalWishSheetCurrentState_WishCurrentState::_internal_mutable_c() {
  
  return c_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CommonStateSignalWishSheetCurrentState_WishCurrentState::release_c() {
  // @@protoc_insertion_point(field_release:AcFunDanmu.CommonStateSignalWishSheetCurrentState.WishCurrentState.c)
  return c_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CommonStateSignalWishSheetCurrentState_WishCurrentState::set_allocated_c(std::string* c) {
  if (c != nullptr) {
    
  } else {
    
  }
  c_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), c,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:AcFunDanmu.CommonStateSignalWishSheetCurrentState.WishCurrentState.c)
}

// int64 d = 2;
inline void CommonStateSignalWishSheetCurrentState_WishCurrentState::clear_d() {
  d_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 CommonStateSignalWishSheetCurrentState_WishCurrentState::_internal_d() const {
  return d_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 CommonStateSignalWishSheetCurrentState_WishCurrentState::d() const {
  // @@protoc_insertion_point(field_get:AcFunDanmu.CommonStateSignalWishSheetCurrentState.WishCurrentState.d)
  return _internal_d();
}
inline void CommonStateSignalWishSheetCurrentState_WishCurrentState::_internal_set_d(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  d_ = value;
}
inline void CommonStateSignalWishSheetCurrentState_WishCurrentState::set_d(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_d(value);
  // @@protoc_insertion_point(field_set:AcFunDanmu.CommonStateSignalWishSheetCurrentState.WishCurrentState.d)
}

// int64 e = 3;
inline void CommonStateSignalWishSheetCurrentState_WishCurrentState::clear_e() {
  e_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 CommonStateSignalWishSheetCurrentState_WishCurrentState::_internal_e() const {
  return e_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 CommonStateSignalWishSheetCurrentState_WishCurrentState::e() const {
  // @@protoc_insertion_point(field_get:AcFunDanmu.CommonStateSignalWishSheetCurrentState.WishCurrentState.e)
  return _internal_e();
}
inline void CommonStateSignalWishSheetCurrentState_WishCurrentState::_internal_set_e(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  e_ = value;
}
inline void CommonStateSignalWishSheetCurrentState_WishCurrentState::set_e(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_e(value);
  // @@protoc_insertion_point(field_set:AcFunDanmu.CommonStateSignalWishSheetCurrentState.WishCurrentState.e)
}

// int64 f = 4;
inline void CommonStateSignalWishSheetCurrentState_WishCurrentState::clear_f() {
  f_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 CommonStateSignalWishSheetCurrentState_WishCurrentState::_internal_f() const {
  return f_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 CommonStateSignalWishSheetCurrentState_WishCurrentState::f() const {
  // @@protoc_insertion_point(field_get:AcFunDanmu.CommonStateSignalWishSheetCurrentState.WishCurrentState.f)
  return _internal_f();
}
inline void CommonStateSignalWishSheetCurrentState_WishCurrentState::_internal_set_f(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  f_ = value;
}
inline void CommonStateSignalWishSheetCurrentState_WishCurrentState::set_f(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_f(value);
  // @@protoc_insertion_point(field_set:AcFunDanmu.CommonStateSignalWishSheetCurrentState.WishCurrentState.f)
}

// string g = 5;
inline void CommonStateSignalWishSheetCurrentState_WishCurrentState::clear_g() {
  g_.ClearToEmpty();
}
inline const std::string& CommonStateSignalWishSheetCurrentState_WishCurrentState::g() const {
  // @@protoc_insertion_point(field_get:AcFunDanmu.CommonStateSignalWishSheetCurrentState.WishCurrentState.g)
  return _internal_g();
}
inline void CommonStateSignalWishSheetCurrentState_WishCurrentState::set_g(const std::string& value) {
  _internal_set_g(value);
  // @@protoc_insertion_point(field_set:AcFunDanmu.CommonStateSignalWishSheetCurrentState.WishCurrentState.g)
}
inline std::string* CommonStateSignalWishSheetCurrentState_WishCurrentState::mutable_g() {
  // @@protoc_insertion_point(field_mutable:AcFunDanmu.CommonStateSignalWishSheetCurrentState.WishCurrentState.g)
  return _internal_mutable_g();
}
inline const std::string& CommonStateSignalWishSheetCurrentState_WishCurrentState::_internal_g() const {
  return g_.Get();
}
inline void CommonStateSignalWishSheetCurrentState_WishCurrentState::_internal_set_g(const std::string& value) {
  
  g_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CommonStateSignalWishSheetCurrentState_WishCurrentState::set_g(std::string&& value) {
  
  g_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:AcFunDanmu.CommonStateSignalWishSheetCurrentState.WishCurrentState.g)
}
inline void CommonStateSignalWishSheetCurrentState_WishCurrentState::set_g(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  g_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:AcFunDanmu.CommonStateSignalWishSheetCurrentState.WishCurrentState.g)
}
inline void CommonStateSignalWishSheetCurrentState_WishCurrentState::set_g(const char* value,
    size_t size) {
  
  g_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:AcFunDanmu.CommonStateSignalWishSheetCurrentState.WishCurrentState.g)
}
inline std::string* CommonStateSignalWishSheetCurrentState_WishCurrentState::_internal_mutable_g() {
  
  return g_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CommonStateSignalWishSheetCurrentState_WishCurrentState::release_g() {
  // @@protoc_insertion_point(field_release:AcFunDanmu.CommonStateSignalWishSheetCurrentState.WishCurrentState.g)
  return g_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CommonStateSignalWishSheetCurrentState_WishCurrentState::set_allocated_g(std::string* g) {
  if (g != nullptr) {
    
  } else {
    
  }
  g_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), g,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:AcFunDanmu.CommonStateSignalWishSheetCurrentState.WishCurrentState.g)
}

// string h = 6;
inline void CommonStateSignalWishSheetCurrentState_WishCurrentState::clear_h() {
  h_.ClearToEmpty();
}
inline const std::string& CommonStateSignalWishSheetCurrentState_WishCurrentState::h() const {
  // @@protoc_insertion_point(field_get:AcFunDanmu.CommonStateSignalWishSheetCurrentState.WishCurrentState.h)
  return _internal_h();
}
inline void CommonStateSignalWishSheetCurrentState_WishCurrentState::set_h(const std::string& value) {
  _internal_set_h(value);
  // @@protoc_insertion_point(field_set:AcFunDanmu.CommonStateSignalWishSheetCurrentState.WishCurrentState.h)
}
inline std::string* CommonStateSignalWishSheetCurrentState_WishCurrentState::mutable_h() {
  // @@protoc_insertion_point(field_mutable:AcFunDanmu.CommonStateSignalWishSheetCurrentState.WishCurrentState.h)
  return _internal_mutable_h();
}
inline const std::string& CommonStateSignalWishSheetCurrentState_WishCurrentState::_internal_h() const {
  return h_.Get();
}
inline void CommonStateSignalWishSheetCurrentState_WishCurrentState::_internal_set_h(const std::string& value) {
  
  h_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CommonStateSignalWishSheetCurrentState_WishCurrentState::set_h(std::string&& value) {
  
  h_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:AcFunDanmu.CommonStateSignalWishSheetCurrentState.WishCurrentState.h)
}
inline void CommonStateSignalWishSheetCurrentState_WishCurrentState::set_h(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  h_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:AcFunDanmu.CommonStateSignalWishSheetCurrentState.WishCurrentState.h)
}
inline void CommonStateSignalWishSheetCurrentState_WishCurrentState::set_h(const char* value,
    size_t size) {
  
  h_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:AcFunDanmu.CommonStateSignalWishSheetCurrentState.WishCurrentState.h)
}
inline std::string* CommonStateSignalWishSheetCurrentState_WishCurrentState::_internal_mutable_h() {
  
  return h_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CommonStateSignalWishSheetCurrentState_WishCurrentState::release_h() {
  // @@protoc_insertion_point(field_release:AcFunDanmu.CommonStateSignalWishSheetCurrentState.WishCurrentState.h)
  return h_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CommonStateSignalWishSheetCurrentState_WishCurrentState::set_allocated_h(std::string* h) {
  if (h != nullptr) {
    
  } else {
    
  }
  h_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), h,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:AcFunDanmu.CommonStateSignalWishSheetCurrentState.WishCurrentState.h)
}

// -------------------------------------------------------------------

// CommonStateSignalWishSheetCurrentState

// string a = 1;
inline void CommonStateSignalWishSheetCurrentState::clear_a() {
  a_.ClearToEmpty();
}
inline const std::string& CommonStateSignalWishSheetCurrentState::a() const {
  // @@protoc_insertion_point(field_get:AcFunDanmu.CommonStateSignalWishSheetCurrentState.a)
  return _internal_a();
}
inline void CommonStateSignalWishSheetCurrentState::set_a(const std::string& value) {
  _internal_set_a(value);
  // @@protoc_insertion_point(field_set:AcFunDanmu.CommonStateSignalWishSheetCurrentState.a)
}
inline std::string* CommonStateSignalWishSheetCurrentState::mutable_a() {
  // @@protoc_insertion_point(field_mutable:AcFunDanmu.CommonStateSignalWishSheetCurrentState.a)
  return _internal_mutable_a();
}
inline const std::string& CommonStateSignalWishSheetCurrentState::_internal_a() const {
  return a_.Get();
}
inline void CommonStateSignalWishSheetCurrentState::_internal_set_a(const std::string& value) {
  
  a_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CommonStateSignalWishSheetCurrentState::set_a(std::string&& value) {
  
  a_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:AcFunDanmu.CommonStateSignalWishSheetCurrentState.a)
}
inline void CommonStateSignalWishSheetCurrentState::set_a(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  a_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:AcFunDanmu.CommonStateSignalWishSheetCurrentState.a)
}
inline void CommonStateSignalWishSheetCurrentState::set_a(const char* value,
    size_t size) {
  
  a_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:AcFunDanmu.CommonStateSignalWishSheetCurrentState.a)
}
inline std::string* CommonStateSignalWishSheetCurrentState::_internal_mutable_a() {
  
  return a_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CommonStateSignalWishSheetCurrentState::release_a() {
  // @@protoc_insertion_point(field_release:AcFunDanmu.CommonStateSignalWishSheetCurrentState.a)
  return a_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CommonStateSignalWishSheetCurrentState::set_allocated_a(std::string* a) {
  if (a != nullptr) {
    
  } else {
    
  }
  a_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), a,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:AcFunDanmu.CommonStateSignalWishSheetCurrentState.a)
}

// repeated .AcFunDanmu.CommonStateSignalWishSheetCurrentState.WishCurrentState b = 2;
inline int CommonStateSignalWishSheetCurrentState::_internal_b_size() const {
  return b_.size();
}
inline int CommonStateSignalWishSheetCurrentState::b_size() const {
  return _internal_b_size();
}
inline void CommonStateSignalWishSheetCurrentState::clear_b() {
  b_.Clear();
}
inline ::AcFunDanmu::CommonStateSignalWishSheetCurrentState_WishCurrentState* CommonStateSignalWishSheetCurrentState::mutable_b(int index) {
  // @@protoc_insertion_point(field_mutable:AcFunDanmu.CommonStateSignalWishSheetCurrentState.b)
  return b_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::AcFunDanmu::CommonStateSignalWishSheetCurrentState_WishCurrentState >*
CommonStateSignalWishSheetCurrentState::mutable_b() {
  // @@protoc_insertion_point(field_mutable_list:AcFunDanmu.CommonStateSignalWishSheetCurrentState.b)
  return &b_;
}
inline const ::AcFunDanmu::CommonStateSignalWishSheetCurrentState_WishCurrentState& CommonStateSignalWishSheetCurrentState::_internal_b(int index) const {
  return b_.Get(index);
}
inline const ::AcFunDanmu::CommonStateSignalWishSheetCurrentState_WishCurrentState& CommonStateSignalWishSheetCurrentState::b(int index) const {
  // @@protoc_insertion_point(field_get:AcFunDanmu.CommonStateSignalWishSheetCurrentState.b)
  return _internal_b(index);
}
inline ::AcFunDanmu::CommonStateSignalWishSheetCurrentState_WishCurrentState* CommonStateSignalWishSheetCurrentState::_internal_add_b() {
  return b_.Add();
}
inline ::AcFunDanmu::CommonStateSignalWishSheetCurrentState_WishCurrentState* CommonStateSignalWishSheetCurrentState::add_b() {
  // @@protoc_insertion_point(field_add:AcFunDanmu.CommonStateSignalWishSheetCurrentState.b)
  return _internal_add_b();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::AcFunDanmu::CommonStateSignalWishSheetCurrentState_WishCurrentState >&
CommonStateSignalWishSheetCurrentState::b() const {
  // @@protoc_insertion_point(field_list:AcFunDanmu.CommonStateSignalWishSheetCurrentState.b)
  return b_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace AcFunDanmu

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_CommonStateSignalWishSheetCurrentState_2eproto
