// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CommonStateSignalAuthorChatReady.proto

#include "CommonStateSignalAuthorChatReady.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_AuthorChatPlayerInfo_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_AuthorChatPlayerInfo_AuthorChatPlayerInfo_2eproto;
namespace AcFunDanmu {
class CommonStateSignalAuthorChatReadyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CommonStateSignalAuthorChatReady> _instance;
} _CommonStateSignalAuthorChatReady_default_instance_;
}  // namespace AcFunDanmu
static void InitDefaultsscc_info_CommonStateSignalAuthorChatReady_CommonStateSignalAuthorChatReady_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::_CommonStateSignalAuthorChatReady_default_instance_;
    new (ptr) ::AcFunDanmu::CommonStateSignalAuthorChatReady();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AcFunDanmu::CommonStateSignalAuthorChatReady::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CommonStateSignalAuthorChatReady_CommonStateSignalAuthorChatReady_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_CommonStateSignalAuthorChatReady_CommonStateSignalAuthorChatReady_2eproto}, {
      &scc_info_AuthorChatPlayerInfo_AuthorChatPlayerInfo_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_CommonStateSignalAuthorChatReady_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_CommonStateSignalAuthorChatReady_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_CommonStateSignalAuthorChatReady_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_CommonStateSignalAuthorChatReady_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::CommonStateSignalAuthorChatReady, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::CommonStateSignalAuthorChatReady, a_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::CommonStateSignalAuthorChatReady, b_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::CommonStateSignalAuthorChatReady, c_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::AcFunDanmu::CommonStateSignalAuthorChatReady)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::_CommonStateSignalAuthorChatReady_default_instance_),
};

const char descriptor_table_protodef_CommonStateSignalAuthorChatReady_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n&CommonStateSignalAuthorChatReady.proto"
  "\022\nAcFunDanmu\032\032AuthorChatPlayerInfo.proto"
  "\"\207\001\n CommonStateSignalAuthorChatReady\022\t\n"
  "\001a\030\001 \001(\t\022+\n\001b\030\002 \001(\0132 .AcFunDanmu.AuthorC"
  "hatPlayerInfo\022+\n\001c\030\003 \001(\0132 .AcFunDanmu.Au"
  "thorChatPlayerInfob\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_CommonStateSignalAuthorChatReady_2eproto_deps[1] = {
  &::descriptor_table_AuthorChatPlayerInfo_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_CommonStateSignalAuthorChatReady_2eproto_sccs[1] = {
  &scc_info_CommonStateSignalAuthorChatReady_CommonStateSignalAuthorChatReady_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_CommonStateSignalAuthorChatReady_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_CommonStateSignalAuthorChatReady_2eproto = {
  false, false, descriptor_table_protodef_CommonStateSignalAuthorChatReady_2eproto, "CommonStateSignalAuthorChatReady.proto", 226,
  &descriptor_table_CommonStateSignalAuthorChatReady_2eproto_once, descriptor_table_CommonStateSignalAuthorChatReady_2eproto_sccs, descriptor_table_CommonStateSignalAuthorChatReady_2eproto_deps, 1, 1,
  schemas, file_default_instances, TableStruct_CommonStateSignalAuthorChatReady_2eproto::offsets,
  file_level_metadata_CommonStateSignalAuthorChatReady_2eproto, 1, file_level_enum_descriptors_CommonStateSignalAuthorChatReady_2eproto, file_level_service_descriptors_CommonStateSignalAuthorChatReady_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_CommonStateSignalAuthorChatReady_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_CommonStateSignalAuthorChatReady_2eproto)), true);
namespace AcFunDanmu {

// ===================================================================

void CommonStateSignalAuthorChatReady::InitAsDefaultInstance() {
  ::AcFunDanmu::_CommonStateSignalAuthorChatReady_default_instance_._instance.get_mutable()->b_ = const_cast< ::AcFunDanmu::AuthorChatPlayerInfo*>(
      ::AcFunDanmu::AuthorChatPlayerInfo::internal_default_instance());
  ::AcFunDanmu::_CommonStateSignalAuthorChatReady_default_instance_._instance.get_mutable()->c_ = const_cast< ::AcFunDanmu::AuthorChatPlayerInfo*>(
      ::AcFunDanmu::AuthorChatPlayerInfo::internal_default_instance());
}
class CommonStateSignalAuthorChatReady::_Internal {
 public:
  static const ::AcFunDanmu::AuthorChatPlayerInfo& b(const CommonStateSignalAuthorChatReady* msg);
  static const ::AcFunDanmu::AuthorChatPlayerInfo& c(const CommonStateSignalAuthorChatReady* msg);
};

const ::AcFunDanmu::AuthorChatPlayerInfo&
CommonStateSignalAuthorChatReady::_Internal::b(const CommonStateSignalAuthorChatReady* msg) {
  return *msg->b_;
}
const ::AcFunDanmu::AuthorChatPlayerInfo&
CommonStateSignalAuthorChatReady::_Internal::c(const CommonStateSignalAuthorChatReady* msg) {
  return *msg->c_;
}
void CommonStateSignalAuthorChatReady::clear_b() {
  if (GetArena() == nullptr && b_ != nullptr) {
    delete b_;
  }
  b_ = nullptr;
}
void CommonStateSignalAuthorChatReady::clear_c() {
  if (GetArena() == nullptr && c_ != nullptr) {
    delete c_;
  }
  c_ = nullptr;
}
CommonStateSignalAuthorChatReady::CommonStateSignalAuthorChatReady(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.CommonStateSignalAuthorChatReady)
}
CommonStateSignalAuthorChatReady::CommonStateSignalAuthorChatReady(const CommonStateSignalAuthorChatReady& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  a_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_a().empty()) {
    a_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_a(),
      GetArena());
  }
  if (from._internal_has_b()) {
    b_ = new ::AcFunDanmu::AuthorChatPlayerInfo(*from.b_);
  } else {
    b_ = nullptr;
  }
  if (from._internal_has_c()) {
    c_ = new ::AcFunDanmu::AuthorChatPlayerInfo(*from.c_);
  } else {
    c_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.CommonStateSignalAuthorChatReady)
}

void CommonStateSignalAuthorChatReady::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CommonStateSignalAuthorChatReady_CommonStateSignalAuthorChatReady_2eproto.base);
  a_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&b_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&c_) -
      reinterpret_cast<char*>(&b_)) + sizeof(c_));
}

CommonStateSignalAuthorChatReady::~CommonStateSignalAuthorChatReady() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.CommonStateSignalAuthorChatReady)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CommonStateSignalAuthorChatReady::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  a_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete b_;
  if (this != internal_default_instance()) delete c_;
}

void CommonStateSignalAuthorChatReady::ArenaDtor(void* object) {
  CommonStateSignalAuthorChatReady* _this = reinterpret_cast< CommonStateSignalAuthorChatReady* >(object);
  (void)_this;
}
void CommonStateSignalAuthorChatReady::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CommonStateSignalAuthorChatReady::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CommonStateSignalAuthorChatReady& CommonStateSignalAuthorChatReady::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CommonStateSignalAuthorChatReady_CommonStateSignalAuthorChatReady_2eproto.base);
  return *internal_default_instance();
}


void CommonStateSignalAuthorChatReady::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.CommonStateSignalAuthorChatReady)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  a_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && b_ != nullptr) {
    delete b_;
  }
  b_ = nullptr;
  if (GetArena() == nullptr && c_ != nullptr) {
    delete c_;
  }
  c_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CommonStateSignalAuthorChatReady::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string a = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_a();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.CommonStateSignalAuthorChatReady.a"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .AcFunDanmu.AuthorChatPlayerInfo b = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_b(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .AcFunDanmu.AuthorChatPlayerInfo c = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_c(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CommonStateSignalAuthorChatReady::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.CommonStateSignalAuthorChatReady)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string a = 1;
  if (this->a().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_a().data(), static_cast<int>(this->_internal_a().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.CommonStateSignalAuthorChatReady.a");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_a(), target);
  }

  // .AcFunDanmu.AuthorChatPlayerInfo b = 2;
  if (this->has_b()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::b(this), target, stream);
  }

  // .AcFunDanmu.AuthorChatPlayerInfo c = 3;
  if (this->has_c()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::c(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.CommonStateSignalAuthorChatReady)
  return target;
}

size_t CommonStateSignalAuthorChatReady::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.CommonStateSignalAuthorChatReady)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string a = 1;
  if (this->a().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_a());
  }

  // .AcFunDanmu.AuthorChatPlayerInfo b = 2;
  if (this->has_b()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *b_);
  }

  // .AcFunDanmu.AuthorChatPlayerInfo c = 3;
  if (this->has_c()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *c_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CommonStateSignalAuthorChatReady::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.CommonStateSignalAuthorChatReady)
  GOOGLE_DCHECK_NE(&from, this);
  const CommonStateSignalAuthorChatReady* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CommonStateSignalAuthorChatReady>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.CommonStateSignalAuthorChatReady)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.CommonStateSignalAuthorChatReady)
    MergeFrom(*source);
  }
}

void CommonStateSignalAuthorChatReady::MergeFrom(const CommonStateSignalAuthorChatReady& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.CommonStateSignalAuthorChatReady)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.a().size() > 0) {
    _internal_set_a(from._internal_a());
  }
  if (from.has_b()) {
    _internal_mutable_b()->::AcFunDanmu::AuthorChatPlayerInfo::MergeFrom(from._internal_b());
  }
  if (from.has_c()) {
    _internal_mutable_c()->::AcFunDanmu::AuthorChatPlayerInfo::MergeFrom(from._internal_c());
  }
}

void CommonStateSignalAuthorChatReady::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.CommonStateSignalAuthorChatReady)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CommonStateSignalAuthorChatReady::CopyFrom(const CommonStateSignalAuthorChatReady& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.CommonStateSignalAuthorChatReady)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CommonStateSignalAuthorChatReady::IsInitialized() const {
  return true;
}

void CommonStateSignalAuthorChatReady::InternalSwap(CommonStateSignalAuthorChatReady* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  a_.Swap(&other->a_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CommonStateSignalAuthorChatReady, c_)
      + sizeof(CommonStateSignalAuthorChatReady::c_)
      - PROTOBUF_FIELD_OFFSET(CommonStateSignalAuthorChatReady, b_)>(
          reinterpret_cast<char*>(&b_),
          reinterpret_cast<char*>(&other->b_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CommonStateSignalAuthorChatReady::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace AcFunDanmu
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::AcFunDanmu::CommonStateSignalAuthorChatReady* Arena::CreateMaybeMessage< ::AcFunDanmu::CommonStateSignalAuthorChatReady >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::CommonStateSignalAuthorChatReady >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
