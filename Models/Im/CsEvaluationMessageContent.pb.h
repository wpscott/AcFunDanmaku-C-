// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CsEvaluationMessageContent.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_CsEvaluationMessageContent_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_CsEvaluationMessageContent_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3021000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3021002 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_CsEvaluationMessageContent_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_CsEvaluationMessageContent_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_CsEvaluationMessageContent_2eproto;
namespace AcFunDanmu {
namespace Im {
namespace Cloud {
namespace Message {
class CsEvaluationMessageContent;
struct CsEvaluationMessageContentDefaultTypeInternal;
extern CsEvaluationMessageContentDefaultTypeInternal _CsEvaluationMessageContent_default_instance_;
class CsEvaluationMessageContent_EvaluationOption;
struct CsEvaluationMessageContent_EvaluationOptionDefaultTypeInternal;
extern CsEvaluationMessageContent_EvaluationOptionDefaultTypeInternal _CsEvaluationMessageContent_EvaluationOption_default_instance_;
class CsEvaluationMessageContent_EvaluationSecondaryOption;
struct CsEvaluationMessageContent_EvaluationSecondaryOptionDefaultTypeInternal;
extern CsEvaluationMessageContent_EvaluationSecondaryOptionDefaultTypeInternal _CsEvaluationMessageContent_EvaluationSecondaryOption_default_instance_;
}  // namespace Message
}  // namespace Cloud
}  // namespace Im
}  // namespace AcFunDanmu
PROTOBUF_NAMESPACE_OPEN
template<> ::AcFunDanmu::Im::Cloud::Message::CsEvaluationMessageContent* Arena::CreateMaybeMessage<::AcFunDanmu::Im::Cloud::Message::CsEvaluationMessageContent>(Arena*);
template<> ::AcFunDanmu::Im::Cloud::Message::CsEvaluationMessageContent_EvaluationOption* Arena::CreateMaybeMessage<::AcFunDanmu::Im::Cloud::Message::CsEvaluationMessageContent_EvaluationOption>(Arena*);
template<> ::AcFunDanmu::Im::Cloud::Message::CsEvaluationMessageContent_EvaluationSecondaryOption* Arena::CreateMaybeMessage<::AcFunDanmu::Im::Cloud::Message::CsEvaluationMessageContent_EvaluationSecondaryOption>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace AcFunDanmu {
namespace Im {
namespace Cloud {
namespace Message {

// ===================================================================

class CsEvaluationMessageContent_EvaluationOption final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:AcFunDanmu.Im.Cloud.Message.CsEvaluationMessageContent.EvaluationOption) */ {
 public:
  inline CsEvaluationMessageContent_EvaluationOption() : CsEvaluationMessageContent_EvaluationOption(nullptr) {}
  ~CsEvaluationMessageContent_EvaluationOption() override;
  explicit PROTOBUF_CONSTEXPR CsEvaluationMessageContent_EvaluationOption(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CsEvaluationMessageContent_EvaluationOption(const CsEvaluationMessageContent_EvaluationOption& from);
  CsEvaluationMessageContent_EvaluationOption(CsEvaluationMessageContent_EvaluationOption&& from) noexcept
    : CsEvaluationMessageContent_EvaluationOption() {
    *this = ::std::move(from);
  }

  inline CsEvaluationMessageContent_EvaluationOption& operator=(const CsEvaluationMessageContent_EvaluationOption& from) {
    CopyFrom(from);
    return *this;
  }
  inline CsEvaluationMessageContent_EvaluationOption& operator=(CsEvaluationMessageContent_EvaluationOption&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CsEvaluationMessageContent_EvaluationOption& default_instance() {
    return *internal_default_instance();
  }
  static inline const CsEvaluationMessageContent_EvaluationOption* internal_default_instance() {
    return reinterpret_cast<const CsEvaluationMessageContent_EvaluationOption*>(
               &_CsEvaluationMessageContent_EvaluationOption_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(CsEvaluationMessageContent_EvaluationOption& a, CsEvaluationMessageContent_EvaluationOption& b) {
    a.Swap(&b);
  }
  inline void Swap(CsEvaluationMessageContent_EvaluationOption* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CsEvaluationMessageContent_EvaluationOption* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CsEvaluationMessageContent_EvaluationOption* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CsEvaluationMessageContent_EvaluationOption>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CsEvaluationMessageContent_EvaluationOption& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CsEvaluationMessageContent_EvaluationOption& from) {
    CsEvaluationMessageContent_EvaluationOption::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CsEvaluationMessageContent_EvaluationOption* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "AcFunDanmu.Im.Cloud.Message.CsEvaluationMessageContent.EvaluationOption";
  }
  protected:
  explicit CsEvaluationMessageContent_EvaluationOption(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSecondaryOptionFieldNumber = 6,
    kUrlFieldNumber = 1,
    kGrayUrlFieldNumber = 2,
    kOptionTxtFieldNumber = 3,
    kSubTitleFieldNumber = 7,
    kOptionTypeFieldNumber = 4,
    kSelectedFieldNumber = 5,
  };
  // repeated .AcFunDanmu.Im.Cloud.Message.CsEvaluationMessageContent.EvaluationSecondaryOption secondaryOption = 6;
  int secondaryoption_size() const;
  private:
  int _internal_secondaryoption_size() const;
  public:
  void clear_secondaryoption();
  ::AcFunDanmu::Im::Cloud::Message::CsEvaluationMessageContent_EvaluationSecondaryOption* mutable_secondaryoption(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::AcFunDanmu::Im::Cloud::Message::CsEvaluationMessageContent_EvaluationSecondaryOption >*
      mutable_secondaryoption();
  private:
  const ::AcFunDanmu::Im::Cloud::Message::CsEvaluationMessageContent_EvaluationSecondaryOption& _internal_secondaryoption(int index) const;
  ::AcFunDanmu::Im::Cloud::Message::CsEvaluationMessageContent_EvaluationSecondaryOption* _internal_add_secondaryoption();
  public:
  const ::AcFunDanmu::Im::Cloud::Message::CsEvaluationMessageContent_EvaluationSecondaryOption& secondaryoption(int index) const;
  ::AcFunDanmu::Im::Cloud::Message::CsEvaluationMessageContent_EvaluationSecondaryOption* add_secondaryoption();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::AcFunDanmu::Im::Cloud::Message::CsEvaluationMessageContent_EvaluationSecondaryOption >&
      secondaryoption() const;

  // string url = 1;
  void clear_url();
  const std::string& url() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_url(ArgT0&& arg0, ArgT... args);
  std::string* mutable_url();
  PROTOBUF_NODISCARD std::string* release_url();
  void set_allocated_url(std::string* url);
  private:
  const std::string& _internal_url() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_url(const std::string& value);
  std::string* _internal_mutable_url();
  public:

  // string grayUrl = 2;
  void clear_grayurl();
  const std::string& grayurl() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_grayurl(ArgT0&& arg0, ArgT... args);
  std::string* mutable_grayurl();
  PROTOBUF_NODISCARD std::string* release_grayurl();
  void set_allocated_grayurl(std::string* grayurl);
  private:
  const std::string& _internal_grayurl() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_grayurl(const std::string& value);
  std::string* _internal_mutable_grayurl();
  public:

  // string optionTxt = 3;
  void clear_optiontxt();
  const std::string& optiontxt() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_optiontxt(ArgT0&& arg0, ArgT... args);
  std::string* mutable_optiontxt();
  PROTOBUF_NODISCARD std::string* release_optiontxt();
  void set_allocated_optiontxt(std::string* optiontxt);
  private:
  const std::string& _internal_optiontxt() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_optiontxt(const std::string& value);
  std::string* _internal_mutable_optiontxt();
  public:

  // string subTitle = 7;
  void clear_subtitle();
  const std::string& subtitle() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_subtitle(ArgT0&& arg0, ArgT... args);
  std::string* mutable_subtitle();
  PROTOBUF_NODISCARD std::string* release_subtitle();
  void set_allocated_subtitle(std::string* subtitle);
  private:
  const std::string& _internal_subtitle() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_subtitle(const std::string& value);
  std::string* _internal_mutable_subtitle();
  public:

  // int32 optionType = 4;
  void clear_optiontype();
  int32_t optiontype() const;
  void set_optiontype(int32_t value);
  private:
  int32_t _internal_optiontype() const;
  void _internal_set_optiontype(int32_t value);
  public:

  // bool selected = 5;
  void clear_selected();
  bool selected() const;
  void set_selected(bool value);
  private:
  bool _internal_selected() const;
  void _internal_set_selected(bool value);
  public:

  // @@protoc_insertion_point(class_scope:AcFunDanmu.Im.Cloud.Message.CsEvaluationMessageContent.EvaluationOption)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::AcFunDanmu::Im::Cloud::Message::CsEvaluationMessageContent_EvaluationSecondaryOption > secondaryoption_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr url_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr grayurl_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr optiontxt_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr subtitle_;
    int32_t optiontype_;
    bool selected_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_CsEvaluationMessageContent_2eproto;
};
// -------------------------------------------------------------------

class CsEvaluationMessageContent_EvaluationSecondaryOption final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:AcFunDanmu.Im.Cloud.Message.CsEvaluationMessageContent.EvaluationSecondaryOption) */ {
 public:
  inline CsEvaluationMessageContent_EvaluationSecondaryOption() : CsEvaluationMessageContent_EvaluationSecondaryOption(nullptr) {}
  ~CsEvaluationMessageContent_EvaluationSecondaryOption() override;
  explicit PROTOBUF_CONSTEXPR CsEvaluationMessageContent_EvaluationSecondaryOption(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CsEvaluationMessageContent_EvaluationSecondaryOption(const CsEvaluationMessageContent_EvaluationSecondaryOption& from);
  CsEvaluationMessageContent_EvaluationSecondaryOption(CsEvaluationMessageContent_EvaluationSecondaryOption&& from) noexcept
    : CsEvaluationMessageContent_EvaluationSecondaryOption() {
    *this = ::std::move(from);
  }

  inline CsEvaluationMessageContent_EvaluationSecondaryOption& operator=(const CsEvaluationMessageContent_EvaluationSecondaryOption& from) {
    CopyFrom(from);
    return *this;
  }
  inline CsEvaluationMessageContent_EvaluationSecondaryOption& operator=(CsEvaluationMessageContent_EvaluationSecondaryOption&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CsEvaluationMessageContent_EvaluationSecondaryOption& default_instance() {
    return *internal_default_instance();
  }
  static inline const CsEvaluationMessageContent_EvaluationSecondaryOption* internal_default_instance() {
    return reinterpret_cast<const CsEvaluationMessageContent_EvaluationSecondaryOption*>(
               &_CsEvaluationMessageContent_EvaluationSecondaryOption_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(CsEvaluationMessageContent_EvaluationSecondaryOption& a, CsEvaluationMessageContent_EvaluationSecondaryOption& b) {
    a.Swap(&b);
  }
  inline void Swap(CsEvaluationMessageContent_EvaluationSecondaryOption* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CsEvaluationMessageContent_EvaluationSecondaryOption* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CsEvaluationMessageContent_EvaluationSecondaryOption* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CsEvaluationMessageContent_EvaluationSecondaryOption>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CsEvaluationMessageContent_EvaluationSecondaryOption& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CsEvaluationMessageContent_EvaluationSecondaryOption& from) {
    CsEvaluationMessageContent_EvaluationSecondaryOption::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CsEvaluationMessageContent_EvaluationSecondaryOption* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "AcFunDanmu.Im.Cloud.Message.CsEvaluationMessageContent.EvaluationSecondaryOption";
  }
  protected:
  explicit CsEvaluationMessageContent_EvaluationSecondaryOption(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOptionTxtFieldNumber = 2,
    kSelectedFieldNumber = 1,
  };
  // string optionTxt = 2;
  void clear_optiontxt();
  const std::string& optiontxt() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_optiontxt(ArgT0&& arg0, ArgT... args);
  std::string* mutable_optiontxt();
  PROTOBUF_NODISCARD std::string* release_optiontxt();
  void set_allocated_optiontxt(std::string* optiontxt);
  private:
  const std::string& _internal_optiontxt() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_optiontxt(const std::string& value);
  std::string* _internal_mutable_optiontxt();
  public:

  // bool selected = 1;
  void clear_selected();
  bool selected() const;
  void set_selected(bool value);
  private:
  bool _internal_selected() const;
  void _internal_set_selected(bool value);
  public:

  // @@protoc_insertion_point(class_scope:AcFunDanmu.Im.Cloud.Message.CsEvaluationMessageContent.EvaluationSecondaryOption)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr optiontxt_;
    bool selected_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_CsEvaluationMessageContent_2eproto;
};
// -------------------------------------------------------------------

class CsEvaluationMessageContent final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:AcFunDanmu.Im.Cloud.Message.CsEvaluationMessageContent) */ {
 public:
  inline CsEvaluationMessageContent() : CsEvaluationMessageContent(nullptr) {}
  ~CsEvaluationMessageContent() override;
  explicit PROTOBUF_CONSTEXPR CsEvaluationMessageContent(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CsEvaluationMessageContent(const CsEvaluationMessageContent& from);
  CsEvaluationMessageContent(CsEvaluationMessageContent&& from) noexcept
    : CsEvaluationMessageContent() {
    *this = ::std::move(from);
  }

  inline CsEvaluationMessageContent& operator=(const CsEvaluationMessageContent& from) {
    CopyFrom(from);
    return *this;
  }
  inline CsEvaluationMessageContent& operator=(CsEvaluationMessageContent&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CsEvaluationMessageContent& default_instance() {
    return *internal_default_instance();
  }
  static inline const CsEvaluationMessageContent* internal_default_instance() {
    return reinterpret_cast<const CsEvaluationMessageContent*>(
               &_CsEvaluationMessageContent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(CsEvaluationMessageContent& a, CsEvaluationMessageContent& b) {
    a.Swap(&b);
  }
  inline void Swap(CsEvaluationMessageContent* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CsEvaluationMessageContent* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CsEvaluationMessageContent* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CsEvaluationMessageContent>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CsEvaluationMessageContent& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CsEvaluationMessageContent& from) {
    CsEvaluationMessageContent::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CsEvaluationMessageContent* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "AcFunDanmu.Im.Cloud.Message.CsEvaluationMessageContent";
  }
  protected:
  explicit CsEvaluationMessageContent(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CsEvaluationMessageContent_EvaluationOption EvaluationOption;
  typedef CsEvaluationMessageContent_EvaluationSecondaryOption EvaluationSecondaryOption;

  // accessors -------------------------------------------------------

  enum : int {
    kEvaluationOptionFieldNumber = 2,
    kTitleFieldNumber = 3,
    kTargetIdFieldNumber = 1,
  };
  // repeated .AcFunDanmu.Im.Cloud.Message.CsEvaluationMessageContent.EvaluationOption evaluationOption = 2;
  int evaluationoption_size() const;
  private:
  int _internal_evaluationoption_size() const;
  public:
  void clear_evaluationoption();
  ::AcFunDanmu::Im::Cloud::Message::CsEvaluationMessageContent_EvaluationOption* mutable_evaluationoption(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::AcFunDanmu::Im::Cloud::Message::CsEvaluationMessageContent_EvaluationOption >*
      mutable_evaluationoption();
  private:
  const ::AcFunDanmu::Im::Cloud::Message::CsEvaluationMessageContent_EvaluationOption& _internal_evaluationoption(int index) const;
  ::AcFunDanmu::Im::Cloud::Message::CsEvaluationMessageContent_EvaluationOption* _internal_add_evaluationoption();
  public:
  const ::AcFunDanmu::Im::Cloud::Message::CsEvaluationMessageContent_EvaluationOption& evaluationoption(int index) const;
  ::AcFunDanmu::Im::Cloud::Message::CsEvaluationMessageContent_EvaluationOption* add_evaluationoption();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::AcFunDanmu::Im::Cloud::Message::CsEvaluationMessageContent_EvaluationOption >&
      evaluationoption() const;

  // string title = 3;
  void clear_title();
  const std::string& title() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_title(ArgT0&& arg0, ArgT... args);
  std::string* mutable_title();
  PROTOBUF_NODISCARD std::string* release_title();
  void set_allocated_title(std::string* title);
  private:
  const std::string& _internal_title() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_title(const std::string& value);
  std::string* _internal_mutable_title();
  public:

  // int64 targetId = 1;
  void clear_targetid();
  int64_t targetid() const;
  void set_targetid(int64_t value);
  private:
  int64_t _internal_targetid() const;
  void _internal_set_targetid(int64_t value);
  public:

  // @@protoc_insertion_point(class_scope:AcFunDanmu.Im.Cloud.Message.CsEvaluationMessageContent)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::AcFunDanmu::Im::Cloud::Message::CsEvaluationMessageContent_EvaluationOption > evaluationoption_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr title_;
    int64_t targetid_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_CsEvaluationMessageContent_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CsEvaluationMessageContent_EvaluationOption

// string url = 1;
inline void CsEvaluationMessageContent_EvaluationOption::clear_url() {
  _impl_.url_.ClearToEmpty();
}
inline const std::string& CsEvaluationMessageContent_EvaluationOption::url() const {
  // @@protoc_insertion_point(field_get:AcFunDanmu.Im.Cloud.Message.CsEvaluationMessageContent.EvaluationOption.url)
  return _internal_url();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CsEvaluationMessageContent_EvaluationOption::set_url(ArgT0&& arg0, ArgT... args) {
 
 _impl_.url_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:AcFunDanmu.Im.Cloud.Message.CsEvaluationMessageContent.EvaluationOption.url)
}
inline std::string* CsEvaluationMessageContent_EvaluationOption::mutable_url() {
  std::string* _s = _internal_mutable_url();
  // @@protoc_insertion_point(field_mutable:AcFunDanmu.Im.Cloud.Message.CsEvaluationMessageContent.EvaluationOption.url)
  return _s;
}
inline const std::string& CsEvaluationMessageContent_EvaluationOption::_internal_url() const {
  return _impl_.url_.Get();
}
inline void CsEvaluationMessageContent_EvaluationOption::_internal_set_url(const std::string& value) {
  
  _impl_.url_.Set(value, GetArenaForAllocation());
}
inline std::string* CsEvaluationMessageContent_EvaluationOption::_internal_mutable_url() {
  
  return _impl_.url_.Mutable(GetArenaForAllocation());
}
inline std::string* CsEvaluationMessageContent_EvaluationOption::release_url() {
  // @@protoc_insertion_point(field_release:AcFunDanmu.Im.Cloud.Message.CsEvaluationMessageContent.EvaluationOption.url)
  return _impl_.url_.Release();
}
inline void CsEvaluationMessageContent_EvaluationOption::set_allocated_url(std::string* url) {
  if (url != nullptr) {
    
  } else {
    
  }
  _impl_.url_.SetAllocated(url, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.url_.IsDefault()) {
    _impl_.url_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:AcFunDanmu.Im.Cloud.Message.CsEvaluationMessageContent.EvaluationOption.url)
}

// string grayUrl = 2;
inline void CsEvaluationMessageContent_EvaluationOption::clear_grayurl() {
  _impl_.grayurl_.ClearToEmpty();
}
inline const std::string& CsEvaluationMessageContent_EvaluationOption::grayurl() const {
  // @@protoc_insertion_point(field_get:AcFunDanmu.Im.Cloud.Message.CsEvaluationMessageContent.EvaluationOption.grayUrl)
  return _internal_grayurl();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CsEvaluationMessageContent_EvaluationOption::set_grayurl(ArgT0&& arg0, ArgT... args) {
 
 _impl_.grayurl_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:AcFunDanmu.Im.Cloud.Message.CsEvaluationMessageContent.EvaluationOption.grayUrl)
}
inline std::string* CsEvaluationMessageContent_EvaluationOption::mutable_grayurl() {
  std::string* _s = _internal_mutable_grayurl();
  // @@protoc_insertion_point(field_mutable:AcFunDanmu.Im.Cloud.Message.CsEvaluationMessageContent.EvaluationOption.grayUrl)
  return _s;
}
inline const std::string& CsEvaluationMessageContent_EvaluationOption::_internal_grayurl() const {
  return _impl_.grayurl_.Get();
}
inline void CsEvaluationMessageContent_EvaluationOption::_internal_set_grayurl(const std::string& value) {
  
  _impl_.grayurl_.Set(value, GetArenaForAllocation());
}
inline std::string* CsEvaluationMessageContent_EvaluationOption::_internal_mutable_grayurl() {
  
  return _impl_.grayurl_.Mutable(GetArenaForAllocation());
}
inline std::string* CsEvaluationMessageContent_EvaluationOption::release_grayurl() {
  // @@protoc_insertion_point(field_release:AcFunDanmu.Im.Cloud.Message.CsEvaluationMessageContent.EvaluationOption.grayUrl)
  return _impl_.grayurl_.Release();
}
inline void CsEvaluationMessageContent_EvaluationOption::set_allocated_grayurl(std::string* grayurl) {
  if (grayurl != nullptr) {
    
  } else {
    
  }
  _impl_.grayurl_.SetAllocated(grayurl, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.grayurl_.IsDefault()) {
    _impl_.grayurl_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:AcFunDanmu.Im.Cloud.Message.CsEvaluationMessageContent.EvaluationOption.grayUrl)
}

// string optionTxt = 3;
inline void CsEvaluationMessageContent_EvaluationOption::clear_optiontxt() {
  _impl_.optiontxt_.ClearToEmpty();
}
inline const std::string& CsEvaluationMessageContent_EvaluationOption::optiontxt() const {
  // @@protoc_insertion_point(field_get:AcFunDanmu.Im.Cloud.Message.CsEvaluationMessageContent.EvaluationOption.optionTxt)
  return _internal_optiontxt();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CsEvaluationMessageContent_EvaluationOption::set_optiontxt(ArgT0&& arg0, ArgT... args) {
 
 _impl_.optiontxt_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:AcFunDanmu.Im.Cloud.Message.CsEvaluationMessageContent.EvaluationOption.optionTxt)
}
inline std::string* CsEvaluationMessageContent_EvaluationOption::mutable_optiontxt() {
  std::string* _s = _internal_mutable_optiontxt();
  // @@protoc_insertion_point(field_mutable:AcFunDanmu.Im.Cloud.Message.CsEvaluationMessageContent.EvaluationOption.optionTxt)
  return _s;
}
inline const std::string& CsEvaluationMessageContent_EvaluationOption::_internal_optiontxt() const {
  return _impl_.optiontxt_.Get();
}
inline void CsEvaluationMessageContent_EvaluationOption::_internal_set_optiontxt(const std::string& value) {
  
  _impl_.optiontxt_.Set(value, GetArenaForAllocation());
}
inline std::string* CsEvaluationMessageContent_EvaluationOption::_internal_mutable_optiontxt() {
  
  return _impl_.optiontxt_.Mutable(GetArenaForAllocation());
}
inline std::string* CsEvaluationMessageContent_EvaluationOption::release_optiontxt() {
  // @@protoc_insertion_point(field_release:AcFunDanmu.Im.Cloud.Message.CsEvaluationMessageContent.EvaluationOption.optionTxt)
  return _impl_.optiontxt_.Release();
}
inline void CsEvaluationMessageContent_EvaluationOption::set_allocated_optiontxt(std::string* optiontxt) {
  if (optiontxt != nullptr) {
    
  } else {
    
  }
  _impl_.optiontxt_.SetAllocated(optiontxt, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.optiontxt_.IsDefault()) {
    _impl_.optiontxt_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:AcFunDanmu.Im.Cloud.Message.CsEvaluationMessageContent.EvaluationOption.optionTxt)
}

// int32 optionType = 4;
inline void CsEvaluationMessageContent_EvaluationOption::clear_optiontype() {
  _impl_.optiontype_ = 0;
}
inline int32_t CsEvaluationMessageContent_EvaluationOption::_internal_optiontype() const {
  return _impl_.optiontype_;
}
inline int32_t CsEvaluationMessageContent_EvaluationOption::optiontype() const {
  // @@protoc_insertion_point(field_get:AcFunDanmu.Im.Cloud.Message.CsEvaluationMessageContent.EvaluationOption.optionType)
  return _internal_optiontype();
}
inline void CsEvaluationMessageContent_EvaluationOption::_internal_set_optiontype(int32_t value) {
  
  _impl_.optiontype_ = value;
}
inline void CsEvaluationMessageContent_EvaluationOption::set_optiontype(int32_t value) {
  _internal_set_optiontype(value);
  // @@protoc_insertion_point(field_set:AcFunDanmu.Im.Cloud.Message.CsEvaluationMessageContent.EvaluationOption.optionType)
}

// bool selected = 5;
inline void CsEvaluationMessageContent_EvaluationOption::clear_selected() {
  _impl_.selected_ = false;
}
inline bool CsEvaluationMessageContent_EvaluationOption::_internal_selected() const {
  return _impl_.selected_;
}
inline bool CsEvaluationMessageContent_EvaluationOption::selected() const {
  // @@protoc_insertion_point(field_get:AcFunDanmu.Im.Cloud.Message.CsEvaluationMessageContent.EvaluationOption.selected)
  return _internal_selected();
}
inline void CsEvaluationMessageContent_EvaluationOption::_internal_set_selected(bool value) {
  
  _impl_.selected_ = value;
}
inline void CsEvaluationMessageContent_EvaluationOption::set_selected(bool value) {
  _internal_set_selected(value);
  // @@protoc_insertion_point(field_set:AcFunDanmu.Im.Cloud.Message.CsEvaluationMessageContent.EvaluationOption.selected)
}

// repeated .AcFunDanmu.Im.Cloud.Message.CsEvaluationMessageContent.EvaluationSecondaryOption secondaryOption = 6;
inline int CsEvaluationMessageContent_EvaluationOption::_internal_secondaryoption_size() const {
  return _impl_.secondaryoption_.size();
}
inline int CsEvaluationMessageContent_EvaluationOption::secondaryoption_size() const {
  return _internal_secondaryoption_size();
}
inline void CsEvaluationMessageContent_EvaluationOption::clear_secondaryoption() {
  _impl_.secondaryoption_.Clear();
}
inline ::AcFunDanmu::Im::Cloud::Message::CsEvaluationMessageContent_EvaluationSecondaryOption* CsEvaluationMessageContent_EvaluationOption::mutable_secondaryoption(int index) {
  // @@protoc_insertion_point(field_mutable:AcFunDanmu.Im.Cloud.Message.CsEvaluationMessageContent.EvaluationOption.secondaryOption)
  return _impl_.secondaryoption_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::AcFunDanmu::Im::Cloud::Message::CsEvaluationMessageContent_EvaluationSecondaryOption >*
CsEvaluationMessageContent_EvaluationOption::mutable_secondaryoption() {
  // @@protoc_insertion_point(field_mutable_list:AcFunDanmu.Im.Cloud.Message.CsEvaluationMessageContent.EvaluationOption.secondaryOption)
  return &_impl_.secondaryoption_;
}
inline const ::AcFunDanmu::Im::Cloud::Message::CsEvaluationMessageContent_EvaluationSecondaryOption& CsEvaluationMessageContent_EvaluationOption::_internal_secondaryoption(int index) const {
  return _impl_.secondaryoption_.Get(index);
}
inline const ::AcFunDanmu::Im::Cloud::Message::CsEvaluationMessageContent_EvaluationSecondaryOption& CsEvaluationMessageContent_EvaluationOption::secondaryoption(int index) const {
  // @@protoc_insertion_point(field_get:AcFunDanmu.Im.Cloud.Message.CsEvaluationMessageContent.EvaluationOption.secondaryOption)
  return _internal_secondaryoption(index);
}
inline ::AcFunDanmu::Im::Cloud::Message::CsEvaluationMessageContent_EvaluationSecondaryOption* CsEvaluationMessageContent_EvaluationOption::_internal_add_secondaryoption() {
  return _impl_.secondaryoption_.Add();
}
inline ::AcFunDanmu::Im::Cloud::Message::CsEvaluationMessageContent_EvaluationSecondaryOption* CsEvaluationMessageContent_EvaluationOption::add_secondaryoption() {
  ::AcFunDanmu::Im::Cloud::Message::CsEvaluationMessageContent_EvaluationSecondaryOption* _add = _internal_add_secondaryoption();
  // @@protoc_insertion_point(field_add:AcFunDanmu.Im.Cloud.Message.CsEvaluationMessageContent.EvaluationOption.secondaryOption)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::AcFunDanmu::Im::Cloud::Message::CsEvaluationMessageContent_EvaluationSecondaryOption >&
CsEvaluationMessageContent_EvaluationOption::secondaryoption() const {
  // @@protoc_insertion_point(field_list:AcFunDanmu.Im.Cloud.Message.CsEvaluationMessageContent.EvaluationOption.secondaryOption)
  return _impl_.secondaryoption_;
}

// string subTitle = 7;
inline void CsEvaluationMessageContent_EvaluationOption::clear_subtitle() {
  _impl_.subtitle_.ClearToEmpty();
}
inline const std::string& CsEvaluationMessageContent_EvaluationOption::subtitle() const {
  // @@protoc_insertion_point(field_get:AcFunDanmu.Im.Cloud.Message.CsEvaluationMessageContent.EvaluationOption.subTitle)
  return _internal_subtitle();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CsEvaluationMessageContent_EvaluationOption::set_subtitle(ArgT0&& arg0, ArgT... args) {
 
 _impl_.subtitle_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:AcFunDanmu.Im.Cloud.Message.CsEvaluationMessageContent.EvaluationOption.subTitle)
}
inline std::string* CsEvaluationMessageContent_EvaluationOption::mutable_subtitle() {
  std::string* _s = _internal_mutable_subtitle();
  // @@protoc_insertion_point(field_mutable:AcFunDanmu.Im.Cloud.Message.CsEvaluationMessageContent.EvaluationOption.subTitle)
  return _s;
}
inline const std::string& CsEvaluationMessageContent_EvaluationOption::_internal_subtitle() const {
  return _impl_.subtitle_.Get();
}
inline void CsEvaluationMessageContent_EvaluationOption::_internal_set_subtitle(const std::string& value) {
  
  _impl_.subtitle_.Set(value, GetArenaForAllocation());
}
inline std::string* CsEvaluationMessageContent_EvaluationOption::_internal_mutable_subtitle() {
  
  return _impl_.subtitle_.Mutable(GetArenaForAllocation());
}
inline std::string* CsEvaluationMessageContent_EvaluationOption::release_subtitle() {
  // @@protoc_insertion_point(field_release:AcFunDanmu.Im.Cloud.Message.CsEvaluationMessageContent.EvaluationOption.subTitle)
  return _impl_.subtitle_.Release();
}
inline void CsEvaluationMessageContent_EvaluationOption::set_allocated_subtitle(std::string* subtitle) {
  if (subtitle != nullptr) {
    
  } else {
    
  }
  _impl_.subtitle_.SetAllocated(subtitle, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.subtitle_.IsDefault()) {
    _impl_.subtitle_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:AcFunDanmu.Im.Cloud.Message.CsEvaluationMessageContent.EvaluationOption.subTitle)
}

// -------------------------------------------------------------------

// CsEvaluationMessageContent_EvaluationSecondaryOption

// bool selected = 1;
inline void CsEvaluationMessageContent_EvaluationSecondaryOption::clear_selected() {
  _impl_.selected_ = false;
}
inline bool CsEvaluationMessageContent_EvaluationSecondaryOption::_internal_selected() const {
  return _impl_.selected_;
}
inline bool CsEvaluationMessageContent_EvaluationSecondaryOption::selected() const {
  // @@protoc_insertion_point(field_get:AcFunDanmu.Im.Cloud.Message.CsEvaluationMessageContent.EvaluationSecondaryOption.selected)
  return _internal_selected();
}
inline void CsEvaluationMessageContent_EvaluationSecondaryOption::_internal_set_selected(bool value) {
  
  _impl_.selected_ = value;
}
inline void CsEvaluationMessageContent_EvaluationSecondaryOption::set_selected(bool value) {
  _internal_set_selected(value);
  // @@protoc_insertion_point(field_set:AcFunDanmu.Im.Cloud.Message.CsEvaluationMessageContent.EvaluationSecondaryOption.selected)
}

// string optionTxt = 2;
inline void CsEvaluationMessageContent_EvaluationSecondaryOption::clear_optiontxt() {
  _impl_.optiontxt_.ClearToEmpty();
}
inline const std::string& CsEvaluationMessageContent_EvaluationSecondaryOption::optiontxt() const {
  // @@protoc_insertion_point(field_get:AcFunDanmu.Im.Cloud.Message.CsEvaluationMessageContent.EvaluationSecondaryOption.optionTxt)
  return _internal_optiontxt();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CsEvaluationMessageContent_EvaluationSecondaryOption::set_optiontxt(ArgT0&& arg0, ArgT... args) {
 
 _impl_.optiontxt_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:AcFunDanmu.Im.Cloud.Message.CsEvaluationMessageContent.EvaluationSecondaryOption.optionTxt)
}
inline std::string* CsEvaluationMessageContent_EvaluationSecondaryOption::mutable_optiontxt() {
  std::string* _s = _internal_mutable_optiontxt();
  // @@protoc_insertion_point(field_mutable:AcFunDanmu.Im.Cloud.Message.CsEvaluationMessageContent.EvaluationSecondaryOption.optionTxt)
  return _s;
}
inline const std::string& CsEvaluationMessageContent_EvaluationSecondaryOption::_internal_optiontxt() const {
  return _impl_.optiontxt_.Get();
}
inline void CsEvaluationMessageContent_EvaluationSecondaryOption::_internal_set_optiontxt(const std::string& value) {
  
  _impl_.optiontxt_.Set(value, GetArenaForAllocation());
}
inline std::string* CsEvaluationMessageContent_EvaluationSecondaryOption::_internal_mutable_optiontxt() {
  
  return _impl_.optiontxt_.Mutable(GetArenaForAllocation());
}
inline std::string* CsEvaluationMessageContent_EvaluationSecondaryOption::release_optiontxt() {
  // @@protoc_insertion_point(field_release:AcFunDanmu.Im.Cloud.Message.CsEvaluationMessageContent.EvaluationSecondaryOption.optionTxt)
  return _impl_.optiontxt_.Release();
}
inline void CsEvaluationMessageContent_EvaluationSecondaryOption::set_allocated_optiontxt(std::string* optiontxt) {
  if (optiontxt != nullptr) {
    
  } else {
    
  }
  _impl_.optiontxt_.SetAllocated(optiontxt, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.optiontxt_.IsDefault()) {
    _impl_.optiontxt_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:AcFunDanmu.Im.Cloud.Message.CsEvaluationMessageContent.EvaluationSecondaryOption.optionTxt)
}

// -------------------------------------------------------------------

// CsEvaluationMessageContent

// int64 targetId = 1;
inline void CsEvaluationMessageContent::clear_targetid() {
  _impl_.targetid_ = int64_t{0};
}
inline int64_t CsEvaluationMessageContent::_internal_targetid() const {
  return _impl_.targetid_;
}
inline int64_t CsEvaluationMessageContent::targetid() const {
  // @@protoc_insertion_point(field_get:AcFunDanmu.Im.Cloud.Message.CsEvaluationMessageContent.targetId)
  return _internal_targetid();
}
inline void CsEvaluationMessageContent::_internal_set_targetid(int64_t value) {
  
  _impl_.targetid_ = value;
}
inline void CsEvaluationMessageContent::set_targetid(int64_t value) {
  _internal_set_targetid(value);
  // @@protoc_insertion_point(field_set:AcFunDanmu.Im.Cloud.Message.CsEvaluationMessageContent.targetId)
}

// repeated .AcFunDanmu.Im.Cloud.Message.CsEvaluationMessageContent.EvaluationOption evaluationOption = 2;
inline int CsEvaluationMessageContent::_internal_evaluationoption_size() const {
  return _impl_.evaluationoption_.size();
}
inline int CsEvaluationMessageContent::evaluationoption_size() const {
  return _internal_evaluationoption_size();
}
inline void CsEvaluationMessageContent::clear_evaluationoption() {
  _impl_.evaluationoption_.Clear();
}
inline ::AcFunDanmu::Im::Cloud::Message::CsEvaluationMessageContent_EvaluationOption* CsEvaluationMessageContent::mutable_evaluationoption(int index) {
  // @@protoc_insertion_point(field_mutable:AcFunDanmu.Im.Cloud.Message.CsEvaluationMessageContent.evaluationOption)
  return _impl_.evaluationoption_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::AcFunDanmu::Im::Cloud::Message::CsEvaluationMessageContent_EvaluationOption >*
CsEvaluationMessageContent::mutable_evaluationoption() {
  // @@protoc_insertion_point(field_mutable_list:AcFunDanmu.Im.Cloud.Message.CsEvaluationMessageContent.evaluationOption)
  return &_impl_.evaluationoption_;
}
inline const ::AcFunDanmu::Im::Cloud::Message::CsEvaluationMessageContent_EvaluationOption& CsEvaluationMessageContent::_internal_evaluationoption(int index) const {
  return _impl_.evaluationoption_.Get(index);
}
inline const ::AcFunDanmu::Im::Cloud::Message::CsEvaluationMessageContent_EvaluationOption& CsEvaluationMessageContent::evaluationoption(int index) const {
  // @@protoc_insertion_point(field_get:AcFunDanmu.Im.Cloud.Message.CsEvaluationMessageContent.evaluationOption)
  return _internal_evaluationoption(index);
}
inline ::AcFunDanmu::Im::Cloud::Message::CsEvaluationMessageContent_EvaluationOption* CsEvaluationMessageContent::_internal_add_evaluationoption() {
  return _impl_.evaluationoption_.Add();
}
inline ::AcFunDanmu::Im::Cloud::Message::CsEvaluationMessageContent_EvaluationOption* CsEvaluationMessageContent::add_evaluationoption() {
  ::AcFunDanmu::Im::Cloud::Message::CsEvaluationMessageContent_EvaluationOption* _add = _internal_add_evaluationoption();
  // @@protoc_insertion_point(field_add:AcFunDanmu.Im.Cloud.Message.CsEvaluationMessageContent.evaluationOption)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::AcFunDanmu::Im::Cloud::Message::CsEvaluationMessageContent_EvaluationOption >&
CsEvaluationMessageContent::evaluationoption() const {
  // @@protoc_insertion_point(field_list:AcFunDanmu.Im.Cloud.Message.CsEvaluationMessageContent.evaluationOption)
  return _impl_.evaluationoption_;
}

// string title = 3;
inline void CsEvaluationMessageContent::clear_title() {
  _impl_.title_.ClearToEmpty();
}
inline const std::string& CsEvaluationMessageContent::title() const {
  // @@protoc_insertion_point(field_get:AcFunDanmu.Im.Cloud.Message.CsEvaluationMessageContent.title)
  return _internal_title();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CsEvaluationMessageContent::set_title(ArgT0&& arg0, ArgT... args) {
 
 _impl_.title_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:AcFunDanmu.Im.Cloud.Message.CsEvaluationMessageContent.title)
}
inline std::string* CsEvaluationMessageContent::mutable_title() {
  std::string* _s = _internal_mutable_title();
  // @@protoc_insertion_point(field_mutable:AcFunDanmu.Im.Cloud.Message.CsEvaluationMessageContent.title)
  return _s;
}
inline const std::string& CsEvaluationMessageContent::_internal_title() const {
  return _impl_.title_.Get();
}
inline void CsEvaluationMessageContent::_internal_set_title(const std::string& value) {
  
  _impl_.title_.Set(value, GetArenaForAllocation());
}
inline std::string* CsEvaluationMessageContent::_internal_mutable_title() {
  
  return _impl_.title_.Mutable(GetArenaForAllocation());
}
inline std::string* CsEvaluationMessageContent::release_title() {
  // @@protoc_insertion_point(field_release:AcFunDanmu.Im.Cloud.Message.CsEvaluationMessageContent.title)
  return _impl_.title_.Release();
}
inline void CsEvaluationMessageContent::set_allocated_title(std::string* title) {
  if (title != nullptr) {
    
  } else {
    
  }
  _impl_.title_.SetAllocated(title, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.title_.IsDefault()) {
    _impl_.title_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:AcFunDanmu.Im.Cloud.Message.CsEvaluationMessageContent.title)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace Message
}  // namespace Cloud
}  // namespace Im
}  // namespace AcFunDanmu

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_CsEvaluationMessageContent_2eproto
