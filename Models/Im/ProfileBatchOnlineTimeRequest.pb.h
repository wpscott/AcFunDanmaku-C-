// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProfileBatchOnlineTimeRequest.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_ProfileBatchOnlineTimeRequest_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_ProfileBatchOnlineTimeRequest_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3021000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3021002 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "User.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_ProfileBatchOnlineTimeRequest_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_ProfileBatchOnlineTimeRequest_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_ProfileBatchOnlineTimeRequest_2eproto;
namespace AcFunDanmu {
namespace Im {
namespace Cloud {
namespace Profile {
class ProfileBatchOnlineTimeRequest;
struct ProfileBatchOnlineTimeRequestDefaultTypeInternal;
extern ProfileBatchOnlineTimeRequestDefaultTypeInternal _ProfileBatchOnlineTimeRequest_default_instance_;
}  // namespace Profile
}  // namespace Cloud
}  // namespace Im
}  // namespace AcFunDanmu
PROTOBUF_NAMESPACE_OPEN
template<> ::AcFunDanmu::Im::Cloud::Profile::ProfileBatchOnlineTimeRequest* Arena::CreateMaybeMessage<::AcFunDanmu::Im::Cloud::Profile::ProfileBatchOnlineTimeRequest>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace AcFunDanmu {
namespace Im {
namespace Cloud {
namespace Profile {

// ===================================================================

class ProfileBatchOnlineTimeRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:AcFunDanmu.Im.Cloud.Profile.ProfileBatchOnlineTimeRequest) */ {
 public:
  inline ProfileBatchOnlineTimeRequest() : ProfileBatchOnlineTimeRequest(nullptr) {}
  ~ProfileBatchOnlineTimeRequest() override;
  explicit PROTOBUF_CONSTEXPR ProfileBatchOnlineTimeRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ProfileBatchOnlineTimeRequest(const ProfileBatchOnlineTimeRequest& from);
  ProfileBatchOnlineTimeRequest(ProfileBatchOnlineTimeRequest&& from) noexcept
    : ProfileBatchOnlineTimeRequest() {
    *this = ::std::move(from);
  }

  inline ProfileBatchOnlineTimeRequest& operator=(const ProfileBatchOnlineTimeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProfileBatchOnlineTimeRequest& operator=(ProfileBatchOnlineTimeRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ProfileBatchOnlineTimeRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ProfileBatchOnlineTimeRequest* internal_default_instance() {
    return reinterpret_cast<const ProfileBatchOnlineTimeRequest*>(
               &_ProfileBatchOnlineTimeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ProfileBatchOnlineTimeRequest& a, ProfileBatchOnlineTimeRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ProfileBatchOnlineTimeRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProfileBatchOnlineTimeRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ProfileBatchOnlineTimeRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ProfileBatchOnlineTimeRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ProfileBatchOnlineTimeRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ProfileBatchOnlineTimeRequest& from) {
    ProfileBatchOnlineTimeRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProfileBatchOnlineTimeRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "AcFunDanmu.Im.Cloud.Profile.ProfileBatchOnlineTimeRequest";
  }
  protected:
  explicit ProfileBatchOnlineTimeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUserFieldNumber = 1,
  };
  // repeated .AcFunDanmu.Im.Basic.User user = 1;
  int user_size() const;
  private:
  int _internal_user_size() const;
  public:
  void clear_user();
  ::AcFunDanmu::Im::Basic::User* mutable_user(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::AcFunDanmu::Im::Basic::User >*
      mutable_user();
  private:
  const ::AcFunDanmu::Im::Basic::User& _internal_user(int index) const;
  ::AcFunDanmu::Im::Basic::User* _internal_add_user();
  public:
  const ::AcFunDanmu::Im::Basic::User& user(int index) const;
  ::AcFunDanmu::Im::Basic::User* add_user();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::AcFunDanmu::Im::Basic::User >&
      user() const;

  // @@protoc_insertion_point(class_scope:AcFunDanmu.Im.Cloud.Profile.ProfileBatchOnlineTimeRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::AcFunDanmu::Im::Basic::User > user_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ProfileBatchOnlineTimeRequest_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ProfileBatchOnlineTimeRequest

// repeated .AcFunDanmu.Im.Basic.User user = 1;
inline int ProfileBatchOnlineTimeRequest::_internal_user_size() const {
  return _impl_.user_.size();
}
inline int ProfileBatchOnlineTimeRequest::user_size() const {
  return _internal_user_size();
}
inline ::AcFunDanmu::Im::Basic::User* ProfileBatchOnlineTimeRequest::mutable_user(int index) {
  // @@protoc_insertion_point(field_mutable:AcFunDanmu.Im.Cloud.Profile.ProfileBatchOnlineTimeRequest.user)
  return _impl_.user_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::AcFunDanmu::Im::Basic::User >*
ProfileBatchOnlineTimeRequest::mutable_user() {
  // @@protoc_insertion_point(field_mutable_list:AcFunDanmu.Im.Cloud.Profile.ProfileBatchOnlineTimeRequest.user)
  return &_impl_.user_;
}
inline const ::AcFunDanmu::Im::Basic::User& ProfileBatchOnlineTimeRequest::_internal_user(int index) const {
  return _impl_.user_.Get(index);
}
inline const ::AcFunDanmu::Im::Basic::User& ProfileBatchOnlineTimeRequest::user(int index) const {
  // @@protoc_insertion_point(field_get:AcFunDanmu.Im.Cloud.Profile.ProfileBatchOnlineTimeRequest.user)
  return _internal_user(index);
}
inline ::AcFunDanmu::Im::Basic::User* ProfileBatchOnlineTimeRequest::_internal_add_user() {
  return _impl_.user_.Add();
}
inline ::AcFunDanmu::Im::Basic::User* ProfileBatchOnlineTimeRequest::add_user() {
  ::AcFunDanmu::Im::Basic::User* _add = _internal_add_user();
  // @@protoc_insertion_point(field_add:AcFunDanmu.Im.Cloud.Profile.ProfileBatchOnlineTimeRequest.user)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::AcFunDanmu::Im::Basic::User >&
ProfileBatchOnlineTimeRequest::user() const {
  // @@protoc_insertion_point(field_list:AcFunDanmu.Im.Cloud.Profile.ProfileBatchOnlineTimeRequest.user)
  return _impl_.user_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace Profile
}  // namespace Cloud
}  // namespace Im
}  // namespace AcFunDanmu

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_ProfileBatchOnlineTimeRequest_2eproto
