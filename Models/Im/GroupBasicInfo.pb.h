// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GroupBasicInfo.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_GroupBasicInfo_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_GroupBasicInfo_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3021000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3021002 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "ForbiddenState.pb.h"
#include "GroupLabel.pb.h"
#include "GroupStatus.pb.h"
#include "GroupType.pb.h"
#include "InvitePermissionType.pb.h"
#include "JoinNeedPermissionType.pb.h"
#include "Location.pb.h"
#include "MultiForbiddenState.pb.h"
#include "User.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_GroupBasicInfo_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_GroupBasicInfo_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_GroupBasicInfo_2eproto;
namespace AcFunDanmu {
namespace Im {
namespace Cloud {
namespace Message {
class GroupBasicInfo;
struct GroupBasicInfoDefaultTypeInternal;
extern GroupBasicInfoDefaultTypeInternal _GroupBasicInfo_default_instance_;
}  // namespace Message
}  // namespace Cloud
}  // namespace Im
}  // namespace AcFunDanmu
PROTOBUF_NAMESPACE_OPEN
template<> ::AcFunDanmu::Im::Cloud::Message::GroupBasicInfo* Arena::CreateMaybeMessage<::AcFunDanmu::Im::Cloud::Message::GroupBasicInfo>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace AcFunDanmu {
namespace Im {
namespace Cloud {
namespace Message {

// ===================================================================

class GroupBasicInfo final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo) */ {
 public:
  inline GroupBasicInfo() : GroupBasicInfo(nullptr) {}
  ~GroupBasicInfo() override;
  explicit PROTOBUF_CONSTEXPR GroupBasicInfo(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GroupBasicInfo(const GroupBasicInfo& from);
  GroupBasicInfo(GroupBasicInfo&& from) noexcept
    : GroupBasicInfo() {
    *this = ::std::move(from);
  }

  inline GroupBasicInfo& operator=(const GroupBasicInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline GroupBasicInfo& operator=(GroupBasicInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GroupBasicInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const GroupBasicInfo* internal_default_instance() {
    return reinterpret_cast<const GroupBasicInfo*>(
               &_GroupBasicInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(GroupBasicInfo& a, GroupBasicInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(GroupBasicInfo* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GroupBasicInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GroupBasicInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GroupBasicInfo>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GroupBasicInfo& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GroupBasicInfo& from) {
    GroupBasicInfo::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GroupBasicInfo* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "AcFunDanmu.Im.Cloud.Message.GroupBasicInfo";
  }
  protected:
  explicit GroupBasicInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUsersCanTalkFieldNumber = 18,
    kUsersKeepSilenceFieldNumber = 19,
    kMultiForbiddenStateFieldNumber = 26,
    kLabelFieldNumber = 28,
    kGroupIdFieldNumber = 1,
    kGroupNameFieldNumber = 2,
    kDescriptionFieldNumber = 5,
    kDefaultGroupNameFieldNumber = 13,
    kExtraFieldNumber = 14,
    kGroupHeadUrlFieldNumber = 20,
    kTagFieldNumber = 22,
    kGroupNumberFieldNumber = 23,
    kIntroductionFieldNumber = 24,
    kAdminFieldNumber = 3,
    kLocationFieldNumber = 21,
    kGroupStatusFieldNumber = 4,
    kJoinNeedPermissionFieldNumber = 6,
    kCreateTimeFieldNumber = 7,
    kUpdateTimeFieldNumber = 8,
    kGroupTypeFieldNumber = 9,
    kForbiddenStateFieldNumber = 10,
    kInvitePermissionTypeFieldNumber = 11,
    kBizDefCodeFieldNumber = 12,
    kIsMuteAllFieldNumber = 15,
    kOnlyAdminUpdateGroupSettingFieldNumber = 16,
    kOnlyAdminRemindAllFieldNumber = 17,
    kGroupInviteNeedUserAgreeFieldNumber = 30,
    kMaxMemberCountFieldNumber = 25,
    kGroupExtraSettingFieldNumber = 29,
    kMaxManagerCountFieldNumber = 27,
    kHistoryMessagesVisibleFieldNumber = 31,
    kGroupDismissBannedFieldNumber = 32,
    kGroupQuitBannedFieldNumber = 33,
  };
  // repeated .AcFunDanmu.Im.Basic.User usersCanTalk = 18;
  int userscantalk_size() const;
  private:
  int _internal_userscantalk_size() const;
  public:
  void clear_userscantalk();
  ::AcFunDanmu::Im::Basic::User* mutable_userscantalk(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::AcFunDanmu::Im::Basic::User >*
      mutable_userscantalk();
  private:
  const ::AcFunDanmu::Im::Basic::User& _internal_userscantalk(int index) const;
  ::AcFunDanmu::Im::Basic::User* _internal_add_userscantalk();
  public:
  const ::AcFunDanmu::Im::Basic::User& userscantalk(int index) const;
  ::AcFunDanmu::Im::Basic::User* add_userscantalk();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::AcFunDanmu::Im::Basic::User >&
      userscantalk() const;

  // repeated .AcFunDanmu.Im.Basic.User usersKeepSilence = 19;
  int userskeepsilence_size() const;
  private:
  int _internal_userskeepsilence_size() const;
  public:
  void clear_userskeepsilence();
  ::AcFunDanmu::Im::Basic::User* mutable_userskeepsilence(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::AcFunDanmu::Im::Basic::User >*
      mutable_userskeepsilence();
  private:
  const ::AcFunDanmu::Im::Basic::User& _internal_userskeepsilence(int index) const;
  ::AcFunDanmu::Im::Basic::User* _internal_add_userskeepsilence();
  public:
  const ::AcFunDanmu::Im::Basic::User& userskeepsilence(int index) const;
  ::AcFunDanmu::Im::Basic::User* add_userskeepsilence();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::AcFunDanmu::Im::Basic::User >&
      userskeepsilence() const;

  // repeated .AcFunDanmu.Im.Cloud.Message.MultiForbiddenState multiForbiddenState = 26;
  int multiforbiddenstate_size() const;
  private:
  int _internal_multiforbiddenstate_size() const;
  public:
  void clear_multiforbiddenstate();
  private:
  ::AcFunDanmu::Im::Cloud::Message::MultiForbiddenState _internal_multiforbiddenstate(int index) const;
  void _internal_add_multiforbiddenstate(::AcFunDanmu::Im::Cloud::Message::MultiForbiddenState value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>* _internal_mutable_multiforbiddenstate();
  public:
  ::AcFunDanmu::Im::Cloud::Message::MultiForbiddenState multiforbiddenstate(int index) const;
  void set_multiforbiddenstate(int index, ::AcFunDanmu::Im::Cloud::Message::MultiForbiddenState value);
  void add_multiforbiddenstate(::AcFunDanmu::Im::Cloud::Message::MultiForbiddenState value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>& multiforbiddenstate() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>* mutable_multiforbiddenstate();

  // repeated .AcFunDanmu.Im.Cloud.Message.GroupLabel label = 28;
  int label_size() const;
  private:
  int _internal_label_size() const;
  public:
  void clear_label();
  ::AcFunDanmu::Im::Cloud::Message::GroupLabel* mutable_label(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::AcFunDanmu::Im::Cloud::Message::GroupLabel >*
      mutable_label();
  private:
  const ::AcFunDanmu::Im::Cloud::Message::GroupLabel& _internal_label(int index) const;
  ::AcFunDanmu::Im::Cloud::Message::GroupLabel* _internal_add_label();
  public:
  const ::AcFunDanmu::Im::Cloud::Message::GroupLabel& label(int index) const;
  ::AcFunDanmu::Im::Cloud::Message::GroupLabel* add_label();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::AcFunDanmu::Im::Cloud::Message::GroupLabel >&
      label() const;

  // string groupId = 1;
  void clear_groupid();
  const std::string& groupid() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_groupid(ArgT0&& arg0, ArgT... args);
  std::string* mutable_groupid();
  PROTOBUF_NODISCARD std::string* release_groupid();
  void set_allocated_groupid(std::string* groupid);
  private:
  const std::string& _internal_groupid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_groupid(const std::string& value);
  std::string* _internal_mutable_groupid();
  public:

  // string groupName = 2;
  void clear_groupname();
  const std::string& groupname() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_groupname(ArgT0&& arg0, ArgT... args);
  std::string* mutable_groupname();
  PROTOBUF_NODISCARD std::string* release_groupname();
  void set_allocated_groupname(std::string* groupname);
  private:
  const std::string& _internal_groupname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_groupname(const std::string& value);
  std::string* _internal_mutable_groupname();
  public:

  // string description = 5;
  void clear_description();
  const std::string& description() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_description(ArgT0&& arg0, ArgT... args);
  std::string* mutable_description();
  PROTOBUF_NODISCARD std::string* release_description();
  void set_allocated_description(std::string* description);
  private:
  const std::string& _internal_description() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_description(const std::string& value);
  std::string* _internal_mutable_description();
  public:

  // string defaultGroupName = 13;
  void clear_defaultgroupname();
  const std::string& defaultgroupname() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_defaultgroupname(ArgT0&& arg0, ArgT... args);
  std::string* mutable_defaultgroupname();
  PROTOBUF_NODISCARD std::string* release_defaultgroupname();
  void set_allocated_defaultgroupname(std::string* defaultgroupname);
  private:
  const std::string& _internal_defaultgroupname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_defaultgroupname(const std::string& value);
  std::string* _internal_mutable_defaultgroupname();
  public:

  // string extra = 14;
  void clear_extra();
  const std::string& extra() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_extra(ArgT0&& arg0, ArgT... args);
  std::string* mutable_extra();
  PROTOBUF_NODISCARD std::string* release_extra();
  void set_allocated_extra(std::string* extra);
  private:
  const std::string& _internal_extra() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_extra(const std::string& value);
  std::string* _internal_mutable_extra();
  public:

  // string groupHeadUrl = 20;
  void clear_groupheadurl();
  const std::string& groupheadurl() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_groupheadurl(ArgT0&& arg0, ArgT... args);
  std::string* mutable_groupheadurl();
  PROTOBUF_NODISCARD std::string* release_groupheadurl();
  void set_allocated_groupheadurl(std::string* groupheadurl);
  private:
  const std::string& _internal_groupheadurl() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_groupheadurl(const std::string& value);
  std::string* _internal_mutable_groupheadurl();
  public:

  // string tag = 22;
  void clear_tag();
  const std::string& tag() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_tag(ArgT0&& arg0, ArgT... args);
  std::string* mutable_tag();
  PROTOBUF_NODISCARD std::string* release_tag();
  void set_allocated_tag(std::string* tag);
  private:
  const std::string& _internal_tag() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_tag(const std::string& value);
  std::string* _internal_mutable_tag();
  public:

  // string groupNumber = 23;
  void clear_groupnumber();
  const std::string& groupnumber() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_groupnumber(ArgT0&& arg0, ArgT... args);
  std::string* mutable_groupnumber();
  PROTOBUF_NODISCARD std::string* release_groupnumber();
  void set_allocated_groupnumber(std::string* groupnumber);
  private:
  const std::string& _internal_groupnumber() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_groupnumber(const std::string& value);
  std::string* _internal_mutable_groupnumber();
  public:

  // string introduction = 24;
  void clear_introduction();
  const std::string& introduction() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_introduction(ArgT0&& arg0, ArgT... args);
  std::string* mutable_introduction();
  PROTOBUF_NODISCARD std::string* release_introduction();
  void set_allocated_introduction(std::string* introduction);
  private:
  const std::string& _internal_introduction() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_introduction(const std::string& value);
  std::string* _internal_mutable_introduction();
  public:

  // .AcFunDanmu.Im.Basic.User admin = 3;
  bool has_admin() const;
  private:
  bool _internal_has_admin() const;
  public:
  void clear_admin();
  const ::AcFunDanmu::Im::Basic::User& admin() const;
  PROTOBUF_NODISCARD ::AcFunDanmu::Im::Basic::User* release_admin();
  ::AcFunDanmu::Im::Basic::User* mutable_admin();
  void set_allocated_admin(::AcFunDanmu::Im::Basic::User* admin);
  private:
  const ::AcFunDanmu::Im::Basic::User& _internal_admin() const;
  ::AcFunDanmu::Im::Basic::User* _internal_mutable_admin();
  public:
  void unsafe_arena_set_allocated_admin(
      ::AcFunDanmu::Im::Basic::User* admin);
  ::AcFunDanmu::Im::Basic::User* unsafe_arena_release_admin();

  // .AcFunDanmu.Im.Cloud.Message.Location location = 21;
  bool has_location() const;
  private:
  bool _internal_has_location() const;
  public:
  void clear_location();
  const ::AcFunDanmu::Im::Cloud::Message::Location& location() const;
  PROTOBUF_NODISCARD ::AcFunDanmu::Im::Cloud::Message::Location* release_location();
  ::AcFunDanmu::Im::Cloud::Message::Location* mutable_location();
  void set_allocated_location(::AcFunDanmu::Im::Cloud::Message::Location* location);
  private:
  const ::AcFunDanmu::Im::Cloud::Message::Location& _internal_location() const;
  ::AcFunDanmu::Im::Cloud::Message::Location* _internal_mutable_location();
  public:
  void unsafe_arena_set_allocated_location(
      ::AcFunDanmu::Im::Cloud::Message::Location* location);
  ::AcFunDanmu::Im::Cloud::Message::Location* unsafe_arena_release_location();

  // .AcFunDanmu.Im.Cloud.Message.GroupStatus groupStatus = 4;
  void clear_groupstatus();
  ::AcFunDanmu::Im::Cloud::Message::GroupStatus groupstatus() const;
  void set_groupstatus(::AcFunDanmu::Im::Cloud::Message::GroupStatus value);
  private:
  ::AcFunDanmu::Im::Cloud::Message::GroupStatus _internal_groupstatus() const;
  void _internal_set_groupstatus(::AcFunDanmu::Im::Cloud::Message::GroupStatus value);
  public:

  // .AcFunDanmu.Im.Cloud.Message.JoinNeedPermissionType joinNeedPermission = 6;
  void clear_joinneedpermission();
  ::AcFunDanmu::Im::Cloud::Message::JoinNeedPermissionType joinneedpermission() const;
  void set_joinneedpermission(::AcFunDanmu::Im::Cloud::Message::JoinNeedPermissionType value);
  private:
  ::AcFunDanmu::Im::Cloud::Message::JoinNeedPermissionType _internal_joinneedpermission() const;
  void _internal_set_joinneedpermission(::AcFunDanmu::Im::Cloud::Message::JoinNeedPermissionType value);
  public:

  // int64 createTime = 7;
  void clear_createtime();
  int64_t createtime() const;
  void set_createtime(int64_t value);
  private:
  int64_t _internal_createtime() const;
  void _internal_set_createtime(int64_t value);
  public:

  // int64 updateTime = 8;
  void clear_updatetime();
  int64_t updatetime() const;
  void set_updatetime(int64_t value);
  private:
  int64_t _internal_updatetime() const;
  void _internal_set_updatetime(int64_t value);
  public:

  // .AcFunDanmu.Im.Cloud.Message.GroupType groupType = 9;
  void clear_grouptype();
  ::AcFunDanmu::Im::Cloud::Message::GroupType grouptype() const;
  void set_grouptype(::AcFunDanmu::Im::Cloud::Message::GroupType value);
  private:
  ::AcFunDanmu::Im::Cloud::Message::GroupType _internal_grouptype() const;
  void _internal_set_grouptype(::AcFunDanmu::Im::Cloud::Message::GroupType value);
  public:

  // .AcFunDanmu.Im.Cloud.Message.ForbiddenState forbiddenState = 10;
  void clear_forbiddenstate();
  ::AcFunDanmu::Im::Cloud::Message::ForbiddenState forbiddenstate() const;
  void set_forbiddenstate(::AcFunDanmu::Im::Cloud::Message::ForbiddenState value);
  private:
  ::AcFunDanmu::Im::Cloud::Message::ForbiddenState _internal_forbiddenstate() const;
  void _internal_set_forbiddenstate(::AcFunDanmu::Im::Cloud::Message::ForbiddenState value);
  public:

  // .AcFunDanmu.Im.Cloud.Message.InvitePermissionType invitePermissionType = 11;
  void clear_invitepermissiontype();
  ::AcFunDanmu::Im::Cloud::Message::InvitePermissionType invitepermissiontype() const;
  void set_invitepermissiontype(::AcFunDanmu::Im::Cloud::Message::InvitePermissionType value);
  private:
  ::AcFunDanmu::Im::Cloud::Message::InvitePermissionType _internal_invitepermissiontype() const;
  void _internal_set_invitepermissiontype(::AcFunDanmu::Im::Cloud::Message::InvitePermissionType value);
  public:

  // int32 bizDefCode = 12;
  void clear_bizdefcode();
  int32_t bizdefcode() const;
  void set_bizdefcode(int32_t value);
  private:
  int32_t _internal_bizdefcode() const;
  void _internal_set_bizdefcode(int32_t value);
  public:

  // bool isMuteAll = 15;
  void clear_ismuteall();
  bool ismuteall() const;
  void set_ismuteall(bool value);
  private:
  bool _internal_ismuteall() const;
  void _internal_set_ismuteall(bool value);
  public:

  // bool onlyAdminUpdateGroupSetting = 16;
  void clear_onlyadminupdategroupsetting();
  bool onlyadminupdategroupsetting() const;
  void set_onlyadminupdategroupsetting(bool value);
  private:
  bool _internal_onlyadminupdategroupsetting() const;
  void _internal_set_onlyadminupdategroupsetting(bool value);
  public:

  // bool onlyAdminRemindAll = 17;
  void clear_onlyadminremindall();
  bool onlyadminremindall() const;
  void set_onlyadminremindall(bool value);
  private:
  bool _internal_onlyadminremindall() const;
  void _internal_set_onlyadminremindall(bool value);
  public:

  // bool groupInviteNeedUserAgree = 30;
  void clear_groupinviteneeduseragree();
  bool groupinviteneeduseragree() const;
  void set_groupinviteneeduseragree(bool value);
  private:
  bool _internal_groupinviteneeduseragree() const;
  void _internal_set_groupinviteneeduseragree(bool value);
  public:

  // int32 maxMemberCount = 25;
  void clear_maxmembercount();
  int32_t maxmembercount() const;
  void set_maxmembercount(int32_t value);
  private:
  int32_t _internal_maxmembercount() const;
  void _internal_set_maxmembercount(int32_t value);
  public:

  // int64 groupExtraSetting = 29;
  void clear_groupextrasetting();
  int64_t groupextrasetting() const;
  void set_groupextrasetting(int64_t value);
  private:
  int64_t _internal_groupextrasetting() const;
  void _internal_set_groupextrasetting(int64_t value);
  public:

  // int32 maxManagerCount = 27;
  void clear_maxmanagercount();
  int32_t maxmanagercount() const;
  void set_maxmanagercount(int32_t value);
  private:
  int32_t _internal_maxmanagercount() const;
  void _internal_set_maxmanagercount(int32_t value);
  public:

  // bool historyMessagesVisible = 31;
  void clear_historymessagesvisible();
  bool historymessagesvisible() const;
  void set_historymessagesvisible(bool value);
  private:
  bool _internal_historymessagesvisible() const;
  void _internal_set_historymessagesvisible(bool value);
  public:

  // bool groupDismissBanned = 32;
  void clear_groupdismissbanned();
  bool groupdismissbanned() const;
  void set_groupdismissbanned(bool value);
  private:
  bool _internal_groupdismissbanned() const;
  void _internal_set_groupdismissbanned(bool value);
  public:

  // bool groupQuitBanned = 33;
  void clear_groupquitbanned();
  bool groupquitbanned() const;
  void set_groupquitbanned(bool value);
  private:
  bool _internal_groupquitbanned() const;
  void _internal_set_groupquitbanned(bool value);
  public:

  // @@protoc_insertion_point(class_scope:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::AcFunDanmu::Im::Basic::User > userscantalk_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::AcFunDanmu::Im::Basic::User > userskeepsilence_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField<int> multiforbiddenstate_;
    mutable std::atomic<int> _multiforbiddenstate_cached_byte_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::AcFunDanmu::Im::Cloud::Message::GroupLabel > label_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr groupid_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr groupname_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr description_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr defaultgroupname_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr extra_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr groupheadurl_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr tag_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr groupnumber_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr introduction_;
    ::AcFunDanmu::Im::Basic::User* admin_;
    ::AcFunDanmu::Im::Cloud::Message::Location* location_;
    int groupstatus_;
    int joinneedpermission_;
    int64_t createtime_;
    int64_t updatetime_;
    int grouptype_;
    int forbiddenstate_;
    int invitepermissiontype_;
    int32_t bizdefcode_;
    bool ismuteall_;
    bool onlyadminupdategroupsetting_;
    bool onlyadminremindall_;
    bool groupinviteneeduseragree_;
    int32_t maxmembercount_;
    int64_t groupextrasetting_;
    int32_t maxmanagercount_;
    bool historymessagesvisible_;
    bool groupdismissbanned_;
    bool groupquitbanned_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_GroupBasicInfo_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// GroupBasicInfo

// string groupId = 1;
inline void GroupBasicInfo::clear_groupid() {
  _impl_.groupid_.ClearToEmpty();
}
inline const std::string& GroupBasicInfo::groupid() const {
  // @@protoc_insertion_point(field_get:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.groupId)
  return _internal_groupid();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void GroupBasicInfo::set_groupid(ArgT0&& arg0, ArgT... args) {
 
 _impl_.groupid_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.groupId)
}
inline std::string* GroupBasicInfo::mutable_groupid() {
  std::string* _s = _internal_mutable_groupid();
  // @@protoc_insertion_point(field_mutable:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.groupId)
  return _s;
}
inline const std::string& GroupBasicInfo::_internal_groupid() const {
  return _impl_.groupid_.Get();
}
inline void GroupBasicInfo::_internal_set_groupid(const std::string& value) {
  
  _impl_.groupid_.Set(value, GetArenaForAllocation());
}
inline std::string* GroupBasicInfo::_internal_mutable_groupid() {
  
  return _impl_.groupid_.Mutable(GetArenaForAllocation());
}
inline std::string* GroupBasicInfo::release_groupid() {
  // @@protoc_insertion_point(field_release:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.groupId)
  return _impl_.groupid_.Release();
}
inline void GroupBasicInfo::set_allocated_groupid(std::string* groupid) {
  if (groupid != nullptr) {
    
  } else {
    
  }
  _impl_.groupid_.SetAllocated(groupid, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.groupid_.IsDefault()) {
    _impl_.groupid_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.groupId)
}

// string groupName = 2;
inline void GroupBasicInfo::clear_groupname() {
  _impl_.groupname_.ClearToEmpty();
}
inline const std::string& GroupBasicInfo::groupname() const {
  // @@protoc_insertion_point(field_get:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.groupName)
  return _internal_groupname();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void GroupBasicInfo::set_groupname(ArgT0&& arg0, ArgT... args) {
 
 _impl_.groupname_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.groupName)
}
inline std::string* GroupBasicInfo::mutable_groupname() {
  std::string* _s = _internal_mutable_groupname();
  // @@protoc_insertion_point(field_mutable:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.groupName)
  return _s;
}
inline const std::string& GroupBasicInfo::_internal_groupname() const {
  return _impl_.groupname_.Get();
}
inline void GroupBasicInfo::_internal_set_groupname(const std::string& value) {
  
  _impl_.groupname_.Set(value, GetArenaForAllocation());
}
inline std::string* GroupBasicInfo::_internal_mutable_groupname() {
  
  return _impl_.groupname_.Mutable(GetArenaForAllocation());
}
inline std::string* GroupBasicInfo::release_groupname() {
  // @@protoc_insertion_point(field_release:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.groupName)
  return _impl_.groupname_.Release();
}
inline void GroupBasicInfo::set_allocated_groupname(std::string* groupname) {
  if (groupname != nullptr) {
    
  } else {
    
  }
  _impl_.groupname_.SetAllocated(groupname, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.groupname_.IsDefault()) {
    _impl_.groupname_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.groupName)
}

// .AcFunDanmu.Im.Basic.User admin = 3;
inline bool GroupBasicInfo::_internal_has_admin() const {
  return this != internal_default_instance() && _impl_.admin_ != nullptr;
}
inline bool GroupBasicInfo::has_admin() const {
  return _internal_has_admin();
}
inline const ::AcFunDanmu::Im::Basic::User& GroupBasicInfo::_internal_admin() const {
  const ::AcFunDanmu::Im::Basic::User* p = _impl_.admin_;
  return p != nullptr ? *p : reinterpret_cast<const ::AcFunDanmu::Im::Basic::User&>(
      ::AcFunDanmu::Im::Basic::_User_default_instance_);
}
inline const ::AcFunDanmu::Im::Basic::User& GroupBasicInfo::admin() const {
  // @@protoc_insertion_point(field_get:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.admin)
  return _internal_admin();
}
inline void GroupBasicInfo::unsafe_arena_set_allocated_admin(
    ::AcFunDanmu::Im::Basic::User* admin) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.admin_);
  }
  _impl_.admin_ = admin;
  if (admin) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.admin)
}
inline ::AcFunDanmu::Im::Basic::User* GroupBasicInfo::release_admin() {
  
  ::AcFunDanmu::Im::Basic::User* temp = _impl_.admin_;
  _impl_.admin_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::AcFunDanmu::Im::Basic::User* GroupBasicInfo::unsafe_arena_release_admin() {
  // @@protoc_insertion_point(field_release:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.admin)
  
  ::AcFunDanmu::Im::Basic::User* temp = _impl_.admin_;
  _impl_.admin_ = nullptr;
  return temp;
}
inline ::AcFunDanmu::Im::Basic::User* GroupBasicInfo::_internal_mutable_admin() {
  
  if (_impl_.admin_ == nullptr) {
    auto* p = CreateMaybeMessage<::AcFunDanmu::Im::Basic::User>(GetArenaForAllocation());
    _impl_.admin_ = p;
  }
  return _impl_.admin_;
}
inline ::AcFunDanmu::Im::Basic::User* GroupBasicInfo::mutable_admin() {
  ::AcFunDanmu::Im::Basic::User* _msg = _internal_mutable_admin();
  // @@protoc_insertion_point(field_mutable:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.admin)
  return _msg;
}
inline void GroupBasicInfo::set_allocated_admin(::AcFunDanmu::Im::Basic::User* admin) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.admin_);
  }
  if (admin) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(admin));
    if (message_arena != submessage_arena) {
      admin = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, admin, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.admin_ = admin;
  // @@protoc_insertion_point(field_set_allocated:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.admin)
}

// .AcFunDanmu.Im.Cloud.Message.GroupStatus groupStatus = 4;
inline void GroupBasicInfo::clear_groupstatus() {
  _impl_.groupstatus_ = 0;
}
inline ::AcFunDanmu::Im::Cloud::Message::GroupStatus GroupBasicInfo::_internal_groupstatus() const {
  return static_cast< ::AcFunDanmu::Im::Cloud::Message::GroupStatus >(_impl_.groupstatus_);
}
inline ::AcFunDanmu::Im::Cloud::Message::GroupStatus GroupBasicInfo::groupstatus() const {
  // @@protoc_insertion_point(field_get:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.groupStatus)
  return _internal_groupstatus();
}
inline void GroupBasicInfo::_internal_set_groupstatus(::AcFunDanmu::Im::Cloud::Message::GroupStatus value) {
  
  _impl_.groupstatus_ = value;
}
inline void GroupBasicInfo::set_groupstatus(::AcFunDanmu::Im::Cloud::Message::GroupStatus value) {
  _internal_set_groupstatus(value);
  // @@protoc_insertion_point(field_set:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.groupStatus)
}

// string description = 5;
inline void GroupBasicInfo::clear_description() {
  _impl_.description_.ClearToEmpty();
}
inline const std::string& GroupBasicInfo::description() const {
  // @@protoc_insertion_point(field_get:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.description)
  return _internal_description();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void GroupBasicInfo::set_description(ArgT0&& arg0, ArgT... args) {
 
 _impl_.description_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.description)
}
inline std::string* GroupBasicInfo::mutable_description() {
  std::string* _s = _internal_mutable_description();
  // @@protoc_insertion_point(field_mutable:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.description)
  return _s;
}
inline const std::string& GroupBasicInfo::_internal_description() const {
  return _impl_.description_.Get();
}
inline void GroupBasicInfo::_internal_set_description(const std::string& value) {
  
  _impl_.description_.Set(value, GetArenaForAllocation());
}
inline std::string* GroupBasicInfo::_internal_mutable_description() {
  
  return _impl_.description_.Mutable(GetArenaForAllocation());
}
inline std::string* GroupBasicInfo::release_description() {
  // @@protoc_insertion_point(field_release:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.description)
  return _impl_.description_.Release();
}
inline void GroupBasicInfo::set_allocated_description(std::string* description) {
  if (description != nullptr) {
    
  } else {
    
  }
  _impl_.description_.SetAllocated(description, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.description_.IsDefault()) {
    _impl_.description_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.description)
}

// .AcFunDanmu.Im.Cloud.Message.JoinNeedPermissionType joinNeedPermission = 6;
inline void GroupBasicInfo::clear_joinneedpermission() {
  _impl_.joinneedpermission_ = 0;
}
inline ::AcFunDanmu::Im::Cloud::Message::JoinNeedPermissionType GroupBasicInfo::_internal_joinneedpermission() const {
  return static_cast< ::AcFunDanmu::Im::Cloud::Message::JoinNeedPermissionType >(_impl_.joinneedpermission_);
}
inline ::AcFunDanmu::Im::Cloud::Message::JoinNeedPermissionType GroupBasicInfo::joinneedpermission() const {
  // @@protoc_insertion_point(field_get:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.joinNeedPermission)
  return _internal_joinneedpermission();
}
inline void GroupBasicInfo::_internal_set_joinneedpermission(::AcFunDanmu::Im::Cloud::Message::JoinNeedPermissionType value) {
  
  _impl_.joinneedpermission_ = value;
}
inline void GroupBasicInfo::set_joinneedpermission(::AcFunDanmu::Im::Cloud::Message::JoinNeedPermissionType value) {
  _internal_set_joinneedpermission(value);
  // @@protoc_insertion_point(field_set:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.joinNeedPermission)
}

// int64 createTime = 7;
inline void GroupBasicInfo::clear_createtime() {
  _impl_.createtime_ = int64_t{0};
}
inline int64_t GroupBasicInfo::_internal_createtime() const {
  return _impl_.createtime_;
}
inline int64_t GroupBasicInfo::createtime() const {
  // @@protoc_insertion_point(field_get:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.createTime)
  return _internal_createtime();
}
inline void GroupBasicInfo::_internal_set_createtime(int64_t value) {
  
  _impl_.createtime_ = value;
}
inline void GroupBasicInfo::set_createtime(int64_t value) {
  _internal_set_createtime(value);
  // @@protoc_insertion_point(field_set:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.createTime)
}

// int64 updateTime = 8;
inline void GroupBasicInfo::clear_updatetime() {
  _impl_.updatetime_ = int64_t{0};
}
inline int64_t GroupBasicInfo::_internal_updatetime() const {
  return _impl_.updatetime_;
}
inline int64_t GroupBasicInfo::updatetime() const {
  // @@protoc_insertion_point(field_get:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.updateTime)
  return _internal_updatetime();
}
inline void GroupBasicInfo::_internal_set_updatetime(int64_t value) {
  
  _impl_.updatetime_ = value;
}
inline void GroupBasicInfo::set_updatetime(int64_t value) {
  _internal_set_updatetime(value);
  // @@protoc_insertion_point(field_set:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.updateTime)
}

// .AcFunDanmu.Im.Cloud.Message.GroupType groupType = 9;
inline void GroupBasicInfo::clear_grouptype() {
  _impl_.grouptype_ = 0;
}
inline ::AcFunDanmu::Im::Cloud::Message::GroupType GroupBasicInfo::_internal_grouptype() const {
  return static_cast< ::AcFunDanmu::Im::Cloud::Message::GroupType >(_impl_.grouptype_);
}
inline ::AcFunDanmu::Im::Cloud::Message::GroupType GroupBasicInfo::grouptype() const {
  // @@protoc_insertion_point(field_get:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.groupType)
  return _internal_grouptype();
}
inline void GroupBasicInfo::_internal_set_grouptype(::AcFunDanmu::Im::Cloud::Message::GroupType value) {
  
  _impl_.grouptype_ = value;
}
inline void GroupBasicInfo::set_grouptype(::AcFunDanmu::Im::Cloud::Message::GroupType value) {
  _internal_set_grouptype(value);
  // @@protoc_insertion_point(field_set:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.groupType)
}

// .AcFunDanmu.Im.Cloud.Message.ForbiddenState forbiddenState = 10;
inline void GroupBasicInfo::clear_forbiddenstate() {
  _impl_.forbiddenstate_ = 0;
}
inline ::AcFunDanmu::Im::Cloud::Message::ForbiddenState GroupBasicInfo::_internal_forbiddenstate() const {
  return static_cast< ::AcFunDanmu::Im::Cloud::Message::ForbiddenState >(_impl_.forbiddenstate_);
}
inline ::AcFunDanmu::Im::Cloud::Message::ForbiddenState GroupBasicInfo::forbiddenstate() const {
  // @@protoc_insertion_point(field_get:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.forbiddenState)
  return _internal_forbiddenstate();
}
inline void GroupBasicInfo::_internal_set_forbiddenstate(::AcFunDanmu::Im::Cloud::Message::ForbiddenState value) {
  
  _impl_.forbiddenstate_ = value;
}
inline void GroupBasicInfo::set_forbiddenstate(::AcFunDanmu::Im::Cloud::Message::ForbiddenState value) {
  _internal_set_forbiddenstate(value);
  // @@protoc_insertion_point(field_set:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.forbiddenState)
}

// .AcFunDanmu.Im.Cloud.Message.InvitePermissionType invitePermissionType = 11;
inline void GroupBasicInfo::clear_invitepermissiontype() {
  _impl_.invitepermissiontype_ = 0;
}
inline ::AcFunDanmu::Im::Cloud::Message::InvitePermissionType GroupBasicInfo::_internal_invitepermissiontype() const {
  return static_cast< ::AcFunDanmu::Im::Cloud::Message::InvitePermissionType >(_impl_.invitepermissiontype_);
}
inline ::AcFunDanmu::Im::Cloud::Message::InvitePermissionType GroupBasicInfo::invitepermissiontype() const {
  // @@protoc_insertion_point(field_get:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.invitePermissionType)
  return _internal_invitepermissiontype();
}
inline void GroupBasicInfo::_internal_set_invitepermissiontype(::AcFunDanmu::Im::Cloud::Message::InvitePermissionType value) {
  
  _impl_.invitepermissiontype_ = value;
}
inline void GroupBasicInfo::set_invitepermissiontype(::AcFunDanmu::Im::Cloud::Message::InvitePermissionType value) {
  _internal_set_invitepermissiontype(value);
  // @@protoc_insertion_point(field_set:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.invitePermissionType)
}

// int32 bizDefCode = 12;
inline void GroupBasicInfo::clear_bizdefcode() {
  _impl_.bizdefcode_ = 0;
}
inline int32_t GroupBasicInfo::_internal_bizdefcode() const {
  return _impl_.bizdefcode_;
}
inline int32_t GroupBasicInfo::bizdefcode() const {
  // @@protoc_insertion_point(field_get:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.bizDefCode)
  return _internal_bizdefcode();
}
inline void GroupBasicInfo::_internal_set_bizdefcode(int32_t value) {
  
  _impl_.bizdefcode_ = value;
}
inline void GroupBasicInfo::set_bizdefcode(int32_t value) {
  _internal_set_bizdefcode(value);
  // @@protoc_insertion_point(field_set:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.bizDefCode)
}

// string defaultGroupName = 13;
inline void GroupBasicInfo::clear_defaultgroupname() {
  _impl_.defaultgroupname_.ClearToEmpty();
}
inline const std::string& GroupBasicInfo::defaultgroupname() const {
  // @@protoc_insertion_point(field_get:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.defaultGroupName)
  return _internal_defaultgroupname();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void GroupBasicInfo::set_defaultgroupname(ArgT0&& arg0, ArgT... args) {
 
 _impl_.defaultgroupname_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.defaultGroupName)
}
inline std::string* GroupBasicInfo::mutable_defaultgroupname() {
  std::string* _s = _internal_mutable_defaultgroupname();
  // @@protoc_insertion_point(field_mutable:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.defaultGroupName)
  return _s;
}
inline const std::string& GroupBasicInfo::_internal_defaultgroupname() const {
  return _impl_.defaultgroupname_.Get();
}
inline void GroupBasicInfo::_internal_set_defaultgroupname(const std::string& value) {
  
  _impl_.defaultgroupname_.Set(value, GetArenaForAllocation());
}
inline std::string* GroupBasicInfo::_internal_mutable_defaultgroupname() {
  
  return _impl_.defaultgroupname_.Mutable(GetArenaForAllocation());
}
inline std::string* GroupBasicInfo::release_defaultgroupname() {
  // @@protoc_insertion_point(field_release:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.defaultGroupName)
  return _impl_.defaultgroupname_.Release();
}
inline void GroupBasicInfo::set_allocated_defaultgroupname(std::string* defaultgroupname) {
  if (defaultgroupname != nullptr) {
    
  } else {
    
  }
  _impl_.defaultgroupname_.SetAllocated(defaultgroupname, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.defaultgroupname_.IsDefault()) {
    _impl_.defaultgroupname_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.defaultGroupName)
}

// string extra = 14;
inline void GroupBasicInfo::clear_extra() {
  _impl_.extra_.ClearToEmpty();
}
inline const std::string& GroupBasicInfo::extra() const {
  // @@protoc_insertion_point(field_get:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.extra)
  return _internal_extra();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void GroupBasicInfo::set_extra(ArgT0&& arg0, ArgT... args) {
 
 _impl_.extra_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.extra)
}
inline std::string* GroupBasicInfo::mutable_extra() {
  std::string* _s = _internal_mutable_extra();
  // @@protoc_insertion_point(field_mutable:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.extra)
  return _s;
}
inline const std::string& GroupBasicInfo::_internal_extra() const {
  return _impl_.extra_.Get();
}
inline void GroupBasicInfo::_internal_set_extra(const std::string& value) {
  
  _impl_.extra_.Set(value, GetArenaForAllocation());
}
inline std::string* GroupBasicInfo::_internal_mutable_extra() {
  
  return _impl_.extra_.Mutable(GetArenaForAllocation());
}
inline std::string* GroupBasicInfo::release_extra() {
  // @@protoc_insertion_point(field_release:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.extra)
  return _impl_.extra_.Release();
}
inline void GroupBasicInfo::set_allocated_extra(std::string* extra) {
  if (extra != nullptr) {
    
  } else {
    
  }
  _impl_.extra_.SetAllocated(extra, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.extra_.IsDefault()) {
    _impl_.extra_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.extra)
}

// bool isMuteAll = 15;
inline void GroupBasicInfo::clear_ismuteall() {
  _impl_.ismuteall_ = false;
}
inline bool GroupBasicInfo::_internal_ismuteall() const {
  return _impl_.ismuteall_;
}
inline bool GroupBasicInfo::ismuteall() const {
  // @@protoc_insertion_point(field_get:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.isMuteAll)
  return _internal_ismuteall();
}
inline void GroupBasicInfo::_internal_set_ismuteall(bool value) {
  
  _impl_.ismuteall_ = value;
}
inline void GroupBasicInfo::set_ismuteall(bool value) {
  _internal_set_ismuteall(value);
  // @@protoc_insertion_point(field_set:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.isMuteAll)
}

// bool onlyAdminUpdateGroupSetting = 16;
inline void GroupBasicInfo::clear_onlyadminupdategroupsetting() {
  _impl_.onlyadminupdategroupsetting_ = false;
}
inline bool GroupBasicInfo::_internal_onlyadminupdategroupsetting() const {
  return _impl_.onlyadminupdategroupsetting_;
}
inline bool GroupBasicInfo::onlyadminupdategroupsetting() const {
  // @@protoc_insertion_point(field_get:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.onlyAdminUpdateGroupSetting)
  return _internal_onlyadminupdategroupsetting();
}
inline void GroupBasicInfo::_internal_set_onlyadminupdategroupsetting(bool value) {
  
  _impl_.onlyadminupdategroupsetting_ = value;
}
inline void GroupBasicInfo::set_onlyadminupdategroupsetting(bool value) {
  _internal_set_onlyadminupdategroupsetting(value);
  // @@protoc_insertion_point(field_set:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.onlyAdminUpdateGroupSetting)
}

// bool onlyAdminRemindAll = 17;
inline void GroupBasicInfo::clear_onlyadminremindall() {
  _impl_.onlyadminremindall_ = false;
}
inline bool GroupBasicInfo::_internal_onlyadminremindall() const {
  return _impl_.onlyadminremindall_;
}
inline bool GroupBasicInfo::onlyadminremindall() const {
  // @@protoc_insertion_point(field_get:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.onlyAdminRemindAll)
  return _internal_onlyadminremindall();
}
inline void GroupBasicInfo::_internal_set_onlyadminremindall(bool value) {
  
  _impl_.onlyadminremindall_ = value;
}
inline void GroupBasicInfo::set_onlyadminremindall(bool value) {
  _internal_set_onlyadminremindall(value);
  // @@protoc_insertion_point(field_set:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.onlyAdminRemindAll)
}

// repeated .AcFunDanmu.Im.Basic.User usersCanTalk = 18;
inline int GroupBasicInfo::_internal_userscantalk_size() const {
  return _impl_.userscantalk_.size();
}
inline int GroupBasicInfo::userscantalk_size() const {
  return _internal_userscantalk_size();
}
inline ::AcFunDanmu::Im::Basic::User* GroupBasicInfo::mutable_userscantalk(int index) {
  // @@protoc_insertion_point(field_mutable:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.usersCanTalk)
  return _impl_.userscantalk_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::AcFunDanmu::Im::Basic::User >*
GroupBasicInfo::mutable_userscantalk() {
  // @@protoc_insertion_point(field_mutable_list:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.usersCanTalk)
  return &_impl_.userscantalk_;
}
inline const ::AcFunDanmu::Im::Basic::User& GroupBasicInfo::_internal_userscantalk(int index) const {
  return _impl_.userscantalk_.Get(index);
}
inline const ::AcFunDanmu::Im::Basic::User& GroupBasicInfo::userscantalk(int index) const {
  // @@protoc_insertion_point(field_get:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.usersCanTalk)
  return _internal_userscantalk(index);
}
inline ::AcFunDanmu::Im::Basic::User* GroupBasicInfo::_internal_add_userscantalk() {
  return _impl_.userscantalk_.Add();
}
inline ::AcFunDanmu::Im::Basic::User* GroupBasicInfo::add_userscantalk() {
  ::AcFunDanmu::Im::Basic::User* _add = _internal_add_userscantalk();
  // @@protoc_insertion_point(field_add:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.usersCanTalk)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::AcFunDanmu::Im::Basic::User >&
GroupBasicInfo::userscantalk() const {
  // @@protoc_insertion_point(field_list:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.usersCanTalk)
  return _impl_.userscantalk_;
}

// repeated .AcFunDanmu.Im.Basic.User usersKeepSilence = 19;
inline int GroupBasicInfo::_internal_userskeepsilence_size() const {
  return _impl_.userskeepsilence_.size();
}
inline int GroupBasicInfo::userskeepsilence_size() const {
  return _internal_userskeepsilence_size();
}
inline ::AcFunDanmu::Im::Basic::User* GroupBasicInfo::mutable_userskeepsilence(int index) {
  // @@protoc_insertion_point(field_mutable:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.usersKeepSilence)
  return _impl_.userskeepsilence_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::AcFunDanmu::Im::Basic::User >*
GroupBasicInfo::mutable_userskeepsilence() {
  // @@protoc_insertion_point(field_mutable_list:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.usersKeepSilence)
  return &_impl_.userskeepsilence_;
}
inline const ::AcFunDanmu::Im::Basic::User& GroupBasicInfo::_internal_userskeepsilence(int index) const {
  return _impl_.userskeepsilence_.Get(index);
}
inline const ::AcFunDanmu::Im::Basic::User& GroupBasicInfo::userskeepsilence(int index) const {
  // @@protoc_insertion_point(field_get:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.usersKeepSilence)
  return _internal_userskeepsilence(index);
}
inline ::AcFunDanmu::Im::Basic::User* GroupBasicInfo::_internal_add_userskeepsilence() {
  return _impl_.userskeepsilence_.Add();
}
inline ::AcFunDanmu::Im::Basic::User* GroupBasicInfo::add_userskeepsilence() {
  ::AcFunDanmu::Im::Basic::User* _add = _internal_add_userskeepsilence();
  // @@protoc_insertion_point(field_add:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.usersKeepSilence)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::AcFunDanmu::Im::Basic::User >&
GroupBasicInfo::userskeepsilence() const {
  // @@protoc_insertion_point(field_list:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.usersKeepSilence)
  return _impl_.userskeepsilence_;
}

// string groupHeadUrl = 20;
inline void GroupBasicInfo::clear_groupheadurl() {
  _impl_.groupheadurl_.ClearToEmpty();
}
inline const std::string& GroupBasicInfo::groupheadurl() const {
  // @@protoc_insertion_point(field_get:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.groupHeadUrl)
  return _internal_groupheadurl();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void GroupBasicInfo::set_groupheadurl(ArgT0&& arg0, ArgT... args) {
 
 _impl_.groupheadurl_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.groupHeadUrl)
}
inline std::string* GroupBasicInfo::mutable_groupheadurl() {
  std::string* _s = _internal_mutable_groupheadurl();
  // @@protoc_insertion_point(field_mutable:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.groupHeadUrl)
  return _s;
}
inline const std::string& GroupBasicInfo::_internal_groupheadurl() const {
  return _impl_.groupheadurl_.Get();
}
inline void GroupBasicInfo::_internal_set_groupheadurl(const std::string& value) {
  
  _impl_.groupheadurl_.Set(value, GetArenaForAllocation());
}
inline std::string* GroupBasicInfo::_internal_mutable_groupheadurl() {
  
  return _impl_.groupheadurl_.Mutable(GetArenaForAllocation());
}
inline std::string* GroupBasicInfo::release_groupheadurl() {
  // @@protoc_insertion_point(field_release:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.groupHeadUrl)
  return _impl_.groupheadurl_.Release();
}
inline void GroupBasicInfo::set_allocated_groupheadurl(std::string* groupheadurl) {
  if (groupheadurl != nullptr) {
    
  } else {
    
  }
  _impl_.groupheadurl_.SetAllocated(groupheadurl, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.groupheadurl_.IsDefault()) {
    _impl_.groupheadurl_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.groupHeadUrl)
}

// .AcFunDanmu.Im.Cloud.Message.Location location = 21;
inline bool GroupBasicInfo::_internal_has_location() const {
  return this != internal_default_instance() && _impl_.location_ != nullptr;
}
inline bool GroupBasicInfo::has_location() const {
  return _internal_has_location();
}
inline const ::AcFunDanmu::Im::Cloud::Message::Location& GroupBasicInfo::_internal_location() const {
  const ::AcFunDanmu::Im::Cloud::Message::Location* p = _impl_.location_;
  return p != nullptr ? *p : reinterpret_cast<const ::AcFunDanmu::Im::Cloud::Message::Location&>(
      ::AcFunDanmu::Im::Cloud::Message::_Location_default_instance_);
}
inline const ::AcFunDanmu::Im::Cloud::Message::Location& GroupBasicInfo::location() const {
  // @@protoc_insertion_point(field_get:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.location)
  return _internal_location();
}
inline void GroupBasicInfo::unsafe_arena_set_allocated_location(
    ::AcFunDanmu::Im::Cloud::Message::Location* location) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.location_);
  }
  _impl_.location_ = location;
  if (location) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.location)
}
inline ::AcFunDanmu::Im::Cloud::Message::Location* GroupBasicInfo::release_location() {
  
  ::AcFunDanmu::Im::Cloud::Message::Location* temp = _impl_.location_;
  _impl_.location_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::AcFunDanmu::Im::Cloud::Message::Location* GroupBasicInfo::unsafe_arena_release_location() {
  // @@protoc_insertion_point(field_release:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.location)
  
  ::AcFunDanmu::Im::Cloud::Message::Location* temp = _impl_.location_;
  _impl_.location_ = nullptr;
  return temp;
}
inline ::AcFunDanmu::Im::Cloud::Message::Location* GroupBasicInfo::_internal_mutable_location() {
  
  if (_impl_.location_ == nullptr) {
    auto* p = CreateMaybeMessage<::AcFunDanmu::Im::Cloud::Message::Location>(GetArenaForAllocation());
    _impl_.location_ = p;
  }
  return _impl_.location_;
}
inline ::AcFunDanmu::Im::Cloud::Message::Location* GroupBasicInfo::mutable_location() {
  ::AcFunDanmu::Im::Cloud::Message::Location* _msg = _internal_mutable_location();
  // @@protoc_insertion_point(field_mutable:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.location)
  return _msg;
}
inline void GroupBasicInfo::set_allocated_location(::AcFunDanmu::Im::Cloud::Message::Location* location) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.location_);
  }
  if (location) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(location));
    if (message_arena != submessage_arena) {
      location = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, location, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.location_ = location;
  // @@protoc_insertion_point(field_set_allocated:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.location)
}

// string tag = 22;
inline void GroupBasicInfo::clear_tag() {
  _impl_.tag_.ClearToEmpty();
}
inline const std::string& GroupBasicInfo::tag() const {
  // @@protoc_insertion_point(field_get:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.tag)
  return _internal_tag();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void GroupBasicInfo::set_tag(ArgT0&& arg0, ArgT... args) {
 
 _impl_.tag_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.tag)
}
inline std::string* GroupBasicInfo::mutable_tag() {
  std::string* _s = _internal_mutable_tag();
  // @@protoc_insertion_point(field_mutable:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.tag)
  return _s;
}
inline const std::string& GroupBasicInfo::_internal_tag() const {
  return _impl_.tag_.Get();
}
inline void GroupBasicInfo::_internal_set_tag(const std::string& value) {
  
  _impl_.tag_.Set(value, GetArenaForAllocation());
}
inline std::string* GroupBasicInfo::_internal_mutable_tag() {
  
  return _impl_.tag_.Mutable(GetArenaForAllocation());
}
inline std::string* GroupBasicInfo::release_tag() {
  // @@protoc_insertion_point(field_release:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.tag)
  return _impl_.tag_.Release();
}
inline void GroupBasicInfo::set_allocated_tag(std::string* tag) {
  if (tag != nullptr) {
    
  } else {
    
  }
  _impl_.tag_.SetAllocated(tag, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.tag_.IsDefault()) {
    _impl_.tag_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.tag)
}

// string groupNumber = 23;
inline void GroupBasicInfo::clear_groupnumber() {
  _impl_.groupnumber_.ClearToEmpty();
}
inline const std::string& GroupBasicInfo::groupnumber() const {
  // @@protoc_insertion_point(field_get:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.groupNumber)
  return _internal_groupnumber();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void GroupBasicInfo::set_groupnumber(ArgT0&& arg0, ArgT... args) {
 
 _impl_.groupnumber_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.groupNumber)
}
inline std::string* GroupBasicInfo::mutable_groupnumber() {
  std::string* _s = _internal_mutable_groupnumber();
  // @@protoc_insertion_point(field_mutable:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.groupNumber)
  return _s;
}
inline const std::string& GroupBasicInfo::_internal_groupnumber() const {
  return _impl_.groupnumber_.Get();
}
inline void GroupBasicInfo::_internal_set_groupnumber(const std::string& value) {
  
  _impl_.groupnumber_.Set(value, GetArenaForAllocation());
}
inline std::string* GroupBasicInfo::_internal_mutable_groupnumber() {
  
  return _impl_.groupnumber_.Mutable(GetArenaForAllocation());
}
inline std::string* GroupBasicInfo::release_groupnumber() {
  // @@protoc_insertion_point(field_release:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.groupNumber)
  return _impl_.groupnumber_.Release();
}
inline void GroupBasicInfo::set_allocated_groupnumber(std::string* groupnumber) {
  if (groupnumber != nullptr) {
    
  } else {
    
  }
  _impl_.groupnumber_.SetAllocated(groupnumber, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.groupnumber_.IsDefault()) {
    _impl_.groupnumber_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.groupNumber)
}

// string introduction = 24;
inline void GroupBasicInfo::clear_introduction() {
  _impl_.introduction_.ClearToEmpty();
}
inline const std::string& GroupBasicInfo::introduction() const {
  // @@protoc_insertion_point(field_get:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.introduction)
  return _internal_introduction();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void GroupBasicInfo::set_introduction(ArgT0&& arg0, ArgT... args) {
 
 _impl_.introduction_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.introduction)
}
inline std::string* GroupBasicInfo::mutable_introduction() {
  std::string* _s = _internal_mutable_introduction();
  // @@protoc_insertion_point(field_mutable:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.introduction)
  return _s;
}
inline const std::string& GroupBasicInfo::_internal_introduction() const {
  return _impl_.introduction_.Get();
}
inline void GroupBasicInfo::_internal_set_introduction(const std::string& value) {
  
  _impl_.introduction_.Set(value, GetArenaForAllocation());
}
inline std::string* GroupBasicInfo::_internal_mutable_introduction() {
  
  return _impl_.introduction_.Mutable(GetArenaForAllocation());
}
inline std::string* GroupBasicInfo::release_introduction() {
  // @@protoc_insertion_point(field_release:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.introduction)
  return _impl_.introduction_.Release();
}
inline void GroupBasicInfo::set_allocated_introduction(std::string* introduction) {
  if (introduction != nullptr) {
    
  } else {
    
  }
  _impl_.introduction_.SetAllocated(introduction, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.introduction_.IsDefault()) {
    _impl_.introduction_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.introduction)
}

// int32 maxMemberCount = 25;
inline void GroupBasicInfo::clear_maxmembercount() {
  _impl_.maxmembercount_ = 0;
}
inline int32_t GroupBasicInfo::_internal_maxmembercount() const {
  return _impl_.maxmembercount_;
}
inline int32_t GroupBasicInfo::maxmembercount() const {
  // @@protoc_insertion_point(field_get:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.maxMemberCount)
  return _internal_maxmembercount();
}
inline void GroupBasicInfo::_internal_set_maxmembercount(int32_t value) {
  
  _impl_.maxmembercount_ = value;
}
inline void GroupBasicInfo::set_maxmembercount(int32_t value) {
  _internal_set_maxmembercount(value);
  // @@protoc_insertion_point(field_set:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.maxMemberCount)
}

// repeated .AcFunDanmu.Im.Cloud.Message.MultiForbiddenState multiForbiddenState = 26;
inline int GroupBasicInfo::_internal_multiforbiddenstate_size() const {
  return _impl_.multiforbiddenstate_.size();
}
inline int GroupBasicInfo::multiforbiddenstate_size() const {
  return _internal_multiforbiddenstate_size();
}
inline void GroupBasicInfo::clear_multiforbiddenstate() {
  _impl_.multiforbiddenstate_.Clear();
}
inline ::AcFunDanmu::Im::Cloud::Message::MultiForbiddenState GroupBasicInfo::_internal_multiforbiddenstate(int index) const {
  return static_cast< ::AcFunDanmu::Im::Cloud::Message::MultiForbiddenState >(_impl_.multiforbiddenstate_.Get(index));
}
inline ::AcFunDanmu::Im::Cloud::Message::MultiForbiddenState GroupBasicInfo::multiforbiddenstate(int index) const {
  // @@protoc_insertion_point(field_get:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.multiForbiddenState)
  return _internal_multiforbiddenstate(index);
}
inline void GroupBasicInfo::set_multiforbiddenstate(int index, ::AcFunDanmu::Im::Cloud::Message::MultiForbiddenState value) {
  _impl_.multiforbiddenstate_.Set(index, value);
  // @@protoc_insertion_point(field_set:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.multiForbiddenState)
}
inline void GroupBasicInfo::_internal_add_multiforbiddenstate(::AcFunDanmu::Im::Cloud::Message::MultiForbiddenState value) {
  _impl_.multiforbiddenstate_.Add(value);
}
inline void GroupBasicInfo::add_multiforbiddenstate(::AcFunDanmu::Im::Cloud::Message::MultiForbiddenState value) {
  _internal_add_multiforbiddenstate(value);
  // @@protoc_insertion_point(field_add:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.multiForbiddenState)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>&
GroupBasicInfo::multiforbiddenstate() const {
  // @@protoc_insertion_point(field_list:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.multiForbiddenState)
  return _impl_.multiforbiddenstate_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>*
GroupBasicInfo::_internal_mutable_multiforbiddenstate() {
  return &_impl_.multiforbiddenstate_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>*
GroupBasicInfo::mutable_multiforbiddenstate() {
  // @@protoc_insertion_point(field_mutable_list:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.multiForbiddenState)
  return _internal_mutable_multiforbiddenstate();
}

// int32 maxManagerCount = 27;
inline void GroupBasicInfo::clear_maxmanagercount() {
  _impl_.maxmanagercount_ = 0;
}
inline int32_t GroupBasicInfo::_internal_maxmanagercount() const {
  return _impl_.maxmanagercount_;
}
inline int32_t GroupBasicInfo::maxmanagercount() const {
  // @@protoc_insertion_point(field_get:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.maxManagerCount)
  return _internal_maxmanagercount();
}
inline void GroupBasicInfo::_internal_set_maxmanagercount(int32_t value) {
  
  _impl_.maxmanagercount_ = value;
}
inline void GroupBasicInfo::set_maxmanagercount(int32_t value) {
  _internal_set_maxmanagercount(value);
  // @@protoc_insertion_point(field_set:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.maxManagerCount)
}

// repeated .AcFunDanmu.Im.Cloud.Message.GroupLabel label = 28;
inline int GroupBasicInfo::_internal_label_size() const {
  return _impl_.label_.size();
}
inline int GroupBasicInfo::label_size() const {
  return _internal_label_size();
}
inline ::AcFunDanmu::Im::Cloud::Message::GroupLabel* GroupBasicInfo::mutable_label(int index) {
  // @@protoc_insertion_point(field_mutable:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.label)
  return _impl_.label_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::AcFunDanmu::Im::Cloud::Message::GroupLabel >*
GroupBasicInfo::mutable_label() {
  // @@protoc_insertion_point(field_mutable_list:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.label)
  return &_impl_.label_;
}
inline const ::AcFunDanmu::Im::Cloud::Message::GroupLabel& GroupBasicInfo::_internal_label(int index) const {
  return _impl_.label_.Get(index);
}
inline const ::AcFunDanmu::Im::Cloud::Message::GroupLabel& GroupBasicInfo::label(int index) const {
  // @@protoc_insertion_point(field_get:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.label)
  return _internal_label(index);
}
inline ::AcFunDanmu::Im::Cloud::Message::GroupLabel* GroupBasicInfo::_internal_add_label() {
  return _impl_.label_.Add();
}
inline ::AcFunDanmu::Im::Cloud::Message::GroupLabel* GroupBasicInfo::add_label() {
  ::AcFunDanmu::Im::Cloud::Message::GroupLabel* _add = _internal_add_label();
  // @@protoc_insertion_point(field_add:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.label)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::AcFunDanmu::Im::Cloud::Message::GroupLabel >&
GroupBasicInfo::label() const {
  // @@protoc_insertion_point(field_list:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.label)
  return _impl_.label_;
}

// int64 groupExtraSetting = 29;
inline void GroupBasicInfo::clear_groupextrasetting() {
  _impl_.groupextrasetting_ = int64_t{0};
}
inline int64_t GroupBasicInfo::_internal_groupextrasetting() const {
  return _impl_.groupextrasetting_;
}
inline int64_t GroupBasicInfo::groupextrasetting() const {
  // @@protoc_insertion_point(field_get:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.groupExtraSetting)
  return _internal_groupextrasetting();
}
inline void GroupBasicInfo::_internal_set_groupextrasetting(int64_t value) {
  
  _impl_.groupextrasetting_ = value;
}
inline void GroupBasicInfo::set_groupextrasetting(int64_t value) {
  _internal_set_groupextrasetting(value);
  // @@protoc_insertion_point(field_set:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.groupExtraSetting)
}

// bool groupInviteNeedUserAgree = 30;
inline void GroupBasicInfo::clear_groupinviteneeduseragree() {
  _impl_.groupinviteneeduseragree_ = false;
}
inline bool GroupBasicInfo::_internal_groupinviteneeduseragree() const {
  return _impl_.groupinviteneeduseragree_;
}
inline bool GroupBasicInfo::groupinviteneeduseragree() const {
  // @@protoc_insertion_point(field_get:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.groupInviteNeedUserAgree)
  return _internal_groupinviteneeduseragree();
}
inline void GroupBasicInfo::_internal_set_groupinviteneeduseragree(bool value) {
  
  _impl_.groupinviteneeduseragree_ = value;
}
inline void GroupBasicInfo::set_groupinviteneeduseragree(bool value) {
  _internal_set_groupinviteneeduseragree(value);
  // @@protoc_insertion_point(field_set:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.groupInviteNeedUserAgree)
}

// bool historyMessagesVisible = 31;
inline void GroupBasicInfo::clear_historymessagesvisible() {
  _impl_.historymessagesvisible_ = false;
}
inline bool GroupBasicInfo::_internal_historymessagesvisible() const {
  return _impl_.historymessagesvisible_;
}
inline bool GroupBasicInfo::historymessagesvisible() const {
  // @@protoc_insertion_point(field_get:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.historyMessagesVisible)
  return _internal_historymessagesvisible();
}
inline void GroupBasicInfo::_internal_set_historymessagesvisible(bool value) {
  
  _impl_.historymessagesvisible_ = value;
}
inline void GroupBasicInfo::set_historymessagesvisible(bool value) {
  _internal_set_historymessagesvisible(value);
  // @@protoc_insertion_point(field_set:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.historyMessagesVisible)
}

// bool groupDismissBanned = 32;
inline void GroupBasicInfo::clear_groupdismissbanned() {
  _impl_.groupdismissbanned_ = false;
}
inline bool GroupBasicInfo::_internal_groupdismissbanned() const {
  return _impl_.groupdismissbanned_;
}
inline bool GroupBasicInfo::groupdismissbanned() const {
  // @@protoc_insertion_point(field_get:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.groupDismissBanned)
  return _internal_groupdismissbanned();
}
inline void GroupBasicInfo::_internal_set_groupdismissbanned(bool value) {
  
  _impl_.groupdismissbanned_ = value;
}
inline void GroupBasicInfo::set_groupdismissbanned(bool value) {
  _internal_set_groupdismissbanned(value);
  // @@protoc_insertion_point(field_set:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.groupDismissBanned)
}

// bool groupQuitBanned = 33;
inline void GroupBasicInfo::clear_groupquitbanned() {
  _impl_.groupquitbanned_ = false;
}
inline bool GroupBasicInfo::_internal_groupquitbanned() const {
  return _impl_.groupquitbanned_;
}
inline bool GroupBasicInfo::groupquitbanned() const {
  // @@protoc_insertion_point(field_get:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.groupQuitBanned)
  return _internal_groupquitbanned();
}
inline void GroupBasicInfo::_internal_set_groupquitbanned(bool value) {
  
  _impl_.groupquitbanned_ = value;
}
inline void GroupBasicInfo::set_groupquitbanned(bool value) {
  _internal_set_groupquitbanned(value);
  // @@protoc_insertion_point(field_set:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.groupQuitBanned)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace Message
}  // namespace Cloud
}  // namespace Im
}  // namespace AcFunDanmu

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_GroupBasicInfo_2eproto
