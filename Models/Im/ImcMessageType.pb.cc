// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ImcMessageType.proto

#include "ImcMessageType.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace AcFunDanmu {
namespace Im {
namespace Cloud {
namespace Message {
}  // namespace Message
}  // namespace Cloud
}  // namespace Im
}  // namespace AcFunDanmu
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_ImcMessageType_2eproto[1];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_ImcMessageType_2eproto = nullptr;
const uint32_t TableStruct_ImcMessageType_2eproto::offsets[1] = {};
static constexpr ::_pbi::MigrationSchema* schemas = nullptr;
static constexpr ::_pb::Message* const* file_default_instances = nullptr;

const char descriptor_table_protodef_ImcMessageType_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\024ImcMessageType.proto\022\033AcFunDanmu.Im.Cl"
  "oud.Message*\220\003\n\016ImcMessageType\022\010\n\004TEXT\020\000"
  "\022\t\n\005IMAGE\020\001\022\n\n\006CUSTOM\020\002\022\t\n\005AUDIO\020\003\022\t\n\005VI"
  "DEO\020\004\022\014\n\010EMOTICON\020\005\022\010\n\004FILE\020\006\022\n\n\006NOTICE\020"
  "\n\022\014\n\010RECALLED\020\013\022\r\n\tREFERENCE\020\014\022\021\n\rMERGE_"
  "FORWARD\020\r\022\017\n\013MULTI_MEDIA\020\016\022\016\n\nVOICE_CALL"
  "\020\017\022\020\n\014PLACE_HOLDER\020d\022\013\n\007REPLACE\020e\022\020\n\013DEL"
  "ETE_SYNC\020\306\001\022\027\n\022INVISIBLE_TYPE_MAX\020\307\001\022\020\n\013"
  "RICH_NOTICE\020\310\001\022\025\n\020GROUP_INVITATION\020\311\001\022\017\n"
  "\nRED_PACKET\020\313\001\022\022\n\rCS_EVALUATION\020\365\003\022\020\n\013CS"
  "_QUESTION\020\366\003\022\025\n\020CS_PICK_QUESTION\020\367\003\022\021\n\014C"
  "S_LIST_CARD\020\370\003b\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_ImcMessageType_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_ImcMessageType_2eproto = {
    false, false, 462, descriptor_table_protodef_ImcMessageType_2eproto,
    "ImcMessageType.proto",
    &descriptor_table_ImcMessageType_2eproto_once, nullptr, 0, 0,
    schemas, file_default_instances, TableStruct_ImcMessageType_2eproto::offsets,
    nullptr, file_level_enum_descriptors_ImcMessageType_2eproto,
    file_level_service_descriptors_ImcMessageType_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_ImcMessageType_2eproto_getter() {
  return &descriptor_table_ImcMessageType_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_ImcMessageType_2eproto(&descriptor_table_ImcMessageType_2eproto);
namespace AcFunDanmu {
namespace Im {
namespace Cloud {
namespace Message {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ImcMessageType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_ImcMessageType_2eproto);
  return file_level_enum_descriptors_ImcMessageType_2eproto[0];
}
bool ImcMessageType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 100:
    case 101:
    case 198:
    case 199:
    case 200:
    case 201:
    case 203:
    case 501:
    case 502:
    case 503:
    case 504:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace Message
}  // namespace Cloud
}  // namespace Im
}  // namespace AcFunDanmu
PROTOBUF_NAMESPACE_OPEN
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
