// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: InvitationOperator.proto

#include "InvitationOperator.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace AcFunDanmu {
namespace Im {
namespace Cloud {
namespace Message {
PROTOBUF_CONSTEXPR InvitationOperator::InvitationOperator(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.operator__)*/nullptr
  , /*decltype(_impl_.operatorrole_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct InvitationOperatorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InvitationOperatorDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~InvitationOperatorDefaultTypeInternal() {}
  union {
    InvitationOperator _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InvitationOperatorDefaultTypeInternal _InvitationOperator_default_instance_;
}  // namespace Message
}  // namespace Cloud
}  // namespace Im
}  // namespace AcFunDanmu
static ::_pb::Metadata file_level_metadata_InvitationOperator_2eproto[1];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_InvitationOperator_2eproto[1];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_InvitationOperator_2eproto = nullptr;

const uint32_t TableStruct_InvitationOperator_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud::Message::InvitationOperator, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud::Message::InvitationOperator, _impl_.operator__),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud::Message::InvitationOperator, _impl_.operatorrole_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::AcFunDanmu::Im::Cloud::Message::InvitationOperator)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::AcFunDanmu::Im::Cloud::Message::_InvitationOperator_default_instance_._instance,
};

const char descriptor_table_protodef_InvitationOperator_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\030InvitationOperator.proto\022\033AcFunDanmu.I"
  "m.Cloud.Message\032\nUser.proto\"\333\001\n\022Invitati"
  "onOperator\022+\n\010operator\030\001 \001(\0132\031.AcFunDanm"
  "u.Im.Basic.User\022R\n\014operatorRole\030\002 \001(\0162<."
  "AcFunDanmu.Im.Cloud.Message.InvitationOp"
  "erator.OperatorRole\"D\n\014OperatorRole\022\020\n\014U"
  "NKNOWN_ROLE\020\000\022\n\n\006COMMON\020\001\022\t\n\005ADMIN\020\002\022\013\n\007"
  "MANAGER\020\003b\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_InvitationOperator_2eproto_deps[1] = {
  &::descriptor_table_User_2eproto,
};
static ::_pbi::once_flag descriptor_table_InvitationOperator_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_InvitationOperator_2eproto = {
    false, false, 297, descriptor_table_protodef_InvitationOperator_2eproto,
    "InvitationOperator.proto",
    &descriptor_table_InvitationOperator_2eproto_once, descriptor_table_InvitationOperator_2eproto_deps, 1, 1,
    schemas, file_default_instances, TableStruct_InvitationOperator_2eproto::offsets,
    file_level_metadata_InvitationOperator_2eproto, file_level_enum_descriptors_InvitationOperator_2eproto,
    file_level_service_descriptors_InvitationOperator_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_InvitationOperator_2eproto_getter() {
  return &descriptor_table_InvitationOperator_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_InvitationOperator_2eproto(&descriptor_table_InvitationOperator_2eproto);
namespace AcFunDanmu {
namespace Im {
namespace Cloud {
namespace Message {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* InvitationOperator_OperatorRole_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_InvitationOperator_2eproto);
  return file_level_enum_descriptors_InvitationOperator_2eproto[0];
}
bool InvitationOperator_OperatorRole_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr InvitationOperator_OperatorRole InvitationOperator::UNKNOWN_ROLE;
constexpr InvitationOperator_OperatorRole InvitationOperator::COMMON;
constexpr InvitationOperator_OperatorRole InvitationOperator::ADMIN;
constexpr InvitationOperator_OperatorRole InvitationOperator::MANAGER;
constexpr InvitationOperator_OperatorRole InvitationOperator::OperatorRole_MIN;
constexpr InvitationOperator_OperatorRole InvitationOperator::OperatorRole_MAX;
constexpr int InvitationOperator::OperatorRole_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

// ===================================================================

class InvitationOperator::_Internal {
 public:
  static const ::AcFunDanmu::Im::Basic::User& operator_(const InvitationOperator* msg);
};

const ::AcFunDanmu::Im::Basic::User&
InvitationOperator::_Internal::operator_(const InvitationOperator* msg) {
  return *msg->_impl_.operator__;
}
void InvitationOperator::clear_operator_() {
  if (GetArenaForAllocation() == nullptr && _impl_.operator__ != nullptr) {
    delete _impl_.operator__;
  }
  _impl_.operator__ = nullptr;
}
InvitationOperator::InvitationOperator(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Cloud.Message.InvitationOperator)
}
InvitationOperator::InvitationOperator(const InvitationOperator& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  InvitationOperator* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.operator__){nullptr}
    , decltype(_impl_.operatorrole_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_operator_()) {
    _this->_impl_.operator__ = new ::AcFunDanmu::Im::Basic::User(*from._impl_.operator__);
  }
  _this->_impl_.operatorrole_ = from._impl_.operatorrole_;
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Cloud.Message.InvitationOperator)
}

inline void InvitationOperator::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.operator__){nullptr}
    , decltype(_impl_.operatorrole_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

InvitationOperator::~InvitationOperator() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Cloud.Message.InvitationOperator)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void InvitationOperator::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.operator__;
}

void InvitationOperator::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void InvitationOperator::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Cloud.Message.InvitationOperator)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.operator__ != nullptr) {
    delete _impl_.operator__;
  }
  _impl_.operator__ = nullptr;
  _impl_.operatorrole_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InvitationOperator::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .AcFunDanmu.Im.Basic.User operator = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_operator_(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .AcFunDanmu.Im.Cloud.Message.InvitationOperator.OperatorRole operatorRole = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_operatorrole(static_cast<::AcFunDanmu::Im::Cloud::Message::InvitationOperator_OperatorRole>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* InvitationOperator::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Cloud.Message.InvitationOperator)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .AcFunDanmu.Im.Basic.User operator = 1;
  if (this->_internal_has_operator_()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::operator_(this),
        _Internal::operator_(this).GetCachedSize(), target, stream);
  }

  // .AcFunDanmu.Im.Cloud.Message.InvitationOperator.OperatorRole operatorRole = 2;
  if (this->_internal_operatorrole() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_operatorrole(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Cloud.Message.InvitationOperator)
  return target;
}

size_t InvitationOperator::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Cloud.Message.InvitationOperator)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .AcFunDanmu.Im.Basic.User operator = 1;
  if (this->_internal_has_operator_()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.operator__);
  }

  // .AcFunDanmu.Im.Cloud.Message.InvitationOperator.OperatorRole operatorRole = 2;
  if (this->_internal_operatorrole() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_operatorrole());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData InvitationOperator::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    InvitationOperator::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*InvitationOperator::GetClassData() const { return &_class_data_; }


void InvitationOperator::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<InvitationOperator*>(&to_msg);
  auto& from = static_cast<const InvitationOperator&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Cloud.Message.InvitationOperator)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_operator_()) {
    _this->_internal_mutable_operator_()->::AcFunDanmu::Im::Basic::User::MergeFrom(
        from._internal_operator_());
  }
  if (from._internal_operatorrole() != 0) {
    _this->_internal_set_operatorrole(from._internal_operatorrole());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void InvitationOperator::CopyFrom(const InvitationOperator& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Cloud.Message.InvitationOperator)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InvitationOperator::IsInitialized() const {
  return true;
}

void InvitationOperator::InternalSwap(InvitationOperator* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(InvitationOperator, _impl_.operatorrole_)
      + sizeof(InvitationOperator::_impl_.operatorrole_)
      - PROTOBUF_FIELD_OFFSET(InvitationOperator, _impl_.operator__)>(
          reinterpret_cast<char*>(&_impl_.operator__),
          reinterpret_cast<char*>(&other->_impl_.operator__));
}

::PROTOBUF_NAMESPACE_ID::Metadata InvitationOperator::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_InvitationOperator_2eproto_getter, &descriptor_table_InvitationOperator_2eproto_once,
      file_level_metadata_InvitationOperator_2eproto[0]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace Message
}  // namespace Cloud
}  // namespace Im
}  // namespace AcFunDanmu
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Cloud::Message::InvitationOperator*
Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Cloud::Message::InvitationOperator >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Cloud::Message::InvitationOperator >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
