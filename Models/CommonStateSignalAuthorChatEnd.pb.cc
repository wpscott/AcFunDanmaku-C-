// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CommonStateSignalAuthorChatEnd.proto

#include "CommonStateSignalAuthorChatEnd.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace AcFunDanmu {
PROTOBUF_CONSTEXPR CommonStateSignalAuthorChatEnd::CommonStateSignalAuthorChatEnd(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.authorchatid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.endliveid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.endtype_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CommonStateSignalAuthorChatEndDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CommonStateSignalAuthorChatEndDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CommonStateSignalAuthorChatEndDefaultTypeInternal() {}
  union {
    CommonStateSignalAuthorChatEnd _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CommonStateSignalAuthorChatEndDefaultTypeInternal _CommonStateSignalAuthorChatEnd_default_instance_;
}  // namespace AcFunDanmu
static ::_pb::Metadata file_level_metadata_CommonStateSignalAuthorChatEnd_2eproto[1];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_CommonStateSignalAuthorChatEnd_2eproto[1];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_CommonStateSignalAuthorChatEnd_2eproto = nullptr;

const uint32_t TableStruct_CommonStateSignalAuthorChatEnd_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::CommonStateSignalAuthorChatEnd, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::CommonStateSignalAuthorChatEnd, _impl_.authorchatid_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::CommonStateSignalAuthorChatEnd, _impl_.endtype_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::CommonStateSignalAuthorChatEnd, _impl_.endliveid_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::AcFunDanmu::CommonStateSignalAuthorChatEnd)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::AcFunDanmu::_CommonStateSignalAuthorChatEnd_default_instance_._instance,
};

const char descriptor_table_protodef_CommonStateSignalAuthorChatEnd_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n$CommonStateSignalAuthorChatEnd.proto\022\n"
  "AcFunDanmu\"\344\002\n\036CommonStateSignalAuthorCh"
  "atEnd\022\024\n\014authorChatId\030\001 \001(\t\022C\n\007endType\030\002"
  " \001(\01622.AcFunDanmu.CommonStateSignalAutho"
  "rChatEnd.EndType\022\021\n\tendLiveId\030\003 \001(\t\"\323\001\n\007"
  "EndType\022\013\n\007UNKNOWN\020\000\022\025\n\021CANCEL_BY_INVITE"
  "R\020\001\022\022\n\016END_BY_INVITER\020\002\022\022\n\016END_BY_INVITE"
  "E\020\003\022\022\n\016INVITEE_REJECT\020\004\022\023\n\017INVITEE_TIMEO"
  "UT\020\005\022\035\n\031INVITEE_HEARTBEAT_TIMEOUT\020\006\022\035\n\031I"
  "NVITER_HEARTBEAT_TIMEOUT\020\007\022\025\n\021PEER_LIVE_"
  "STOPPED\020\010b\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_CommonStateSignalAuthorChatEnd_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_CommonStateSignalAuthorChatEnd_2eproto = {
    false, false, 417, descriptor_table_protodef_CommonStateSignalAuthorChatEnd_2eproto,
    "CommonStateSignalAuthorChatEnd.proto",
    &descriptor_table_CommonStateSignalAuthorChatEnd_2eproto_once, nullptr, 0, 1,
    schemas, file_default_instances, TableStruct_CommonStateSignalAuthorChatEnd_2eproto::offsets,
    file_level_metadata_CommonStateSignalAuthorChatEnd_2eproto, file_level_enum_descriptors_CommonStateSignalAuthorChatEnd_2eproto,
    file_level_service_descriptors_CommonStateSignalAuthorChatEnd_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_CommonStateSignalAuthorChatEnd_2eproto_getter() {
  return &descriptor_table_CommonStateSignalAuthorChatEnd_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_CommonStateSignalAuthorChatEnd_2eproto(&descriptor_table_CommonStateSignalAuthorChatEnd_2eproto);
namespace AcFunDanmu {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CommonStateSignalAuthorChatEnd_EndType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_CommonStateSignalAuthorChatEnd_2eproto);
  return file_level_enum_descriptors_CommonStateSignalAuthorChatEnd_2eproto[0];
}
bool CommonStateSignalAuthorChatEnd_EndType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr CommonStateSignalAuthorChatEnd_EndType CommonStateSignalAuthorChatEnd::UNKNOWN;
constexpr CommonStateSignalAuthorChatEnd_EndType CommonStateSignalAuthorChatEnd::CANCEL_BY_INVITER;
constexpr CommonStateSignalAuthorChatEnd_EndType CommonStateSignalAuthorChatEnd::END_BY_INVITER;
constexpr CommonStateSignalAuthorChatEnd_EndType CommonStateSignalAuthorChatEnd::END_BY_INVITEE;
constexpr CommonStateSignalAuthorChatEnd_EndType CommonStateSignalAuthorChatEnd::INVITEE_REJECT;
constexpr CommonStateSignalAuthorChatEnd_EndType CommonStateSignalAuthorChatEnd::INVITEE_TIMEOUT;
constexpr CommonStateSignalAuthorChatEnd_EndType CommonStateSignalAuthorChatEnd::INVITEE_HEARTBEAT_TIMEOUT;
constexpr CommonStateSignalAuthorChatEnd_EndType CommonStateSignalAuthorChatEnd::INVITER_HEARTBEAT_TIMEOUT;
constexpr CommonStateSignalAuthorChatEnd_EndType CommonStateSignalAuthorChatEnd::PEER_LIVE_STOPPED;
constexpr CommonStateSignalAuthorChatEnd_EndType CommonStateSignalAuthorChatEnd::EndType_MIN;
constexpr CommonStateSignalAuthorChatEnd_EndType CommonStateSignalAuthorChatEnd::EndType_MAX;
constexpr int CommonStateSignalAuthorChatEnd::EndType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

// ===================================================================

class CommonStateSignalAuthorChatEnd::_Internal {
 public:
};

CommonStateSignalAuthorChatEnd::CommonStateSignalAuthorChatEnd(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.CommonStateSignalAuthorChatEnd)
}
CommonStateSignalAuthorChatEnd::CommonStateSignalAuthorChatEnd(const CommonStateSignalAuthorChatEnd& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CommonStateSignalAuthorChatEnd* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.authorchatid_){}
    , decltype(_impl_.endliveid_){}
    , decltype(_impl_.endtype_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.authorchatid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.authorchatid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_authorchatid().empty()) {
    _this->_impl_.authorchatid_.Set(from._internal_authorchatid(), 
      _this->GetArenaForAllocation());
  }
  _impl_.endliveid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.endliveid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_endliveid().empty()) {
    _this->_impl_.endliveid_.Set(from._internal_endliveid(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.endtype_ = from._impl_.endtype_;
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.CommonStateSignalAuthorChatEnd)
}

inline void CommonStateSignalAuthorChatEnd::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.authorchatid_){}
    , decltype(_impl_.endliveid_){}
    , decltype(_impl_.endtype_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.authorchatid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.authorchatid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.endliveid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.endliveid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CommonStateSignalAuthorChatEnd::~CommonStateSignalAuthorChatEnd() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.CommonStateSignalAuthorChatEnd)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CommonStateSignalAuthorChatEnd::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.authorchatid_.Destroy();
  _impl_.endliveid_.Destroy();
}

void CommonStateSignalAuthorChatEnd::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CommonStateSignalAuthorChatEnd::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.CommonStateSignalAuthorChatEnd)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.authorchatid_.ClearToEmpty();
  _impl_.endliveid_.ClearToEmpty();
  _impl_.endtype_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CommonStateSignalAuthorChatEnd::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string authorChatId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_authorchatid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "AcFunDanmu.CommonStateSignalAuthorChatEnd.authorChatId"));
        } else
          goto handle_unusual;
        continue;
      // .AcFunDanmu.CommonStateSignalAuthorChatEnd.EndType endType = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_endtype(static_cast<::AcFunDanmu::CommonStateSignalAuthorChatEnd_EndType>(val));
        } else
          goto handle_unusual;
        continue;
      // string endLiveId = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_endliveid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "AcFunDanmu.CommonStateSignalAuthorChatEnd.endLiveId"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CommonStateSignalAuthorChatEnd::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.CommonStateSignalAuthorChatEnd)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string authorChatId = 1;
  if (!this->_internal_authorchatid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_authorchatid().data(), static_cast<int>(this->_internal_authorchatid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.CommonStateSignalAuthorChatEnd.authorChatId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_authorchatid(), target);
  }

  // .AcFunDanmu.CommonStateSignalAuthorChatEnd.EndType endType = 2;
  if (this->_internal_endtype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_endtype(), target);
  }

  // string endLiveId = 3;
  if (!this->_internal_endliveid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_endliveid().data(), static_cast<int>(this->_internal_endliveid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.CommonStateSignalAuthorChatEnd.endLiveId");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_endliveid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.CommonStateSignalAuthorChatEnd)
  return target;
}

size_t CommonStateSignalAuthorChatEnd::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.CommonStateSignalAuthorChatEnd)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string authorChatId = 1;
  if (!this->_internal_authorchatid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_authorchatid());
  }

  // string endLiveId = 3;
  if (!this->_internal_endliveid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_endliveid());
  }

  // .AcFunDanmu.CommonStateSignalAuthorChatEnd.EndType endType = 2;
  if (this->_internal_endtype() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_endtype());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CommonStateSignalAuthorChatEnd::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CommonStateSignalAuthorChatEnd::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CommonStateSignalAuthorChatEnd::GetClassData() const { return &_class_data_; }


void CommonStateSignalAuthorChatEnd::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CommonStateSignalAuthorChatEnd*>(&to_msg);
  auto& from = static_cast<const CommonStateSignalAuthorChatEnd&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.CommonStateSignalAuthorChatEnd)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_authorchatid().empty()) {
    _this->_internal_set_authorchatid(from._internal_authorchatid());
  }
  if (!from._internal_endliveid().empty()) {
    _this->_internal_set_endliveid(from._internal_endliveid());
  }
  if (from._internal_endtype() != 0) {
    _this->_internal_set_endtype(from._internal_endtype());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CommonStateSignalAuthorChatEnd::CopyFrom(const CommonStateSignalAuthorChatEnd& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.CommonStateSignalAuthorChatEnd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CommonStateSignalAuthorChatEnd::IsInitialized() const {
  return true;
}

void CommonStateSignalAuthorChatEnd::InternalSwap(CommonStateSignalAuthorChatEnd* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.authorchatid_, lhs_arena,
      &other->_impl_.authorchatid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.endliveid_, lhs_arena,
      &other->_impl_.endliveid_, rhs_arena
  );
  swap(_impl_.endtype_, other->_impl_.endtype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CommonStateSignalAuthorChatEnd::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_CommonStateSignalAuthorChatEnd_2eproto_getter, &descriptor_table_CommonStateSignalAuthorChatEnd_2eproto_once,
      file_level_metadata_CommonStateSignalAuthorChatEnd_2eproto[0]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace AcFunDanmu
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::AcFunDanmu::CommonStateSignalAuthorChatEnd*
Arena::CreateMaybeMessage< ::AcFunDanmu::CommonStateSignalAuthorChatEnd >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::CommonStateSignalAuthorChatEnd >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
