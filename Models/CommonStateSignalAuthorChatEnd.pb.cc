// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CommonStateSignalAuthorChatEnd.proto

#include "CommonStateSignalAuthorChatEnd.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace AcFunDanmu {
constexpr CommonStateSignalAuthorChatEnd::CommonStateSignalAuthorChatEnd(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : authorchatid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , endliveid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , endtype_(0)
{}
struct CommonStateSignalAuthorChatEndDefaultTypeInternal {
  constexpr CommonStateSignalAuthorChatEndDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CommonStateSignalAuthorChatEndDefaultTypeInternal() {}
  union {
    CommonStateSignalAuthorChatEnd _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CommonStateSignalAuthorChatEndDefaultTypeInternal _CommonStateSignalAuthorChatEnd_default_instance_;
}  // namespace AcFunDanmu
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_CommonStateSignalAuthorChatEnd_2eproto[1];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_CommonStateSignalAuthorChatEnd_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_CommonStateSignalAuthorChatEnd_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_CommonStateSignalAuthorChatEnd_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::CommonStateSignalAuthorChatEnd, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::CommonStateSignalAuthorChatEnd, authorchatid_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::CommonStateSignalAuthorChatEnd, endtype_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::CommonStateSignalAuthorChatEnd, endliveid_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::AcFunDanmu::CommonStateSignalAuthorChatEnd)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::_CommonStateSignalAuthorChatEnd_default_instance_),
};

const char descriptor_table_protodef_CommonStateSignalAuthorChatEnd_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n$CommonStateSignalAuthorChatEnd.proto\022\n"
  "AcFunDanmu\"\344\002\n\036CommonStateSignalAuthorCh"
  "atEnd\022\024\n\014authorChatId\030\001 \001(\t\022C\n\007endType\030\002"
  " \001(\01622.AcFunDanmu.CommonStateSignalAutho"
  "rChatEnd.EndType\022\021\n\tendLiveId\030\003 \001(\t\"\323\001\n\007"
  "EndType\022\013\n\007UNKNOWN\020\000\022\025\n\021CANCEL_BY_INVITE"
  "R\020\001\022\022\n\016END_BY_INVITER\020\002\022\022\n\016END_BY_INVITE"
  "E\020\003\022\022\n\016INVITEE_REJECT\020\004\022\023\n\017INVITEE_TIMEO"
  "UT\020\005\022\035\n\031INVITEE_HEARTBEAT_TIMEOUT\020\006\022\035\n\031I"
  "NVITER_HEARTBEAT_TIMEOUT\020\007\022\025\n\021PEER_LIVE_"
  "STOPPED\020\010b\006proto3"
  ;
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_CommonStateSignalAuthorChatEnd_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_CommonStateSignalAuthorChatEnd_2eproto = {
  false, false, 417, descriptor_table_protodef_CommonStateSignalAuthorChatEnd_2eproto, "CommonStateSignalAuthorChatEnd.proto", 
  &descriptor_table_CommonStateSignalAuthorChatEnd_2eproto_once, nullptr, 0, 1,
  schemas, file_default_instances, TableStruct_CommonStateSignalAuthorChatEnd_2eproto::offsets,
  file_level_metadata_CommonStateSignalAuthorChatEnd_2eproto, file_level_enum_descriptors_CommonStateSignalAuthorChatEnd_2eproto, file_level_service_descriptors_CommonStateSignalAuthorChatEnd_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_CommonStateSignalAuthorChatEnd_2eproto_getter() {
  return &descriptor_table_CommonStateSignalAuthorChatEnd_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_CommonStateSignalAuthorChatEnd_2eproto(&descriptor_table_CommonStateSignalAuthorChatEnd_2eproto);
namespace AcFunDanmu {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CommonStateSignalAuthorChatEnd_EndType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_CommonStateSignalAuthorChatEnd_2eproto);
  return file_level_enum_descriptors_CommonStateSignalAuthorChatEnd_2eproto[0];
}
bool CommonStateSignalAuthorChatEnd_EndType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr CommonStateSignalAuthorChatEnd_EndType CommonStateSignalAuthorChatEnd::UNKNOWN;
constexpr CommonStateSignalAuthorChatEnd_EndType CommonStateSignalAuthorChatEnd::CANCEL_BY_INVITER;
constexpr CommonStateSignalAuthorChatEnd_EndType CommonStateSignalAuthorChatEnd::END_BY_INVITER;
constexpr CommonStateSignalAuthorChatEnd_EndType CommonStateSignalAuthorChatEnd::END_BY_INVITEE;
constexpr CommonStateSignalAuthorChatEnd_EndType CommonStateSignalAuthorChatEnd::INVITEE_REJECT;
constexpr CommonStateSignalAuthorChatEnd_EndType CommonStateSignalAuthorChatEnd::INVITEE_TIMEOUT;
constexpr CommonStateSignalAuthorChatEnd_EndType CommonStateSignalAuthorChatEnd::INVITEE_HEARTBEAT_TIMEOUT;
constexpr CommonStateSignalAuthorChatEnd_EndType CommonStateSignalAuthorChatEnd::INVITER_HEARTBEAT_TIMEOUT;
constexpr CommonStateSignalAuthorChatEnd_EndType CommonStateSignalAuthorChatEnd::PEER_LIVE_STOPPED;
constexpr CommonStateSignalAuthorChatEnd_EndType CommonStateSignalAuthorChatEnd::EndType_MIN;
constexpr CommonStateSignalAuthorChatEnd_EndType CommonStateSignalAuthorChatEnd::EndType_MAX;
constexpr int CommonStateSignalAuthorChatEnd::EndType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)

// ===================================================================

class CommonStateSignalAuthorChatEnd::_Internal {
 public:
};

CommonStateSignalAuthorChatEnd::CommonStateSignalAuthorChatEnd(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.CommonStateSignalAuthorChatEnd)
}
CommonStateSignalAuthorChatEnd::CommonStateSignalAuthorChatEnd(const CommonStateSignalAuthorChatEnd& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  authorchatid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_authorchatid().empty()) {
    authorchatid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_authorchatid(), 
      GetArenaForAllocation());
  }
  endliveid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_endliveid().empty()) {
    endliveid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_endliveid(), 
      GetArenaForAllocation());
  }
  endtype_ = from.endtype_;
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.CommonStateSignalAuthorChatEnd)
}

void CommonStateSignalAuthorChatEnd::SharedCtor() {
authorchatid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
endliveid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
endtype_ = 0;
}

CommonStateSignalAuthorChatEnd::~CommonStateSignalAuthorChatEnd() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.CommonStateSignalAuthorChatEnd)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CommonStateSignalAuthorChatEnd::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  authorchatid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  endliveid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CommonStateSignalAuthorChatEnd::ArenaDtor(void* object) {
  CommonStateSignalAuthorChatEnd* _this = reinterpret_cast< CommonStateSignalAuthorChatEnd* >(object);
  (void)_this;
}
void CommonStateSignalAuthorChatEnd::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CommonStateSignalAuthorChatEnd::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CommonStateSignalAuthorChatEnd::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.CommonStateSignalAuthorChatEnd)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  authorchatid_.ClearToEmpty();
  endliveid_.ClearToEmpty();
  endtype_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CommonStateSignalAuthorChatEnd::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string authorChatId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_authorchatid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.CommonStateSignalAuthorChatEnd.authorChatId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .AcFunDanmu.CommonStateSignalAuthorChatEnd.EndType endType = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_endtype(static_cast<::AcFunDanmu::CommonStateSignalAuthorChatEnd_EndType>(val));
        } else goto handle_unusual;
        continue;
      // string endLiveId = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_endliveid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.CommonStateSignalAuthorChatEnd.endLiveId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CommonStateSignalAuthorChatEnd::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.CommonStateSignalAuthorChatEnd)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string authorChatId = 1;
  if (!this->authorchatid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_authorchatid().data(), static_cast<int>(this->_internal_authorchatid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.CommonStateSignalAuthorChatEnd.authorChatId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_authorchatid(), target);
  }

  // .AcFunDanmu.CommonStateSignalAuthorChatEnd.EndType endType = 2;
  if (this->endtype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_endtype(), target);
  }

  // string endLiveId = 3;
  if (!this->endliveid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_endliveid().data(), static_cast<int>(this->_internal_endliveid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.CommonStateSignalAuthorChatEnd.endLiveId");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_endliveid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.CommonStateSignalAuthorChatEnd)
  return target;
}

size_t CommonStateSignalAuthorChatEnd::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.CommonStateSignalAuthorChatEnd)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string authorChatId = 1;
  if (!this->authorchatid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_authorchatid());
  }

  // string endLiveId = 3;
  if (!this->endliveid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_endliveid());
  }

  // .AcFunDanmu.CommonStateSignalAuthorChatEnd.EndType endType = 2;
  if (this->endtype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_endtype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CommonStateSignalAuthorChatEnd::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.CommonStateSignalAuthorChatEnd)
  GOOGLE_DCHECK_NE(&from, this);
  const CommonStateSignalAuthorChatEnd* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CommonStateSignalAuthorChatEnd>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.CommonStateSignalAuthorChatEnd)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.CommonStateSignalAuthorChatEnd)
    MergeFrom(*source);
  }
}

void CommonStateSignalAuthorChatEnd::MergeFrom(const CommonStateSignalAuthorChatEnd& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.CommonStateSignalAuthorChatEnd)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from.authorchatid().empty()) {
    _internal_set_authorchatid(from._internal_authorchatid());
  }
  if (!from.endliveid().empty()) {
    _internal_set_endliveid(from._internal_endliveid());
  }
  if (from.endtype() != 0) {
    _internal_set_endtype(from._internal_endtype());
  }
}

void CommonStateSignalAuthorChatEnd::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.CommonStateSignalAuthorChatEnd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CommonStateSignalAuthorChatEnd::CopyFrom(const CommonStateSignalAuthorChatEnd& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.CommonStateSignalAuthorChatEnd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CommonStateSignalAuthorChatEnd::IsInitialized() const {
  return true;
}

void CommonStateSignalAuthorChatEnd::InternalSwap(CommonStateSignalAuthorChatEnd* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &authorchatid_, GetArenaForAllocation(),
      &other->authorchatid_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &endliveid_, GetArenaForAllocation(),
      &other->endliveid_, other->GetArenaForAllocation()
  );
  swap(endtype_, other->endtype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CommonStateSignalAuthorChatEnd::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_CommonStateSignalAuthorChatEnd_2eproto_getter, &descriptor_table_CommonStateSignalAuthorChatEnd_2eproto_once,
      file_level_metadata_CommonStateSignalAuthorChatEnd_2eproto[0]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace AcFunDanmu
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::AcFunDanmu::CommonStateSignalAuthorChatEnd* Arena::CreateMaybeMessage< ::AcFunDanmu::CommonStateSignalAuthorChatEnd >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::CommonStateSignalAuthorChatEnd >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
