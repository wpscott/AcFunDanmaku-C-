// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: WidgetItem.proto

#include "WidgetItem.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace AcFunDanmu {
PROTOBUF_CONSTEXPR WidgetItem::WidgetItem(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.l_)*/{}
  , /*decltype(_impl_.m_)*/{}
  , /*decltype(_impl_.b_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.g_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.f_)*/nullptr
  , /*decltype(_impl_.j_)*/nullptr
  , /*decltype(_impl_.a_)*/int64_t{0}
  , /*decltype(_impl_.d_)*/int64_t{0}
  , /*decltype(_impl_.e_)*/int64_t{0}
  , /*decltype(_impl_.c_)*/0
  , /*decltype(_impl_.h_)*/0
  , /*decltype(_impl_.i_)*/0
  , /*decltype(_impl_.k_)*/0
  , /*decltype(_impl_.n_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct WidgetItemDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WidgetItemDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~WidgetItemDefaultTypeInternal() {}
  union {
    WidgetItem _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WidgetItemDefaultTypeInternal _WidgetItem_default_instance_;
}  // namespace AcFunDanmu
static ::_pb::Metadata file_level_metadata_WidgetItem_2eproto[1];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_WidgetItem_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_WidgetItem_2eproto = nullptr;

const uint32_t TableStruct_WidgetItem_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::WidgetItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::WidgetItem, _impl_.a_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::WidgetItem, _impl_.b_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::WidgetItem, _impl_.c_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::WidgetItem, _impl_.d_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::WidgetItem, _impl_.e_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::WidgetItem, _impl_.f_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::WidgetItem, _impl_.g_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::WidgetItem, _impl_.h_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::WidgetItem, _impl_.i_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::WidgetItem, _impl_.j_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::WidgetItem, _impl_.k_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::WidgetItem, _impl_.l_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::WidgetItem, _impl_.m_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::WidgetItem, _impl_.n_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::AcFunDanmu::WidgetItem)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::AcFunDanmu::_WidgetItem_default_instance_._instance,
};

const char descriptor_table_protodef_WidgetItem_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\020WidgetItem.proto\022\nAcFunDanmu\032\030WidgetDi"
  "splayStyle.proto\032\027WidgetPictureInfo.prot"
  "o\032\027ZtLiveWidgetProto.proto\"\305\002\n\nWidgetIte"
  "m\022\t\n\001a\030\001 \001(\003\022\t\n\001b\030\002 \001(\t\022\t\n\001c\030\003 \001(\005\022\t\n\001d\030"
  "\004 \001(\003\022\t\n\001e\030\005 \001(\003\022(\n\001f\030\006 \001(\0132\035.AcFunDanmu"
  ".WidgetPictureInfo\022\t\n\001g\030\007 \001(\t\022)\n\001h\030\010 \001(\016"
  "2\036.AcFunDanmu.ZtLiveWidgetProtoA\022)\n\001i\030\t "
  "\001(\0162\036.AcFunDanmu.ZtLiveWidgetProtoB\022)\n\001j"
  "\030\n \001(\0132\036.AcFunDanmu.WidgetDisplayStyle\022)"
  "\n\001k\030\013 \001(\0162\036.AcFunDanmu.ZtLiveWidgetProto"
  "C\022\t\n\001l\030\014 \003(\t\022\t\n\001m\030\r \003(\t\022\t\n\001n\030\016 \001(\003b\006prot"
  "o3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_WidgetItem_2eproto_deps[3] = {
  &::descriptor_table_WidgetDisplayStyle_2eproto,
  &::descriptor_table_WidgetPictureInfo_2eproto,
  &::descriptor_table_ZtLiveWidgetProto_2eproto,
};
static ::_pbi::once_flag descriptor_table_WidgetItem_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_WidgetItem_2eproto = {
    false, false, 442, descriptor_table_protodef_WidgetItem_2eproto,
    "WidgetItem.proto",
    &descriptor_table_WidgetItem_2eproto_once, descriptor_table_WidgetItem_2eproto_deps, 3, 1,
    schemas, file_default_instances, TableStruct_WidgetItem_2eproto::offsets,
    file_level_metadata_WidgetItem_2eproto, file_level_enum_descriptors_WidgetItem_2eproto,
    file_level_service_descriptors_WidgetItem_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_WidgetItem_2eproto_getter() {
  return &descriptor_table_WidgetItem_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_WidgetItem_2eproto(&descriptor_table_WidgetItem_2eproto);
namespace AcFunDanmu {

// ===================================================================

class WidgetItem::_Internal {
 public:
  static const ::AcFunDanmu::WidgetPictureInfo& f(const WidgetItem* msg);
  static const ::AcFunDanmu::WidgetDisplayStyle& j(const WidgetItem* msg);
};

const ::AcFunDanmu::WidgetPictureInfo&
WidgetItem::_Internal::f(const WidgetItem* msg) {
  return *msg->_impl_.f_;
}
const ::AcFunDanmu::WidgetDisplayStyle&
WidgetItem::_Internal::j(const WidgetItem* msg) {
  return *msg->_impl_.j_;
}
void WidgetItem::clear_f() {
  if (GetArenaForAllocation() == nullptr && _impl_.f_ != nullptr) {
    delete _impl_.f_;
  }
  _impl_.f_ = nullptr;
}
void WidgetItem::clear_j() {
  if (GetArenaForAllocation() == nullptr && _impl_.j_ != nullptr) {
    delete _impl_.j_;
  }
  _impl_.j_ = nullptr;
}
WidgetItem::WidgetItem(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.WidgetItem)
}
WidgetItem::WidgetItem(const WidgetItem& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  WidgetItem* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.l_){from._impl_.l_}
    , decltype(_impl_.m_){from._impl_.m_}
    , decltype(_impl_.b_){}
    , decltype(_impl_.g_){}
    , decltype(_impl_.f_){nullptr}
    , decltype(_impl_.j_){nullptr}
    , decltype(_impl_.a_){}
    , decltype(_impl_.d_){}
    , decltype(_impl_.e_){}
    , decltype(_impl_.c_){}
    , decltype(_impl_.h_){}
    , decltype(_impl_.i_){}
    , decltype(_impl_.k_){}
    , decltype(_impl_.n_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.b_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.b_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_b().empty()) {
    _this->_impl_.b_.Set(from._internal_b(), 
      _this->GetArenaForAllocation());
  }
  _impl_.g_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.g_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_g().empty()) {
    _this->_impl_.g_.Set(from._internal_g(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_f()) {
    _this->_impl_.f_ = new ::AcFunDanmu::WidgetPictureInfo(*from._impl_.f_);
  }
  if (from._internal_has_j()) {
    _this->_impl_.j_ = new ::AcFunDanmu::WidgetDisplayStyle(*from._impl_.j_);
  }
  ::memcpy(&_impl_.a_, &from._impl_.a_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.n_) -
    reinterpret_cast<char*>(&_impl_.a_)) + sizeof(_impl_.n_));
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.WidgetItem)
}

inline void WidgetItem::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.l_){arena}
    , decltype(_impl_.m_){arena}
    , decltype(_impl_.b_){}
    , decltype(_impl_.g_){}
    , decltype(_impl_.f_){nullptr}
    , decltype(_impl_.j_){nullptr}
    , decltype(_impl_.a_){int64_t{0}}
    , decltype(_impl_.d_){int64_t{0}}
    , decltype(_impl_.e_){int64_t{0}}
    , decltype(_impl_.c_){0}
    , decltype(_impl_.h_){0}
    , decltype(_impl_.i_){0}
    , decltype(_impl_.k_){0}
    , decltype(_impl_.n_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.b_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.b_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.g_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.g_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

WidgetItem::~WidgetItem() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.WidgetItem)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void WidgetItem::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.l_.~RepeatedPtrField();
  _impl_.m_.~RepeatedPtrField();
  _impl_.b_.Destroy();
  _impl_.g_.Destroy();
  if (this != internal_default_instance()) delete _impl_.f_;
  if (this != internal_default_instance()) delete _impl_.j_;
}

void WidgetItem::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void WidgetItem::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.WidgetItem)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.l_.Clear();
  _impl_.m_.Clear();
  _impl_.b_.ClearToEmpty();
  _impl_.g_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.f_ != nullptr) {
    delete _impl_.f_;
  }
  _impl_.f_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.j_ != nullptr) {
    delete _impl_.j_;
  }
  _impl_.j_ = nullptr;
  ::memset(&_impl_.a_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.n_) -
      reinterpret_cast<char*>(&_impl_.a_)) + sizeof(_impl_.n_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WidgetItem::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 a = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.a_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string b = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_b();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "AcFunDanmu.WidgetItem.b"));
        } else
          goto handle_unusual;
        continue;
      // int32 c = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.c_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 d = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.d_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 e = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.e_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .AcFunDanmu.WidgetPictureInfo f = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_f(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string g = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          auto str = _internal_mutable_g();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "AcFunDanmu.WidgetItem.g"));
        } else
          goto handle_unusual;
        continue;
      // .AcFunDanmu.ZtLiveWidgetProtoA h = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_h(static_cast<::AcFunDanmu::ZtLiveWidgetProtoA>(val));
        } else
          goto handle_unusual;
        continue;
      // .AcFunDanmu.ZtLiveWidgetProtoB i = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_i(static_cast<::AcFunDanmu::ZtLiveWidgetProtoB>(val));
        } else
          goto handle_unusual;
        continue;
      // .AcFunDanmu.WidgetDisplayStyle j = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_j(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .AcFunDanmu.ZtLiveWidgetProtoC k = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 88)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_k(static_cast<::AcFunDanmu::ZtLiveWidgetProtoC>(val));
        } else
          goto handle_unusual;
        continue;
      // repeated string l = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 98)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_l();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "AcFunDanmu.WidgetItem.l"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<98>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated string m = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 106)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_m();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "AcFunDanmu.WidgetItem.m"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<106>(ptr));
        } else
          goto handle_unusual;
        continue;
      // int64 n = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 112)) {
          _impl_.n_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* WidgetItem::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.WidgetItem)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 a = 1;
  if (this->_internal_a() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_a(), target);
  }

  // string b = 2;
  if (!this->_internal_b().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_b().data(), static_cast<int>(this->_internal_b().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.WidgetItem.b");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_b(), target);
  }

  // int32 c = 3;
  if (this->_internal_c() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_c(), target);
  }

  // int64 d = 4;
  if (this->_internal_d() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(4, this->_internal_d(), target);
  }

  // int64 e = 5;
  if (this->_internal_e() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(5, this->_internal_e(), target);
  }

  // .AcFunDanmu.WidgetPictureInfo f = 6;
  if (this->_internal_has_f()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::f(this),
        _Internal::f(this).GetCachedSize(), target, stream);
  }

  // string g = 7;
  if (!this->_internal_g().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_g().data(), static_cast<int>(this->_internal_g().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.WidgetItem.g");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_g(), target);
  }

  // .AcFunDanmu.ZtLiveWidgetProtoA h = 8;
  if (this->_internal_h() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      8, this->_internal_h(), target);
  }

  // .AcFunDanmu.ZtLiveWidgetProtoB i = 9;
  if (this->_internal_i() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      9, this->_internal_i(), target);
  }

  // .AcFunDanmu.WidgetDisplayStyle j = 10;
  if (this->_internal_has_j()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(10, _Internal::j(this),
        _Internal::j(this).GetCachedSize(), target, stream);
  }

  // .AcFunDanmu.ZtLiveWidgetProtoC k = 11;
  if (this->_internal_k() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      11, this->_internal_k(), target);
  }

  // repeated string l = 12;
  for (int i = 0, n = this->_internal_l_size(); i < n; i++) {
    const auto& s = this->_internal_l(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.WidgetItem.l");
    target = stream->WriteString(12, s, target);
  }

  // repeated string m = 13;
  for (int i = 0, n = this->_internal_m_size(); i < n; i++) {
    const auto& s = this->_internal_m(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.WidgetItem.m");
    target = stream->WriteString(13, s, target);
  }

  // int64 n = 14;
  if (this->_internal_n() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(14, this->_internal_n(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.WidgetItem)
  return target;
}

size_t WidgetItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.WidgetItem)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string l = 12;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.l_.size());
  for (int i = 0, n = _impl_.l_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.l_.Get(i));
  }

  // repeated string m = 13;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.m_.size());
  for (int i = 0, n = _impl_.m_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.m_.Get(i));
  }

  // string b = 2;
  if (!this->_internal_b().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_b());
  }

  // string g = 7;
  if (!this->_internal_g().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_g());
  }

  // .AcFunDanmu.WidgetPictureInfo f = 6;
  if (this->_internal_has_f()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.f_);
  }

  // .AcFunDanmu.WidgetDisplayStyle j = 10;
  if (this->_internal_has_j()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.j_);
  }

  // int64 a = 1;
  if (this->_internal_a() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_a());
  }

  // int64 d = 4;
  if (this->_internal_d() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_d());
  }

  // int64 e = 5;
  if (this->_internal_e() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_e());
  }

  // int32 c = 3;
  if (this->_internal_c() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_c());
  }

  // .AcFunDanmu.ZtLiveWidgetProtoA h = 8;
  if (this->_internal_h() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_h());
  }

  // .AcFunDanmu.ZtLiveWidgetProtoB i = 9;
  if (this->_internal_i() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_i());
  }

  // .AcFunDanmu.ZtLiveWidgetProtoC k = 11;
  if (this->_internal_k() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_k());
  }

  // int64 n = 14;
  if (this->_internal_n() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_n());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData WidgetItem::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    WidgetItem::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*WidgetItem::GetClassData() const { return &_class_data_; }


void WidgetItem::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<WidgetItem*>(&to_msg);
  auto& from = static_cast<const WidgetItem&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.WidgetItem)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.l_.MergeFrom(from._impl_.l_);
  _this->_impl_.m_.MergeFrom(from._impl_.m_);
  if (!from._internal_b().empty()) {
    _this->_internal_set_b(from._internal_b());
  }
  if (!from._internal_g().empty()) {
    _this->_internal_set_g(from._internal_g());
  }
  if (from._internal_has_f()) {
    _this->_internal_mutable_f()->::AcFunDanmu::WidgetPictureInfo::MergeFrom(
        from._internal_f());
  }
  if (from._internal_has_j()) {
    _this->_internal_mutable_j()->::AcFunDanmu::WidgetDisplayStyle::MergeFrom(
        from._internal_j());
  }
  if (from._internal_a() != 0) {
    _this->_internal_set_a(from._internal_a());
  }
  if (from._internal_d() != 0) {
    _this->_internal_set_d(from._internal_d());
  }
  if (from._internal_e() != 0) {
    _this->_internal_set_e(from._internal_e());
  }
  if (from._internal_c() != 0) {
    _this->_internal_set_c(from._internal_c());
  }
  if (from._internal_h() != 0) {
    _this->_internal_set_h(from._internal_h());
  }
  if (from._internal_i() != 0) {
    _this->_internal_set_i(from._internal_i());
  }
  if (from._internal_k() != 0) {
    _this->_internal_set_k(from._internal_k());
  }
  if (from._internal_n() != 0) {
    _this->_internal_set_n(from._internal_n());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void WidgetItem::CopyFrom(const WidgetItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.WidgetItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WidgetItem::IsInitialized() const {
  return true;
}

void WidgetItem::InternalSwap(WidgetItem* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.l_.InternalSwap(&other->_impl_.l_);
  _impl_.m_.InternalSwap(&other->_impl_.m_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.b_, lhs_arena,
      &other->_impl_.b_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.g_, lhs_arena,
      &other->_impl_.g_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(WidgetItem, _impl_.n_)
      + sizeof(WidgetItem::_impl_.n_)
      - PROTOBUF_FIELD_OFFSET(WidgetItem, _impl_.f_)>(
          reinterpret_cast<char*>(&_impl_.f_),
          reinterpret_cast<char*>(&other->_impl_.f_));
}

::PROTOBUF_NAMESPACE_ID::Metadata WidgetItem::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_WidgetItem_2eproto_getter, &descriptor_table_WidgetItem_2eproto_once,
      file_level_metadata_WidgetItem_2eproto[0]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace AcFunDanmu
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::AcFunDanmu::WidgetItem*
Arena::CreateMaybeMessage< ::AcFunDanmu::WidgetItem >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::WidgetItem >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
