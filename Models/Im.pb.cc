// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Im.proto

#include "Im.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_Im_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Basic_AccessPoint_Im_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Im_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Basic_AccessPointsConfig_Im_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Im_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Basic_AppInfo_Im_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Im_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Basic_DeviceInfo_Im_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Im_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Basic_EnvInfo_Im_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Im_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Basic_I18nCopyWriting_Im_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Im_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Basic_LocaleMessage_Im_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Im_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Basic_LocaleMessage_ErrorMessageEntry_DoNotUse_Im_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Im_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Basic_PushServiceToken_Im_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Im_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_Basic_RequestBasicInfo_Im_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Im_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Basic_SdkOption_Im_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Im_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Basic_SettingInfo_Im_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Im_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Basic_SyncCookie_Im_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Im_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Basic_TokenInfo_Im_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Im_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Basic_User_Im_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Im_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Basic_UserInstance_Im_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Im_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Cloud_Channel_ChannelBasicInfo_Im_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Im_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Cloud_Channel_UserActionInfo_Im_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Im_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Cloud_Config_ClientConfig_Im_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Im_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Cloud_Config_NetworkQualityDetectionConfig_Im_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Im_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Cloud_Data_Update_KsImDataUpdatePushPayload_Im_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Im_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Cloud_Message_Emoticon_Code_Im_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Im_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Cloud_Message_GroupBasicInfo_Im_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Im_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_Cloud_Message_GroupInfo_Im_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Im_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Cloud_Message_GroupMember_Im_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Im_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Cloud_Message_GroupMemberBriefInfo_Im_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Im_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Cloud_Message_GroupSettingDesc_Im_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Im_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Cloud_Message_GroupSettingJoinNeedPermission_Im_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Im_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Cloud_Message_GroupSettingRename_Im_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Im_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Cloud_Message_ImcNoticeMessage_Im_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Im_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Cloud_Message_NoticePlaceholderMeta_Im_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Im_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Cloud_Message_PicUrl_Im_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Im_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Cloud_Message_Reference_ReferenceMessage_Im_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Im_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Cloud_Message_SetUserAntiDisturbing_Im_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Im_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Cloud_Message_SetUserNickname_Im_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Im_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_Cloud_Message_UserGroupInfo_Im_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Im_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Cloud_Profile_UserOnlineStatus_Im_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Im_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ImMessage_Attachment_Im_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Im_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ImMessage_AudioAttachment_Im_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Im_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_ImMessage_ChatSession_Im_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Im_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ImMessage_ChatTarget_Im_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Im_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ImMessage_ImageAttachment_Im_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Im_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ImMessage_Message_Im_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Im_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ImMessage_MessageReceiptInfo_Im_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Im_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ImMessage_MessageReceiptStatus_Im_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Im_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ImMessage_ReadSeqInfo_Im_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Im_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ImMessage_RemindBody_Im_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Im_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ImMessage_Reminder_Im_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Im_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ImMessage_RichTextNoticeMessage_Im_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Im_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ImMessage_RichTextNoticeMessage_RichTextItem_Im_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Im_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ImMessage_SendMessageResponse_Im_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Im_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ImMessage_SessionRaw_RawEntry_DoNotUse_Im_2eproto;
namespace AcFunDanmu {
namespace Im {
class Basic_PacketHeaderDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Basic_PacketHeader> _instance;
} _Basic_PacketHeader_default_instance_;
class Basic_UserDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Basic_User> _instance;
} _Basic_User_default_instance_;
class Basic_UserInstanceDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Basic_UserInstance> _instance;
} _Basic_UserInstance_default_instance_;
class Basic_UpstreamPayloadDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Basic_UpstreamPayload> _instance;
} _Basic_UpstreamPayload_default_instance_;
class Basic_DownstreamPayloadDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Basic_DownstreamPayload> _instance;
} _Basic_DownstreamPayload_default_instance_;
class Basic_PingRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Basic_PingRequest> _instance;
} _Basic_PingRequest_default_instance_;
class Basic_PingResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Basic_PingResponse> _instance;
} _Basic_PingResponse_default_instance_;
class Basic_RegisterRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Basic_RegisterRequest> _instance;
} _Basic_RegisterRequest_default_instance_;
class Basic_RegisterResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Basic_RegisterResponse> _instance;
} _Basic_RegisterResponse_default_instance_;
class Basic_AccessPointsConfigDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Basic_AccessPointsConfig> _instance;
} _Basic_AccessPointsConfig_default_instance_;
class Basic_UnregisterRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Basic_UnregisterRequest> _instance;
} _Basic_UnregisterRequest_default_instance_;
class Basic_UnregisterResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Basic_UnregisterResponse> _instance;
} _Basic_UnregisterResponse_default_instance_;
class Basic_KeepAliveRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Basic_KeepAliveRequest> _instance;
} _Basic_KeepAliveRequest_default_instance_;
class Basic_KeepAliveResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Basic_KeepAliveResponse> _instance;
} _Basic_KeepAliveResponse_default_instance_;
class Basic_AccessPointDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Basic_AccessPoint> _instance;
} _Basic_AccessPoint_default_instance_;
class Basic_TokenInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Basic_TokenInfo> _instance;
} _Basic_TokenInfo_default_instance_;
class Basic_PushServiceTokenDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Basic_PushServiceToken> _instance;
} _Basic_PushServiceToken_default_instance_;
class Basic_SettingInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Basic_SettingInfo> _instance;
} _Basic_SettingInfo_default_instance_;
class Basic_AppInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Basic_AppInfo> _instance;
} _Basic_AppInfo_default_instance_;
class Basic_DeviceInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Basic_DeviceInfo> _instance;
} _Basic_DeviceInfo_default_instance_;
class Basic_EnvInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Basic_EnvInfo> _instance;
} _Basic_EnvInfo_default_instance_;
class Basic_RequestBasicInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Basic_RequestBasicInfo> _instance;
} _Basic_RequestBasicInfo_default_instance_;
class Basic_SyncCookieDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Basic_SyncCookie> _instance;
} _Basic_SyncCookie_default_instance_;
class Basic_I18nCopyWritingDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Basic_I18nCopyWriting> _instance;
} _Basic_I18nCopyWriting_default_instance_;
class Basic_SdkOptionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Basic_SdkOption> _instance;
} _Basic_SdkOption_default_instance_;
class Basic_LocaleMessage_ErrorMessageEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Basic_LocaleMessage_ErrorMessageEntry_DoNotUse> _instance;
} _Basic_LocaleMessage_ErrorMessageEntry_DoNotUse_default_instance_;
class Basic_LocaleMessageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Basic_LocaleMessage> _instance;
} _Basic_LocaleMessage_default_instance_;
class Basic_ErrorMessageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Basic_ErrorMessage> _instance;
} _Basic_ErrorMessage_default_instance_;
class BasicDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Basic> _instance;
} _Basic_default_instance_;
class ImMessage_MessageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ImMessage_Message> _instance;
} _ImMessage_Message_default_instance_;
class ImMessage_SendMessageResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ImMessage_SendMessageResponse> _instance;
} _ImMessage_SendMessageResponse_default_instance_;
class ImMessage_PullOldRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ImMessage_PullOldRequest> _instance;
} _ImMessage_PullOldRequest_default_instance_;
class ImMessage_PullOldResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ImMessage_PullOldResponse> _instance;
} _ImMessage_PullOldResponse_default_instance_;
class ImMessage_PullNewRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ImMessage_PullNewRequest> _instance;
} _ImMessage_PullNewRequest_default_instance_;
class ImMessage_PullNewResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ImMessage_PullNewResponse> _instance;
} _ImMessage_PullNewResponse_default_instance_;
class ImMessage_SessionListRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ImMessage_SessionListRequest> _instance;
} _ImMessage_SessionListRequest_default_instance_;
class ImMessage_ChatSessionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ImMessage_ChatSession> _instance;
} _ImMessage_ChatSession_default_instance_;
class ImMessage_ReminderDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ImMessage_Reminder> _instance;
} _ImMessage_Reminder_default_instance_;
class ImMessage_RemindBodyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ImMessage_RemindBody> _instance;
} _ImMessage_RemindBody_default_instance_;
class ImMessage_ChatTargetDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ImMessage_ChatTarget> _instance;
} _ImMessage_ChatTarget_default_instance_;
class ImMessage_SessionListResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ImMessage_SessionListResponse> _instance;
} _ImMessage_SessionListResponse_default_instance_;
class ImMessage_SessionPageListRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ImMessage_SessionPageListRequest> _instance;
} _ImMessage_SessionPageListRequest_default_instance_;
class ImMessage_SessionPageListResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ImMessage_SessionPageListResponse> _instance;
} _ImMessage_SessionPageListResponse_default_instance_;
class ImMessage_SessionRemoveRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ImMessage_SessionRemoveRequest> _instance;
} _ImMessage_SessionRemoveRequest_default_instance_;
class ImMessage_SessionRemoveResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ImMessage_SessionRemoveResponse> _instance;
} _ImMessage_SessionRemoveResponse_default_instance_;
class ImMessage_SessionCleanRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ImMessage_SessionCleanRequest> _instance;
} _ImMessage_SessionCleanRequest_default_instance_;
class ImMessage_SessionCleanResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ImMessage_SessionCleanResponse> _instance;
} _ImMessage_SessionCleanResponse_default_instance_;
class ImMessage_MessageDeleteRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ImMessage_MessageDeleteRequest> _instance;
} _ImMessage_MessageDeleteRequest_default_instance_;
class ImMessage_MessageDeleteResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ImMessage_MessageDeleteResponse> _instance;
} _ImMessage_MessageDeleteResponse_default_instance_;
class ImMessage_MessageCancelRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ImMessage_MessageCancelRequest> _instance;
} _ImMessage_MessageCancelRequest_default_instance_;
class ImMessage_MessageCancelResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ImMessage_MessageCancelResponse> _instance;
} _ImMessage_MessageCancelResponse_default_instance_;
class ImMessage_MessageClearRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ImMessage_MessageClearRequest> _instance;
} _ImMessage_MessageClearRequest_default_instance_;
class ImMessage_MessageClearResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ImMessage_MessageClearResponse> _instance;
} _ImMessage_MessageClearResponse_default_instance_;
class ImMessage_ReadSeqInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ImMessage_ReadSeqInfo> _instance;
} _ImMessage_ReadSeqInfo_default_instance_;
class ImMessage_MessageReadSeqRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ImMessage_MessageReadSeqRequest> _instance;
} _ImMessage_MessageReadSeqRequest_default_instance_;
class ImMessage_MessageReadSeqResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ImMessage_MessageReadSeqResponse> _instance;
} _ImMessage_MessageReadSeqResponse_default_instance_;
class ImMessage_MessageReadPushDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ImMessage_MessageReadPush> _instance;
} _ImMessage_MessageReadPush_default_instance_;
class ImMessage_AllUnreadCountRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ImMessage_AllUnreadCountRequest> _instance;
} _ImMessage_AllUnreadCountRequest_default_instance_;
class ImMessage_AllUnreadCountResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ImMessage_AllUnreadCountResponse> _instance;
} _ImMessage_AllUnreadCountResponse_default_instance_;
class ImMessage_MessageReadAllRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ImMessage_MessageReadAllRequest> _instance;
} _ImMessage_MessageReadAllRequest_default_instance_;
class ImMessage_MessageReadAllResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ImMessage_MessageReadAllResponse> _instance;
} _ImMessage_MessageReadAllResponse_default_instance_;
class ImMessage_SesionStickyOnTopRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ImMessage_SesionStickyOnTopRequest> _instance;
} _ImMessage_SesionStickyOnTopRequest_default_instance_;
class ImMessage_SessionStickyOnTopResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ImMessage_SessionStickyOnTopResponse> _instance;
} _ImMessage_SessionStickyOnTopResponse_default_instance_;
class ImMessage_SessionRaw_RawEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ImMessage_SessionRaw_RawEntry_DoNotUse> _instance;
} _ImMessage_SessionRaw_RawEntry_DoNotUse_default_instance_;
class ImMessage_SessionRawDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ImMessage_SessionRaw> _instance;
} _ImMessage_SessionRaw_default_instance_;
class ImMessage_MessageRecallRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ImMessage_MessageRecallRequest> _instance;
} _ImMessage_MessageRecallRequest_default_instance_;
class ImMessage_MessageRecallResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ImMessage_MessageRecallResponse> _instance;
} _ImMessage_MessageRecallResponse_default_instance_;
class ImMessage_MessageReceiptRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ImMessage_MessageReceiptRequest> _instance;
} _ImMessage_MessageReceiptRequest_default_instance_;
class ImMessage_MessageReceiptResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ImMessage_MessageReceiptResponse> _instance;
} _ImMessage_MessageReceiptResponse_default_instance_;
class ImMessage_MessageReceiptInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ImMessage_MessageReceiptInfo> _instance;
} _ImMessage_MessageReceiptInfo_default_instance_;
class ImMessage_MessageReceiptCountGetRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ImMessage_MessageReceiptCountGetRequest> _instance;
} _ImMessage_MessageReceiptCountGetRequest_default_instance_;
class ImMessage_MessageReceiptCountGetResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ImMessage_MessageReceiptCountGetResponse> _instance;
} _ImMessage_MessageReceiptCountGetResponse_default_instance_;
class ImMessage_MessageReceiptStatusDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ImMessage_MessageReceiptStatus> _instance;
} _ImMessage_MessageReceiptStatus_default_instance_;
class ImMessage_MessageReceiptDetailGetRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ImMessage_MessageReceiptDetailGetRequest> _instance;
} _ImMessage_MessageReceiptDetailGetRequest_default_instance_;
class ImMessage_MessageReceiptDetailGetResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ImMessage_MessageReceiptDetailGetResponse> _instance;
} _ImMessage_MessageReceiptDetailGetResponse_default_instance_;
class ImMessage_MessageBatchSendRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ImMessage_MessageBatchSendRequest> _instance;
} _ImMessage_MessageBatchSendRequest_default_instance_;
class ImMessage_MessageBatchSendResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ImMessage_MessageBatchSendResponse> _instance;
} _ImMessage_MessageBatchSendResponse_default_instance_;
class ImMessage_ImageAttachmentDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ImMessage_ImageAttachment> _instance;
} _ImMessage_ImageAttachment_default_instance_;
class ImMessage_AudioAttachmentDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ImMessage_AudioAttachment> _instance;
} _ImMessage_AudioAttachment_default_instance_;
class ImMessage_GifAttachmentDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ImMessage_GifAttachment> _instance;
} _ImMessage_GifAttachment_default_instance_;
class ImMessage_AttachmentDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ImMessage_Attachment> _instance;
} _ImMessage_Attachment_default_instance_;
class ImMessage_AttachmentsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ImMessage_Attachments> _instance;
} _ImMessage_Attachments_default_instance_;
class ImMessage_PlaceHolderMessageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ImMessage_PlaceHolderMessage> _instance;
} _ImMessage_PlaceHolderMessage_default_instance_;
class ImMessage_ImageTextMessageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ImMessage_ImageTextMessage> _instance;
} _ImMessage_ImageTextMessage_default_instance_;
class ImMessage_RichTextMessageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ImMessage_RichTextMessage> _instance;
} _ImMessage_RichTextMessage_default_instance_;
class ImMessage_NoticeMessageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ImMessage_NoticeMessage> _instance;
} _ImMessage_NoticeMessage_default_instance_;
class ImMessage_RichTextNoticeMessage_RichTextItemDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ImMessage_RichTextNoticeMessage_RichTextItem> _instance;
} _ImMessage_RichTextNoticeMessage_RichTextItem_default_instance_;
class ImMessage_RichTextNoticeMessageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ImMessage_RichTextNoticeMessage> _instance;
} _ImMessage_RichTextNoticeMessage_default_instance_;
class ImMessageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ImMessage> _instance;
} _ImMessage_default_instance_;
class Cloud_Channel_ChannelSubscribeRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Cloud_Channel_ChannelSubscribeRequest> _instance;
} _Cloud_Channel_ChannelSubscribeRequest_default_instance_;
class Cloud_Channel_ChannelSubscribeResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Cloud_Channel_ChannelSubscribeResponse> _instance;
} _Cloud_Channel_ChannelSubscribeResponse_default_instance_;
class Cloud_Channel_ChannelUnsubscribeRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Cloud_Channel_ChannelUnsubscribeRequest> _instance;
} _Cloud_Channel_ChannelUnsubscribeRequest_default_instance_;
class Cloud_Channel_ChannelSubscribersGetRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Cloud_Channel_ChannelSubscribersGetRequest> _instance;
} _Cloud_Channel_ChannelSubscribersGetRequest_default_instance_;
class Cloud_Channel_ChannelSubscribersGetResposneDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Cloud_Channel_ChannelSubscribersGetResposne> _instance;
} _Cloud_Channel_ChannelSubscribersGetResposne_default_instance_;
class Cloud_Channel_ChannelBasicInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Cloud_Channel_ChannelBasicInfo> _instance;
} _Cloud_Channel_ChannelBasicInfo_default_instance_;
class Cloud_Channel_UserActionInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Cloud_Channel_UserActionInfo> _instance;
} _Cloud_Channel_UserActionInfo_default_instance_;
class Cloud_Channel_ChannelBasicInfoGetRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Cloud_Channel_ChannelBasicInfoGetRequest> _instance;
} _Cloud_Channel_ChannelBasicInfoGetRequest_default_instance_;
class Cloud_Channel_ChannelBasicInfoGetResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Cloud_Channel_ChannelBasicInfoGetResponse> _instance;
} _Cloud_Channel_ChannelBasicInfoGetResponse_default_instance_;
class Cloud_Channel_ChannelHeartbeatRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Cloud_Channel_ChannelHeartbeatRequest> _instance;
} _Cloud_Channel_ChannelHeartbeatRequest_default_instance_;
class Cloud_Channel_ChannelHeartbeatResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Cloud_Channel_ChannelHeartbeatResponse> _instance;
} _Cloud_Channel_ChannelHeartbeatResponse_default_instance_;
class Cloud_Channel_ChannelBasicInfoNotifyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Cloud_Channel_ChannelBasicInfoNotify> _instance;
} _Cloud_Channel_ChannelBasicInfoNotify_default_instance_;
class Cloud_ChannelDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Cloud_Channel> _instance;
} _Cloud_Channel_default_instance_;
class Cloud_Config_ClientConfigGetRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Cloud_Config_ClientConfigGetRequest> _instance;
} _Cloud_Config_ClientConfigGetRequest_default_instance_;
class Cloud_Config_ClientConfigGetResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Cloud_Config_ClientConfigGetResponse> _instance;
} _Cloud_Config_ClientConfigGetResponse_default_instance_;
class Cloud_Config_NetworkQualityDetectionConfigDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Cloud_Config_NetworkQualityDetectionConfig> _instance;
} _Cloud_Config_NetworkQualityDetectionConfig_default_instance_;
class Cloud_Config_ClientConfigDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Cloud_Config_ClientConfig> _instance;
} _Cloud_Config_ClientConfig_default_instance_;
class Cloud_ConfigDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Cloud_Config> _instance;
} _Cloud_Config_default_instance_;
class Cloud_Profile_UserOnlineStatusDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Cloud_Profile_UserOnlineStatus> _instance;
} _Cloud_Profile_UserOnlineStatus_default_instance_;
class Cloud_Profile_ProfileBatchOnlineTimeRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Cloud_Profile_ProfileBatchOnlineTimeRequest> _instance;
} _Cloud_Profile_ProfileBatchOnlineTimeRequest_default_instance_;
class Cloud_Profile_ProfileBatchOnlineTimeResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Cloud_Profile_ProfileBatchOnlineTimeResponse> _instance;
} _Cloud_Profile_ProfileBatchOnlineTimeResponse_default_instance_;
class Cloud_ProfileDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Cloud_Profile> _instance;
} _Cloud_Profile_default_instance_;
class Cloud_Data_Update_KsImDataUpdatePushPayloadDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Cloud_Data_Update_KsImDataUpdatePushPayload> _instance;
} _Cloud_Data_Update_KsImDataUpdatePushPayload_default_instance_;
class Cloud_Data_Update_GroupInfoDataUpdateDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Cloud_Data_Update_GroupInfoDataUpdate> _instance;
} _Cloud_Data_Update_GroupInfoDataUpdate_default_instance_;
class Cloud_Data_Update_GroupMemberListUpdateDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Cloud_Data_Update_GroupMemberListUpdate> _instance;
} _Cloud_Data_Update_GroupMemberListUpdate_default_instance_;
class Cloud_Data_Update_YouBeKickedDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Cloud_Data_Update_YouBeKicked> _instance;
} _Cloud_Data_Update_YouBeKicked_default_instance_;
class Cloud_Data_Update_MessageReadDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Cloud_Data_Update_MessageRead> _instance;
} _Cloud_Data_Update_MessageRead_default_instance_;
class Cloud_Data_Update_MessageReceiptDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Cloud_Data_Update_MessageReceipt> _instance;
} _Cloud_Data_Update_MessageReceipt_default_instance_;
class Cloud_Data_UpdateDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Cloud_Data_Update> _instance;
} _Cloud_Data_Update_default_instance_;
class Cloud_DataDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Cloud_Data> _instance;
} _Cloud_Data_default_instance_;
class Cloud_Message_ImcRecalledMessageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Cloud_Message_ImcRecalledMessage> _instance;
} _Cloud_Message_ImcRecalledMessage_default_instance_;
class Cloud_Message_ImcReplaceMessageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Cloud_Message_ImcReplaceMessage> _instance;
} _Cloud_Message_ImcReplaceMessage_default_instance_;
class Cloud_Message_TextDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Cloud_Message_Text> _instance;
} _Cloud_Message_Text_default_instance_;
class Cloud_Message_ImageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Cloud_Message_Image> _instance;
} _Cloud_Message_Image_default_instance_;
class Cloud_Message_AudioDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Cloud_Message_Audio> _instance;
} _Cloud_Message_Audio_default_instance_;
class Cloud_Message_VideoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Cloud_Message_Video> _instance;
} _Cloud_Message_Video_default_instance_;
class Cloud_Message_CustomDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Cloud_Message_Custom> _instance;
} _Cloud_Message_Custom_default_instance_;
class Cloud_Message_PicUrlDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Cloud_Message_PicUrl> _instance;
} _Cloud_Message_PicUrl_default_instance_;
class Cloud_Message_Emoticon_CodeDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Cloud_Message_Emoticon_Code> _instance;
} _Cloud_Message_Emoticon_Code_default_instance_;
class Cloud_Message_EmoticonDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Cloud_Message_Emoticon> _instance;
} _Cloud_Message_Emoticon_default_instance_;
class Cloud_Message_FileDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Cloud_Message_File> _instance;
} _Cloud_Message_File_default_instance_;
class Cloud_Message_Reference_ReferenceMessageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Cloud_Message_Reference_ReferenceMessage> _instance;
} _Cloud_Message_Reference_ReferenceMessage_default_instance_;
class Cloud_Message_ReferenceDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Cloud_Message_Reference> _instance;
} _Cloud_Message_Reference_default_instance_;
class Cloud_Message_ForwardMessageContentDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Cloud_Message_ForwardMessageContent> _instance;
} _Cloud_Message_ForwardMessageContent_default_instance_;
class Cloud_Message_NoticePlaceholderMetaDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Cloud_Message_NoticePlaceholderMeta> _instance;
} _Cloud_Message_NoticePlaceholderMeta_default_instance_;
class Cloud_Message_ImcNoticeMessageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Cloud_Message_ImcNoticeMessage> _instance;
} _Cloud_Message_ImcNoticeMessage_default_instance_;
class Cloud_Message_ConfirmInviteIntoGroupNoticeMetaInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Cloud_Message_ConfirmInviteIntoGroupNoticeMetaInfo> _instance;
} _Cloud_Message_ConfirmInviteIntoGroupNoticeMetaInfo_default_instance_;
class Cloud_Message_ConfirmJoinIntoGroupNoticeMetaInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Cloud_Message_ConfirmJoinIntoGroupNoticeMetaInfo> _instance;
} _Cloud_Message_ConfirmJoinIntoGroupNoticeMetaInfo_default_instance_;
class Cloud_Message_GroupCreateRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Cloud_Message_GroupCreateRequest> _instance;
} _Cloud_Message_GroupCreateRequest_default_instance_;
class Cloud_Message_GroupCreateReponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Cloud_Message_GroupCreateReponse> _instance;
} _Cloud_Message_GroupCreateReponse_default_instance_;
class Cloud_Message_GroupDeleteRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Cloud_Message_GroupDeleteRequest> _instance;
} _Cloud_Message_GroupDeleteRequest_default_instance_;
class Cloud_Message_GroupDeleteResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Cloud_Message_GroupDeleteResponse> _instance;
} _Cloud_Message_GroupDeleteResponse_default_instance_;
class Cloud_Message_GroupInviteRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Cloud_Message_GroupInviteRequest> _instance;
} _Cloud_Message_GroupInviteRequest_default_instance_;
class Cloud_Message_GroupInvideResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Cloud_Message_GroupInvideResponse> _instance;
} _Cloud_Message_GroupInvideResponse_default_instance_;
class Cloud_Message_GroupJoinRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Cloud_Message_GroupJoinRequest> _instance;
} _Cloud_Message_GroupJoinRequest_default_instance_;
class Cloud_Message_GroupJoinResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Cloud_Message_GroupJoinResponse> _instance;
} _Cloud_Message_GroupJoinResponse_default_instance_;
class Cloud_Message_GroupJoinRequestAckRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Cloud_Message_GroupJoinRequestAckRequest> _instance;
} _Cloud_Message_GroupJoinRequestAckRequest_default_instance_;
class Cloud_Message_GroupJoinRequestAckResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Cloud_Message_GroupJoinRequestAckResponse> _instance;
} _Cloud_Message_GroupJoinRequestAckResponse_default_instance_;
class Cloud_Message_GroupJoinRequestGetRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Cloud_Message_GroupJoinRequestGetRequest> _instance;
} _Cloud_Message_GroupJoinRequestGetRequest_default_instance_;
class Cloud_Message_GroupJoinRequestGetResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Cloud_Message_GroupJoinRequestGetResponse> _instance;
} _Cloud_Message_GroupJoinRequestGetResponse_default_instance_;
class Cloud_Message_GroupJoinRequestCancelRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Cloud_Message_GroupJoinRequestCancelRequest> _instance;
} _Cloud_Message_GroupJoinRequestCancelRequest_default_instance_;
class Cloud_Message_GroupJoinRequestCancelResposneDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Cloud_Message_GroupJoinRequestCancelResposne> _instance;
} _Cloud_Message_GroupJoinRequestCancelResposne_default_instance_;
class Cloud_Message_GroupQuitRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Cloud_Message_GroupQuitRequest> _instance;
} _Cloud_Message_GroupQuitRequest_default_instance_;
class Cloud_Message_GroupQuitResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Cloud_Message_GroupQuitResponse> _instance;
} _Cloud_Message_GroupQuitResponse_default_instance_;
class Cloud_Message_GroupKickRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Cloud_Message_GroupKickRequest> _instance;
} _Cloud_Message_GroupKickRequest_default_instance_;
class Cloud_Message_GroupKickResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Cloud_Message_GroupKickResponse> _instance;
} _Cloud_Message_GroupKickResponse_default_instance_;
class Cloud_Message_GroupSettingRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Cloud_Message_GroupSettingRequest> _instance;
} _Cloud_Message_GroupSettingRequest_default_instance_;
class Cloud_Message_GroupSettingRenameDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Cloud_Message_GroupSettingRename> _instance;
} _Cloud_Message_GroupSettingRename_default_instance_;
class Cloud_Message_GroupSettingDescDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Cloud_Message_GroupSettingDesc> _instance;
} _Cloud_Message_GroupSettingDesc_default_instance_;
class Cloud_Message_GroupSettingJoinNeedPermissionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Cloud_Message_GroupSettingJoinNeedPermission> _instance;
} _Cloud_Message_GroupSettingJoinNeedPermission_default_instance_;
class Cloud_Message_GroupSettingResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Cloud_Message_GroupSettingResponse> _instance;
} _Cloud_Message_GroupSettingResponse_default_instance_;
class Cloud_Message_GroupMemberSettingRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Cloud_Message_GroupMemberSettingRequest> _instance;
} _Cloud_Message_GroupMemberSettingRequest_default_instance_;
class Cloud_Message_SetUserNicknameDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Cloud_Message_SetUserNickname> _instance;
} _Cloud_Message_SetUserNickname_default_instance_;
class Cloud_Message_SetUserAntiDisturbingDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Cloud_Message_SetUserAntiDisturbing> _instance;
} _Cloud_Message_SetUserAntiDisturbing_default_instance_;
class Cloud_Message_GroupMemberSettingResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Cloud_Message_GroupMemberSettingResponse> _instance;
} _Cloud_Message_GroupMemberSettingResponse_default_instance_;
class Cloud_Message_GroupMemberListGetRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Cloud_Message_GroupMemberListGetRequest> _instance;
} _Cloud_Message_GroupMemberListGetRequest_default_instance_;
class Cloud_Message_GroupMemberListGetResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Cloud_Message_GroupMemberListGetResponse> _instance;
} _Cloud_Message_GroupMemberListGetResponse_default_instance_;
class Cloud_Message_GroupMemberGetRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Cloud_Message_GroupMemberGetRequest> _instance;
} _Cloud_Message_GroupMemberGetRequest_default_instance_;
class Cloud_Message_GroupMemberGetResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Cloud_Message_GroupMemberGetResponse> _instance;
} _Cloud_Message_GroupMemberGetResponse_default_instance_;
class Cloud_Message_UserGroupListRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Cloud_Message_UserGroupListRequest> _instance;
} _Cloud_Message_UserGroupListRequest_default_instance_;
class Cloud_Message_UserGroupListResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Cloud_Message_UserGroupListResponse> _instance;
} _Cloud_Message_UserGroupListResponse_default_instance_;
class Cloud_Message_UserGroupRecordDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Cloud_Message_UserGroupRecord> _instance;
} _Cloud_Message_UserGroupRecord_default_instance_;
class Cloud_Message_UserGroupGetRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Cloud_Message_UserGroupGetRequest> _instance;
} _Cloud_Message_UserGroupGetRequest_default_instance_;
class Cloud_Message_UserGroupGetResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Cloud_Message_UserGroupGetResponse> _instance;
} _Cloud_Message_UserGroupGetResponse_default_instance_;
class Cloud_Message_UserGroupInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Cloud_Message_UserGroupInfo> _instance;
} _Cloud_Message_UserGroupInfo_default_instance_;
class Cloud_Message_GroupMemberDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Cloud_Message_GroupMember> _instance;
} _Cloud_Message_GroupMember_default_instance_;
class Cloud_Message_GroupInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Cloud_Message_GroupInfo> _instance;
} _Cloud_Message_GroupInfo_default_instance_;
class Cloud_Message_GroupBasicInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Cloud_Message_GroupBasicInfo> _instance;
} _Cloud_Message_GroupBasicInfo_default_instance_;
class Cloud_Message_GroupMemberBriefInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Cloud_Message_GroupMemberBriefInfo> _instance;
} _Cloud_Message_GroupMemberBriefInfo_default_instance_;
class Cloud_Message_ImcPassThroughRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Cloud_Message_ImcPassThroughRequest> _instance;
} _Cloud_Message_ImcPassThroughRequest_default_instance_;
class Cloud_Message_ImcPassThroughResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Cloud_Message_ImcPassThroughResponse> _instance;
} _Cloud_Message_ImcPassThroughResponse_default_instance_;
class Cloud_Message_ImcPassThroughPushDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Cloud_Message_ImcPassThroughPush> _instance;
} _Cloud_Message_ImcPassThroughPush_default_instance_;
class Cloud_Message_InputtingContentDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Cloud_Message_InputtingContent> _instance;
} _Cloud_Message_InputtingContent_default_instance_;
class Cloud_MessageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Cloud_Message> _instance;
} _Cloud_Message_default_instance_;
class CloudDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Cloud> _instance;
} _Cloud_default_instance_;
}  // namespace Im
}  // namespace AcFunDanmu
static void InitDefaultsscc_info_Basic_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Basic_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Basic();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Basic_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Basic_Im_2eproto}, {}};

static void InitDefaultsscc_info_Basic_AccessPoint_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Basic_AccessPoint_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Basic_AccessPoint();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Basic_AccessPoint_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Basic_AccessPoint_Im_2eproto}, {}};

static void InitDefaultsscc_info_Basic_AccessPointsConfig_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Basic_AccessPointsConfig_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Basic_AccessPointsConfig();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Basic_AccessPointsConfig_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Basic_AccessPointsConfig_Im_2eproto}, {
      &scc_info_Basic_AccessPoint_Im_2eproto.base,}};

static void InitDefaultsscc_info_Basic_AppInfo_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Basic_AppInfo_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Basic_AppInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Basic_AppInfo_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Basic_AppInfo_Im_2eproto}, {}};

static void InitDefaultsscc_info_Basic_DeviceInfo_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Basic_DeviceInfo_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Basic_DeviceInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Basic_DeviceInfo_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Basic_DeviceInfo_Im_2eproto}, {}};

static void InitDefaultsscc_info_Basic_DownstreamPayload_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Basic_DownstreamPayload_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Basic_DownstreamPayload();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Basic_DownstreamPayload_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Basic_DownstreamPayload_Im_2eproto}, {}};

static void InitDefaultsscc_info_Basic_EnvInfo_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Basic_EnvInfo_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Basic_EnvInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Basic_EnvInfo_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Basic_EnvInfo_Im_2eproto}, {}};

static void InitDefaultsscc_info_Basic_ErrorMessage_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Basic_ErrorMessage_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Basic_ErrorMessage();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Basic_ErrorMessage_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Basic_ErrorMessage_Im_2eproto}, {
      &scc_info_Basic_LocaleMessage_Im_2eproto.base,}};

static void InitDefaultsscc_info_Basic_I18nCopyWriting_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Basic_I18nCopyWriting_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Basic_I18nCopyWriting();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Basic_I18nCopyWriting_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Basic_I18nCopyWriting_Im_2eproto}, {}};

static void InitDefaultsscc_info_Basic_KeepAliveRequest_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Basic_KeepAliveRequest_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Basic_KeepAliveRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Basic_KeepAliveRequest_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Basic_KeepAliveRequest_Im_2eproto}, {
      &scc_info_Basic_PushServiceToken_Im_2eproto.base,}};

static void InitDefaultsscc_info_Basic_KeepAliveResponse_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Basic_KeepAliveResponse_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Basic_KeepAliveResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Basic_KeepAliveResponse_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Basic_KeepAliveResponse_Im_2eproto}, {
      &scc_info_Basic_AccessPointsConfig_Im_2eproto.base,}};

static void InitDefaultsscc_info_Basic_LocaleMessage_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Basic_LocaleMessage_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Basic_LocaleMessage();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Basic_LocaleMessage_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Basic_LocaleMessage_Im_2eproto}, {
      &scc_info_Basic_LocaleMessage_ErrorMessageEntry_DoNotUse_Im_2eproto.base,}};

static void InitDefaultsscc_info_Basic_LocaleMessage_ErrorMessageEntry_DoNotUse_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Basic_LocaleMessage_ErrorMessageEntry_DoNotUse_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Basic_LocaleMessage_ErrorMessageEntry_DoNotUse();
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Basic_LocaleMessage_ErrorMessageEntry_DoNotUse_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Basic_LocaleMessage_ErrorMessageEntry_DoNotUse_Im_2eproto}, {}};

static void InitDefaultsscc_info_Basic_PacketHeader_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Basic_PacketHeader_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Basic_PacketHeader();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Basic_PacketHeader_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Basic_PacketHeader_Im_2eproto}, {
      &scc_info_Basic_TokenInfo_Im_2eproto.base,}};

static void InitDefaultsscc_info_Basic_PingRequest_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Basic_PingRequest_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Basic_PingRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Basic_PingRequest_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Basic_PingRequest_Im_2eproto}, {}};

static void InitDefaultsscc_info_Basic_PingResponse_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Basic_PingResponse_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Basic_PingResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Basic_PingResponse_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Basic_PingResponse_Im_2eproto}, {}};

static void InitDefaultsscc_info_Basic_PushServiceToken_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Basic_PushServiceToken_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Basic_PushServiceToken();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Basic_PushServiceToken_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Basic_PushServiceToken_Im_2eproto}, {}};

static void InitDefaultsscc_info_Basic_RegisterRequest_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Basic_RegisterRequest_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Basic_RegisterRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<4> scc_info_Basic_RegisterRequest_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 4, 0, InitDefaultsscc_info_Basic_RegisterRequest_Im_2eproto}, {
      &scc_info_Basic_AppInfo_Im_2eproto.base,
      &scc_info_Basic_DeviceInfo_Im_2eproto.base,
      &scc_info_Basic_EnvInfo_Im_2eproto.base,
      &scc_info_Basic_PushServiceToken_Im_2eproto.base,}};

static void InitDefaultsscc_info_Basic_RegisterResponse_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Basic_RegisterResponse_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Basic_RegisterResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_Basic_RegisterResponse_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_Basic_RegisterResponse_Im_2eproto}, {
      &scc_info_Basic_AccessPointsConfig_Im_2eproto.base,
      &scc_info_Basic_SdkOption_Im_2eproto.base,}};

static void InitDefaultsscc_info_Basic_RequestBasicInfo_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Basic_RequestBasicInfo_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Basic_RequestBasicInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_Basic_RequestBasicInfo_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, 0, InitDefaultsscc_info_Basic_RequestBasicInfo_Im_2eproto}, {
      &scc_info_Basic_AppInfo_Im_2eproto.base,
      &scc_info_Basic_DeviceInfo_Im_2eproto.base,
      &scc_info_Basic_EnvInfo_Im_2eproto.base,}};

static void InitDefaultsscc_info_Basic_SdkOption_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Basic_SdkOption_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Basic_SdkOption();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Basic_SdkOption_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Basic_SdkOption_Im_2eproto}, {}};

static void InitDefaultsscc_info_Basic_SettingInfo_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Basic_SettingInfo_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Basic_SettingInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Basic_SettingInfo_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Basic_SettingInfo_Im_2eproto}, {}};

static void InitDefaultsscc_info_Basic_SyncCookie_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Basic_SyncCookie_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Basic_SyncCookie();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Basic_SyncCookie_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Basic_SyncCookie_Im_2eproto}, {}};

static void InitDefaultsscc_info_Basic_TokenInfo_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Basic_TokenInfo_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Basic_TokenInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Basic_TokenInfo_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Basic_TokenInfo_Im_2eproto}, {}};

static void InitDefaultsscc_info_Basic_UnregisterRequest_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Basic_UnregisterRequest_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Basic_UnregisterRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Basic_UnregisterRequest_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Basic_UnregisterRequest_Im_2eproto}, {}};

static void InitDefaultsscc_info_Basic_UnregisterResponse_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Basic_UnregisterResponse_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Basic_UnregisterResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Basic_UnregisterResponse_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Basic_UnregisterResponse_Im_2eproto}, {}};

static void InitDefaultsscc_info_Basic_UpstreamPayload_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Basic_UpstreamPayload_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Basic_UpstreamPayload();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_Basic_UpstreamPayload_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, 0, InitDefaultsscc_info_Basic_UpstreamPayload_Im_2eproto}, {
      &scc_info_Basic_UserInstance_Im_2eproto.base,
      &scc_info_Basic_SettingInfo_Im_2eproto.base,
      &scc_info_Basic_RequestBasicInfo_Im_2eproto.base,}};

static void InitDefaultsscc_info_Basic_User_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Basic_User_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Basic_User();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Basic_User_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Basic_User_Im_2eproto}, {}};

static void InitDefaultsscc_info_Basic_UserInstance_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Basic_UserInstance_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Basic_UserInstance();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Basic_UserInstance_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Basic_UserInstance_Im_2eproto}, {
      &scc_info_Basic_User_Im_2eproto.base,}};

static void InitDefaultsscc_info_Cloud_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Cloud_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Cloud();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Cloud_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Cloud_Im_2eproto}, {}};

static void InitDefaultsscc_info_Cloud_Channel_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Cloud_Channel_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Cloud_Channel();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Cloud_Channel_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Cloud_Channel_Im_2eproto}, {}};

static void InitDefaultsscc_info_Cloud_Channel_ChannelBasicInfo_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Cloud_Channel_ChannelBasicInfo_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Cloud_Channel_ChannelBasicInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Cloud_Channel_ChannelBasicInfo_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Cloud_Channel_ChannelBasicInfo_Im_2eproto}, {}};

static void InitDefaultsscc_info_Cloud_Channel_ChannelBasicInfoGetRequest_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Cloud_Channel_ChannelBasicInfoGetRequest_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Cloud_Channel_ChannelBasicInfoGetRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Cloud_Channel_ChannelBasicInfoGetRequest_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Cloud_Channel_ChannelBasicInfoGetRequest_Im_2eproto}, {}};

static void InitDefaultsscc_info_Cloud_Channel_ChannelBasicInfoGetResponse_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Cloud_Channel_ChannelBasicInfoGetResponse_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Cloud_Channel_ChannelBasicInfoGetResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Cloud_Channel_ChannelBasicInfoGetResponse_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Cloud_Channel_ChannelBasicInfoGetResponse_Im_2eproto}, {
      &scc_info_Cloud_Channel_ChannelBasicInfo_Im_2eproto.base,}};

static void InitDefaultsscc_info_Cloud_Channel_ChannelBasicInfoNotify_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Cloud_Channel_ChannelBasicInfoNotify_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Cloud_Channel_ChannelBasicInfoNotify();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_Cloud_Channel_ChannelBasicInfoNotify_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_Cloud_Channel_ChannelBasicInfoNotify_Im_2eproto}, {
      &scc_info_Cloud_Channel_UserActionInfo_Im_2eproto.base,
      &scc_info_Cloud_Channel_ChannelBasicInfo_Im_2eproto.base,}};

static void InitDefaultsscc_info_Cloud_Channel_ChannelHeartbeatRequest_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Cloud_Channel_ChannelHeartbeatRequest_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Cloud_Channel_ChannelHeartbeatRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Cloud_Channel_ChannelHeartbeatRequest_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Cloud_Channel_ChannelHeartbeatRequest_Im_2eproto}, {}};

static void InitDefaultsscc_info_Cloud_Channel_ChannelHeartbeatResponse_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Cloud_Channel_ChannelHeartbeatResponse_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Cloud_Channel_ChannelHeartbeatResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Cloud_Channel_ChannelHeartbeatResponse_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Cloud_Channel_ChannelHeartbeatResponse_Im_2eproto}, {}};

static void InitDefaultsscc_info_Cloud_Channel_ChannelSubscribeRequest_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Cloud_Channel_ChannelSubscribeRequest_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Cloud_Channel_ChannelSubscribeRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Cloud_Channel_ChannelSubscribeRequest_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Cloud_Channel_ChannelSubscribeRequest_Im_2eproto}, {}};

static void InitDefaultsscc_info_Cloud_Channel_ChannelSubscribeResponse_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Cloud_Channel_ChannelSubscribeResponse_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Cloud_Channel_ChannelSubscribeResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Cloud_Channel_ChannelSubscribeResponse_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Cloud_Channel_ChannelSubscribeResponse_Im_2eproto}, {}};

static void InitDefaultsscc_info_Cloud_Channel_ChannelSubscribersGetRequest_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Cloud_Channel_ChannelSubscribersGetRequest_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Cloud_Channel_ChannelSubscribersGetRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Cloud_Channel_ChannelSubscribersGetRequest_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Cloud_Channel_ChannelSubscribersGetRequest_Im_2eproto}, {}};

static void InitDefaultsscc_info_Cloud_Channel_ChannelSubscribersGetResposne_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Cloud_Channel_ChannelSubscribersGetResposne_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Cloud_Channel_ChannelSubscribersGetResposne();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Cloud_Channel_ChannelSubscribersGetResposne_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Cloud_Channel_ChannelSubscribersGetResposne_Im_2eproto}, {
      &scc_info_Basic_User_Im_2eproto.base,}};

static void InitDefaultsscc_info_Cloud_Channel_ChannelUnsubscribeRequest_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Cloud_Channel_ChannelUnsubscribeRequest_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Cloud_Channel_ChannelUnsubscribeRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Cloud_Channel_ChannelUnsubscribeRequest_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Cloud_Channel_ChannelUnsubscribeRequest_Im_2eproto}, {}};

static void InitDefaultsscc_info_Cloud_Channel_UserActionInfo_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Cloud_Channel_UserActionInfo_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Cloud_Channel_UserActionInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Cloud_Channel_UserActionInfo_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Cloud_Channel_UserActionInfo_Im_2eproto}, {
      &scc_info_Basic_User_Im_2eproto.base,}};

static void InitDefaultsscc_info_Cloud_Config_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Cloud_Config_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Cloud_Config();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Cloud_Config_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Cloud_Config_Im_2eproto}, {}};

static void InitDefaultsscc_info_Cloud_Config_ClientConfig_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Cloud_Config_ClientConfig_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Cloud_Config_ClientConfig();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Cloud_Config_ClientConfig_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Cloud_Config_ClientConfig_Im_2eproto}, {
      &scc_info_Cloud_Config_NetworkQualityDetectionConfig_Im_2eproto.base,}};

static void InitDefaultsscc_info_Cloud_Config_ClientConfigGetRequest_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Cloud_Config_ClientConfigGetRequest_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Cloud_Config_ClientConfigGetRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Cloud_Config_ClientConfigGetRequest_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Cloud_Config_ClientConfigGetRequest_Im_2eproto}, {}};

static void InitDefaultsscc_info_Cloud_Config_ClientConfigGetResponse_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Cloud_Config_ClientConfigGetResponse_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Cloud_Config_ClientConfigGetResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Cloud_Config_ClientConfigGetResponse_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Cloud_Config_ClientConfigGetResponse_Im_2eproto}, {
      &scc_info_Cloud_Config_ClientConfig_Im_2eproto.base,}};

static void InitDefaultsscc_info_Cloud_Config_NetworkQualityDetectionConfig_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Cloud_Config_NetworkQualityDetectionConfig_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Cloud_Config_NetworkQualityDetectionConfig();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Cloud_Config_NetworkQualityDetectionConfig_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Cloud_Config_NetworkQualityDetectionConfig_Im_2eproto}, {}};

static void InitDefaultsscc_info_Cloud_Data_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Cloud_Data_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Cloud_Data();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Cloud_Data_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Cloud_Data_Im_2eproto}, {}};

static void InitDefaultsscc_info_Cloud_Data_Update_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Cloud_Data_Update_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Cloud_Data_Update();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Cloud_Data_Update_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Cloud_Data_Update_Im_2eproto}, {}};

static void InitDefaultsscc_info_Cloud_Data_Update_GroupInfoDataUpdate_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Cloud_Data_Update_GroupInfoDataUpdate_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Cloud_Data_Update_GroupInfoDataUpdate();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Cloud_Data_Update_GroupInfoDataUpdate_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Cloud_Data_Update_GroupInfoDataUpdate_Im_2eproto}, {}};

static void InitDefaultsscc_info_Cloud_Data_Update_GroupMemberListUpdate_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Cloud_Data_Update_GroupMemberListUpdate_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Cloud_Data_Update_GroupMemberListUpdate();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Cloud_Data_Update_GroupMemberListUpdate_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Cloud_Data_Update_GroupMemberListUpdate_Im_2eproto}, {}};

static void InitDefaultsscc_info_Cloud_Data_Update_KsImDataUpdatePushPayload_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Cloud_Data_Update_KsImDataUpdatePushPayload_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Cloud_Data_Update_KsImDataUpdatePushPayload();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Cloud_Data_Update_KsImDataUpdatePushPayload_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Cloud_Data_Update_KsImDataUpdatePushPayload_Im_2eproto}, {}};

static void InitDefaultsscc_info_Cloud_Data_Update_MessageRead_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Cloud_Data_Update_MessageRead_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Cloud_Data_Update_MessageRead();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Cloud_Data_Update_MessageRead_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Cloud_Data_Update_MessageRead_Im_2eproto}, {}};

static void InitDefaultsscc_info_Cloud_Data_Update_MessageReceipt_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Cloud_Data_Update_MessageReceipt_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Cloud_Data_Update_MessageReceipt();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_Cloud_Data_Update_MessageReceipt_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_Cloud_Data_Update_MessageReceipt_Im_2eproto}, {
      &scc_info_ImMessage_ChatTarget_Im_2eproto.base,
      &scc_info_ImMessage_MessageReceiptStatus_Im_2eproto.base,}};

static void InitDefaultsscc_info_Cloud_Data_Update_YouBeKicked_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Cloud_Data_Update_YouBeKicked_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Cloud_Data_Update_YouBeKicked();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Cloud_Data_Update_YouBeKicked_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Cloud_Data_Update_YouBeKicked_Im_2eproto}, {}};

static void InitDefaultsscc_info_Cloud_Message_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Cloud_Message_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Cloud_Message();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Cloud_Message_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Cloud_Message_Im_2eproto}, {}};

static void InitDefaultsscc_info_Cloud_Message_Audio_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Cloud_Message_Audio_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Cloud_Message_Audio();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Cloud_Message_Audio_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Cloud_Message_Audio_Im_2eproto}, {}};

static void InitDefaultsscc_info_Cloud_Message_ConfirmInviteIntoGroupNoticeMetaInfo_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Cloud_Message_ConfirmInviteIntoGroupNoticeMetaInfo_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Cloud_Message_ConfirmInviteIntoGroupNoticeMetaInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Cloud_Message_ConfirmInviteIntoGroupNoticeMetaInfo_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Cloud_Message_ConfirmInviteIntoGroupNoticeMetaInfo_Im_2eproto}, {}};

static void InitDefaultsscc_info_Cloud_Message_ConfirmJoinIntoGroupNoticeMetaInfo_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Cloud_Message_ConfirmJoinIntoGroupNoticeMetaInfo_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Cloud_Message_ConfirmJoinIntoGroupNoticeMetaInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Cloud_Message_ConfirmJoinIntoGroupNoticeMetaInfo_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Cloud_Message_ConfirmJoinIntoGroupNoticeMetaInfo_Im_2eproto}, {}};

static void InitDefaultsscc_info_Cloud_Message_Custom_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Cloud_Message_Custom_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Cloud_Message_Custom();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Cloud_Message_Custom_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Cloud_Message_Custom_Im_2eproto}, {}};

static void InitDefaultsscc_info_Cloud_Message_Emoticon_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Cloud_Message_Emoticon_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Cloud_Message_Emoticon();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_Cloud_Message_Emoticon_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_Cloud_Message_Emoticon_Im_2eproto}, {
      &scc_info_Cloud_Message_PicUrl_Im_2eproto.base,
      &scc_info_Cloud_Message_Emoticon_Code_Im_2eproto.base,}};

static void InitDefaultsscc_info_Cloud_Message_Emoticon_Code_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Cloud_Message_Emoticon_Code_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Cloud_Message_Emoticon_Code();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Cloud_Message_Emoticon_Code_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Cloud_Message_Emoticon_Code_Im_2eproto}, {}};

static void InitDefaultsscc_info_Cloud_Message_File_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Cloud_Message_File_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Cloud_Message_File();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Cloud_Message_File_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Cloud_Message_File_Im_2eproto}, {}};

static void InitDefaultsscc_info_Cloud_Message_ForwardMessageContent_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Cloud_Message_ForwardMessageContent_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Cloud_Message_ForwardMessageContent();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Cloud_Message_ForwardMessageContent_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Cloud_Message_ForwardMessageContent_Im_2eproto}, {
      &scc_info_ImMessage_Message_Im_2eproto.base,}};

static void InitDefaultsscc_info_Cloud_Message_GroupBasicInfo_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Cloud_Message_GroupBasicInfo_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Cloud_Message_GroupBasicInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Cloud_Message_GroupBasicInfo_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Cloud_Message_GroupBasicInfo_Im_2eproto}, {
      &scc_info_Basic_User_Im_2eproto.base,}};

static void InitDefaultsscc_info_Cloud_Message_GroupCreateReponse_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Cloud_Message_GroupCreateReponse_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Cloud_Message_GroupCreateReponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_Cloud_Message_GroupCreateReponse_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_Cloud_Message_GroupCreateReponse_Im_2eproto}, {
      &scc_info_Cloud_Message_GroupInfo_Im_2eproto.base,
      &scc_info_Cloud_Message_GroupMember_Im_2eproto.base,}};

static void InitDefaultsscc_info_Cloud_Message_GroupCreateRequest_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Cloud_Message_GroupCreateRequest_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Cloud_Message_GroupCreateRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Cloud_Message_GroupCreateRequest_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Cloud_Message_GroupCreateRequest_Im_2eproto}, {
      &scc_info_Basic_User_Im_2eproto.base,}};

static void InitDefaultsscc_info_Cloud_Message_GroupDeleteRequest_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Cloud_Message_GroupDeleteRequest_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Cloud_Message_GroupDeleteRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Cloud_Message_GroupDeleteRequest_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Cloud_Message_GroupDeleteRequest_Im_2eproto}, {}};

static void InitDefaultsscc_info_Cloud_Message_GroupDeleteResponse_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Cloud_Message_GroupDeleteResponse_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Cloud_Message_GroupDeleteResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Cloud_Message_GroupDeleteResponse_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Cloud_Message_GroupDeleteResponse_Im_2eproto}, {}};

static void InitDefaultsscc_info_Cloud_Message_GroupInfo_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Cloud_Message_GroupInfo_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Cloud_Message_GroupInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_Cloud_Message_GroupInfo_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_Cloud_Message_GroupInfo_Im_2eproto}, {
      &scc_info_Cloud_Message_GroupBasicInfo_Im_2eproto.base,
      &scc_info_Cloud_Message_GroupMemberBriefInfo_Im_2eproto.base,}};

static void InitDefaultsscc_info_Cloud_Message_GroupInvideResponse_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Cloud_Message_GroupInvideResponse_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Cloud_Message_GroupInvideResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Cloud_Message_GroupInvideResponse_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Cloud_Message_GroupInvideResponse_Im_2eproto}, {}};

static void InitDefaultsscc_info_Cloud_Message_GroupInviteRequest_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Cloud_Message_GroupInviteRequest_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Cloud_Message_GroupInviteRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Cloud_Message_GroupInviteRequest_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Cloud_Message_GroupInviteRequest_Im_2eproto}, {
      &scc_info_Basic_User_Im_2eproto.base,}};

static void InitDefaultsscc_info_Cloud_Message_GroupJoinRequest_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Cloud_Message_GroupJoinRequest_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Cloud_Message_GroupJoinRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Cloud_Message_GroupJoinRequest_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Cloud_Message_GroupJoinRequest_Im_2eproto}, {
      &scc_info_Basic_User_Im_2eproto.base,}};

static void InitDefaultsscc_info_Cloud_Message_GroupJoinRequestAckRequest_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Cloud_Message_GroupJoinRequestAckRequest_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Cloud_Message_GroupJoinRequestAckRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Cloud_Message_GroupJoinRequestAckRequest_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Cloud_Message_GroupJoinRequestAckRequest_Im_2eproto}, {}};

static void InitDefaultsscc_info_Cloud_Message_GroupJoinRequestAckResponse_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Cloud_Message_GroupJoinRequestAckResponse_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Cloud_Message_GroupJoinRequestAckResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Cloud_Message_GroupJoinRequestAckResponse_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Cloud_Message_GroupJoinRequestAckResponse_Im_2eproto}, {}};

static void InitDefaultsscc_info_Cloud_Message_GroupJoinRequestCancelRequest_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Cloud_Message_GroupJoinRequestCancelRequest_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Cloud_Message_GroupJoinRequestCancelRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Cloud_Message_GroupJoinRequestCancelRequest_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Cloud_Message_GroupJoinRequestCancelRequest_Im_2eproto}, {}};

static void InitDefaultsscc_info_Cloud_Message_GroupJoinRequestCancelResposne_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Cloud_Message_GroupJoinRequestCancelResposne_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Cloud_Message_GroupJoinRequestCancelResposne();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Cloud_Message_GroupJoinRequestCancelResposne_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Cloud_Message_GroupJoinRequestCancelResposne_Im_2eproto}, {
      &scc_info_Basic_User_Im_2eproto.base,}};

static void InitDefaultsscc_info_Cloud_Message_GroupJoinRequestGetRequest_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Cloud_Message_GroupJoinRequestGetRequest_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Cloud_Message_GroupJoinRequestGetRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Cloud_Message_GroupJoinRequestGetRequest_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Cloud_Message_GroupJoinRequestGetRequest_Im_2eproto}, {}};

static void InitDefaultsscc_info_Cloud_Message_GroupJoinRequestGetResponse_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Cloud_Message_GroupJoinRequestGetResponse_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Cloud_Message_GroupJoinRequestGetResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Cloud_Message_GroupJoinRequestGetResponse_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Cloud_Message_GroupJoinRequestGetResponse_Im_2eproto}, {
      &scc_info_Basic_User_Im_2eproto.base,}};

static void InitDefaultsscc_info_Cloud_Message_GroupJoinResponse_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Cloud_Message_GroupJoinResponse_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Cloud_Message_GroupJoinResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Cloud_Message_GroupJoinResponse_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Cloud_Message_GroupJoinResponse_Im_2eproto}, {}};

static void InitDefaultsscc_info_Cloud_Message_GroupKickRequest_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Cloud_Message_GroupKickRequest_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Cloud_Message_GroupKickRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Cloud_Message_GroupKickRequest_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Cloud_Message_GroupKickRequest_Im_2eproto}, {
      &scc_info_Basic_User_Im_2eproto.base,}};

static void InitDefaultsscc_info_Cloud_Message_GroupKickResponse_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Cloud_Message_GroupKickResponse_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Cloud_Message_GroupKickResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Cloud_Message_GroupKickResponse_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Cloud_Message_GroupKickResponse_Im_2eproto}, {}};

static void InitDefaultsscc_info_Cloud_Message_GroupMember_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Cloud_Message_GroupMember_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Cloud_Message_GroupMember();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Cloud_Message_GroupMember_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Cloud_Message_GroupMember_Im_2eproto}, {
      &scc_info_Basic_User_Im_2eproto.base,}};

static void InitDefaultsscc_info_Cloud_Message_GroupMemberBriefInfo_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Cloud_Message_GroupMemberBriefInfo_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Cloud_Message_GroupMemberBriefInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Cloud_Message_GroupMemberBriefInfo_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Cloud_Message_GroupMemberBriefInfo_Im_2eproto}, {
      &scc_info_Basic_User_Im_2eproto.base,}};

static void InitDefaultsscc_info_Cloud_Message_GroupMemberGetRequest_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Cloud_Message_GroupMemberGetRequest_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Cloud_Message_GroupMemberGetRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Cloud_Message_GroupMemberGetRequest_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Cloud_Message_GroupMemberGetRequest_Im_2eproto}, {
      &scc_info_Basic_User_Im_2eproto.base,}};

static void InitDefaultsscc_info_Cloud_Message_GroupMemberGetResponse_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Cloud_Message_GroupMemberGetResponse_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Cloud_Message_GroupMemberGetResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Cloud_Message_GroupMemberGetResponse_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Cloud_Message_GroupMemberGetResponse_Im_2eproto}, {
      &scc_info_Cloud_Message_GroupMember_Im_2eproto.base,}};

static void InitDefaultsscc_info_Cloud_Message_GroupMemberListGetRequest_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Cloud_Message_GroupMemberListGetRequest_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Cloud_Message_GroupMemberListGetRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Cloud_Message_GroupMemberListGetRequest_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Cloud_Message_GroupMemberListGetRequest_Im_2eproto}, {
      &scc_info_Basic_SyncCookie_Im_2eproto.base,}};

static void InitDefaultsscc_info_Cloud_Message_GroupMemberListGetResponse_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Cloud_Message_GroupMemberListGetResponse_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Cloud_Message_GroupMemberListGetResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_Cloud_Message_GroupMemberListGetResponse_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_Cloud_Message_GroupMemberListGetResponse_Im_2eproto}, {
      &scc_info_Cloud_Message_GroupMember_Im_2eproto.base,
      &scc_info_Basic_SyncCookie_Im_2eproto.base,}};

static void InitDefaultsscc_info_Cloud_Message_GroupMemberSettingRequest_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Cloud_Message_GroupMemberSettingRequest_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Cloud_Message_GroupMemberSettingRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_Cloud_Message_GroupMemberSettingRequest_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_Cloud_Message_GroupMemberSettingRequest_Im_2eproto}, {
      &scc_info_Cloud_Message_SetUserNickname_Im_2eproto.base,
      &scc_info_Cloud_Message_SetUserAntiDisturbing_Im_2eproto.base,}};

static void InitDefaultsscc_info_Cloud_Message_GroupMemberSettingResponse_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Cloud_Message_GroupMemberSettingResponse_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Cloud_Message_GroupMemberSettingResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Cloud_Message_GroupMemberSettingResponse_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Cloud_Message_GroupMemberSettingResponse_Im_2eproto}, {}};

static void InitDefaultsscc_info_Cloud_Message_GroupQuitRequest_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Cloud_Message_GroupQuitRequest_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Cloud_Message_GroupQuitRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Cloud_Message_GroupQuitRequest_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Cloud_Message_GroupQuitRequest_Im_2eproto}, {}};

static void InitDefaultsscc_info_Cloud_Message_GroupQuitResponse_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Cloud_Message_GroupQuitResponse_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Cloud_Message_GroupQuitResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Cloud_Message_GroupQuitResponse_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Cloud_Message_GroupQuitResponse_Im_2eproto}, {}};

static void InitDefaultsscc_info_Cloud_Message_GroupSettingDesc_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Cloud_Message_GroupSettingDesc_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Cloud_Message_GroupSettingDesc();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Cloud_Message_GroupSettingDesc_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Cloud_Message_GroupSettingDesc_Im_2eproto}, {}};

static void InitDefaultsscc_info_Cloud_Message_GroupSettingJoinNeedPermission_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Cloud_Message_GroupSettingJoinNeedPermission_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Cloud_Message_GroupSettingJoinNeedPermission();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Cloud_Message_GroupSettingJoinNeedPermission_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Cloud_Message_GroupSettingJoinNeedPermission_Im_2eproto}, {}};

static void InitDefaultsscc_info_Cloud_Message_GroupSettingRename_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Cloud_Message_GroupSettingRename_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Cloud_Message_GroupSettingRename();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Cloud_Message_GroupSettingRename_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Cloud_Message_GroupSettingRename_Im_2eproto}, {}};

static void InitDefaultsscc_info_Cloud_Message_GroupSettingRequest_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Cloud_Message_GroupSettingRequest_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Cloud_Message_GroupSettingRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_Cloud_Message_GroupSettingRequest_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, 0, InitDefaultsscc_info_Cloud_Message_GroupSettingRequest_Im_2eproto}, {
      &scc_info_Cloud_Message_GroupSettingRename_Im_2eproto.base,
      &scc_info_Cloud_Message_GroupSettingDesc_Im_2eproto.base,
      &scc_info_Cloud_Message_GroupSettingJoinNeedPermission_Im_2eproto.base,}};

static void InitDefaultsscc_info_Cloud_Message_GroupSettingResponse_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Cloud_Message_GroupSettingResponse_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Cloud_Message_GroupSettingResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Cloud_Message_GroupSettingResponse_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Cloud_Message_GroupSettingResponse_Im_2eproto}, {}};

static void InitDefaultsscc_info_Cloud_Message_Image_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Cloud_Message_Image_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Cloud_Message_Image();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Cloud_Message_Image_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Cloud_Message_Image_Im_2eproto}, {}};

static void InitDefaultsscc_info_Cloud_Message_ImcNoticeMessage_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Cloud_Message_ImcNoticeMessage_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Cloud_Message_ImcNoticeMessage();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Cloud_Message_ImcNoticeMessage_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Cloud_Message_ImcNoticeMessage_Im_2eproto}, {
      &scc_info_Cloud_Message_NoticePlaceholderMeta_Im_2eproto.base,}};

static void InitDefaultsscc_info_Cloud_Message_ImcPassThroughPush_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Cloud_Message_ImcPassThroughPush_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Cloud_Message_ImcPassThroughPush();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_Cloud_Message_ImcPassThroughPush_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_Cloud_Message_ImcPassThroughPush_Im_2eproto}, {
      &scc_info_ImMessage_ChatTarget_Im_2eproto.base,
      &scc_info_Basic_User_Im_2eproto.base,}};

static void InitDefaultsscc_info_Cloud_Message_ImcPassThroughRequest_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Cloud_Message_ImcPassThroughRequest_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Cloud_Message_ImcPassThroughRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Cloud_Message_ImcPassThroughRequest_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Cloud_Message_ImcPassThroughRequest_Im_2eproto}, {
      &scc_info_ImMessage_ChatTarget_Im_2eproto.base,}};

static void InitDefaultsscc_info_Cloud_Message_ImcPassThroughResponse_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Cloud_Message_ImcPassThroughResponse_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Cloud_Message_ImcPassThroughResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Cloud_Message_ImcPassThroughResponse_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Cloud_Message_ImcPassThroughResponse_Im_2eproto}, {}};

static void InitDefaultsscc_info_Cloud_Message_ImcRecalledMessage_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Cloud_Message_ImcRecalledMessage_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Cloud_Message_ImcRecalledMessage();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_Cloud_Message_ImcRecalledMessage_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_Cloud_Message_ImcRecalledMessage_Im_2eproto}, {
      &scc_info_ImMessage_Message_Im_2eproto.base,
      &scc_info_Cloud_Message_ImcNoticeMessage_Im_2eproto.base,}};

static void InitDefaultsscc_info_Cloud_Message_ImcReplaceMessage_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Cloud_Message_ImcReplaceMessage_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Cloud_Message_ImcReplaceMessage();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Cloud_Message_ImcReplaceMessage_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Cloud_Message_ImcReplaceMessage_Im_2eproto}, {
      &scc_info_ImMessage_Message_Im_2eproto.base,}};

static void InitDefaultsscc_info_Cloud_Message_InputtingContent_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Cloud_Message_InputtingContent_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Cloud_Message_InputtingContent();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Cloud_Message_InputtingContent_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Cloud_Message_InputtingContent_Im_2eproto}, {}};

static void InitDefaultsscc_info_Cloud_Message_NoticePlaceholderMeta_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Cloud_Message_NoticePlaceholderMeta_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Cloud_Message_NoticePlaceholderMeta();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Cloud_Message_NoticePlaceholderMeta_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Cloud_Message_NoticePlaceholderMeta_Im_2eproto}, {}};

static void InitDefaultsscc_info_Cloud_Message_PicUrl_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Cloud_Message_PicUrl_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Cloud_Message_PicUrl();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Cloud_Message_PicUrl_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Cloud_Message_PicUrl_Im_2eproto}, {}};

static void InitDefaultsscc_info_Cloud_Message_Reference_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Cloud_Message_Reference_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Cloud_Message_Reference();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_Cloud_Message_Reference_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_Cloud_Message_Reference_Im_2eproto}, {
      &scc_info_ImMessage_Message_Im_2eproto.base,
      &scc_info_Cloud_Message_Reference_ReferenceMessage_Im_2eproto.base,}};

static void InitDefaultsscc_info_Cloud_Message_Reference_ReferenceMessage_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Cloud_Message_Reference_ReferenceMessage_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Cloud_Message_Reference_ReferenceMessage();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Cloud_Message_Reference_ReferenceMessage_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Cloud_Message_Reference_ReferenceMessage_Im_2eproto}, {}};

static void InitDefaultsscc_info_Cloud_Message_SetUserAntiDisturbing_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Cloud_Message_SetUserAntiDisturbing_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Cloud_Message_SetUserAntiDisturbing();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Cloud_Message_SetUserAntiDisturbing_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Cloud_Message_SetUserAntiDisturbing_Im_2eproto}, {}};

static void InitDefaultsscc_info_Cloud_Message_SetUserNickname_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Cloud_Message_SetUserNickname_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Cloud_Message_SetUserNickname();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Cloud_Message_SetUserNickname_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Cloud_Message_SetUserNickname_Im_2eproto}, {}};

static void InitDefaultsscc_info_Cloud_Message_Text_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Cloud_Message_Text_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Cloud_Message_Text();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Cloud_Message_Text_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Cloud_Message_Text_Im_2eproto}, {}};

static void InitDefaultsscc_info_Cloud_Message_UserGroupGetRequest_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Cloud_Message_UserGroupGetRequest_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Cloud_Message_UserGroupGetRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Cloud_Message_UserGroupGetRequest_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Cloud_Message_UserGroupGetRequest_Im_2eproto}, {}};

static void InitDefaultsscc_info_Cloud_Message_UserGroupGetResponse_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Cloud_Message_UserGroupGetResponse_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Cloud_Message_UserGroupGetResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Cloud_Message_UserGroupGetResponse_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Cloud_Message_UserGroupGetResponse_Im_2eproto}, {
      &scc_info_Cloud_Message_UserGroupInfo_Im_2eproto.base,}};

static void InitDefaultsscc_info_Cloud_Message_UserGroupInfo_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Cloud_Message_UserGroupInfo_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Cloud_Message_UserGroupInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_Cloud_Message_UserGroupInfo_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_Cloud_Message_UserGroupInfo_Im_2eproto}, {
      &scc_info_Cloud_Message_GroupInfo_Im_2eproto.base,
      &scc_info_Cloud_Message_GroupMember_Im_2eproto.base,}};

static void InitDefaultsscc_info_Cloud_Message_UserGroupListRequest_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Cloud_Message_UserGroupListRequest_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Cloud_Message_UserGroupListRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Cloud_Message_UserGroupListRequest_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Cloud_Message_UserGroupListRequest_Im_2eproto}, {
      &scc_info_Basic_SyncCookie_Im_2eproto.base,}};

static void InitDefaultsscc_info_Cloud_Message_UserGroupListResponse_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Cloud_Message_UserGroupListResponse_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Cloud_Message_UserGroupListResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_Cloud_Message_UserGroupListResponse_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_Cloud_Message_UserGroupListResponse_Im_2eproto}, {
      &scc_info_Cloud_Message_UserGroupInfo_Im_2eproto.base,
      &scc_info_Basic_SyncCookie_Im_2eproto.base,}};

static void InitDefaultsscc_info_Cloud_Message_UserGroupRecord_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Cloud_Message_UserGroupRecord_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Cloud_Message_UserGroupRecord();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Cloud_Message_UserGroupRecord_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Cloud_Message_UserGroupRecord_Im_2eproto}, {}};

static void InitDefaultsscc_info_Cloud_Message_Video_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Cloud_Message_Video_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Cloud_Message_Video();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Cloud_Message_Video_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Cloud_Message_Video_Im_2eproto}, {}};

static void InitDefaultsscc_info_Cloud_Profile_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Cloud_Profile_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Cloud_Profile();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Cloud_Profile_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Cloud_Profile_Im_2eproto}, {}};

static void InitDefaultsscc_info_Cloud_Profile_ProfileBatchOnlineTimeRequest_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Cloud_Profile_ProfileBatchOnlineTimeRequest_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Cloud_Profile_ProfileBatchOnlineTimeRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Cloud_Profile_ProfileBatchOnlineTimeRequest_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Cloud_Profile_ProfileBatchOnlineTimeRequest_Im_2eproto}, {
      &scc_info_Basic_User_Im_2eproto.base,}};

static void InitDefaultsscc_info_Cloud_Profile_ProfileBatchOnlineTimeResponse_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Cloud_Profile_ProfileBatchOnlineTimeResponse_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Cloud_Profile_ProfileBatchOnlineTimeResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Cloud_Profile_ProfileBatchOnlineTimeResponse_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Cloud_Profile_ProfileBatchOnlineTimeResponse_Im_2eproto}, {
      &scc_info_Cloud_Profile_UserOnlineStatus_Im_2eproto.base,}};

static void InitDefaultsscc_info_Cloud_Profile_UserOnlineStatus_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_Cloud_Profile_UserOnlineStatus_default_instance_;
    new (ptr) ::AcFunDanmu::Im::Cloud_Profile_UserOnlineStatus();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Cloud_Profile_UserOnlineStatus_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Cloud_Profile_UserOnlineStatus_Im_2eproto}, {
      &scc_info_Basic_User_Im_2eproto.base,}};

static void InitDefaultsscc_info_ImMessage_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_ImMessage_default_instance_;
    new (ptr) ::AcFunDanmu::Im::ImMessage();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ImMessage_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ImMessage_Im_2eproto}, {}};

static void InitDefaultsscc_info_ImMessage_AllUnreadCountRequest_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_ImMessage_AllUnreadCountRequest_default_instance_;
    new (ptr) ::AcFunDanmu::Im::ImMessage_AllUnreadCountRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ImMessage_AllUnreadCountRequest_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ImMessage_AllUnreadCountRequest_Im_2eproto}, {}};

static void InitDefaultsscc_info_ImMessage_AllUnreadCountResponse_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_ImMessage_AllUnreadCountResponse_default_instance_;
    new (ptr) ::AcFunDanmu::Im::ImMessage_AllUnreadCountResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ImMessage_AllUnreadCountResponse_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ImMessage_AllUnreadCountResponse_Im_2eproto}, {}};

static void InitDefaultsscc_info_ImMessage_Attachment_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_ImMessage_Attachment_default_instance_;
    new (ptr) ::AcFunDanmu::Im::ImMessage_Attachment();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ImMessage_Attachment_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_ImMessage_Attachment_Im_2eproto}, {
      &scc_info_ImMessage_ImageAttachment_Im_2eproto.base,
      &scc_info_ImMessage_AudioAttachment_Im_2eproto.base,}};

static void InitDefaultsscc_info_ImMessage_Attachments_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_ImMessage_Attachments_default_instance_;
    new (ptr) ::AcFunDanmu::Im::ImMessage_Attachments();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ImMessage_Attachments_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ImMessage_Attachments_Im_2eproto}, {
      &scc_info_ImMessage_Attachment_Im_2eproto.base,}};

static void InitDefaultsscc_info_ImMessage_AudioAttachment_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_ImMessage_AudioAttachment_default_instance_;
    new (ptr) ::AcFunDanmu::Im::ImMessage_AudioAttachment();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ImMessage_AudioAttachment_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ImMessage_AudioAttachment_Im_2eproto}, {}};

static void InitDefaultsscc_info_ImMessage_ChatSession_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_ImMessage_ChatSession_default_instance_;
    new (ptr) ::AcFunDanmu::Im::ImMessage_ChatSession();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_ImMessage_ChatSession_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, 0, InitDefaultsscc_info_ImMessage_ChatSession_Im_2eproto}, {
      &scc_info_Basic_User_Im_2eproto.base,
      &scc_info_ImMessage_Message_Im_2eproto.base,
      &scc_info_ImMessage_RemindBody_Im_2eproto.base,}};

static void InitDefaultsscc_info_ImMessage_ChatTarget_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_ImMessage_ChatTarget_default_instance_;
    new (ptr) ::AcFunDanmu::Im::ImMessage_ChatTarget();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ImMessage_ChatTarget_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ImMessage_ChatTarget_Im_2eproto}, {}};

static void InitDefaultsscc_info_ImMessage_GifAttachment_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_ImMessage_GifAttachment_default_instance_;
    new (ptr) ::AcFunDanmu::Im::ImMessage_GifAttachment();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ImMessage_GifAttachment_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ImMessage_GifAttachment_Im_2eproto}, {}};

static void InitDefaultsscc_info_ImMessage_ImageAttachment_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_ImMessage_ImageAttachment_default_instance_;
    new (ptr) ::AcFunDanmu::Im::ImMessage_ImageAttachment();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ImMessage_ImageAttachment_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ImMessage_ImageAttachment_Im_2eproto}, {}};

static void InitDefaultsscc_info_ImMessage_ImageTextMessage_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_ImMessage_ImageTextMessage_default_instance_;
    new (ptr) ::AcFunDanmu::Im::ImMessage_ImageTextMessage();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ImMessage_ImageTextMessage_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ImMessage_ImageTextMessage_Im_2eproto}, {}};

static void InitDefaultsscc_info_ImMessage_Message_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_ImMessage_Message_default_instance_;
    new (ptr) ::AcFunDanmu::Im::ImMessage_Message();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ImMessage_Message_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_ImMessage_Message_Im_2eproto}, {
      &scc_info_Basic_User_Im_2eproto.base,
      &scc_info_ImMessage_Reminder_Im_2eproto.base,}};

static void InitDefaultsscc_info_ImMessage_MessageBatchSendRequest_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_ImMessage_MessageBatchSendRequest_default_instance_;
    new (ptr) ::AcFunDanmu::Im::ImMessage_MessageBatchSendRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ImMessage_MessageBatchSendRequest_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ImMessage_MessageBatchSendRequest_Im_2eproto}, {
      &scc_info_ImMessage_Message_Im_2eproto.base,}};

static void InitDefaultsscc_info_ImMessage_MessageBatchSendResponse_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_ImMessage_MessageBatchSendResponse_default_instance_;
    new (ptr) ::AcFunDanmu::Im::ImMessage_MessageBatchSendResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ImMessage_MessageBatchSendResponse_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ImMessage_MessageBatchSendResponse_Im_2eproto}, {
      &scc_info_ImMessage_SendMessageResponse_Im_2eproto.base,}};

static void InitDefaultsscc_info_ImMessage_MessageCancelRequest_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_ImMessage_MessageCancelRequest_default_instance_;
    new (ptr) ::AcFunDanmu::Im::ImMessage_MessageCancelRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ImMessage_MessageCancelRequest_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ImMessage_MessageCancelRequest_Im_2eproto}, {
      &scc_info_ImMessage_ChatTarget_Im_2eproto.base,}};

static void InitDefaultsscc_info_ImMessage_MessageCancelResponse_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_ImMessage_MessageCancelResponse_default_instance_;
    new (ptr) ::AcFunDanmu::Im::ImMessage_MessageCancelResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ImMessage_MessageCancelResponse_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ImMessage_MessageCancelResponse_Im_2eproto}, {}};

static void InitDefaultsscc_info_ImMessage_MessageClearRequest_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_ImMessage_MessageClearRequest_default_instance_;
    new (ptr) ::AcFunDanmu::Im::ImMessage_MessageClearRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ImMessage_MessageClearRequest_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ImMessage_MessageClearRequest_Im_2eproto}, {
      &scc_info_ImMessage_ChatTarget_Im_2eproto.base,}};

static void InitDefaultsscc_info_ImMessage_MessageClearResponse_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_ImMessage_MessageClearResponse_default_instance_;
    new (ptr) ::AcFunDanmu::Im::ImMessage_MessageClearResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ImMessage_MessageClearResponse_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ImMessage_MessageClearResponse_Im_2eproto}, {}};

static void InitDefaultsscc_info_ImMessage_MessageDeleteRequest_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_ImMessage_MessageDeleteRequest_default_instance_;
    new (ptr) ::AcFunDanmu::Im::ImMessage_MessageDeleteRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ImMessage_MessageDeleteRequest_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ImMessage_MessageDeleteRequest_Im_2eproto}, {}};

static void InitDefaultsscc_info_ImMessage_MessageDeleteResponse_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_ImMessage_MessageDeleteResponse_default_instance_;
    new (ptr) ::AcFunDanmu::Im::ImMessage_MessageDeleteResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ImMessage_MessageDeleteResponse_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ImMessage_MessageDeleteResponse_Im_2eproto}, {}};

static void InitDefaultsscc_info_ImMessage_MessageReadAllRequest_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_ImMessage_MessageReadAllRequest_default_instance_;
    new (ptr) ::AcFunDanmu::Im::ImMessage_MessageReadAllRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ImMessage_MessageReadAllRequest_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ImMessage_MessageReadAllRequest_Im_2eproto}, {}};

static void InitDefaultsscc_info_ImMessage_MessageReadAllResponse_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_ImMessage_MessageReadAllResponse_default_instance_;
    new (ptr) ::AcFunDanmu::Im::ImMessage_MessageReadAllResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ImMessage_MessageReadAllResponse_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ImMessage_MessageReadAllResponse_Im_2eproto}, {}};

static void InitDefaultsscc_info_ImMessage_MessageReadPush_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_ImMessage_MessageReadPush_default_instance_;
    new (ptr) ::AcFunDanmu::Im::ImMessage_MessageReadPush();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ImMessage_MessageReadPush_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ImMessage_MessageReadPush_Im_2eproto}, {}};

static void InitDefaultsscc_info_ImMessage_MessageReadSeqRequest_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_ImMessage_MessageReadSeqRequest_default_instance_;
    new (ptr) ::AcFunDanmu::Im::ImMessage_MessageReadSeqRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ImMessage_MessageReadSeqRequest_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ImMessage_MessageReadSeqRequest_Im_2eproto}, {
      &scc_info_ImMessage_ChatTarget_Im_2eproto.base,}};

static void InitDefaultsscc_info_ImMessage_MessageReadSeqResponse_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_ImMessage_MessageReadSeqResponse_default_instance_;
    new (ptr) ::AcFunDanmu::Im::ImMessage_MessageReadSeqResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ImMessage_MessageReadSeqResponse_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ImMessage_MessageReadSeqResponse_Im_2eproto}, {
      &scc_info_ImMessage_ReadSeqInfo_Im_2eproto.base,}};

static void InitDefaultsscc_info_ImMessage_MessageRecallRequest_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_ImMessage_MessageRecallRequest_default_instance_;
    new (ptr) ::AcFunDanmu::Im::ImMessage_MessageRecallRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ImMessage_MessageRecallRequest_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ImMessage_MessageRecallRequest_Im_2eproto}, {
      &scc_info_ImMessage_ChatTarget_Im_2eproto.base,}};

static void InitDefaultsscc_info_ImMessage_MessageRecallResponse_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_ImMessage_MessageRecallResponse_default_instance_;
    new (ptr) ::AcFunDanmu::Im::ImMessage_MessageRecallResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ImMessage_MessageRecallResponse_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ImMessage_MessageRecallResponse_Im_2eproto}, {}};

static void InitDefaultsscc_info_ImMessage_MessageReceiptCountGetRequest_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_ImMessage_MessageReceiptCountGetRequest_default_instance_;
    new (ptr) ::AcFunDanmu::Im::ImMessage_MessageReceiptCountGetRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ImMessage_MessageReceiptCountGetRequest_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ImMessage_MessageReceiptCountGetRequest_Im_2eproto}, {
      &scc_info_ImMessage_ChatTarget_Im_2eproto.base,}};

static void InitDefaultsscc_info_ImMessage_MessageReceiptCountGetResponse_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_ImMessage_MessageReceiptCountGetResponse_default_instance_;
    new (ptr) ::AcFunDanmu::Im::ImMessage_MessageReceiptCountGetResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ImMessage_MessageReceiptCountGetResponse_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ImMessage_MessageReceiptCountGetResponse_Im_2eproto}, {
      &scc_info_ImMessage_MessageReceiptStatus_Im_2eproto.base,}};

static void InitDefaultsscc_info_ImMessage_MessageReceiptDetailGetRequest_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_ImMessage_MessageReceiptDetailGetRequest_default_instance_;
    new (ptr) ::AcFunDanmu::Im::ImMessage_MessageReceiptDetailGetRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ImMessage_MessageReceiptDetailGetRequest_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ImMessage_MessageReceiptDetailGetRequest_Im_2eproto}, {
      &scc_info_ImMessage_ChatTarget_Im_2eproto.base,}};

static void InitDefaultsscc_info_ImMessage_MessageReceiptDetailGetResponse_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_ImMessage_MessageReceiptDetailGetResponse_default_instance_;
    new (ptr) ::AcFunDanmu::Im::ImMessage_MessageReceiptDetailGetResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ImMessage_MessageReceiptDetailGetResponse_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ImMessage_MessageReceiptDetailGetResponse_Im_2eproto}, {
      &scc_info_Basic_User_Im_2eproto.base,}};

static void InitDefaultsscc_info_ImMessage_MessageReceiptInfo_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_ImMessage_MessageReceiptInfo_default_instance_;
    new (ptr) ::AcFunDanmu::Im::ImMessage_MessageReceiptInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ImMessage_MessageReceiptInfo_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ImMessage_MessageReceiptInfo_Im_2eproto}, {}};

static void InitDefaultsscc_info_ImMessage_MessageReceiptRequest_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_ImMessage_MessageReceiptRequest_default_instance_;
    new (ptr) ::AcFunDanmu::Im::ImMessage_MessageReceiptRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ImMessage_MessageReceiptRequest_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_ImMessage_MessageReceiptRequest_Im_2eproto}, {
      &scc_info_ImMessage_MessageReceiptInfo_Im_2eproto.base,
      &scc_info_ImMessage_ChatTarget_Im_2eproto.base,}};

static void InitDefaultsscc_info_ImMessage_MessageReceiptResponse_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_ImMessage_MessageReceiptResponse_default_instance_;
    new (ptr) ::AcFunDanmu::Im::ImMessage_MessageReceiptResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ImMessage_MessageReceiptResponse_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ImMessage_MessageReceiptResponse_Im_2eproto}, {}};

static void InitDefaultsscc_info_ImMessage_MessageReceiptStatus_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_ImMessage_MessageReceiptStatus_default_instance_;
    new (ptr) ::AcFunDanmu::Im::ImMessage_MessageReceiptStatus();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ImMessage_MessageReceiptStatus_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ImMessage_MessageReceiptStatus_Im_2eproto}, {}};

static void InitDefaultsscc_info_ImMessage_NoticeMessage_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_ImMessage_NoticeMessage_default_instance_;
    new (ptr) ::AcFunDanmu::Im::ImMessage_NoticeMessage();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ImMessage_NoticeMessage_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_ImMessage_NoticeMessage_Im_2eproto}, {
      &scc_info_ImMessage_RichTextNoticeMessage_Im_2eproto.base,
      &scc_info_Basic_I18nCopyWriting_Im_2eproto.base,}};

static void InitDefaultsscc_info_ImMessage_PlaceHolderMessage_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_ImMessage_PlaceHolderMessage_default_instance_;
    new (ptr) ::AcFunDanmu::Im::ImMessage_PlaceHolderMessage();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ImMessage_PlaceHolderMessage_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ImMessage_PlaceHolderMessage_Im_2eproto}, {}};

static void InitDefaultsscc_info_ImMessage_PullNewRequest_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_ImMessage_PullNewRequest_default_instance_;
    new (ptr) ::AcFunDanmu::Im::ImMessage_PullNewRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ImMessage_PullNewRequest_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ImMessage_PullNewRequest_Im_2eproto}, {
      &scc_info_Basic_User_Im_2eproto.base,}};

static void InitDefaultsscc_info_ImMessage_PullNewResponse_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_ImMessage_PullNewResponse_default_instance_;
    new (ptr) ::AcFunDanmu::Im::ImMessage_PullNewResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ImMessage_PullNewResponse_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ImMessage_PullNewResponse_Im_2eproto}, {
      &scc_info_ImMessage_Message_Im_2eproto.base,}};

static void InitDefaultsscc_info_ImMessage_PullOldRequest_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_ImMessage_PullOldRequest_default_instance_;
    new (ptr) ::AcFunDanmu::Im::ImMessage_PullOldRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ImMessage_PullOldRequest_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ImMessage_PullOldRequest_Im_2eproto}, {
      &scc_info_Basic_User_Im_2eproto.base,}};

static void InitDefaultsscc_info_ImMessage_PullOldResponse_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_ImMessage_PullOldResponse_default_instance_;
    new (ptr) ::AcFunDanmu::Im::ImMessage_PullOldResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ImMessage_PullOldResponse_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ImMessage_PullOldResponse_Im_2eproto}, {
      &scc_info_ImMessage_Message_Im_2eproto.base,}};

static void InitDefaultsscc_info_ImMessage_ReadSeqInfo_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_ImMessage_ReadSeqInfo_default_instance_;
    new (ptr) ::AcFunDanmu::Im::ImMessage_ReadSeqInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ImMessage_ReadSeqInfo_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ImMessage_ReadSeqInfo_Im_2eproto}, {
      &scc_info_ImMessage_ChatTarget_Im_2eproto.base,}};

static void InitDefaultsscc_info_ImMessage_RemindBody_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_ImMessage_RemindBody_default_instance_;
    new (ptr) ::AcFunDanmu::Im::ImMessage_RemindBody();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ImMessage_RemindBody_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ImMessage_RemindBody_Im_2eproto}, {}};

static void InitDefaultsscc_info_ImMessage_Reminder_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_ImMessage_Reminder_default_instance_;
    new (ptr) ::AcFunDanmu::Im::ImMessage_Reminder();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ImMessage_Reminder_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ImMessage_Reminder_Im_2eproto}, {
      &scc_info_ImMessage_RemindBody_Im_2eproto.base,}};

static void InitDefaultsscc_info_ImMessage_RichTextMessage_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_ImMessage_RichTextMessage_default_instance_;
    new (ptr) ::AcFunDanmu::Im::ImMessage_RichTextMessage();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ImMessage_RichTextMessage_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ImMessage_RichTextMessage_Im_2eproto}, {
      &scc_info_ImMessage_RichTextNoticeMessage_Im_2eproto.base,}};

static void InitDefaultsscc_info_ImMessage_RichTextNoticeMessage_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_ImMessage_RichTextNoticeMessage_default_instance_;
    new (ptr) ::AcFunDanmu::Im::ImMessage_RichTextNoticeMessage();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ImMessage_RichTextNoticeMessage_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ImMessage_RichTextNoticeMessage_Im_2eproto}, {
      &scc_info_ImMessage_RichTextNoticeMessage_RichTextItem_Im_2eproto.base,}};

static void InitDefaultsscc_info_ImMessage_RichTextNoticeMessage_RichTextItem_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_ImMessage_RichTextNoticeMessage_RichTextItem_default_instance_;
    new (ptr) ::AcFunDanmu::Im::ImMessage_RichTextNoticeMessage_RichTextItem();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ImMessage_RichTextNoticeMessage_RichTextItem_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ImMessage_RichTextNoticeMessage_RichTextItem_Im_2eproto}, {}};

static void InitDefaultsscc_info_ImMessage_SendMessageResponse_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_ImMessage_SendMessageResponse_default_instance_;
    new (ptr) ::AcFunDanmu::Im::ImMessage_SendMessageResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ImMessage_SendMessageResponse_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ImMessage_SendMessageResponse_Im_2eproto}, {}};

static void InitDefaultsscc_info_ImMessage_SesionStickyOnTopRequest_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_ImMessage_SesionStickyOnTopRequest_default_instance_;
    new (ptr) ::AcFunDanmu::Im::ImMessage_SesionStickyOnTopRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ImMessage_SesionStickyOnTopRequest_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ImMessage_SesionStickyOnTopRequest_Im_2eproto}, {
      &scc_info_ImMessage_ChatTarget_Im_2eproto.base,}};

static void InitDefaultsscc_info_ImMessage_SessionCleanRequest_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_ImMessage_SessionCleanRequest_default_instance_;
    new (ptr) ::AcFunDanmu::Im::ImMessage_SessionCleanRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ImMessage_SessionCleanRequest_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ImMessage_SessionCleanRequest_Im_2eproto}, {
      &scc_info_ImMessage_ChatTarget_Im_2eproto.base,}};

static void InitDefaultsscc_info_ImMessage_SessionCleanResponse_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_ImMessage_SessionCleanResponse_default_instance_;
    new (ptr) ::AcFunDanmu::Im::ImMessage_SessionCleanResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ImMessage_SessionCleanResponse_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ImMessage_SessionCleanResponse_Im_2eproto}, {}};

static void InitDefaultsscc_info_ImMessage_SessionListRequest_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_ImMessage_SessionListRequest_default_instance_;
    new (ptr) ::AcFunDanmu::Im::ImMessage_SessionListRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ImMessage_SessionListRequest_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ImMessage_SessionListRequest_Im_2eproto}, {
      &scc_info_Basic_SyncCookie_Im_2eproto.base,}};

static void InitDefaultsscc_info_ImMessage_SessionListResponse_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_ImMessage_SessionListResponse_default_instance_;
    new (ptr) ::AcFunDanmu::Im::ImMessage_SessionListResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ImMessage_SessionListResponse_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_ImMessage_SessionListResponse_Im_2eproto}, {
      &scc_info_Basic_SyncCookie_Im_2eproto.base,
      &scc_info_ImMessage_ChatSession_Im_2eproto.base,}};

static void InitDefaultsscc_info_ImMessage_SessionPageListRequest_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_ImMessage_SessionPageListRequest_default_instance_;
    new (ptr) ::AcFunDanmu::Im::ImMessage_SessionPageListRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ImMessage_SessionPageListRequest_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ImMessage_SessionPageListRequest_Im_2eproto}, {}};

static void InitDefaultsscc_info_ImMessage_SessionPageListResponse_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_ImMessage_SessionPageListResponse_default_instance_;
    new (ptr) ::AcFunDanmu::Im::ImMessage_SessionPageListResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ImMessage_SessionPageListResponse_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ImMessage_SessionPageListResponse_Im_2eproto}, {
      &scc_info_ImMessage_ChatSession_Im_2eproto.base,}};

static void InitDefaultsscc_info_ImMessage_SessionRaw_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_ImMessage_SessionRaw_default_instance_;
    new (ptr) ::AcFunDanmu::Im::ImMessage_SessionRaw();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ImMessage_SessionRaw_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ImMessage_SessionRaw_Im_2eproto}, {
      &scc_info_ImMessage_SessionRaw_RawEntry_DoNotUse_Im_2eproto.base,}};

static void InitDefaultsscc_info_ImMessage_SessionRaw_RawEntry_DoNotUse_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_ImMessage_SessionRaw_RawEntry_DoNotUse_default_instance_;
    new (ptr) ::AcFunDanmu::Im::ImMessage_SessionRaw_RawEntry_DoNotUse();
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ImMessage_SessionRaw_RawEntry_DoNotUse_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ImMessage_SessionRaw_RawEntry_DoNotUse_Im_2eproto}, {}};

static void InitDefaultsscc_info_ImMessage_SessionRemoveRequest_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_ImMessage_SessionRemoveRequest_default_instance_;
    new (ptr) ::AcFunDanmu::Im::ImMessage_SessionRemoveRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ImMessage_SessionRemoveRequest_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ImMessage_SessionRemoveRequest_Im_2eproto}, {}};

static void InitDefaultsscc_info_ImMessage_SessionRemoveResponse_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_ImMessage_SessionRemoveResponse_default_instance_;
    new (ptr) ::AcFunDanmu::Im::ImMessage_SessionRemoveResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ImMessage_SessionRemoveResponse_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ImMessage_SessionRemoveResponse_Im_2eproto}, {}};

static void InitDefaultsscc_info_ImMessage_SessionStickyOnTopResponse_Im_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AcFunDanmu::Im::_ImMessage_SessionStickyOnTopResponse_default_instance_;
    new (ptr) ::AcFunDanmu::Im::ImMessage_SessionStickyOnTopResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ImMessage_SessionStickyOnTopResponse_Im_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ImMessage_SessionStickyOnTopResponse_Im_2eproto}, {
      &scc_info_ImMessage_ChatSession_Im_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_Im_2eproto[184];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_Im_2eproto[38];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_Im_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_Im_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_PacketHeader, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_PacketHeader, appid_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_PacketHeader, uid_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_PacketHeader, instanceid_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_PacketHeader, flags_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_PacketHeader, encodingtype_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_PacketHeader, decodedpayloadlen_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_PacketHeader, encryptionmode_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_PacketHeader, tokeninfo_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_PacketHeader, seqid_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_PacketHeader, features_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_User, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_User, appid_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_User, uid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_UserInstance, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_UserInstance, user_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_UserInstance, instanceid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_UpstreamPayload, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_UpstreamPayload, command_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_UpstreamPayload, seqid_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_UpstreamPayload, retrycount_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_UpstreamPayload, payloaddata_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_UpstreamPayload, userinstance_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_UpstreamPayload, errorcode_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_UpstreamPayload, settinginfo_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_UpstreamPayload, requestbasicinfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_DownstreamPayload, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_DownstreamPayload, command_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_DownstreamPayload, seqid_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_DownstreamPayload, errorcode_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_DownstreamPayload, payloaddata_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_DownstreamPayload, errormsg_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_DownstreamPayload, errordata_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_PingRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_PingRequest, pingtype_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_PingRequest, pinground_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_PingResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_PingResponse, servertimestamp_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_PingResponse, clientip_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_PingResponse, redirectip_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_PingResponse, redirectport_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_RegisterRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_RegisterRequest, appinfo_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_RegisterRequest, deviceinfo_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_RegisterRequest, envinfo_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_RegisterRequest, presencestatus_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_RegisterRequest, appactivestatus_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_RegisterRequest, appcustomstatus_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_RegisterRequest, pushservicetoken_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_RegisterRequest, instanceid_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_RegisterRequest, pushservicetokenlist_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_RegisterRequest, keepaliveintervalsec_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_RegisterResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_RegisterResponse, accesspointsconfig_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_RegisterResponse, sesskey_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_RegisterResponse, instanceid_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_RegisterResponse, sdkoption_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_AccessPointsConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_AccessPointsConfig, optimalaps_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_AccessPointsConfig, backupaps_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_AccessPointsConfig, availableports_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_AccessPointsConfig, forecelastconnectedap_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_UnregisterRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_UnregisterResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_KeepAliveRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_KeepAliveRequest, presencestatus_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_KeepAliveRequest, appactivestatus_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_KeepAliveRequest, pushservicetoken_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_KeepAliveRequest, pushservicetokenlist_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_KeepAliveRequest, keepaliveintervalsec_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_KeepAliveResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_KeepAliveResponse, accesspointsconfig_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_KeepAliveResponse, servermsec_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_AccessPoint, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_AccessPoint, addresstype_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_AccessPoint, port_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_AccessPoint, ipv4_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_AccessPoint, ipv6_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_AccessPoint, domain_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_TokenInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_TokenInfo, tokentype_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_TokenInfo, token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_PushServiceToken, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_PushServiceToken, pushtype_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_PushServiceToken, token_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_PushServiceToken, ispassthrough_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_SettingInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_SettingInfo, locale_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_SettingInfo, timezone_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_AppInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_AppInfo, appname_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_AppInfo, appversion_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_AppInfo, appchannel_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_AppInfo, sdkversion_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_AppInfo, extensioninfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_DeviceInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_DeviceInfo, platformtype_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_DeviceInfo, osversion_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_DeviceInfo, devicemodel_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_DeviceInfo, imeimd5_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_DeviceInfo, deviceid_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_DeviceInfo, softdid_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_DeviceInfo, kwaidid_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_DeviceInfo, manufacturer_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_EnvInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_EnvInfo, networktype_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_EnvInfo, appname_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_RequestBasicInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_RequestBasicInfo, clienttype_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_RequestBasicInfo, deviceid_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_RequestBasicInfo, clientip_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_RequestBasicInfo, appversion_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_RequestBasicInfo, channel_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_RequestBasicInfo, appinfo_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_RequestBasicInfo, deviceinfo_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_RequestBasicInfo, envinfo_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_RequestBasicInfo, clientport_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_RequestBasicInfo, location_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_SyncCookie, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_SyncCookie, syncoffset_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_I18nCopyWriting, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_I18nCopyWriting, formatkey_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_I18nCopyWriting, formatparam_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_SdkOption, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_SdkOption, reportintervalseconds_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_SdkOption, reportsecurity_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_SdkOption, lz4compressionthresholdbytes_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_LocaleMessage_ErrorMessageEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_LocaleMessage_ErrorMessageEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_LocaleMessage_ErrorMessageEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_LocaleMessage_ErrorMessageEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_LocaleMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_LocaleMessage, locale_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_LocaleMessage, errormessage_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_ErrorMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic_ErrorMessage, localemessages_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Basic, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_Message, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_Message, seqid_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_Message, clientseqid_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_Message, timestampms_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_Message, fromuser_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_Message, targetid_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_Message, touser_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_Message, title_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_Message, contenttype_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_Message, content_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_Message, buckuptips_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_Message, receivers_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_Message, notcontentunread_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_Message, sessionpriority_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_Message, sessioncategoryid_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_Message, sessionaccounttype_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_Message, notautocreatesession_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_Message, userrelationship_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_Message, strtargetid_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_Message, excludereceivers_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_Message, markdelte_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_Message, reminder_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_Message, extra_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_Message, receiptrequired_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_SendMessageResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_SendMessageResponse, clientseqid_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_SendMessageResponse, messagetimestamp_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_SendMessageResponse, seqid_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_SendMessageResponse, sessionaccounttype_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_SendMessageResponse, sessionpriority_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_SendMessageResponse, sessioncategoryid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_PullOldRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_PullOldRequest, target_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_PullOldRequest, minseq_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_PullOldRequest, maxseq_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_PullOldRequest, count_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_PullOldRequest, targetid_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_PullOldRequest, strtargetid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_PullOldResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_PullOldResponse, messages_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_PullOldResponse, servertime_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_PullNewRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_PullNewRequest, target_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_PullNewRequest, minseq_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_PullNewRequest, count_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_PullNewRequest, targetid_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_PullNewRequest, strtargetid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_PullNewResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_PullNewResponse, messages_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_SessionListRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_SessionListRequest, synccookie_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_SessionListRequest, categoryid_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_SessionListRequest, localdatastatus_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_ChatSession, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_ChatSession, target_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_ChatSession, maxseqid_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_ChatSession, readseqid_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_ChatSession, unreadmsgcount_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_ChatSession, latestmessage_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_ChatSession, chattargettype_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_ChatSession, targetid_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_ChatSession, activetime_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_ChatSession, priority_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_ChatSession, categoryid_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_ChatSession, cursor_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_ChatSession, accounttype_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_ChatSession, aggregatesession_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_ChatSession, jumpcategoryid_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_ChatSession, expireat_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_ChatSession, effectivefrom_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_ChatSession, strtargetid_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_ChatSession, remindbody_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_ChatSession, targetreadseqid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_Reminder, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_Reminder, origintext_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_Reminder, remindbody_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_RemindBody, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_RemindBody, remindtype_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_RemindBody, seqid_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_RemindBody, targetid_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_RemindBody, username_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_RemindBody, startindex_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_RemindBody, length_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_ChatTarget, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_ChatTarget, targetid_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_ChatTarget, targettype_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_SessionListResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_SessionListResponse, synccookie_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_SessionListResponse, sessions_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_SessionListResponse, notfullfetch_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_SessionListResponse, servertime_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_SessionListResponse, clearlocaldata_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_SessionListResponse, categoryid_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_SessionListResponse, clientdatastatus_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_SessionPageListRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_SessionPageListRequest, cursor_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_SessionPageListRequest, count_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_SessionPageListRequest, categoryid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_SessionPageListResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_SessionPageListResponse, hasmore_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_SessionPageListResponse, sessions_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_SessionRemoveRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_SessionRemoveRequest, targetid_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_SessionRemoveRequest, chattargettype_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_SessionRemoveRequest, categoryid_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_SessionRemoveRequest, strtargetid_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_SessionRemoveRequest, notcleanallmessages_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_SessionRemoveResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_SessionCleanRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_SessionCleanRequest, chattarget_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_SessionCleanResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_MessageDeleteRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_MessageDeleteRequest, targetid_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_MessageDeleteRequest, chattargettype_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_MessageDeleteRequest, seqid_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_MessageDeleteRequest, strtargetid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_MessageDeleteResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_MessageCancelRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_MessageCancelRequest, chattarget_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_MessageCancelRequest, seqid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_MessageCancelResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_MessageClearRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_MessageClearRequest, chattarget_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_MessageClearResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_ReadSeqInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_ReadSeqInfo, chattarget_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_ReadSeqInfo, readseq_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_MessageReadSeqRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_MessageReadSeqRequest, chattarget_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_MessageReadSeqResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_MessageReadSeqResponse, readseqinfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_MessageReadPush, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_MessageReadPush, targetid_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_MessageReadPush, readseq_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_MessageReadPush, chattargettype_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_MessageReadPush, strtargetid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_AllUnreadCountRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_AllUnreadCountResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_AllUnreadCountResponse, allunreadcount_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_MessageReadAllRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_MessageReadAllRequest, sessioncategoryid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_MessageReadAllResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_MessageReadAllResponse, readalltimestamp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_SesionStickyOnTopRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_SesionStickyOnTopRequest, chattarget_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_SesionStickyOnTopRequest, stickyontop_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_SessionStickyOnTopResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_SessionStickyOnTopResponse, session_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_SessionRaw_RawEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_SessionRaw_RawEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_SessionRaw_RawEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_SessionRaw_RawEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_SessionRaw, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_SessionRaw, raw_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_MessageRecallRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_MessageRecallRequest, chattarget_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_MessageRecallRequest, seqid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_MessageRecallResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_MessageReceiptRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_MessageReceiptRequest, messagereceiptinfo_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_MessageReceiptRequest, chattarget_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_MessageReceiptResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_MessageReceiptInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_MessageReceiptInfo, readseq_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_MessageReceiptCountGetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_MessageReceiptCountGetRequest, seqid_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_MessageReceiptCountGetRequest, chattarget_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_MessageReceiptCountGetResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_MessageReceiptCountGetResponse, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_MessageReceiptStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_MessageReceiptStatus, readcount_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_MessageReceiptStatus, unreadcount_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_MessageReceiptStatus, seqid_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_MessageReceiptStatus, servertime_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_MessageReceiptDetailGetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_MessageReceiptDetailGetRequest, seqid_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_MessageReceiptDetailGetRequest, chattarget_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_MessageReceiptDetailGetResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_MessageReceiptDetailGetResponse, readuser_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_MessageReceiptDetailGetResponse, unreaduser_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_MessageBatchSendRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_MessageBatchSendRequest, message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_MessageBatchSendResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_MessageBatchSendResponse, response_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_ImageAttachment, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_ImageAttachment, mimetype_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_ImageAttachment, url_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_ImageAttachment, width_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_ImageAttachment, height_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_ImageAttachment, lengthinbytes_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_AudioAttachment, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_AudioAttachment, mimetype_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_AudioAttachment, url_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_AudioAttachment, width_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_AudioAttachment, height_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_AudioAttachment, lengthinbytes_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_GifAttachment, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_GifAttachment, mimetype_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_GifAttachment, url_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_GifAttachment, width_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_GifAttachment, height_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_GifAttachment, thumbaurl_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_GifAttachment, text_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_Attachment, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_Attachment, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_Attachment, attacmnent_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_Attachments, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_Attachments, attachments_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_PlaceHolderMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_PlaceHolderMessage, minseq_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_PlaceHolderMessage, maxseq_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_ImageTextMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_ImageTextMessage, title_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_ImageTextMessage, description_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_ImageTextMessage, imageurl_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_ImageTextMessage, actionurl_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_ImageTextMessage, width_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_ImageTextMessage, aspectratio_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_RichTextMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_RichTextMessage, richtextmessage_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_NoticeMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_NoticeMessage, richtextnotice_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_NoticeMessage, msg_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_NoticeMessage, i18ncopywriting_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_RichTextNoticeMessage_RichTextItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_RichTextNoticeMessage_RichTextItem, color_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_RichTextNoticeMessage_RichTextItem, start_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_RichTextNoticeMessage_RichTextItem, len_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_RichTextNoticeMessage_RichTextItem, clickaction_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_RichTextNoticeMessage_RichTextItem, underline_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_RichTextNoticeMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage_RichTextNoticeMessage, items_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::ImMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Channel_ChannelSubscribeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Channel_ChannelSubscribeRequest, channelid_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Channel_ChannelSubscribeRequest, setbarrier_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Channel_ChannelSubscribeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Channel_ChannelUnsubscribeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Channel_ChannelUnsubscribeRequest, channelid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Channel_ChannelSubscribersGetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Channel_ChannelSubscribersGetRequest, channelid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Channel_ChannelSubscribersGetResposne, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Channel_ChannelSubscribersGetResposne, subscriber_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Channel_ChannelBasicInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Channel_ChannelBasicInfo, channelid_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Channel_ChannelBasicInfo, subscribercount_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Channel_UserActionInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Channel_UserActionInfo, user_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Channel_UserActionInfo, action_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Channel_UserActionInfo, timestamp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Channel_ChannelBasicInfoGetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Channel_ChannelBasicInfoGetRequest, channelid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Channel_ChannelBasicInfoGetResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Channel_ChannelBasicInfoGetResponse, basicinfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Channel_ChannelHeartbeatRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Channel_ChannelHeartbeatRequest, channelid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Channel_ChannelHeartbeatResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Channel_ChannelHeartbeatResponse, notexistchannelid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Channel_ChannelBasicInfoNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Channel_ChannelBasicInfoNotify, useractioninfo_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Channel_ChannelBasicInfoNotify, basicinfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Channel, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Config_ClientConfigGetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Config_ClientConfigGetRequest, version_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Config_ClientConfigGetResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Config_ClientConfigGetResponse, version_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Config_ClientConfigGetResponse, clientconfig_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Config_NetworkQualityDetectionConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Config_NetworkQualityDetectionConfig, detectiondomain_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Config_NetworkQualityDetectionConfig, detectioninvervalsec_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Config_ClientConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Config_ClientConfig, fetchuserstatusinterval_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Config_ClientConfig, channeluserheartbeatinterval_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Config_ClientConfig, networkqualitydetectionconfig_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Config_ClientConfig, inputtingtipdisplayinterval_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Config_ClientConfig, batchsendmessagemaxcount_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Config_ClientConfig, resourceuploadingdomain_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Config, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Profile_UserOnlineStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Profile_UserOnlineStatus, user_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Profile_UserOnlineStatus, lastofflinetime_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Profile_UserOnlineStatus, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Profile_ProfileBatchOnlineTimeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Profile_ProfileBatchOnlineTimeRequest, user_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Profile_ProfileBatchOnlineTimeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Profile_ProfileBatchOnlineTimeResponse, useronlinestatus_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Profile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Data_Update_KsImDataUpdatePushPayload, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Data_Update_KsImDataUpdatePushPayload, type_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Data_Update_KsImDataUpdatePushPayload, content_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Data_Update_GroupInfoDataUpdate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Data_Update_GroupInfoDataUpdate, groupid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Data_Update_GroupMemberListUpdate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Data_Update_GroupMemberListUpdate, groupid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Data_Update_YouBeKicked, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Data_Update_YouBeKicked, groupid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Data_Update_MessageRead, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Data_Update_MessageRead, strtargetid_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Data_Update_MessageRead, readseq_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Data_Update_MessageRead, chattargettype_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Data_Update_MessageReceipt, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Data_Update_MessageReceipt, chattarget_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Data_Update_MessageReceipt, receiptstatus_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Data_Update, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Data, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_ImcRecalledMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_ImcRecalledMessage, originmsg_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_ImcRecalledMessage, noticemsg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_ImcReplaceMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_ImcReplaceMessage, replacemsg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_Text, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_Text, text_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_Image, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_Image, uri_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_Image, width_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_Image, height_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_Audio, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_Audio, uri_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_Audio, duration_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_Audio, type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_Video, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_Video, uri_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_Video, duration_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_Video, width_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_Video, height_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_Video, coveruri_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_Video, type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_Custom, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_Custom, payload_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_PicUrl, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_PicUrl, cdn_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_PicUrl, url_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_PicUrl, urlpattern_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_PicUrl, ip_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_Emoticon_Code, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_Emoticon_Code, language_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_Emoticon_Code, code_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_Emoticon, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_Emoticon, id_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_Emoticon, packageid_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_Emoticon, name_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_Emoticon, type_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_Emoticon, bigurl_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_Emoticon, width_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_Emoticon, height_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_Emoticon, emoticoncode_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_File, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_File, uri_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_File, name_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_File, ext_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_File, extra_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_Reference_ReferenceMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_Reference_ReferenceMessage, contenttype_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_Reference_ReferenceMessage, content_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_Reference, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_Reference, originmsg_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_Reference, referencemsg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_ForwardMessageContent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_ForwardMessageContent, message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_NoticePlaceholderMeta, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_NoticePlaceholderMeta, targetid_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_NoticePlaceholderMeta, startindex_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_NoticePlaceholderMeta, length_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_ImcNoticeMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_ImcNoticeMessage, text_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_ImcNoticeMessage, noticeplaceholdermeta_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_ImcNoticeMessage, noticemetatype_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_ImcNoticeMessage, noticemetainfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_ConfirmInviteIntoGroupNoticeMetaInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_ConfirmInviteIntoGroupNoticeMetaInfo, requestid_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_ConfirmInviteIntoGroupNoticeMetaInfo, groupid_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_ConfirmInviteIntoGroupNoticeMetaInfo, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_ConfirmJoinIntoGroupNoticeMetaInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_ConfirmJoinIntoGroupNoticeMetaInfo, requestid_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_ConfirmJoinIntoGroupNoticeMetaInfo, groupid_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_ConfirmJoinIntoGroupNoticeMetaInfo, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupCreateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupCreateRequest, members_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupCreateReponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupCreateReponse, groupid_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupCreateReponse, groupinfo_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupCreateReponse, members_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupDeleteRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupDeleteRequest, groupid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupDeleteResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupInviteRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupInviteRequest, groupid_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupInviteRequest, members_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupInviteRequest, desccontent_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupInvideResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupInvideResponse, groupid_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupInvideResponse, invitestatus_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupJoinRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupJoinRequest, groupid_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupJoinRequest, inviter_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupJoinRequest, desccontent_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupJoinRequest, findtype_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupJoinResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupJoinResponse, joinstatus_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupJoinRequestAckRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupJoinRequestAckRequest, reqid_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupJoinRequestAckRequest, groupid_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupJoinRequestAckRequest, groupjoinacktype_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupJoinRequestAckResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupJoinRequestGetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupJoinRequestGetRequest, reqseq_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupJoinRequestGetRequest, groupid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupJoinRequestGetResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupJoinRequestGetResponse, groupid_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupJoinRequestGetResponse, inviter_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupJoinRequestGetResponse, invitees_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupJoinRequestGetResponse, findway_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupJoinRequestGetResponse, desccontent_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupJoinRequestGetResponse, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupJoinRequestCancelRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupJoinRequestCancelRequest, reqseq_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupJoinRequestCancelRequest, groupid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupJoinRequestCancelResposne, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupJoinRequestCancelResposne, groupid_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupJoinRequestCancelResposne, inviter_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupJoinRequestCancelResposne, invitees_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupJoinRequestCancelResposne, findway_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupJoinRequestCancelResposne, desccontent_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupJoinRequestCancelResposne, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupQuitRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupQuitRequest, groupid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupQuitResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupQuitResponse, groupid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupKickRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupKickRequest, groupid_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupKickRequest, target_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupKickResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupKickResponse, groupid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupSettingRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupSettingRequest, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupSettingRequest, groupid_),
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupSettingRequest, GroupSetting_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupSettingRename, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupSettingRename, groupname_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupSettingDesc, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupSettingDesc, desc_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupSettingJoinNeedPermission, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupSettingJoinNeedPermission, joinneedpermission_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupSettingResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupMemberSettingRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupMemberSettingRequest, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupMemberSettingRequest, groupid_),
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupMemberSettingRequest, UserSetting_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_SetUserNickname, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_SetUserNickname, nickname_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_SetUserAntiDisturbing, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_SetUserAntiDisturbing, antidisturbing_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupMemberSettingResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupMemberListGetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupMemberListGetRequest, groupid_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupMemberListGetRequest, synccookie_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupMemberListGetResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupMemberListGetResponse, members_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupMemberListGetResponse, synccookie_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupMemberGetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupMemberGetRequest, groupid_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupMemberGetRequest, user_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupMemberGetResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupMemberGetResponse, member_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_UserGroupListRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_UserGroupListRequest, synccookie_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_UserGroupListResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_UserGroupListResponse, usergroupinfo_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_UserGroupListResponse, synccookie_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_UserGroupRecord, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_UserGroupRecord, groupid_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_UserGroupRecord, updatetime_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_UserGroupGetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_UserGroupGetRequest, groupid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_UserGroupGetResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_UserGroupGetResponse, usergroupinfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_UserGroupInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_UserGroupInfo, groupinfo_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_UserGroupInfo, groupmember_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupMember, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupMember, user_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupMember, nickname_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupMember, antidisturbing_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupMember, status_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupMember, inviterid_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupMember, jointime_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupMember, createtime_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupMember, updatetime_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupMember, role_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupMember, findtype_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupInfo, basicinfo_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupInfo, groupmemberbriefinfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupBasicInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupBasicInfo, groupid_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupBasicInfo, groupname_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupBasicInfo, admin_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupBasicInfo, groupstatus_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupBasicInfo, description_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupBasicInfo, joinneedpermission_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupBasicInfo, createtime_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupBasicInfo, updatetime_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupBasicInfo, grouptype_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupBasicInfo, forbiddenstate_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupMemberBriefInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupMemberBriefInfo, membercount_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupMemberBriefInfo, topmembers_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_GroupMemberBriefInfo, lastupdatetime_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_ImcPassThroughRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_ImcPassThroughRequest, chattarget_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_ImcPassThroughRequest, content_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_ImcPassThroughRequest, contenttype_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_ImcPassThroughResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_ImcPassThroughPush, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_ImcPassThroughPush, chattarget_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_ImcPassThroughPush, fromuser_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_ImcPassThroughPush, content_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_ImcPassThroughPush, contenttype_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_InputtingContent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message_InputtingContent, displayinterval_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud_Message, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::Im::Cloud, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::AcFunDanmu::Im::Basic_PacketHeader)},
  { 15, -1, sizeof(::AcFunDanmu::Im::Basic_User)},
  { 22, -1, sizeof(::AcFunDanmu::Im::Basic_UserInstance)},
  { 29, -1, sizeof(::AcFunDanmu::Im::Basic_UpstreamPayload)},
  { 42, -1, sizeof(::AcFunDanmu::Im::Basic_DownstreamPayload)},
  { 53, -1, sizeof(::AcFunDanmu::Im::Basic_PingRequest)},
  { 60, -1, sizeof(::AcFunDanmu::Im::Basic_PingResponse)},
  { 69, -1, sizeof(::AcFunDanmu::Im::Basic_RegisterRequest)},
  { 84, -1, sizeof(::AcFunDanmu::Im::Basic_RegisterResponse)},
  { 93, -1, sizeof(::AcFunDanmu::Im::Basic_AccessPointsConfig)},
  { 102, -1, sizeof(::AcFunDanmu::Im::Basic_UnregisterRequest)},
  { 107, -1, sizeof(::AcFunDanmu::Im::Basic_UnregisterResponse)},
  { 112, -1, sizeof(::AcFunDanmu::Im::Basic_KeepAliveRequest)},
  { 122, -1, sizeof(::AcFunDanmu::Im::Basic_KeepAliveResponse)},
  { 129, -1, sizeof(::AcFunDanmu::Im::Basic_AccessPoint)},
  { 139, -1, sizeof(::AcFunDanmu::Im::Basic_TokenInfo)},
  { 146, -1, sizeof(::AcFunDanmu::Im::Basic_PushServiceToken)},
  { 154, -1, sizeof(::AcFunDanmu::Im::Basic_SettingInfo)},
  { 161, -1, sizeof(::AcFunDanmu::Im::Basic_AppInfo)},
  { 171, -1, sizeof(::AcFunDanmu::Im::Basic_DeviceInfo)},
  { 184, -1, sizeof(::AcFunDanmu::Im::Basic_EnvInfo)},
  { 191, -1, sizeof(::AcFunDanmu::Im::Basic_RequestBasicInfo)},
  { 206, -1, sizeof(::AcFunDanmu::Im::Basic_SyncCookie)},
  { 212, -1, sizeof(::AcFunDanmu::Im::Basic_I18nCopyWriting)},
  { 219, -1, sizeof(::AcFunDanmu::Im::Basic_SdkOption)},
  { 227, 234, sizeof(::AcFunDanmu::Im::Basic_LocaleMessage_ErrorMessageEntry_DoNotUse)},
  { 236, -1, sizeof(::AcFunDanmu::Im::Basic_LocaleMessage)},
  { 243, -1, sizeof(::AcFunDanmu::Im::Basic_ErrorMessage)},
  { 249, -1, sizeof(::AcFunDanmu::Im::Basic)},
  { 254, -1, sizeof(::AcFunDanmu::Im::ImMessage_Message)},
  { 282, -1, sizeof(::AcFunDanmu::Im::ImMessage_SendMessageResponse)},
  { 293, -1, sizeof(::AcFunDanmu::Im::ImMessage_PullOldRequest)},
  { 304, -1, sizeof(::AcFunDanmu::Im::ImMessage_PullOldResponse)},
  { 311, -1, sizeof(::AcFunDanmu::Im::ImMessage_PullNewRequest)},
  { 321, -1, sizeof(::AcFunDanmu::Im::ImMessage_PullNewResponse)},
  { 327, -1, sizeof(::AcFunDanmu::Im::ImMessage_SessionListRequest)},
  { 335, -1, sizeof(::AcFunDanmu::Im::ImMessage_ChatSession)},
  { 359, -1, sizeof(::AcFunDanmu::Im::ImMessage_Reminder)},
  { 366, -1, sizeof(::AcFunDanmu::Im::ImMessage_RemindBody)},
  { 377, -1, sizeof(::AcFunDanmu::Im::ImMessage_ChatTarget)},
  { 384, -1, sizeof(::AcFunDanmu::Im::ImMessage_SessionListResponse)},
  { 396, -1, sizeof(::AcFunDanmu::Im::ImMessage_SessionPageListRequest)},
  { 404, -1, sizeof(::AcFunDanmu::Im::ImMessage_SessionPageListResponse)},
  { 411, -1, sizeof(::AcFunDanmu::Im::ImMessage_SessionRemoveRequest)},
  { 421, -1, sizeof(::AcFunDanmu::Im::ImMessage_SessionRemoveResponse)},
  { 426, -1, sizeof(::AcFunDanmu::Im::ImMessage_SessionCleanRequest)},
  { 432, -1, sizeof(::AcFunDanmu::Im::ImMessage_SessionCleanResponse)},
  { 437, -1, sizeof(::AcFunDanmu::Im::ImMessage_MessageDeleteRequest)},
  { 446, -1, sizeof(::AcFunDanmu::Im::ImMessage_MessageDeleteResponse)},
  { 451, -1, sizeof(::AcFunDanmu::Im::ImMessage_MessageCancelRequest)},
  { 458, -1, sizeof(::AcFunDanmu::Im::ImMessage_MessageCancelResponse)},
  { 463, -1, sizeof(::AcFunDanmu::Im::ImMessage_MessageClearRequest)},
  { 469, -1, sizeof(::AcFunDanmu::Im::ImMessage_MessageClearResponse)},
  { 474, -1, sizeof(::AcFunDanmu::Im::ImMessage_ReadSeqInfo)},
  { 481, -1, sizeof(::AcFunDanmu::Im::ImMessage_MessageReadSeqRequest)},
  { 487, -1, sizeof(::AcFunDanmu::Im::ImMessage_MessageReadSeqResponse)},
  { 493, -1, sizeof(::AcFunDanmu::Im::ImMessage_MessageReadPush)},
  { 502, -1, sizeof(::AcFunDanmu::Im::ImMessage_AllUnreadCountRequest)},
  { 507, -1, sizeof(::AcFunDanmu::Im::ImMessage_AllUnreadCountResponse)},
  { 513, -1, sizeof(::AcFunDanmu::Im::ImMessage_MessageReadAllRequest)},
  { 519, -1, sizeof(::AcFunDanmu::Im::ImMessage_MessageReadAllResponse)},
  { 525, -1, sizeof(::AcFunDanmu::Im::ImMessage_SesionStickyOnTopRequest)},
  { 532, -1, sizeof(::AcFunDanmu::Im::ImMessage_SessionStickyOnTopResponse)},
  { 538, 545, sizeof(::AcFunDanmu::Im::ImMessage_SessionRaw_RawEntry_DoNotUse)},
  { 547, -1, sizeof(::AcFunDanmu::Im::ImMessage_SessionRaw)},
  { 553, -1, sizeof(::AcFunDanmu::Im::ImMessage_MessageRecallRequest)},
  { 560, -1, sizeof(::AcFunDanmu::Im::ImMessage_MessageRecallResponse)},
  { 565, -1, sizeof(::AcFunDanmu::Im::ImMessage_MessageReceiptRequest)},
  { 572, -1, sizeof(::AcFunDanmu::Im::ImMessage_MessageReceiptResponse)},
  { 577, -1, sizeof(::AcFunDanmu::Im::ImMessage_MessageReceiptInfo)},
  { 583, -1, sizeof(::AcFunDanmu::Im::ImMessage_MessageReceiptCountGetRequest)},
  { 590, -1, sizeof(::AcFunDanmu::Im::ImMessage_MessageReceiptCountGetResponse)},
  { 596, -1, sizeof(::AcFunDanmu::Im::ImMessage_MessageReceiptStatus)},
  { 605, -1, sizeof(::AcFunDanmu::Im::ImMessage_MessageReceiptDetailGetRequest)},
  { 612, -1, sizeof(::AcFunDanmu::Im::ImMessage_MessageReceiptDetailGetResponse)},
  { 619, -1, sizeof(::AcFunDanmu::Im::ImMessage_MessageBatchSendRequest)},
  { 625, -1, sizeof(::AcFunDanmu::Im::ImMessage_MessageBatchSendResponse)},
  { 631, -1, sizeof(::AcFunDanmu::Im::ImMessage_ImageAttachment)},
  { 641, -1, sizeof(::AcFunDanmu::Im::ImMessage_AudioAttachment)},
  { 651, -1, sizeof(::AcFunDanmu::Im::ImMessage_GifAttachment)},
  { 662, -1, sizeof(::AcFunDanmu::Im::ImMessage_Attachment)},
  { 670, -1, sizeof(::AcFunDanmu::Im::ImMessage_Attachments)},
  { 676, -1, sizeof(::AcFunDanmu::Im::ImMessage_PlaceHolderMessage)},
  { 683, -1, sizeof(::AcFunDanmu::Im::ImMessage_ImageTextMessage)},
  { 694, -1, sizeof(::AcFunDanmu::Im::ImMessage_RichTextMessage)},
  { 700, -1, sizeof(::AcFunDanmu::Im::ImMessage_NoticeMessage)},
  { 708, -1, sizeof(::AcFunDanmu::Im::ImMessage_RichTextNoticeMessage_RichTextItem)},
  { 718, -1, sizeof(::AcFunDanmu::Im::ImMessage_RichTextNoticeMessage)},
  { 724, -1, sizeof(::AcFunDanmu::Im::ImMessage)},
  { 729, -1, sizeof(::AcFunDanmu::Im::Cloud_Channel_ChannelSubscribeRequest)},
  { 736, -1, sizeof(::AcFunDanmu::Im::Cloud_Channel_ChannelSubscribeResponse)},
  { 741, -1, sizeof(::AcFunDanmu::Im::Cloud_Channel_ChannelUnsubscribeRequest)},
  { 747, -1, sizeof(::AcFunDanmu::Im::Cloud_Channel_ChannelSubscribersGetRequest)},
  { 753, -1, sizeof(::AcFunDanmu::Im::Cloud_Channel_ChannelSubscribersGetResposne)},
  { 759, -1, sizeof(::AcFunDanmu::Im::Cloud_Channel_ChannelBasicInfo)},
  { 766, -1, sizeof(::AcFunDanmu::Im::Cloud_Channel_UserActionInfo)},
  { 774, -1, sizeof(::AcFunDanmu::Im::Cloud_Channel_ChannelBasicInfoGetRequest)},
  { 780, -1, sizeof(::AcFunDanmu::Im::Cloud_Channel_ChannelBasicInfoGetResponse)},
  { 786, -1, sizeof(::AcFunDanmu::Im::Cloud_Channel_ChannelHeartbeatRequest)},
  { 792, -1, sizeof(::AcFunDanmu::Im::Cloud_Channel_ChannelHeartbeatResponse)},
  { 798, -1, sizeof(::AcFunDanmu::Im::Cloud_Channel_ChannelBasicInfoNotify)},
  { 805, -1, sizeof(::AcFunDanmu::Im::Cloud_Channel)},
  { 810, -1, sizeof(::AcFunDanmu::Im::Cloud_Config_ClientConfigGetRequest)},
  { 816, -1, sizeof(::AcFunDanmu::Im::Cloud_Config_ClientConfigGetResponse)},
  { 823, -1, sizeof(::AcFunDanmu::Im::Cloud_Config_NetworkQualityDetectionConfig)},
  { 830, -1, sizeof(::AcFunDanmu::Im::Cloud_Config_ClientConfig)},
  { 841, -1, sizeof(::AcFunDanmu::Im::Cloud_Config)},
  { 846, -1, sizeof(::AcFunDanmu::Im::Cloud_Profile_UserOnlineStatus)},
  { 854, -1, sizeof(::AcFunDanmu::Im::Cloud_Profile_ProfileBatchOnlineTimeRequest)},
  { 860, -1, sizeof(::AcFunDanmu::Im::Cloud_Profile_ProfileBatchOnlineTimeResponse)},
  { 866, -1, sizeof(::AcFunDanmu::Im::Cloud_Profile)},
  { 871, -1, sizeof(::AcFunDanmu::Im::Cloud_Data_Update_KsImDataUpdatePushPayload)},
  { 878, -1, sizeof(::AcFunDanmu::Im::Cloud_Data_Update_GroupInfoDataUpdate)},
  { 884, -1, sizeof(::AcFunDanmu::Im::Cloud_Data_Update_GroupMemberListUpdate)},
  { 890, -1, sizeof(::AcFunDanmu::Im::Cloud_Data_Update_YouBeKicked)},
  { 896, -1, sizeof(::AcFunDanmu::Im::Cloud_Data_Update_MessageRead)},
  { 904, -1, sizeof(::AcFunDanmu::Im::Cloud_Data_Update_MessageReceipt)},
  { 911, -1, sizeof(::AcFunDanmu::Im::Cloud_Data_Update)},
  { 916, -1, sizeof(::AcFunDanmu::Im::Cloud_Data)},
  { 921, -1, sizeof(::AcFunDanmu::Im::Cloud_Message_ImcRecalledMessage)},
  { 928, -1, sizeof(::AcFunDanmu::Im::Cloud_Message_ImcReplaceMessage)},
  { 934, -1, sizeof(::AcFunDanmu::Im::Cloud_Message_Text)},
  { 940, -1, sizeof(::AcFunDanmu::Im::Cloud_Message_Image)},
  { 948, -1, sizeof(::AcFunDanmu::Im::Cloud_Message_Audio)},
  { 956, -1, sizeof(::AcFunDanmu::Im::Cloud_Message_Video)},
  { 967, -1, sizeof(::AcFunDanmu::Im::Cloud_Message_Custom)},
  { 973, -1, sizeof(::AcFunDanmu::Im::Cloud_Message_PicUrl)},
  { 982, -1, sizeof(::AcFunDanmu::Im::Cloud_Message_Emoticon_Code)},
  { 989, -1, sizeof(::AcFunDanmu::Im::Cloud_Message_Emoticon)},
  { 1002, -1, sizeof(::AcFunDanmu::Im::Cloud_Message_File)},
  { 1011, -1, sizeof(::AcFunDanmu::Im::Cloud_Message_Reference_ReferenceMessage)},
  { 1018, -1, sizeof(::AcFunDanmu::Im::Cloud_Message_Reference)},
  { 1025, -1, sizeof(::AcFunDanmu::Im::Cloud_Message_ForwardMessageContent)},
  { 1031, -1, sizeof(::AcFunDanmu::Im::Cloud_Message_NoticePlaceholderMeta)},
  { 1039, -1, sizeof(::AcFunDanmu::Im::Cloud_Message_ImcNoticeMessage)},
  { 1048, -1, sizeof(::AcFunDanmu::Im::Cloud_Message_ConfirmInviteIntoGroupNoticeMetaInfo)},
  { 1056, -1, sizeof(::AcFunDanmu::Im::Cloud_Message_ConfirmJoinIntoGroupNoticeMetaInfo)},
  { 1064, -1, sizeof(::AcFunDanmu::Im::Cloud_Message_GroupCreateRequest)},
  { 1070, -1, sizeof(::AcFunDanmu::Im::Cloud_Message_GroupCreateReponse)},
  { 1078, -1, sizeof(::AcFunDanmu::Im::Cloud_Message_GroupDeleteRequest)},
  { 1084, -1, sizeof(::AcFunDanmu::Im::Cloud_Message_GroupDeleteResponse)},
  { 1089, -1, sizeof(::AcFunDanmu::Im::Cloud_Message_GroupInviteRequest)},
  { 1097, -1, sizeof(::AcFunDanmu::Im::Cloud_Message_GroupInvideResponse)},
  { 1104, -1, sizeof(::AcFunDanmu::Im::Cloud_Message_GroupJoinRequest)},
  { 1113, -1, sizeof(::AcFunDanmu::Im::Cloud_Message_GroupJoinResponse)},
  { 1119, -1, sizeof(::AcFunDanmu::Im::Cloud_Message_GroupJoinRequestAckRequest)},
  { 1127, -1, sizeof(::AcFunDanmu::Im::Cloud_Message_GroupJoinRequestAckResponse)},
  { 1132, -1, sizeof(::AcFunDanmu::Im::Cloud_Message_GroupJoinRequestGetRequest)},
  { 1139, -1, sizeof(::AcFunDanmu::Im::Cloud_Message_GroupJoinRequestGetResponse)},
  { 1150, -1, sizeof(::AcFunDanmu::Im::Cloud_Message_GroupJoinRequestCancelRequest)},
  { 1157, -1, sizeof(::AcFunDanmu::Im::Cloud_Message_GroupJoinRequestCancelResposne)},
  { 1168, -1, sizeof(::AcFunDanmu::Im::Cloud_Message_GroupQuitRequest)},
  { 1174, -1, sizeof(::AcFunDanmu::Im::Cloud_Message_GroupQuitResponse)},
  { 1180, -1, sizeof(::AcFunDanmu::Im::Cloud_Message_GroupKickRequest)},
  { 1187, -1, sizeof(::AcFunDanmu::Im::Cloud_Message_GroupKickResponse)},
  { 1193, -1, sizeof(::AcFunDanmu::Im::Cloud_Message_GroupSettingRequest)},
  { 1203, -1, sizeof(::AcFunDanmu::Im::Cloud_Message_GroupSettingRename)},
  { 1209, -1, sizeof(::AcFunDanmu::Im::Cloud_Message_GroupSettingDesc)},
  { 1215, -1, sizeof(::AcFunDanmu::Im::Cloud_Message_GroupSettingJoinNeedPermission)},
  { 1221, -1, sizeof(::AcFunDanmu::Im::Cloud_Message_GroupSettingResponse)},
  { 1226, -1, sizeof(::AcFunDanmu::Im::Cloud_Message_GroupMemberSettingRequest)},
  { 1235, -1, sizeof(::AcFunDanmu::Im::Cloud_Message_SetUserNickname)},
  { 1241, -1, sizeof(::AcFunDanmu::Im::Cloud_Message_SetUserAntiDisturbing)},
  { 1247, -1, sizeof(::AcFunDanmu::Im::Cloud_Message_GroupMemberSettingResponse)},
  { 1252, -1, sizeof(::AcFunDanmu::Im::Cloud_Message_GroupMemberListGetRequest)},
  { 1259, -1, sizeof(::AcFunDanmu::Im::Cloud_Message_GroupMemberListGetResponse)},
  { 1266, -1, sizeof(::AcFunDanmu::Im::Cloud_Message_GroupMemberGetRequest)},
  { 1273, -1, sizeof(::AcFunDanmu::Im::Cloud_Message_GroupMemberGetResponse)},
  { 1279, -1, sizeof(::AcFunDanmu::Im::Cloud_Message_UserGroupListRequest)},
  { 1285, -1, sizeof(::AcFunDanmu::Im::Cloud_Message_UserGroupListResponse)},
  { 1292, -1, sizeof(::AcFunDanmu::Im::Cloud_Message_UserGroupRecord)},
  { 1299, -1, sizeof(::AcFunDanmu::Im::Cloud_Message_UserGroupGetRequest)},
  { 1305, -1, sizeof(::AcFunDanmu::Im::Cloud_Message_UserGroupGetResponse)},
  { 1311, -1, sizeof(::AcFunDanmu::Im::Cloud_Message_UserGroupInfo)},
  { 1318, -1, sizeof(::AcFunDanmu::Im::Cloud_Message_GroupMember)},
  { 1333, -1, sizeof(::AcFunDanmu::Im::Cloud_Message_GroupInfo)},
  { 1340, -1, sizeof(::AcFunDanmu::Im::Cloud_Message_GroupBasicInfo)},
  { 1355, -1, sizeof(::AcFunDanmu::Im::Cloud_Message_GroupMemberBriefInfo)},
  { 1363, -1, sizeof(::AcFunDanmu::Im::Cloud_Message_ImcPassThroughRequest)},
  { 1371, -1, sizeof(::AcFunDanmu::Im::Cloud_Message_ImcPassThroughResponse)},
  { 1376, -1, sizeof(::AcFunDanmu::Im::Cloud_Message_ImcPassThroughPush)},
  { 1385, -1, sizeof(::AcFunDanmu::Im::Cloud_Message_InputtingContent)},
  { 1391, -1, sizeof(::AcFunDanmu::Im::Cloud_Message)},
  { 1396, -1, sizeof(::AcFunDanmu::Im::Cloud)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Basic_PacketHeader_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Basic_User_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Basic_UserInstance_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Basic_UpstreamPayload_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Basic_DownstreamPayload_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Basic_PingRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Basic_PingResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Basic_RegisterRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Basic_RegisterResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Basic_AccessPointsConfig_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Basic_UnregisterRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Basic_UnregisterResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Basic_KeepAliveRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Basic_KeepAliveResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Basic_AccessPoint_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Basic_TokenInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Basic_PushServiceToken_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Basic_SettingInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Basic_AppInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Basic_DeviceInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Basic_EnvInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Basic_RequestBasicInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Basic_SyncCookie_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Basic_I18nCopyWriting_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Basic_SdkOption_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Basic_LocaleMessage_ErrorMessageEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Basic_LocaleMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Basic_ErrorMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Basic_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_ImMessage_Message_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_ImMessage_SendMessageResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_ImMessage_PullOldRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_ImMessage_PullOldResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_ImMessage_PullNewRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_ImMessage_PullNewResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_ImMessage_SessionListRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_ImMessage_ChatSession_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_ImMessage_Reminder_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_ImMessage_RemindBody_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_ImMessage_ChatTarget_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_ImMessage_SessionListResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_ImMessage_SessionPageListRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_ImMessage_SessionPageListResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_ImMessage_SessionRemoveRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_ImMessage_SessionRemoveResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_ImMessage_SessionCleanRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_ImMessage_SessionCleanResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_ImMessage_MessageDeleteRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_ImMessage_MessageDeleteResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_ImMessage_MessageCancelRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_ImMessage_MessageCancelResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_ImMessage_MessageClearRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_ImMessage_MessageClearResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_ImMessage_ReadSeqInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_ImMessage_MessageReadSeqRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_ImMessage_MessageReadSeqResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_ImMessage_MessageReadPush_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_ImMessage_AllUnreadCountRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_ImMessage_AllUnreadCountResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_ImMessage_MessageReadAllRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_ImMessage_MessageReadAllResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_ImMessage_SesionStickyOnTopRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_ImMessage_SessionStickyOnTopResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_ImMessage_SessionRaw_RawEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_ImMessage_SessionRaw_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_ImMessage_MessageRecallRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_ImMessage_MessageRecallResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_ImMessage_MessageReceiptRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_ImMessage_MessageReceiptResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_ImMessage_MessageReceiptInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_ImMessage_MessageReceiptCountGetRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_ImMessage_MessageReceiptCountGetResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_ImMessage_MessageReceiptStatus_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_ImMessage_MessageReceiptDetailGetRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_ImMessage_MessageReceiptDetailGetResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_ImMessage_MessageBatchSendRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_ImMessage_MessageBatchSendResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_ImMessage_ImageAttachment_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_ImMessage_AudioAttachment_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_ImMessage_GifAttachment_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_ImMessage_Attachment_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_ImMessage_Attachments_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_ImMessage_PlaceHolderMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_ImMessage_ImageTextMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_ImMessage_RichTextMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_ImMessage_NoticeMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_ImMessage_RichTextNoticeMessage_RichTextItem_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_ImMessage_RichTextNoticeMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_ImMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Cloud_Channel_ChannelSubscribeRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Cloud_Channel_ChannelSubscribeResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Cloud_Channel_ChannelUnsubscribeRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Cloud_Channel_ChannelSubscribersGetRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Cloud_Channel_ChannelSubscribersGetResposne_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Cloud_Channel_ChannelBasicInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Cloud_Channel_UserActionInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Cloud_Channel_ChannelBasicInfoGetRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Cloud_Channel_ChannelBasicInfoGetResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Cloud_Channel_ChannelHeartbeatRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Cloud_Channel_ChannelHeartbeatResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Cloud_Channel_ChannelBasicInfoNotify_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Cloud_Channel_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Cloud_Config_ClientConfigGetRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Cloud_Config_ClientConfigGetResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Cloud_Config_NetworkQualityDetectionConfig_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Cloud_Config_ClientConfig_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Cloud_Config_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Cloud_Profile_UserOnlineStatus_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Cloud_Profile_ProfileBatchOnlineTimeRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Cloud_Profile_ProfileBatchOnlineTimeResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Cloud_Profile_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Cloud_Data_Update_KsImDataUpdatePushPayload_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Cloud_Data_Update_GroupInfoDataUpdate_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Cloud_Data_Update_GroupMemberListUpdate_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Cloud_Data_Update_YouBeKicked_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Cloud_Data_Update_MessageRead_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Cloud_Data_Update_MessageReceipt_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Cloud_Data_Update_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Cloud_Data_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Cloud_Message_ImcRecalledMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Cloud_Message_ImcReplaceMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Cloud_Message_Text_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Cloud_Message_Image_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Cloud_Message_Audio_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Cloud_Message_Video_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Cloud_Message_Custom_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Cloud_Message_PicUrl_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Cloud_Message_Emoticon_Code_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Cloud_Message_Emoticon_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Cloud_Message_File_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Cloud_Message_Reference_ReferenceMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Cloud_Message_Reference_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Cloud_Message_ForwardMessageContent_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Cloud_Message_NoticePlaceholderMeta_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Cloud_Message_ImcNoticeMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Cloud_Message_ConfirmInviteIntoGroupNoticeMetaInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Cloud_Message_ConfirmJoinIntoGroupNoticeMetaInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Cloud_Message_GroupCreateRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Cloud_Message_GroupCreateReponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Cloud_Message_GroupDeleteRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Cloud_Message_GroupDeleteResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Cloud_Message_GroupInviteRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Cloud_Message_GroupInvideResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Cloud_Message_GroupJoinRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Cloud_Message_GroupJoinResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Cloud_Message_GroupJoinRequestAckRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Cloud_Message_GroupJoinRequestAckResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Cloud_Message_GroupJoinRequestGetRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Cloud_Message_GroupJoinRequestGetResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Cloud_Message_GroupJoinRequestCancelRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Cloud_Message_GroupJoinRequestCancelResposne_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Cloud_Message_GroupQuitRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Cloud_Message_GroupQuitResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Cloud_Message_GroupKickRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Cloud_Message_GroupKickResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Cloud_Message_GroupSettingRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Cloud_Message_GroupSettingRename_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Cloud_Message_GroupSettingDesc_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Cloud_Message_GroupSettingJoinNeedPermission_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Cloud_Message_GroupSettingResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Cloud_Message_GroupMemberSettingRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Cloud_Message_SetUserNickname_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Cloud_Message_SetUserAntiDisturbing_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Cloud_Message_GroupMemberSettingResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Cloud_Message_GroupMemberListGetRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Cloud_Message_GroupMemberListGetResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Cloud_Message_GroupMemberGetRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Cloud_Message_GroupMemberGetResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Cloud_Message_UserGroupListRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Cloud_Message_UserGroupListResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Cloud_Message_UserGroupRecord_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Cloud_Message_UserGroupGetRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Cloud_Message_UserGroupGetResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Cloud_Message_UserGroupInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Cloud_Message_GroupMember_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Cloud_Message_GroupInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Cloud_Message_GroupBasicInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Cloud_Message_GroupMemberBriefInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Cloud_Message_ImcPassThroughRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Cloud_Message_ImcPassThroughResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Cloud_Message_ImcPassThroughPush_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Cloud_Message_InputtingContent_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Cloud_Message_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::Im::_Cloud_default_instance_),
};

const char descriptor_table_protodef_Im_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\010Im.proto\022\rAcFunDanmu.Im\"\341\177\n\005Basic\032\367\004\n\014"
  "PacketHeader\022\r\n\005appId\030\001 \001(\005\022\013\n\003uid\030\002 \001(\003"
  "\022\022\n\ninstanceId\030\003 \001(\003\022\r\n\005flags\030\005 \001(\r\022D\n\014e"
  "ncodingType\030\006 \001(\0162..AcFunDanmu.Im.Basic."
  "PacketHeader.EncodingType\022\031\n\021decodedPayl"
  "oadLen\030\007 \001(\005\022H\n\016encryptionMode\030\010 \001(\01620.A"
  "cFunDanmu.Im.Basic.PacketHeader.Encrypti"
  "onMode\0221\n\ttokenInfo\030\t \001(\0132\036.AcFunDanmu.I"
  "m.Basic.TokenInfo\022\r\n\005seqId\030\n \001(\003\022;\n\010feat"
  "ures\030\013 \003(\0162).AcFunDanmu.Im.Basic.PacketH"
  "eader.Feature\"\?\n\005Flags\022\020\n\014kDirUpstream\020\000"
  "\022\022\n\016kDirDownstream\020\001\022\014\n\010kDirMask\020\001\032\002\020\001\"3"
  "\n\014EncodingType\022\021\n\rkEncodingNone\020\000\022\020\n\014kEn"
  "codingLz4\020\001\"]\n\016EncryptionMode\022\023\n\017kEncryp"
  "tionNone\020\000\022\033\n\027kEncryptionServiceToken\020\001\022"
  "\031\n\025kEncryptionSessionKey\020\002\")\n\007Feature\022\014\n"
  "\010kReserve\020\000\022\020\n\014kCompressLz4\020\001\032\"\n\004User\022\r\n"
  "\005appId\030\001 \001(\005\022\013\n\003uid\030\002 \001(\003\032K\n\014UserInstanc"
  "e\022\'\n\004user\030\001 \001(\0132\031.AcFunDanmu.Im.Basic.Us"
  "er\022\022\n\ninstanceId\030\002 \001(\003\032\236\002\n\017UpstreamPaylo"
  "ad\022\017\n\007command\030\001 \001(\t\022\r\n\005seqId\030\002 \001(\003\022\022\n\nre"
  "tryCount\030\003 \001(\r\022\023\n\013payloadData\030\004 \001(\014\0227\n\014u"
  "serInstance\030\005 \001(\0132!.AcFunDanmu.Im.Basic."
  "UserInstance\022\021\n\terrorCode\030\006 \001(\005\0225\n\013setti"
  "ngInfo\030\007 \001(\0132 .AcFunDanmu.Im.Basic.Setti"
  "ngInfo\022\?\n\020requestBasicInfo\030\010 \001(\0132%.AcFun"
  "Danmu.Im.Basic.RequestBasicInfo\032\200\001\n\021Down"
  "streamPayload\022\017\n\007command\030\001 \001(\t\022\r\n\005seqId\030"
  "\002 \001(\003\022\021\n\terrorCode\030\003 \001(\005\022\023\n\013payloadData\030"
  "\004 \001(\014\022\020\n\010errorMsg\030\005 \001(\t\022\021\n\terrorData\030\006 \001"
  "(\014\032\236\001\n\013PingRequest\022;\n\010pingType\030\001 \001(\0162).A"
  "cFunDanmu.Im.Basic.PingRequest.PingType\022"
  "\021\n\tpingRound\030\002 \001(\r\"\?\n\010PingType\022\014\n\010kInval"
  "id\020\000\022\022\n\016kPriorRegister\020\001\022\021\n\rkPostRegiste"
  "r\020\002\032c\n\014PingResponse\022\027\n\017serverTimestamp\030\001"
  " \001(\017\022\020\n\010clientIp\030\002 \001(\007\022\022\n\nredirectIp\030\003 \001"
  "(\007\022\024\n\014redirectPort\030\004 \001(\r\032\225\005\n\017RegisterReq"
  "uest\022-\n\007appInfo\030\001 \001(\0132\034.AcFunDanmu.Im.Ba"
  "sic.AppInfo\0223\n\ndeviceInfo\030\002 \001(\0132\037.AcFunD"
  "anmu.Im.Basic.DeviceInfo\022-\n\007envInfo\030\003 \001("
  "\0132\034.AcFunDanmu.Im.Basic.EnvInfo\022K\n\016prese"
  "nceStatus\030\004 \001(\01623.AcFunDanmu.Im.Basic.Re"
  "gisterRequest.PresenceStatus\022J\n\017appActiv"
  "eStatus\030\005 \001(\01621.AcFunDanmu.Im.Basic.Regi"
  "sterRequest.ActiveStatus\022\027\n\017appCustomSta"
  "tus\030\006 \001(\014\022\?\n\020pushServiceToken\030\007 \001(\0132%.Ac"
  "FunDanmu.Im.Basic.PushServiceToken\022\022\n\nin"
  "stanceId\030\010 \001(\003\022C\n\024pushServiceTokenList\030\t"
  " \003(\0132%.AcFunDanmu.Im.Basic.PushServiceTo"
  "ken\022\034\n\024keepaliveIntervalSec\030\n \001(\005\";\n\016Pre"
  "senceStatus\022\024\n\020kPresenceOffline\020\000\022\023\n\017kPr"
  "esenceOnline\020\001\"H\n\014ActiveStatus\022\014\n\010kInval"
  "id\020\000\022\024\n\020kAppInForeground\020\001\022\024\n\020kAppinBack"
  "ground\020\002\032\257\001\n\020RegisterResponse\022C\n\022accessP"
  "ointsConfig\030\001 \001(\0132\'.AcFunDanmu.Im.Basic."
  "AccessPointsConfig\022\017\n\007sessKey\030\002 \001(\014\022\022\n\ni"
  "nstanceId\030\003 \001(\003\0221\n\tsdkOption\030\004 \001(\0132\036.AcF"
  "unDanmu.Im.Basic.SdkOption\032\330\001\n\022AccessPoi"
  "ntsConfig\0224\n\noptimalAps\030\001 \003(\0132 .AcFunDan"
  "mu.Im.Basic.AccessPoint\0223\n\tbackupAps\030\002 \003"
  "(\0132 .AcFunDanmu.Im.Basic.AccessPoint\022\026\n\016"
  "availablePorts\030\003 \003(\r\022\?\n\025foreceLastConnec"
  "tedAp\030\004 \001(\0132 .AcFunDanmu.Im.Basic.Access"
  "Point\032\023\n\021UnregisterRequest\032\024\n\022Unregister"
  "Response\032\317\002\n\020KeepAliveRequest\022K\n\016presenc"
  "eStatus\030\001 \001(\01623.AcFunDanmu.Im.Basic.Regi"
  "sterRequest.PresenceStatus\022J\n\017appActiveS"
  "tatus\030\002 \001(\01621.AcFunDanmu.Im.Basic.Regist"
  "erRequest.ActiveStatus\022\?\n\020pushServiceTok"
  "en\030\003 \001(\0132%.AcFunDanmu.Im.Basic.PushServi"
  "ceToken\022C\n\024pushServiceTokenList\030\004 \003(\0132%."
  "AcFunDanmu.Im.Basic.PushServiceToken\022\034\n\024"
  "keepaliveIntervalSec\030\005 \001(\005\032l\n\021KeepAliveR"
  "esponse\022C\n\022accessPointsConfig\030\001 \001(\0132\'.Ac"
  "FunDanmu.Im.Basic.AccessPointsConfig\022\022\n\n"
  "serverMsec\030\002 \001(\003\032\274\001\n\013AccessPoint\022A\n\013addr"
  "essType\030\001 \001(\0162,.AcFunDanmu.Im.Basic.Acce"
  "ssPoint.AddressType\022\014\n\004port\030\002 \001(\r\022\014\n\004ipV"
  "4\030\003 \001(\007\022\014\n\004ipV6\030\004 \001(\014\022\016\n\006domain\030\005 \001(\t\"0\n"
  "\013AddressType\022\t\n\005kIPV4\020\000\022\t\n\005kIPV6\020\001\022\013\n\007kD"
  "omain\020\002\032\205\001\n\tTokenInfo\022;\n\ttokenType\030\001 \001(\016"
  "2(.AcFunDanmu.Im.Basic.TokenInfo.TokenTy"
  "pe\022\r\n\005token\030\002 \001(\014\",\n\tTokenType\022\014\n\010kInval"
  "id\020\000\022\021\n\rkServiceToken\020\001\032\300\002\n\020PushServiceT"
  "oken\022@\n\010pushType\030\001 \001(\0162..AcFunDanmu.Im.B"
  "asic.PushServiceToken.PushType\022\r\n\005token\030"
  "\002 \001(\014\022\025\n\risPassThrough\030\003 \001(\010\"\303\001\n\010PushTyp"
  "e\022\024\n\020kPushTypeInvalid\020\000\022\021\n\rkPushTypeAPNS"
  "\020\001\022\023\n\017kPushTypeXmPush\020\002\022\023\n\017kPushTypeJgPu"
  "sh\020\003\022\023\n\017kPushTypeGtPUsh\020\004\022\023\n\017kPushTypeOp"
  "Push\020\005\022\023\n\017kPushTYpeVvPush\020\006\022\023\n\017kPushType"
  "HwPush\020\007\022\020\n\014kPushTYpeFcm\020\010\032/\n\013SettingInf"
  "o\022\016\n\006locale\030\001 \001(\t\022\020\n\010timezone\030\002 \001(\021\032m\n\007A"
  "ppInfo\022\017\n\007appName\030\001 \001(\t\022\022\n\nappVersion\030\002 "
  "\001(\t\022\022\n\nappChannel\030\003 \001(\t\022\022\n\nsdkVersion\030\004 "
  "\001(\t\022\025\n\rextensionInfo\030\013 \001(\t\032\326\002\n\nDeviceInf"
  "o\022B\n\014platformType\030\001 \001(\0162,.AcFunDanmu.Im."
  "Basic.DeviceInfo.PlatformType\022\021\n\tosVersi"
  "on\030\002 \001(\t\022\023\n\013deviceModel\030\003 \001(\t\022\017\n\007imeiMd5"
  "\030\004 \001(\014\022\020\n\010deviceId\030\005 \001(\t\022\017\n\007softDid\030\006 \001("
  "\t\022\017\n\007kwaiDid\030\007 \001(\t\022\024\n\014manufacturer\030\010 \001(\t"
  "\"\200\001\n\014PlatformType\022\014\n\010kInvalid\020\000\022\014\n\010kAndr"
  "oid\020\001\022\010\n\004kiOS\020\002\022\014\n\010kWindows\020\003\022\022\n\016WECHAT_"
  "ANDROID\020\004\022\016\n\nWECHAT_IOS\020\005\022\006\n\002H5\020\006\022\020\n\014kPl"
  "atformNum\020\007\032\220\001\n\007EnvInfo\022=\n\013networkType\030\001"
  " \001(\0162(.AcFunDanmu.Im.Basic.EnvInfo.Netwo"
  "rkType\022\017\n\007appName\030\002 \001(\014\"5\n\013NetworkType\022\014"
  "\n\010kInvalid\020\000\022\t\n\005kWIFI\020\001\022\r\n\tkCellular\020\002\032\326"
  "\002\n\020RequestBasicInfo\022@\n\nclientType\030\001 \001(\0162"
  ",.AcFunDanmu.Im.Basic.DeviceInfo.Platfor"
  "mType\022\020\n\010deviceId\030\002 \001(\t\022\020\n\010clientIp\030\003 \001("
  "\t\022\022\n\nappVersion\030\004 \001(\t\022\017\n\007channel\030\005 \001(\t\022-"
  "\n\007appInfo\030\006 \001(\0132\034.AcFunDanmu.Im.Basic.Ap"
  "pInfo\0223\n\ndeviceInfo\030\007 \001(\0132\037.AcFunDanmu.I"
  "m.Basic.DeviceInfo\022-\n\007envInfo\030\010 \001(\0132\034.Ac"
  "FunDanmu.Im.Basic.EnvInfo\022\022\n\nclientPort\030"
  "\t \001(\005\022\020\n\010location\030\n \001(\t\032 \n\nSyncCookie\022\022\n"
  "\nsyncOffset\030\001 \001(\003\0329\n\017I18nCopyWriting\022\021\n\t"
  "formatKey\030\001 \001(\t\022\023\n\013formatParam\030\002 \003(\t\032h\n\t"
  "SdkOption\022\035\n\025reportIntervalSeconds\030\001 \001(\005"
  "\022\026\n\016reportSecurity\030\002 \001(\t\022$\n\034lz4Compressi"
  "onThresholdBytes\030\003 \001(\005\032\240\001\n\rLocaleMessage"
  "\022\016\n\006locale\030\001 \001(\t\022J\n\014errorMessage\030\002 \003(\01324"
  ".AcFunDanmu.Im.Basic.LocaleMessage.Error"
  "MessageEntry\0323\n\021ErrorMessageEntry\022\013\n\003key"
  "\030\001 \001(\005\022\r\n\005value\030\002 \001(\t:\0028\001\032J\n\014ErrorMessag"
  "e\022:\n\016localeMessages\030\001 \003(\0132\".AcFunDanmu.I"
  "m.Basic.LocaleMessage\"\313\002\n\rSharePlatform\022"
  "\031\n\025kSharePlatformInvalid\020\000\022\030\n\024kSharePlat"
  "formWechat\020\001\022\037\n\033kSharePlatformWechatMome"
  "nts\020\002\022\024\n\020kSharePlatformQQ\020\003\022\027\n\023kSharePla"
  "tformQzone\020\004\022\027\n\023kSharePlatformWeibo\020\005\022\032\n"
  "\026kSharePlatformKuaishou\020\006\022\032\n\026kSharePlatf"
  "ormFacebook\020\007\022\031\n\025kSharePlatformTwitter\020\010"
  "\022\030\n\024kSharePlatformGoogle\020\t\022\027\n\023kSharePlat"
  "formKakao\020\n\022\026\n\022kSharePlatformZalo\020\013\"\277U\n\t"
  "ErrorCode\022\010\n\004SUCC\020\000\022\016\n\tBASIC_MIN\020\220N\022\023\n\016I"
  "NTERNEL_ERROR\020\221N\022\030\n\023SERVICE_UNAVAILABLE\020"
  "\222N\022\024\n\017SERVICE_TIMEOUT\020\223N\022\022\n\rINVALID_TOKE"
  "N\020\224N\022\036\n\031REG_ENCYRPT_WITHOUT_TOKEN\020\225N\022\026\n\021"
  "PARSE_PB_HDR_FAIL\020\226N\022\026\n\021PARSE_PB_PLD_FAI"
  "L\020\227N\022\022\n\rPARSE_PB_FAIL\020\230N\022\025\n\020DECODED_LEN_"
  "FAIL\020\231N\022\020\n\013INVALID_KEY\020\232N\022\021\n\014ENCRYPT_FAI"
  "L\020\233N\022\021\n\014DECRYPT_FAIL\020\234N\022\020\n\013INVALID_TAG\020\235"
  "N\022\020\n\013INVALID_VER\020\236N\022\032\n\025INVALID_COMPRESS_"
  "TYPE\020\240N\022\031\n\024INVALID_ENCRYPT_TYPE\020\241N\022\021\n\014NO"
  "T_REGISTER\020\242N\022\024\n\017USER_NOT_ONLINE\020\243N\022\024\n\017I"
  "NVALID_COMMAND\020\244N\022\032\n\025PUSH_UNREGISTER_ERR"
  "OR\020\245N\022\020\n\013INVALID_SID\020\246N\022\030\n\023INVALID_INSTA"
  "NCE_ID\020\247N\022\034\n\027CLIENT_LOCALE_NOT_MATCH\020\250N\022"
  "#\n\036INVALID_TOKEN_PASSWORD_CHANGED\020\251N\022 \n\033"
  "INVALID_TOKEN_TOKEN_EXPIRED\020\252N\022$\n\037INVALI"
  "D_TOKEN_TOKEN_VALUE_ERROR\020\253N\022(\n#INVALID_"
  "TOKEN_LOGIN_ON_OTHER_DEVICE\020\254N\022\024\n\017FORCE_"
  "RECONNECT\020\255N\022\023\n\016CLIENT_TIMEOUT\020\256N\022\025\n\020INV"
  "ALID_ARGUMENT\020\257N\022\031\n\024INVALID_FORMAT_TOKEN"
  "\020\260N\022\022\n\rEMPTY_PAYLOAD\020\261N\022\022\n\rCOMPRESS_FAIL"
  "\020\262N\022\024\n\017DECOMPRESS_FAIL\020\263N\022\021\n\014OUT_OF_ORDE"
  "R\020\264N\022\021\n\013MESSAGE_MIN\020\240\234\001\022\027\n\021ILLEGAL_PARAM"
  "ETER\020\241\234\001\022\021\n\013SYSTEM_BUSY\020\242\234\001\022\022\n\014ILLEGAL_U"
  "SER\020\243\234\001\022\034\n\026PARAMETER_LEN_TOO_LONG\020\244\234\001\022\032\n"
  "\024DATABASE_ERROR_MYSQL\020\245\234\001\022\032\n\024DATABASE_ER"
  "ROR_HBASE\020\246\234\001\022\032\n\024DATABASE_ERROR_REDIS\020\247\234"
  "\001\022\"\n\034USER_REGISTER_LIMIT_IN_ALPHA\020\250\234\001\022\022\n"
  "\014FLOW_CONTROL\020\251\234\001\022-\n\'LOCKED_USER_ACCOUNT"
  "_NEED_UPDATE_VERSION\020\252\234\001\022\027\n\021USER_NOT_REG"
  "ISTER\020\213\244\001\022\024\n\016USER_NOT_FOUND\020\214\244\001\022\034\n\026FRIEN"
  "D_ADD_NEED_VERIFY\020\215\244\001\022\027\n\021NO_FRIEND_REQUE"
  "ST\020\216\244\001\022\026\n\020TOO_MANY_FRIENDS\020\217\244\001\022#\n\035FRIEND"
  "_REQUEST_TOO_FREQUENTLY\020\220\244\001\022\034\n\026CHAT_NEED"
  "_TO_BE_FRIEND\020\221\244\001\022\030\n\022ADD_FRIEND_BLOCKED\020"
  "\222\244\001\022\037\n\031CANNOT_ADD_FRIEND_TO_SELF\020\223\244\001\022\030\n\022"
  "CANNOT_FOLLOW_SELF\020\224\244\001\022\030\n\022ADD_FOLLOW_BLO"
  "CKED\020\225\244\001\022\034\n\026TARGET_FRIEND_TOO_MANY\020\226\244\001\022\024"
  "\n\016TOO_MANY_IDOLS\020\227\244\001\022\036\n\030FRIEND_FOLLOW_OV"
  "ER_LIMIT\020\230\244\001\022\030\n\022FRIEND_FOLLOW_SPAM\020\231\244\001\022\036"
  "\n\030CLIENT_CONFIG_READ_ERROR\020\360\253\001\022$\n\036CLIENT"
  "_CONFIG_NOT_EXISTS_ERROR\020\361\253\001\022!\n\033CONTENT_"
  "HIT_SENSITIVE_WORDS\020\330\263\001\022\032\n\024MORE_THAN_MAX"
  "_LENGTH\020\300\273\001\022\031\n\023MSG_TEXT_MAX_LENGTH\020\301\273\001\022\030"
  "\n\022MSG_CANCEL_OVERDUE\020\302\273\001\022 \n\032CANNOT_RECAL"
  "L_NON_SELF_MSG\020\303\273\001\022\032\n\024RECALL_NOT_EXIST_M"
  "SG\020\304\273\001\022\'\n!REF_MSG_NESTING_DEPTH_REACH_LI"
  "MIT\020\305\273\001\022$\n\036SEND_KS_MESSAGE_NOT_MATCH_RUL"
  "E\020\244\274\001\022\031\n\023FIND_USER_FREQUENCY\020\245\274\001\022!\n\033KUAI"
  "SHOU_FANS_TOKEN_INVALID\020\246\274\001\022\037\n\031KUAISHOU_"
  "AUTHORIZE_FAILED\020\247\274\001\022\037\n\031ADD_FRIEND_TOO_F"
  "REQUENTLY\020\250\274\001\022\036\n\030BLACK_LIST_REACHED_LIMI"
  "T\020\251\274\001\022\033\n\025GAME_ROOM_IS_RELEASED\020\321\206\003\022\033\n\025CR"
  "EATE_GAME_ROOM_FAIL\020\322\206\003\022\027\n\021GAME_SERVER_E"
  "RROR\020\323\206\003\022\032\n\024GAME_ROOM_IS_EXPIRED\020\324\206\003\022\025\n\017"
  "ALREADY_IN_GAME\020\326\206\003\022\034\n\026TARGET_ALREADY_IN"
  "_GAME\020\327\206\003\022\024\n\016GAME_NOT_EXIST\020\330\206\003\022$\n\036GAME_"
  "ACCEPT_BUT_ALREAD_IN_GAME\020\331\206\003\022,\n&GAME_AC"
  "CEPT_BUT_TARGET_ALREADY_IN_GAME\020\332\206\003\022)\n#G"
  "AME_ACCEPT_BUT_APP_VERSION_TOO_LOW\020\333\206\003\022\032"
  "\n\024GAME_USER_MATCH_FAIL\020\334\206\003\022*\n$USER_FREQU"
  "ENT_LEAVE_GAME_BE_PUNISHED\020\335\206\003\0222\n,RELATI"
  "ONSHIP_INVALID_CANNOT_SEND_GAME_INVITE\020\336"
  "\206\003\022#\n\035GAME_USER_MATCH_SYNC_NO_MATCH\020\337\206\003\022"
  "\022\n\014FORBID_MATCH\020\340\206\003\022\034\n\026GAME_RESOURCE_NO_"
  "EXIST\020\341\206\003\022\036\n\030GAME_MATCH_SYNC_NO_MATCH\020\342\206"
  "\003\022$\n\036GAME_MATCH_SYNC_ALREADY_FINISH\020\343\206\003\022"
  "&\n INVITATION_SEND_REACH_LIMITATION\020\344\206\003\022"
  "\037\n\031GAME_MATCH_TEAM_NOT_EXIST\020\345\206\003\022\037\n\031GAME"
  "_MATCH_TEAM_NO_TARGET\020\346\206\003\022-\n\'GAME_MATCH_"
  "TEAM_OTHER_ALREADY_JOIN_SUCC\020\347\206\003\022\021\n\013FORZ"
  "EN_USER\020\350\206\003\022\031\n\023FORZEN_USER_PROFILE\020\351\206\003\022\031"
  "\n\023FORZEN_USER_ACCOUNT\020\352\206\003\022\036\n\030TEMP_FORZEN"
  "_USER_ACCOUNT\020\353\206\003\022\031\n\023LOCKED_USER_ACCOUNT"
  "\020\354\206\003\022,\n&UNFREEZE_USER_ACCOUNT_APPLY_IN_P"
  "ROCESS\020\355\206\003\022\036\n\030GAME_MATH_TEAM_DISBANDED\020\356"
  "\206\003\022 \n\032USER_ACCOUNT_IS_NOT_FORZEN\020\357\206\003\022\033\n\025"
  "CAPTCHA_VERIFY_FAILED\020\360\206\003\022\037\n\031PROFILE_UPD"
  "ATE_NOT_PERMIT\020\361\206\003\022!\n\033GAME_REQUEST_TOO_F"
  "REQUENTLY\020\362\206\003\022\037\n\031WECHAT_GAME_INVITE_CANC"
  "EL\020\202\207\003\022!\n\033WECHAT_GAME_INVITE_ACCEPTED\020\203\207"
  "\003\022\032\n\024THIRD_PARTY_NOT_BIND\020\370\206\003\022\036\n\030THIRD_P"
  "ARTY_TOKEN_EXPIRE\020\371\206\003\022&\n THIRD_PARTY_NO_"
  "FRIEND_PERMISSION\020\372\206\003\022 \n\032GAME_INVITE_INF"
  "O_NOT_EXIST\020\214\207\003\022\034\n\026GAME_ACCEPT_IS_INVALI"
  "D\020\215\207\003\022\032\n\024GAME_ARENA_NOT_EXIST\020\216\207\003\022\036\n\030GAM"
  "E_SHOP_PROPS_BUY_FAIL\020\217\207\003\022\036\n\030GAME_SHOP_P"
  "ROPS_USE_FAIL\020\220\207\003\022\037\n\031GAME_SHOP_PROPS_NOT"
  "_EXIST\020\221\207\003\022#\n\035GAME_SHOP_PROPS_COUNT_UNMA"
  "TCH\020\222\207\003\022\031\n\023GAME_SKIN_NOT_EXIST\020\223\207\003\022%\n\037GA"
  "ME_COIN_SHARE_TAKE_OVER_LIMIT\020\224\207\003\022!\n\033GAM"
  "E_COIN_TIMELY_TAKE_IN_CD\020\225\207\003\022\031\n\023GAME_SKI"
  "N_IN_LOCKED\020\226\207\003\022\"\n\034GAME_SHOP_BALANCE_NOT"
  "_ENOUGH\020\227\207\003\022 \n\032GAME_SKIN_ALREADY_UNLOCKE"
  "D\020\230\207\003\022\033\n\025GAME_SKIN_UPDATE_FAIL\020\231\207\003\022\032\n\024GA"
  "ME_SKIN_IS_IN_USED\020\232\207\003\022!\n\033GAME_USER_MATC"
  "H_TIMES_LIMIT\020\233\207\003\022\030\n\022GAME_SKIN_BUY_FAIL\020"
  "\234\207\003\022!\n\033GAME_RESULT_VERIFY_NOT_PASS\020\235\207\003\022\033"
  "\n\025USE_RANK_TITLE_FAILED\020\236\207\003\022\031\n\023USER_LOCA"
  "TION_FAILD\020\237\207\003\022 \n\032GAME_ACHIEVEMENT_NOT_E"
  "XIST\020\240\207\003\022\030\n\022BALANCE_NOT_ENOUGH\020\241\207\003\022\023\n\rCO"
  "IN_USE_FAIL\020\242\207\003\022\023\n\rCOIN_ADD_FAIL\020\243\207\003\022\"\n\034"
  "GAME_LINK_MIC_ROOM_NOT_EXIST\020\264\207\003\022$\n\036GAME"
  "_LINK_MIC_USER_NOT_IN_ROOM\020\265\207\003\022+\n%GAME_L"
  "INK_MIC_ROOM_UNEXPECTED_MESSAGE\020\266\207\003\022(\n\"G"
  "AME_LINK_MIC_USER_ALREADY_IN_ROOM\020\267\207\003\022\031\n"
  "\023CHAT_ROOM_NOT_EXIST\020\230\210\003\022\032\n\024CHAT_ROOM_NO"
  "T_MEMBER\020\231\210\003\022\034\n\026CHAT_ROOM_TARGET_LEAVE\020\232"
  "\210\003\022\037\n\031CHAT_ROOM_TARGET_LEAVE_2P\020\233\210\003\022-\n\'C"
  "HAT_ROOM_FORBID_IMAGE_BETWEEN_STRANGER\020\234"
  "\210\003\022$\n\036CHAT_ROOM_LEAVE_TOO_FREQUENTLY\020\235\210\003"
  "\022+\n%SESSION_FORBID_IMAGE_BETWEEN_STRANGE"
  "R\020\242\210\003\022\034\n\026SEND_MESSAGE_IS_BANNED\020\243\210\003\022\027\n\021Q"
  "UIZZES_NOT_EXIST\020\374\210\003\022\034\n\026QUIZZES_ANSWER_T"
  "IMEOUT\020\375\210\003\022\"\n\034ALREADY_USED_INVITATION_CO"
  "DE\020\376\210\003\022(\n\"CANNOT_USE_ONESELF_INVITATION_"
  "CODE\020\377\210\003\022 \n\032INVITATION_CODE_IS_INVALID\020\200"
  "\211\003\022%\n\037MULTIPLAYER_GAME_ROOM_NOT_EXIST\020\340\211"
  "\003\022&\n MULTIPLAYER_GAME_ROOM_NOT_MEMBER\020\341\211"
  "\003\022)\n#MULTIPLAYER_GAME_ROOM_MEMBER_KICKED"
  "\020\342\211\003\022+\n%MULTIPLAYER_GAME_ROOM_LEAVE_FREQ"
  "UENCY\020\343\211\003\022\037\n\031DRAW_GUESS_ROOM_NOT_EXIST\020\304"
  "\212\003\022\032\n\024GUESS_WORD_NOT_EXIST\020\305\212\003\022 \n\032DRAW_G"
  "UESS_ROOM_NOT_MEMBER\020\306\212\003\022\023\n\rNOT_DRAW_USE"
  "R\020\307\212\003\022\026\n\020CANNOT_GUESS_NOW\020\310\212\003\022\034\n\026DRAW_US"
  "ER_CANNOT_GUESS\020\311\212\003\022\025\n\017CANNOT_DRAW_NOW\020\312"
  "\212\003\022\"\n\034GUESS_WORD_EXCEED_MAX_LENGTH\020\313\212\003\022$"
  "\n\036GUESS_WORD_HIT_SENSITIVE_WORDS\020\314\212\003\022 \n\032"
  "USER_IN_TRAVEL_FOR_INVITOR\020\250\213\003\022\024\n\016PEER_I"
  "N_TRAVEL\020\251\213\003\022\025\n\017TRAVEL_FINISHED\020\252\213\003\022\033\n\025T"
  "RAVEL_INVITE_INVALID\020\253\213\003\022\027\n\021TRAVEL_NOT_F"
  "RIEND\020\254\213\003\022\026\n\020TRAVEL_NOT_EXIST\020\255\213\003\022\030\n\022TRA"
  "VEL_SELF_FORBID\020\256\213\003\022\031\n\023TRAVEL_SCENARIO_E"
  "ND\020\257\213\003\022!\n\033USER_IN_TRAVEL_FOR_ACCEPTOR\020\260\213"
  "\003\022\034\n\026TRAVEL_ENTRANCE_CLOSED\020\261\213\003\022\037\n\031USER_"
  "HAS_OPERATED_MESSAGE\020\262\213\003\022$\n\036TRAVEL_NOT_F"
  "RIEND_FOR_ACCEPTOR\020\263\213\003\022\034\n\026WHO_SPY_ROOM_N"
  "OT_EXIST\020\214\214\003\022\035\n\027WHO_SPY_ROOM_NOT_MEMBER\020"
  "\215\214\003\022\031\n\023CANNOT_DESCRIBE_NOW\020\217\214\003\022\025\n\017CANNOT"
  "_VOTE_NOW\020\220\214\003\022\026\n\020SPY_CANNOT_GUESS\020\221\214\003\022\027\n"
  "\021NOT_DESCRIBE_USER\020\222\214\003\022\023\n\rNOT_VOTE_USER\020"
  "\223\214\003\022\031\n\023INVALID_VOTE_TARGET\020\224\214\003\022#\n\035DESCRI"
  "PTION_EXCEED_MAX_LENGTH\020\225\214\003\022%\n\037DESCRIPTI"
  "ON_HIT_SENSITIVE_WORDS\020\226\214\003\022&\n SPY_GUESS_"
  "WORD_EXCEED_MAX_LENGTH\020\227\214\003\022(\n\"SPY_GUESS_"
  "WORD_HIT_SENSITIVE_WORDS\020\230\214\003\022\'\n!ALREADY_"
  "IN_MULTI_PLAYER_CHAT_ROOM\020\360\214\003\022)\n#CHAT_RO"
  "OM_TOPIC_HIT_SENSITIVE_WORDS\020\361\214\003\022(\n\"MULT"
  "I_PLAYER_CHAT_ROOM_CREATE_FAIL\020\362\214\003\022,\n&MU"
  "LTI_PLAYER_CHAT_ROOM_CREATE_FREQUENT\020\363\214\003"
  "\022&\n MULTI_PLAYER_CHAT_ROOM_NOT_EXIST\020\364\214\003"
  "\022&\n OPERATION_ALLOWED_FOR_OWNER_ONLY\020\365\214\003"
  "\022-\n\'MULTI_PLAYER_CHAT_ROOM_GAME_CREATE_F"
  "AIL\020\366\214\003\022+\n%MULTI_PLAYER_CHAT_ROOM_GAME_N"
  "OT_MATCH\020\367\214\003\022+\n%NOT_MEMBER_FOR_MULTI_PLA"
  "YER_CHAT_ROOM\020\370\214\003\022%\n\037MULTI_PLAYER_CHAT_R"
  "OOM_RELEASED\020\371\214\003\022!\n\033MULTI_PLAYER_CHAT_RO"
  "OM_FULL\020\372\214\003\022-\n\'ALREADY_IN_OTHER_MULTI_PL"
  "AYER_CHAT_ROOM\020\373\214\003\0220\n*FORBID_JOIN_PRIVAT"
  "E_MULTI_PLAYER_CHAT_ROOM\020\374\214\003\022&\n MULTI_PL"
  "AYER_CHAT_ROOM_JOIN_FAIL\020\375\214\003\022\037\n\031QUICK_MA"
  "TCH_SYNC_NO_MATCH\020\376\214\003\022)\n#PLAYER_LEAVE_MU"
  "LTI_PLAYER_CHAT_ROOM\020\377\214\003\022\037\n\031LINKMIC_COUN"
  "T_REACH_LIMIT\020\200\215\003\022#\n\035PLAYER_ALREADY_LINK"
  "MIC_ONLINE\020\201\215\003\022$\n\036PLAYER_ALREADY_LINKMIC"
  "_OFFLINE\020\202\215\003\022$\n\036PLAYER_ALREADY_LEAVE_CHA"
  "T_ROOM\020\203\215\003\022\'\n!FORBID_LINK_MIC_OFFLINE_FO"
  "R_OWNER\020\204\215\003\022*\n$FORBID_LINK_MIC_OFFLINE_P"
  "LAYING_GAME\020\205\215\003\022)\n#FORBID_LINK_MIC_ONLIN"
  "E_PLAYING_GAME\020\206\215\003\022-\n\'MULTI_PLAYER_CHAT_"
  "ROOM_MEMBER_KICKEDOUT\020\207\215\003\022(\n\"FORBID_KICK"
  "OUT_PLAYER_PLAYING_GAME\020\210\215\003\022+\n%MULTI_PLA"
  "YER_CHAT_ROOM_GAME_NOT_EXIST\020\211\215\003\022+\n%MULT"
  "I_PLAYER_CHAT_ROOM_MEMBER_TIMEOUT\020\212\215\003\022#\n"
  "\035FORBID_GAME_UNREADY_FOR_OWNER\020\213\215\003\022\035\n\027FO"
  "RBID_CREATE_CHAT_ROOM\020\214\215\003\022\'\n!CHAT_ROOM_T"
  "OPIC_NOT_ALLOWED_EMPTY\020\215\215\003\022+\n%MULTI_PLAY"
  "ER_CHAT_ROOM_GAME_ROOM_FULL\020\216\215\003\022\037\n\031PLAYE"
  "R_NOT_LINKMIC_ONLINE\020\217\215\003\022#\n\035LINKMIC_STAT"
  "US_ALREADY_UPDATE\020\220\215\003\022\032\n\024CANNOT_APPLY_LI"
  "NKMIC\020\221\215\003\022+\n%CANNOT_CREATE_CHAT_ROOM_FOR"
  "_BLACKLIST\020\222\215\003\022*\n$CANNOT_CREATE_CHAT_ROO"
  "M_FOR_NOT_BIND\020\223\215\003\022)\n#CANNOT_JOIN_CHAT_R"
  "OOM_FOR_BLACKLIST\020\224\215\003\022\034\n\026NO_AVAILABLE_CH"
  "AT_ROOM\020\225\215\003\022\"\n\034MAX_PLAYER_COUNT_REACH_LI"
  "MIT\020\226\215\003\0220\n*MULTI_PLAYER_CHAT_ROOM_NEED_U"
  "PDATE_VERSION\020\227\215\003\0226\n0MULTI_PLAYER_CHAT_R"
  "OOM_START_GAME_UPDATE_VERSION\020\230\215\003\022,\n&MUL"
  "TI_PLAYER_CHAT_ROOM_ALREADY_IN_GAME\020\231\215\003\022"
  "1\n+MULTI_PLAYER_CHAT_ROOM_FORBID_CANCEL_"
  "CREATE\020\232\215\003\022,\n&CHAT_ROOM_SEATNAME_HIT_SEN"
  "SITIVE_WORDS\020\233\215\003\022\037\n\031CHAT_ROOM_THEME_NOT_"
  "EXIST\020\234\215\003\022$\n\036ONLY_VIP_CAN_UPLOAD_BACKGRO"
  "UND\020\235\215\003\022$\n\036MORE_THAN_BACKGROUND_MAX_COUN"
  "T\020\236\215\003\022\'\n!MODIFY_BACKGROUND_FOR_NORMAL_RO"
  "OM\020\237\215\003\022.\n(CHAT_ROOM_ANNOUNCEMENT_EXCEED_"
  "MAX_LENGTH\020\240\215\003\0220\n*CHAT_ROOM_ANNOUNCEMENT"
  "_HIT_SENSITIVE_WORDS\020\241\215\003\022\024\n\016NOT_THEME_RO"
  "OM\020\242\215\003\022\024\n\016FEED_NOT_EXIST\020\324\215\003\022\024\n\016FEED_NOT"
  "_OWNER\020\325\215\003\022\024\n\016FEED_PUBLISHED\020\326\215\003\022!\n\033FEED"
  "_TEXT_EXCEED_MAX_LENGTH\020\327\215\003\022#\n\035FEED_TEXT"
  "_HIT_SENSITIVE_WORDS\020\330\215\003\022\"\n\034FEED_ATTACHM"
  "ENT_MISSING_INFO\020\331\215\003\022\025\n\017FEED_USER_LIKED\020"
  "\332\215\003\022\033\n\025FEED_CITY_NOT_LOCATED\020\333\215\003\022$\n\036FEED"
  "_PROFILE_AUTHOR_BLOCK_USER\020\334\215\003\022$\n\036FEED_P"
  "ROFILE_USER_BLOCK_AUTHOR\020\335\215\003\022\031\n\023FEED_USE"
  "R_NOT_LIKED\020\336\215\003\022\031\n\023FEED_PUBLISH_BANNED\020\337"
  "\215\003\022\026\n\020FEED_FROZEN_USER\020\340\215\003\022\035\n\027FEED_PUBLI"
  "SH_OVER_LIMIT\020\341\215\003\022%\n\037FEED_PUBLISH_REQUES"
  "T_OVER_LIMIT\020\342\215\003\022\024\n\016FEED_LIKE_SPAM\020\343\215\003\022\035"
  "\n\027TRADE_PRODUCT_NOT_FOUND\020\351\215\003\022\033\n\025TRADE_P"
  "RODUCT_CHANGED\020\352\215\003\022\033\n\025TRADE_ORDER_DUPLIC"
  "ATE\020\353\215\003\022\030\n\022TRADE_ORDER_FAILED\020\354\215\003\022\033\n\025TRA"
  "DE_ORDER_NOT_FOUND\020\355\215\003\022\032\n\024TRADE_RECEIPT_"
  "BINDED\020\356\215\003\022!\n\033TRADE_RECEIPT_VERIFY_FAILE"
  "D\020\357\215\003\022\'\n!TRADE_RECEIPT_VERIFY_SYSTEM_ERR"
  "OR\020\360\215\003\022\'\n!TRADE_RECEIPT_VERIFY_CHECK_FAI"
  "LED\020\361\215\003\022\'\n!TRADE_RECEIPT_UNSUPPORTED_VER"
  "SION\020\362\215\003\022\036\n\030TRADE_RECEIPT_BUY_FAILED\020\363\215\003"
  "\022\037\n\031TRADE_SERVICE_UNAVAILABLE\020\364\215\003\022\037\n\031TRA"
  "DE_AGREEMENT_NOT_FOUND\020\365\215\003\022#\n\035TRADE_AGRE"
  "EMENT_UNSIGN_FAILED\020\366\215\003\022%\n\037C2C_STRANGER_"
  "SESSION_OVER_LIMIT\020\234\217\003\022\032\n\024GAME_INVALID_C"
  "OMMAND\020\341\324\003\022\031\n\023GAME_USER_NOT_FOUND\020\342\324\003\022\032\n"
  "\024GAME_INVALID_MESSAGE\020\343\324\003\022\023\n\rGAME_FINISH"
  "ED\020\344\324\003\022\033\n\025REPORT_TOO_FREQUENTLY\020\361\242\004\022\027\n\021G"
  "ROUP_CREATE_FAIL\020\344\361\004\022\026\n\020NOT_GROUP_MEMBER"
  "\020\345\361\004\022\025\n\017NOT_GROUP_ADMIN\020\346\361\004\022\027\n\021GROUP_DEL"
  "ETE_FAIL\020\347\361\004\022\031\n\023ADMIN_TRANSFER_FAIL\020\350\361\004\022"
  "\030\n\022GROUP_SETTING_FAIL\020\351\361\004\022\036\n\030GROUP_EXCEE"
  "D_MAX_NUMBERS\020\352\361\004\022\035\n\027GROUP_ADMIN_CANNOT_"
  "QUIT\020\353\361\004\022\027\n\021CANNOT_KICK_ADMIN\020\354\361\004\022\026\n\020GRO"
  "UP_NOT_EXISTS\020\355\361\004\022\036\n\030GROUP_NOT_ENOUGH_ME"
  "MBERS\020\356\361\004\022(\n\"USER_CREATE_GROUP_EXCEED_MA"
  "X_COUNT\020\357\361\004\022\034\n\026GROUP_NAME_UNAVAILABLE\020\360\361"
  "\004\022 \n\032USER_NICK_NAME_UNAVAILABLE\020\361\361\004\022\024\n\016G"
  "ROUP_OFF_LINE\020\362\361\004\022\036\n\030FORBID_USER_CREATE_"
  "GROUP\020\363\361\004\022!\n\033GROUP_SHARE_GROUP_NOT_EXIST"
  "\020\364\361\004\022+\n%GROUP_SHARE_INVITEOR_NOT_GROUP_M"
  "EMBER\020\365\361\004\022 \n\032GROUP_SHARE_QR_CODE_EXPIRE\020"
  "\366\361\004\022*\n$GROUP_SHARE_GROUP_EXCEED_MAX_NUMB"
  "ERS\020\367\361\004\022!\n\033GROUP_SHARE_QR_CODE_INVALID\020\370"
  "\361\004\022\036\n\030GROUP_SHARE_LINK_INVALID\020\371\361\004\022(\n\"GR"
  "OUP_SHARE_WITHIN_NEED_PERMISSION\020\374\361\004\022$\n\036"
  "GROUP_BULLETIN_SIZE_OVER_LIMIT\020\372\361\004\022\036\n\030GR"
  "OUP_BULLETIN_NOT_ADMIN\020\373\361\004\022\"\n\034GROUP_JOIN"
  "_REQUEST_NOT_FOUND\020\375\361\004\022+\n%GROUP_JOIN_REQ"
  "UEST_HAS_BEEN_PROCESSED\020\376\361\004\022\"\n\034GROUP_NAM"
  "E_LENGTH_OVER_LIMIT\020\377\361\004\022\027\n\021GROUP_PK_NOT_"
  "QUIT\020\200\362\004\022\031\n\023GROUP_PK_NOT_RENAME\020\201\362\004\022\031\n\023G"
  "ROUP_PK_NOT_INVITE\020\202\362\004\022!\n\033GROUP_PK_NOT_I"
  "NVITE_QR_CODE\020\203\362\004\022.\n(GROUP_MEMBER_NICK_N"
  "AME_LENGTH_OVER_LIMIT\020\204\362\004\022 \n\032CHANNEL_INV"
  "ALID_CHANNEL_ID\020\350\370\004\022\"\n\034CHANNEL_USER_HAS_"
  "BEEN_KICKED\020\351\370\004\022\037\n\031MESSAGE_TOO_LARGE_TO_"
  "SEND\020\320\200\005\022+\n%MESSAGE_BATCH_SEND_COUNT_EXC"
  "EED_LIMIT\020\321\200\005\022$\n\036DIAN_DIAN_COVER_IMAGE_N"
  "OT_REAL\020\254\215\003\022#\n\035DIAN_DIAN_COVER_IMAGE_NOT"
  "_SET\020\255\215\003\022#\n\035DIAN_DIAN_SETTING_UPDATE_FAI"
  "L\020\256\215\003\022!\n\033DIAN_DIAN_ALBUM_UPDATE_FAIL\020\257\215\003"
  "\022\033\n\025DIAN_DIAN_USER_FROZEN\020\260\215\003\022$\n\036DIAN_DI"
  "AN_LIKE_FREQUENCY_LIMIT\020\261\215\003\022\037\n\031DIAN_DIAN"
  "_YOUNG_AGE_LIMIT\020\262\215\003\022\035\n\027GIFT_BALANCE_NOT"
  "_ENOUGH\020\270\216\003\022\020\n\nGIFT_GIVED\020\271\216\003\022\035\n\027GIFT_RE"
  "CEIVER_NOT_EXIST\020\272\216\003\022\037\n\031GIFT_RECEIVER_NO"
  "T_IN_ROOM\020\273\216\003\022\031\n\023GIFT_INFO_NOT_EXIST\020\274\216\003"
  "\022\034\n\026FREE_VIP_CARD_NO_EXIST\020\352\216\003\022\032\n\024FREE_V"
  "IP_CARD_EXPIRE\020\353\216\003\022\036\n\030FREE_VIP_CARD_USE_"
  "FAILED\020\354\216\003\022!\n\033SECRET_SIGNAL_GENERATE_FAI"
  "L\020\206\216\003\022\036\n\030SECRET_SIGNAL_SHARE_FAIL\020\207\216\003\022\"\n"
  "\034SECRET_SIGNAL_INVALID_PREFIX\020\210\216\003\022\036\n\030SEC"
  "RET_SIGNAL_MATCH_FAIL\020\211\216\003\022#\n\035SECRET_SIGN"
  "AL_DUPLICATE_MATCH\020\212\216\003\022%\n\037SECRET_SIGNAL_"
  "FORBID_MATCH_SELF\020\213\216\003\"\376:\n\tImMessage\032\377\004\n\007"
  "Message\022\r\n\005seqId\030\001 \001(\003\022\023\n\013clientSeqId\030\002 "
  "\001(\003\022\023\n\013timestampMs\030\003 \001(\003\022+\n\010fromUser\030\004 \001"
  "(\0132\031.AcFunDanmu.Im.Basic.User\022\020\n\010targetI"
  "d\030\005 \001(\003\022)\n\006toUser\030\006 \001(\0132\031.AcFunDanmu.Im."
  "Basic.User\022\r\n\005title\030\007 \001(\t\022\023\n\013contentType"
  "\030\010 \001(\005\022\017\n\007content\030\t \001(\014\022\022\n\nbuckupTips\030\n "
  "\001(\t\022,\n\treceivers\030\013 \003(\0132\031.AcFunDanmu.Im.B"
  "asic.User\022\030\n\020notContentUnread\030\014 \001(\010\022\027\n\017s"
  "essionPriority\030\r \001(\005\022\031\n\021sessionCategoryI"
  "d\030\016 \001(\005\022\032\n\022sessionAccountType\030\017 \001(\005\022\034\n\024n"
  "otAutoCreateSession\030\020 \001(\010\022\030\n\020userRelatio"
  "nship\030\021 \001(\005\022\023\n\013strTargetId\030\022 \001(\t\0223\n\020excl"
  "udeReceivers\030\023 \003(\0132\031.AcFunDanmu.Im.Basic"
  ".User\022\021\n\tmarkDelte\030\024 \001(\010\0223\n\010reminder\030\025 \001"
  "(\0132!.AcFunDanmu.Im.ImMessage.Reminder\022\r\n"
  "\005extra\030\026 \001(\014\022\027\n\017receiptRequired\030\027 \001(\010\032\243\001"
  "\n\023SendMessageResponse\022\023\n\013clientSeqId\030\001 \001"
  "(\003\022\030\n\020messageTimestamp\030\002 \001(\003\022\r\n\005seqId\030\003 "
  "\001(\003\022\032\n\022sessionAccountType\030\004 \001(\005\022\027\n\017sessi"
  "onPriority\030\005 \001(\005\022\031\n\021sessionCategoryId\030\006 "
  "\001(\005\032\221\001\n\016PullOldRequest\022)\n\006target\030\001 \001(\0132\031"
  ".AcFunDanmu.Im.Basic.User\022\016\n\006minSeq\030\002 \001("
  "\003\022\016\n\006maxSeq\030\003 \001(\003\022\r\n\005count\030\004 \001(\005\022\020\n\010targ"
  "etId\030\005 \001(\003\022\023\n\013strTargetId\030\006 \001(\t\032Y\n\017PullO"
  "ldResponse\0222\n\010messages\030\001 \003(\0132 .AcFunDanm"
  "u.Im.ImMessage.Message\022\022\n\nserverTime\030\002 \001"
  "(\003\032\201\001\n\016PullNewRequest\022)\n\006target\030\001 \001(\0132\031."
  "AcFunDanmu.Im.Basic.User\022\016\n\006minSeq\030\002 \001(\003"
  "\022\r\n\005count\030\003 \001(\005\022\020\n\010targetId\030\004 \001(\003\022\023\n\013str"
  "TargetId\030\005 \001(\t\032E\n\017PullNewResponse\0222\n\010mes"
  "sages\030\001 \003(\0132 .AcFunDanmu.Im.ImMessage.Me"
  "ssage\032v\n\022SessionListRequest\0223\n\nsyncCooki"
  "e\030\001 \001(\0132\037.AcFunDanmu.Im.Basic.SyncCookie"
  "\022\022\n\ncategoryId\030\002 \001(\005\022\027\n\017localDataStatus\030"
  "\003 \001(\005\032\242\004\n\013ChatSession\022)\n\006target\030\001 \001(\0132\031."
  "AcFunDanmu.Im.Basic.User\022\020\n\010maxSeqId\030\002 \001"
  "(\003\022\021\n\treadSeqId\030\003 \001(\003\022\026\n\016unreadMsgCount\030"
  "\004 \001(\005\0227\n\rlatestMessage\030\005 \003(\0132 .AcFunDanm"
  "u.Im.ImMessage.Message\022\?\n\016chatTargetType"
  "\030\010 \001(\0162\'.AcFunDanmu.Im.ImMessage.ChatTar"
  "getType\022\020\n\010targetId\030\t \001(\003\022\022\n\nactiveTime\030"
  "\n \001(\003\022\020\n\010priority\030\013 \001(\005\022\022\n\ncategoryId\030\014 "
  "\001(\005\022\016\n\006cursor\030\r \001(\t\022\023\n\013accountType\030\016 \001(\005"
  "\022\030\n\020aggregateSession\030\017 \001(\010\022\026\n\016jumpCatego"
  "ryId\030\020 \001(\005\022\020\n\010expireAt\030\021 \001(\003\022\025\n\reffectiv"
  "eFrom\030\022 \001(\003\022\023\n\013strTargetId\030\023 \001(\t\0227\n\nremi"
  "ndBody\030\024 \003(\0132#.AcFunDanmu.Im.ImMessage.R"
  "emindBody\022\027\n\017targetReadSeqId\030\025 \001(\003\032W\n\010Re"
  "minder\022\022\n\noriginText\030\001 \001(\t\0227\n\nremindBody"
  "\030\002 \003(\0132#.AcFunDanmu.Im.ImMessage.RemindB"
  "ody\032\234\002\n\nRemindBody\022B\n\nremindType\030\001 \001(\0162."
  ".AcFunDanmu.Im.ImMessage.RemindBody.Remi"
  "ndType\022\r\n\005seqId\030\002 \001(\003\022\020\n\010targetId\030\003 \001(\003\022"
  "\020\n\010userName\030\004 \001(\t\022\022\n\nstartIndex\030\005 \001(\005\022\016\n"
  "\006length\030\006 \001(\005\"s\n\nRemindType\022\013\n\007UNKNOWN\020\000"
  "\022\n\n\006AT_ALL\020\001\022\013\n\007AT_USER\020\002\022\022\n\016GROUP_BULLE"
  "TIN\020\003\022\023\n\017RECEIPT_MESSAGE\020\004\022\026\n\022GROUP_JOIN"
  "_REQUEST\020\005\032[\n\nChatTarget\022\020\n\010targetId\030\001 \001"
  "(\t\022;\n\ntargetType\030\002 \001(\0162\'.AcFunDanmu.Im.I"
  "mMessage.ChatTargetType\032\362\001\n\023SessionListR"
  "esponse\0223\n\nsyncCookie\030\001 \001(\0132\037.AcFunDanmu"
  ".Im.Basic.SyncCookie\0226\n\010sessions\030\002 \003(\0132$"
  ".AcFunDanmu.Im.ImMessage.ChatSession\022\024\n\014"
  "notFullFetch\030\003 \001(\010\022\022\n\nserverTime\030\004 \001(\003\022\026"
  "\n\016clearLocalData\030\005 \001(\010\022\022\n\ncategoryId\030\006 \001"
  "(\005\022\030\n\020clientDataStatus\030\007 \001(\005\032K\n\026SessionP"
  "ageListRequest\022\016\n\006cursor\030\001 \001(\t\022\r\n\005count\030"
  "\002 \001(\005\022\022\n\ncategoryId\030\003 \001(\005\032b\n\027SessionPage"
  "ListResponse\022\017\n\007hasMore\030\001 \001(\010\0226\n\010session"
  "s\030\002 \003(\0132$.AcFunDanmu.Im.ImMessage.ChatSe"
  "ssion\032\257\001\n\024SessionRemoveRequest\022\020\n\010target"
  "Id\030\001 \001(\003\022\?\n\016chatTargetType\030\002 \001(\0162\'.AcFun"
  "Danmu.Im.ImMessage.ChatTargetType\022\022\n\ncat"
  "egoryId\030\003 \001(\005\022\023\n\013strTargetId\030\004 \001(\t\022\033\n\023no"
  "tCleanAllMessages\030\005 \001(\010\032\027\n\025SessionRemove"
  "Response\032N\n\023SessionCleanRequest\0227\n\nchatT"
  "arget\030\001 \001(\0132#.AcFunDanmu.Im.ImMessage.Ch"
  "atTarget\032\026\n\024SessionCleanResponse\032\215\001\n\024Mes"
  "sageDeleteRequest\022\020\n\010targetId\030\001 \001(\003\022\?\n\016c"
  "hatTargetType\030\002 \001(\0162\'.AcFunDanmu.Im.ImMe"
  "ssage.ChatTargetType\022\r\n\005seqId\030\003 \003(\003\022\023\n\013s"
  "trTargetId\030\004 \001(\t\032\027\n\025MessageDeleteRespons"
  "e\032^\n\024MessageCancelRequest\0227\n\nchatTarget\030"
  "\001 \001(\0132#.AcFunDanmu.Im.ImMessage.ChatTarg"
  "et\022\r\n\005seqId\030\002 \003(\003\032\027\n\025MessageCancelRespon"
  "se\032N\n\023MessageClearRequest\0227\n\nchatTarget\030"
  "\001 \001(\0132#.AcFunDanmu.Im.ImMessage.ChatTarg"
  "et\032\026\n\024MessageClearResponse\032W\n\013ReadSeqInf"
  "o\0227\n\nchatTarget\030\001 \001(\0132#.AcFunDanmu.Im.Im"
  "Message.ChatTarget\022\017\n\007readSeq\030\002 \001(\003\032P\n\025M"
  "essageReadSeqRequest\0227\n\nchatTarget\030\001 \003(\013"
  "2#.AcFunDanmu.Im.ImMessage.ChatTarget\032S\n"
  "\026MessageReadSeqResponse\0229\n\013readSeqInfo\030\001"
  " \003(\0132$.AcFunDanmu.Im.ImMessage.ReadSeqIn"
  "fo\032\212\001\n\017MessageReadPush\022\020\n\010targetId\030\001 \001(\003"
  "\022\017\n\007readSeq\030\002 \001(\003\022\?\n\016chatTargetType\030\003 \001("
  "\0162\'.AcFunDanmu.Im.ImMessage.ChatTargetTy"
  "pe\022\023\n\013strTargetId\030\004 \001(\t\032\027\n\025AllUnreadCoun"
  "tRequest\0320\n\026AllUnreadCountResponse\022\026\n\016al"
  "lUnreadCount\030\001 \001(\005\0322\n\025MessageReadAllRequ"
  "est\022\031\n\021sessionCategoryId\030\001 \001(\005\0322\n\026Messag"
  "eReadAllResponse\022\030\n\020readAllTimestamp\030\001 \001"
  "(\003\032h\n\030SesionStickyOnTopRequest\0227\n\nchatTa"
  "rget\030\001 \001(\0132#.AcFunDanmu.Im.ImMessage.Cha"
  "tTarget\022\023\n\013stickyOnTop\030\002 \001(\010\032S\n\032SessionS"
  "tickyOnTopResponse\0225\n\007session\030\001 \001(\0132$.Ac"
  "FunDanmu.Im.ImMessage.ChatSession\032s\n\nSes"
  "sionRaw\0229\n\003raw\030\001 \003(\0132,.AcFunDanmu.Im.ImM"
  "essage.SessionRaw.RawEntry\032*\n\010RawEntry\022\013"
  "\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\014:\0028\001\032^\n\024Messag"
  "eRecallRequest\0227\n\nchatTarget\030\001 \001(\0132#.AcF"
  "unDanmu.Im.ImMessage.ChatTarget\022\r\n\005seqId"
  "\030\002 \001(\003\032\027\n\025MessageRecallResponse\032\231\001\n\025Mess"
  "ageReceiptRequest\022G\n\022messageReceiptInfo\030"
  "\001 \003(\0132+.AcFunDanmu.Im.ImMessage.MessageR"
  "eceiptInfo\0227\n\nchatTarget\030\002 \001(\0132#.AcFunDa"
  "nmu.Im.ImMessage.ChatTarget\032\030\n\026MessageRe"
  "ceiptResponse\032%\n\022MessageReceiptInfo\022\017\n\007r"
  "eadSeq\030\001 \001(\003\032g\n\035MessageReceiptCountGetRe"
  "quest\022\r\n\005seqId\030\001 \003(\003\0227\n\nchatTarget\030\002 \001(\013"
  "2#.AcFunDanmu.Im.ImMessage.ChatTarget\032_\n"
  "\036MessageReceiptCountGetResponse\022=\n\006statu"
  "s\030\001 \003(\0132-.AcFunDanmu.Im.ImMessage.Messag"
  "eReceiptStatus\032a\n\024MessageReceiptStatus\022\021"
  "\n\treadCount\030\001 \001(\005\022\023\n\013unreadCount\030\002 \001(\005\022\r"
  "\n\005seqId\030\003 \001(\003\022\022\n\nserverTime\030\004 \001(\003\032h\n\036Mes"
  "sageReceiptDetailGetRequest\022\r\n\005seqId\030\001 \001"
  "(\003\0227\n\nchatTarget\030\002 \001(\0132#.AcFunDanmu.Im.I"
  "mMessage.ChatTarget\032}\n\037MessageReceiptDet"
  "ailGetResponse\022+\n\010readUser\030\001 \003(\0132\031.AcFun"
  "Danmu.Im.Basic.User\022-\n\nunreadUser\030\002 \003(\0132"
  "\031.AcFunDanmu.Im.Basic.User\032L\n\027MessageBat"
  "chSendRequest\0221\n\007message\030\001 \003(\0132 .AcFunDa"
  "nmu.Im.ImMessage.Message\032Z\n\030MessageBatch"
  "SendResponse\022>\n\010response\030\001 \003(\0132,.AcFunDa"
  "nmu.Im.ImMessage.SendMessageResponse\032f\n\017"
  "ImageAttachment\022\020\n\010mimeType\030\001 \001(\t\022\013\n\003url"
  "\030\002 \001(\t\022\r\n\005width\030\003 \001(\005\022\016\n\006height\030\004 \001(\005\022\025\n"
  "\rlengthInBytes\030\005 \001(\003\032f\n\017AudioAttachment\022"
  "\020\n\010mimeType\030\001 \001(\t\022\013\n\003url\030\002 \001(\t\022\r\n\005width\030"
  "\003 \001(\005\022\016\n\006height\030\004 \001(\005\022\025\n\rlengthInBytes\030\005"
  " \001(\003\032n\n\rGifAttachment\022\020\n\010mimeType\030\001 \001(\t\022"
  "\013\n\003url\030\002 \001(\t\022\r\n\005width\030\003 \001(\005\022\016\n\006height\030\004 "
  "\001(\005\022\021\n\tthumbaUrl\030\005 \001(\t\022\014\n\004text\030\006 \001(\t\032\244\001\n"
  "\nAttachment\022C\n\017imageAttachment\030\001 \001(\0132(.A"
  "cFunDanmu.Im.ImMessage.ImageAttachmentH\000"
  "\022C\n\017audioAttachment\030\002 \001(\0132(.AcFunDanmu.I"
  "m.ImMessage.AudioAttachmentH\000B\014\n\nattacmn"
  "ent\032G\n\013Attachments\0228\n\013attachments\030\001 \003(\0132"
  "#.AcFunDanmu.Im.ImMessage.Attachment\0324\n\022"
  "PlaceHolderMessage\022\016\n\006minSeq\030\001 \001(\003\022\016\n\006ma"
  "xSeq\030\002 \001(\003\032\177\n\020ImageTextMessage\022\r\n\005title\030"
  "\001 \001(\t\022\023\n\013description\030\002 \001(\t\022\020\n\010imageUrl\030\003"
  " \001(\t\022\021\n\tactionUrl\030\004 \001(\t\022\r\n\005width\030\005 \001(\005\022\023"
  "\n\013aspectRatio\030\006 \001(\002\032Z\n\017RichTextMessage\022G"
  "\n\017richTextMessage\030\001 \001(\0132..AcFunDanmu.Im."
  "ImMessage.RichTextNoticeMessage\032\243\001\n\rNoti"
  "ceMessage\022F\n\016richTextNotice\030\002 \001(\0132..AcFu"
  "nDanmu.Im.ImMessage.RichTextNoticeMessag"
  "e\022\013\n\003msg\030\005 \001(\t\022=\n\017i18nCopyWriting\030\n \001(\0132"
  "$.AcFunDanmu.Im.Basic.I18nCopyWriting\032\306\001"
  "\n\025RichTextNoticeMessage\022J\n\005items\030\001 \003(\0132;"
  ".AcFunDanmu.Im.ImMessage.RichTextNoticeM"
  "essage.RichTextItem\032a\n\014RichTextItem\022\r\n\005c"
  "olor\030\001 \001(\005\022\r\n\005start\030\002 \001(\005\022\013\n\003len\030\003 \001(\005\022\023"
  "\n\013clickAction\030\004 \001(\t\022\021\n\tunderline\030\005 \001(\010\"\233"
  "\004\n\013MessageType\022\010\n\004Text\020\000\022\t\n\005Image\020\002\022\t\n\005A"
  "udio\020\003\022\t\n\005Movie\020\004\022\010\n\004File\020\005\022\007\n\003Gif\020\007\022\r\n\t"
  "ImageText\020\010\022\017\n\013PlaceHolder\020d\022\n\n\006Notice\020e"
  "\022\023\n\017MultiFormNotice\020g\022\021\n\rMessageCancel\020h"
  "\022\027\n\023MessageCancelOrigin\020i\022\017\n\nGameInvite\020"
  "\310\001\022\022\n\rFavouriteGame\020\311\001\022\017\n\nTeamInvite\020\312\001\022"
  "\024\n\017MultiPlayerGame\020\322\001\022\032\n\025MultiPlayerGame"
  "Invite\020\323\001\022\025\n\020GameFriendTravel\020\254\002\022\025\n\020Game"
  "TravelInvite\020\255\002\022\030\n\023MultiPlayerChatRoom\020\220"
  "\003\022\036\n\031MultiPlayerChatRoomInvite\020\221\003\022\"\n\035Mul"
  "tiPlayerChatRoomGameInvite\020\222\003\022\016\n\tFeedSha"
  "re\020\364\003\022\031\n\024DianDianMatchSuccess\020\330\004\022\031\n\024Dian"
  "DianNotification\020\331\004\022\t\n\004Gift\020\274\005\022\034\n\027SOGAME"
  "_MESSAGE_TYPE_MAX\020\347\007\"`\n\022KsUserRelationSh"
  "ip\022\013\n\007kUNKNOW\020\000\022\025\n\021FOLLOW_EACH_OTHER\020\001\022\022"
  "\n\016TO_FOLLOW_FROM\020\002\022\022\n\016FROM_FOLLOW_TO\020\003\"B"
  "\n\013AccountType\022\013\n\007UNKNOWN\020\000\022\014\n\010OFFICIAL\020\001"
  "\022\n\n\006NORMAL\020\002\022\014\n\010STRANGER\020\003\"\177\n\016ChatTarget"
  "Type\022\014\n\010CTT_USER\020\000\022\021\n\rCTT_CHAT_ROOM\020\002\022\031\n"
  "\025CTT_MULTI_PLAYER_ROOM\020\003\022\r\n\tCTT_GROUP\020\004\022"
  "\017\n\013CTT_CHANNEL\020\005\022\021\n\rCTT_AGGREGATE\020\006\"9\n\nS"
  "ystemUser\022\026\n\022kSystemUserInvalid\020\000\022\023\n\016SYS"
  "TEM_USER_ID\020\220N\"\271T\n\005Cloud\032\342\007\n\007Channel\032@\n\027"
  "ChannelSubscribeRequest\022\021\n\tchannelId\030\001 \001"
  "(\t\022\022\n\nsetBarrier\030\002 \001(\010\032\032\n\030ChannelSubscri"
  "beResponse\032.\n\031ChannelUnsubscribeRequest\022"
  "\021\n\tchannelId\030\001 \001(\t\0321\n\034ChannelSubscribers"
  "GetRequest\022\021\n\tchannelId\030\001 \001(\t\032N\n\035Channel"
  "SubscribersGetResposne\022-\n\nsubscriber\030\001 \003"
  "(\0132\031.AcFunDanmu.Im.Basic.User\032>\n\020Channel"
  "BasicInfo\022\021\n\tchannelId\030\001 \001(\t\022\027\n\017subscrib"
  "erCount\030\002 \001(\005\032\205\001\n\016UserActionInfo\022\'\n\004user"
  "\030\001 \001(\0132\031.AcFunDanmu.Im.Basic.User\0227\n\006act"
  "ion\030\002 \001(\0162\'.AcFunDanmu.Im.Cloud.Channel."
  "UserAction\022\021\n\ttimestamp\030\003 \001(\003\032/\n\032Channel"
  "BasicInfoGetRequest\022\021\n\tchannelId\030\001 \003(\t\032_"
  "\n\033ChannelBasicInfoGetResponse\022@\n\tbasicIn"
  "fo\030\001 \003(\0132-.AcFunDanmu.Im.Cloud.Channel.C"
  "hannelBasicInfo\032,\n\027ChannelHeartbeatReque"
  "st\022\021\n\tchannelId\030\001 \003(\t\0325\n\030ChannelHeartbea"
  "tResponse\022\031\n\021notExistChannelId\030\001 \003(\t\032\237\001\n"
  "\026ChannelBasicInfoNotify\022C\n\016userActionInf"
  "o\030\001 \001(\0132+.AcFunDanmu.Im.Cloud.Channel.Us"
  "erActionInfo\022@\n\tbasicInfo\030\002 \001(\0132-.AcFunD"
  "anmu.Im.Cloud.Channel.ChannelBasicInfo\"e"
  "\n\nUserAction\022\027\n\023USER_ACTION_UNKNOWN\020\000\022\025\n"
  "\021USER_JOIN_CHANNEL\020\001\022\025\n\021USER_QUIT_CHANNE"
  "L\020\002\022\020\n\014USER_OFFLINE\020\003\032\231\004\n\006Config\032)\n\026Clie"
  "ntConfigGetRequest\022\017\n\007version\030\001 \001(\r\032j\n\027C"
  "lientConfigGetResponse\022\017\n\007version\030\001 \001(\r\022"
  ">\n\014clientConfig\030\002 \001(\0132(.AcFunDanmu.Im.Cl"
  "oud.Config.ClientConfig\032V\n\035NetworkQualit"
  "yDetectionConfig\022\027\n\017detectionDomain\030\001 \001("
  "\t\022\034\n\024detectionInvervalSec\030\002 \001(\005\032\237\002\n\014Clie"
  "ntConfig\022\037\n\027fetchUserStatusInterval\030\001 \001("
  "\005\022$\n\034channelUserHeartbeatInterval\030\002 \001(\005\022"
  "`\n\035networkQualityDetectionConfig\030\003 \001(\01329"
  ".AcFunDanmu.Im.Cloud.Config.NetworkQuali"
  "tyDetectionConfig\022#\n\033inputtingTipDisplay"
  "Interval\030\004 \001(\005\022 \n\030batchSendMessageMaxCou"
  "nt\030\005 \001(\005\022\037\n\027resourceUploadingDomain\030\006 \001("
  "\t\032\213\003\n\007Profile\032\312\001\n\020UserOnlineStatus\022\'\n\004us"
  "er\030\001 \001(\0132\031.AcFunDanmu.Im.Basic.User\022\027\n\017l"
  "astOfflineTime\030\002 \001(\003\022D\n\006status\030\003 \001(\01624.A"
  "cFunDanmu.Im.Cloud.Profile.UserOnlineSta"
  "tus.Status\".\n\006Status\022\013\n\007UNKNOWN\020\000\022\n\n\006ONL"
  "INE\020\001\022\013\n\007OFFLINE\020\002\032H\n\035ProfileBatchOnline"
  "TimeRequest\022\'\n\004user\030\001 \003(\0132\031.AcFunDanmu.I"
  "m.Basic.User\032i\n\036ProfileBatchOnlineTimeRe"
  "sponse\022G\n\020userOnlineStatus\030\001 \003(\0132-.AcFun"
  "Danmu.Im.Cloud.Profile.UserOnlineStatus\032"
  "\242\005\n\004Data\032\231\005\n\006Update\032v\n\031KsImDataUpdatePus"
  "hPayload\022H\n\004type\030\001 \001(\0132:.AcFunDanmu.Im.C"
  "loud.Data.Update.KsImDataUpdatePushPaylo"
  "ad\022\017\n\007content\030\002 \001(\014\032&\n\023GroupInfoDataUpda"
  "te\022\017\n\007groupId\030\001 \001(\t\032(\n\025GroupMemberListUp"
  "date\022\017\n\007groupId\030\001 \001(\t\032\036\n\013YouBeKicked\022\017\n\007"
  "groupId\030\001 \001(\t\032t\n\013MessageRead\022\023\n\013strTarge"
  "tId\030\001 \001(\t\022\017\n\007readSeq\030\002 \001(\003\022\?\n\016chatTarget"
  "Type\030\003 \001(\0162\'.AcFunDanmu.Im.ImMessage.Cha"
  "tTargetType\032\217\001\n\016MessageReceipt\0227\n\nchatTa"
  "rget\030\001 \001(\0132#.AcFunDanmu.Im.ImMessage.Cha"
  "tTarget\022D\n\rreceiptStatus\030\002 \001(\0132-.AcFunDa"
  "nmu.Im.ImMessage.MessageReceiptStatus\"\234\001"
  "\n\022KsImDataUpdateType\022\013\n\007INVALID\020\000\022\025\n\021GRO"
  "UP_INFO_UPDATE\020\001\022\034\n\030GROUP_MEMBER_LIST_UP"
  "DATE\020\002\022\021\n\rYOU_BE_KICKED\020\003\022\026\n\022MESSAGE_REA"
  "D_EVENT\020\004\022\031\n\025MESSAGE_RECEIPT_EVENT\020\005\032\373\?\n"
  "\007Message\032\213\001\n\022ImcRecalledMessage\0223\n\torigi"
  "nMsg\030\001 \001(\0132 .AcFunDanmu.Im.ImMessage.Mes"
  "sage\022@\n\tnoticeMsg\030\002 \001(\0132-.AcFunDanmu.Im."
  "Cloud.Message.ImcNoticeMessage\032I\n\021ImcRep"
  "laceMessage\0224\n\nreplaceMsg\030\001 \001(\0132 .AcFunD"
  "anmu.Im.ImMessage.Message\032\024\n\004Text\022\014\n\004tex"
  "t\030\001 \001(\t\0323\n\005Image\022\013\n\003uri\030\001 \001(\t\022\r\n\005width\030\002"
  " \001(\005\022\016\n\006height\030\003 \001(\005\0324\n\005Audio\022\013\n\003uri\030\001 \001"
  "(\t\022\020\n\010duration\030\002 \001(\005\022\014\n\004type\030\003 \001(\t\032e\n\005Vi"
  "deo\022\013\n\003uri\030\001 \001(\t\022\020\n\010duration\030\002 \001(\005\022\r\n\005wi"
  "dth\030\003 \001(\005\022\016\n\006height\030\004 \001(\005\022\020\n\010coverUri\030\005 "
  "\001(\t\022\014\n\004type\030\006 \001(\t\032\031\n\006Custom\022\017\n\007payload\030\001"
  " \001(\t\032B\n\006PicUrl\022\013\n\003cdn\030\001 \001(\t\022\013\n\003url\030\002 \001(\t"
  "\022\022\n\nurlPattern\030\003 \001(\t\022\n\n\002ip\030\004 \001(\t\032\203\003\n\010Emo"
  "ticon\022\n\n\002id\030\001 \001(\t\022\021\n\tpackageId\030\002 \001(\t\022\014\n\004"
  "name\030\003 \001(\t\0228\n\004type\030\004 \001(\0162*.AcFunDanmu.Im"
  ".Cloud.Message.Emoticon.Type\0223\n\006bigUrl\030\005"
  " \003(\0132#.AcFunDanmu.Im.Cloud.Message.PicUr"
  "l\022\r\n\005width\030\006 \001(\005\022\016\n\006height\030\007 \001(\005\022@\n\014emot"
  "iconCOde\030\010 \003(\0132*.AcFunDanmu.Im.Cloud.Mes"
  "sage.Emoticon.Code\032&\n\004Code\022\020\n\010language\030\001"
  " \001(\t\022\014\n\004code\030\002 \003(\t\"R\n\004Type\022\013\n\007UNKNOWN\020\000\022"
  "\t\n\005BASIC\020\001\022\t\n\005IMAGE\020\002\022\007\n\003GIF\020\003\022\022\n\016SPECIA"
  "L_EFFECT\020\004\022\n\n\006SCRIPT\020\005\032=\n\004File\022\013\n\003uri\030\001 "
  "\001(\t\022\014\n\004name\030\002 \001(\t\022\013\n\003ext\030\003 \001(\t\022\r\n\005extra\030"
  "\004 \001(\t\032\311\001\n\tReference\0223\n\toriginMsg\030\001 \001(\0132 "
  ".AcFunDanmu.Im.ImMessage.Message\022M\n\014refe"
  "renceMsg\030\002 \001(\01327.AcFunDanmu.Im.Cloud.Mes"
  "sage.Reference.ReferenceMessage\0328\n\020Refer"
  "enceMessage\022\023\n\013contentType\030\001 \001(\005\022\017\n\007cont"
  "ent\030\002 \001(\014\032J\n\025ForwardMessageContent\0221\n\007me"
  "ssage\030\001 \003(\0132 .AcFunDanmu.Im.ImMessage.Me"
  "ssage\032M\n\025NoticePlaceholderMeta\022\020\n\010target"
  "Id\030\001 \001(\t\022\022\n\nstartIndex\030\002 \001(\005\022\016\n\006length\030\003"
  " \001(\005\032\243\001\n\020ImcNoticeMessage\022\014\n\004text\030\001 \001(\t\022"
  "Q\n\025noticePlaceholderMeta\030\002 \003(\01322.AcFunDa"
  "nmu.Im.Cloud.Message.NoticePlaceholderMe"
  "ta\022\026\n\016noticeMetaType\030\003 \001(\005\022\026\n\016noticeMeta"
  "Info\030\004 \001(\014\032\212\001\n$ConfirmInviteIntoGroupNot"
  "iceMetaInfo\022\021\n\trequestId\030\001 \001(\003\022\017\n\007groupI"
  "d\030\002 \001(\t\022>\n\006status\030\003 \001(\0162..AcFunDanmu.Im."
  "Cloud.Message.JoinRequestStatus\032\210\001\n\"Conf"
  "irmJoinIntoGroupNoticeMetaInfo\022\021\n\treques"
  "tId\030\001 \001(\003\022\017\n\007groupId\030\002 \001(\t\022>\n\006status\030\003 \001"
  "(\0162..AcFunDanmu.Im.Cloud.Message.JoinReq"
  "uestStatus\032@\n\022GroupCreateRequest\022*\n\007memb"
  "ers\030\001 \003(\0132\031.AcFunDanmu.Im.Basic.User\032\233\001\n"
  "\022GroupCreateReponse\022\017\n\007groupId\030\001 \001(\t\0229\n\t"
  "groupInfo\030\002 \001(\0132&.AcFunDanmu.Im.Cloud.Me"
  "ssage.GroupInfo\0229\n\007members\030\003 \003(\0132(.AcFun"
  "Danmu.Im.Cloud.Message.GroupMember\032%\n\022Gr"
  "oupDeleteRequest\022\017\n\007groupId\030\001 \001(\t\032\025\n\023Gro"
  "upDeleteResponse\032f\n\022GroupInviteRequest\022\017"
  "\n\007groupId\030\001 \001(\t\022*\n\007members\030\002 \003(\0132\031.AcFun"
  "Danmu.Im.Basic.User\022\023\n\013descContent\030\003 \001(\t"
  "\032\266\001\n\023GroupInvideResponse\022\017\n\007groupId\030\001 \001("
  "\t\022S\n\014inviteStatus\030\002 \001(\0162=.AcFunDanmu.Im."
  "Cloud.Message.GroupInvideResponse.Invite"
  "Status\"9\n\014InviteStatus\022\022\n\016UNKNOWN_STATUS"
  "\020\000\022\010\n\004SUCC\020\001\022\013\n\007PENDING\020\002\032\242\001\n\020GroupJoinR"
  "equest\022\017\n\007groupId\030\001 \001(\t\022*\n\007inviter\030\002 \001(\013"
  "2\031.AcFunDanmu.Im.Basic.User\022\023\n\013descConte"
  "nt\030\003 \001(\t\022<\n\010findType\030\004 \001(\0162*.AcFunDanmu."
  "Im.Cloud.Message.GroupFindType\032\233\001\n\021Group"
  "JoinResponse\022M\n\njoinStatus\030\001 \001(\01629.AcFun"
  "Danmu.Im.Cloud.Message.GroupJoinResponse"
  ".JoinStatus\"7\n\nJoinStatus\022\022\n\016UNKNOWN_STA"
  "TUS\020\000\022\010\n\004SUCC\020\001\022\013\n\007PENDING\020\002\032\351\001\n\032GroupJo"
  "inRequestAckRequest\022\r\n\005reqId\030\001 \001(\003\022\017\n\007gr"
  "oupId\030\002 \001(\t\022b\n\020groupJoinAckType\030\003 \001(\0162H."
  "AcFunDanmu.Im.Cloud.Message.GroupJoinReq"
  "uestAckRequest.GroupJoinAckType\"G\n\020Group"
  "JoinAckType\022\020\n\014UNKNOWN_TYPE\020\000\022\t\n\005AGREE\020\001"
  "\022\n\n\006REFUSE\020\002\022\n\n\006IGNORE\020\003\032\035\n\033GroupJoinReq"
  "uestAckResponse\032=\n\032GroupJoinRequestGetRe"
  "quest\022\016\n\006reqSeq\030\001 \001(\003\022\017\n\007groupId\030\002 \001(\t\032\231"
  "\002\n\033GroupJoinRequestGetResponse\022\017\n\007groupI"
  "d\030\001 \001(\t\022*\n\007inviter\030\002 \001(\0132\031.AcFunDanmu.Im"
  ".Basic.User\022+\n\010invitees\030\003 \003(\0132\031.AcFunDan"
  "mu.Im.Basic.User\022;\n\007findWay\030\004 \001(\0162*.AcFu"
  "nDanmu.Im.Cloud.Message.GroupFindType\022\023\n"
  "\013descContent\030\005 \001(\t\022>\n\006status\030\006 \001(\0162..AcF"
  "unDanmu.Im.Cloud.Message.JoinRequestStat"
  "us\032@\n\035GroupJoinRequestCancelRequest\022\016\n\006r"
  "eqSeq\030\001 \001(\003\022\017\n\007groupId\030\002 \001(\t\032\234\002\n\036GroupJo"
  "inRequestCancelResposne\022\017\n\007groupId\030\001 \001(\t"
  "\022*\n\007inviter\030\002 \001(\0132\031.AcFunDanmu.Im.Basic."
  "User\022+\n\010invitees\030\003 \003(\0132\031.AcFunDanmu.Im.B"
  "asic.User\022;\n\007findWay\030\004 \001(\0162*.AcFunDanmu."
  "Im.Cloud.Message.GroupFindType\022\023\n\013descCo"
  "ntent\030\005 \001(\t\022>\n\006status\030\006 \001(\0162..AcFunDanmu"
  ".Im.Cloud.Message.JoinRequestStatus\032#\n\020G"
  "roupQuitRequest\022\017\n\007groupId\030\001 \001(\t\032$\n\021Grou"
  "pQuitResponse\022\017\n\007groupId\030\001 \001(\t\032N\n\020GroupK"
  "ickRequest\022\017\n\007groupId\030\001 \001(\t\022)\n\006target\030\002 "
  "\003(\0132\031.AcFunDanmu.Im.Basic.User\032$\n\021GroupK"
  "ickResponse\022\017\n\007groupId\030\001 \001(\t\032\223\002\n\023GroupSe"
  "ttingRequest\022\017\n\007groupId\030\001 \001(\t\022A\n\006rename\030"
  "\002 \001(\0132/.AcFunDanmu.Im.Cloud.Message.Grou"
  "pSettingRenameH\000\022=\n\004desc\030\003 \001(\0132-.AcFunDa"
  "nmu.Im.Cloud.Message.GroupSettingDescH\000\022"
  "Y\n\022joinNeedPermission\030\004 \001(\0132;.AcFunDanmu"
  ".Im.Cloud.Message.GroupSettingJoinNeedPe"
  "rmissionH\000B\016\n\014GroupSetting\032\'\n\022GroupSetti"
  "ngRename\022\021\n\tgroupName\030\001 \001(\t\032 \n\020GroupSett"
  "ingDesc\022\014\n\004desc\030\001 \001(\t\032q\n\036GroupSettingJoi"
  "nNeedPermission\022O\n\022joinNeedPermission\030\001 "
  "\001(\01623.AcFunDanmu.Im.Cloud.Message.JoinNe"
  "edPermissionType\032\026\n\024GroupSettingResponse"
  "\032\321\001\n\031GroupMemberSettingRequest\022\017\n\007groupI"
  "d\030\001 \001(\t\022C\n\013setNickname\030\002 \001(\0132,.AcFunDanm"
  "u.Im.Cloud.Message.SetUserNicknameH\000\022O\n\021"
  "setAntiDisturbing\030\003 \001(\01322.AcFunDanmu.Im."
  "Cloud.Message.SetUserAntiDisturbingH\000B\r\n"
  "\013UserSetting\032#\n\017SetUserNickname\022\020\n\010nickn"
  "ame\030\001 \001(\t\032/\n\025SetUserAntiDisturbing\022\026\n\016an"
  "tiDisturbing\030\001 \001(\010\032\034\n\032GroupMemberSetting"
  "Response\032a\n\031GroupMemberListGetRequest\022\017\n"
  "\007groupId\030\001 \001(\t\0223\n\nsyncCookie\030\002 \001(\0132\037.AcF"
  "unDanmu.Im.Basic.SyncCookie\032\214\001\n\032GroupMem"
  "berListGetResponse\0229\n\007members\030\001 \003(\0132(.Ac"
  "FunDanmu.Im.Cloud.Message.GroupMember\0223\n"
  "\nsyncCookie\030\002 \001(\0132\037.AcFunDanmu.Im.Basic."
  "SyncCookie\032Q\n\025GroupMemberGetRequest\022\017\n\007g"
  "roupId\030\001 \001(\t\022\'\n\004user\030\002 \001(\0132\031.AcFunDanmu."
  "Im.Basic.User\032R\n\026GroupMemberGetResponse\022"
  "8\n\006member\030\001 \001(\0132(.AcFunDanmu.Im.Cloud.Me"
  "ssage.GroupMember\032K\n\024UserGroupListReques"
  "t\0223\n\nsyncCookie\030\002 \001(\0132\037.AcFunDanmu.Im.Ba"
  "sic.SyncCookie\032\217\001\n\025UserGroupListResponse"
  "\022A\n\ruserGroupInfo\030\001 \003(\0132*.AcFunDanmu.Im."
  "Cloud.Message.UserGroupInfo\0223\n\nsyncCooki"
  "e\030\002 \001(\0132\037.AcFunDanmu.Im.Basic.SyncCookie"
  "\0326\n\017UserGroupRecord\022\017\n\007groupId\030\001 \001(\t\022\022\n\n"
  "updateTime\030\002 \001(\003\032&\n\023UserGroupGetRequest\022"
  "\017\n\007groupId\030\001 \003(\t\032Y\n\024UserGroupGetResponse"
  "\022A\n\ruserGroupInfo\030\001 \003(\0132*.AcFunDanmu.Im."
  "Cloud.Message.UserGroupInfo\032\211\001\n\rUserGrou"
  "pInfo\0229\n\tgroupInfo\030\001 \001(\0132&.AcFunDanmu.Im"
  ".Cloud.Message.GroupInfo\022=\n\013groupMember\030"
  "\002 \001(\0132(.AcFunDanmu.Im.Cloud.Message.Grou"
  "pMember\032\237\004\n\013GroupMember\022\'\n\004user\030\001 \001(\0132\031."
  "AcFunDanmu.Im.Basic.User\022\020\n\010nickname\030\002 \001"
  "(\t\022\026\n\016antiDisturbing\030\003 \001(\010\022J\n\006status\030\004 \001"
  "(\0162:.AcFunDanmu.Im.Cloud.Message.GroupMe"
  "mber.GroupMemberStatus\022\021\n\tinviterId\030\005 \001("
  "\003\022\020\n\010joinTime\030\006 \001(\003\022\022\n\ncreateTime\030\007 \001(\003\022"
  "\022\n\nupdateTime\030\010 \001(\003\022F\n\004role\030\t \001(\01628.AcFu"
  "nDanmu.Im.Cloud.Message.GroupMember.Grou"
  "pMemberRole\022<\n\010findType\030\n \001(\0162*.AcFunDan"
  "mu.Im.Cloud.Message.GroupFindType\"b\n\021Gro"
  "upMemberStatus\022\031\n\025UNKNOWN_MEMBER_STATUS\020"
  "\000\022\n\n\006NORMAL\020\001\022\013\n\007QUITTED\020\002\022\n\n\006KICKED\020\003\022\r"
  "\n\tDISMISSED\020\004\":\n\017GroupMemberRole\022\020\n\014UNKN"
  "OWN_ROLE\020\000\022\n\n\006COMMON\020\001\022\t\n\005ADMIN\020\002\032\234\001\n\tGr"
  "oupInfo\022>\n\tbasicInfo\030\001 \001(\0132+.AcFunDanmu."
  "Im.Cloud.Message.GroupBasicInfo\022O\n\024group"
  "MemberBriefInfo\030\002 \001(\01321.AcFunDanmu.Im.Cl"
  "oud.Message.GroupMemberBriefInfo\032\253\003\n\016Gro"
  "upBasicInfo\022\017\n\007groupId\030\001 \001(\t\022\021\n\tgroupNam"
  "e\030\002 \001(\t\022(\n\005admin\030\003 \001(\0132\031.AcFunDanmu.Im.B"
  "asic.User\022=\n\013groupStatus\030\004 \001(\0162(.AcFunDa"
  "nmu.Im.Cloud.Message.GroupStatus\022\023\n\013desc"
  "ription\030\005 \001(\t\022O\n\022joinNeedPermission\030\006 \001("
  "\01623.AcFunDanmu.Im.Cloud.Message.JoinNeed"
  "PermissionType\022\022\n\ncreateTime\030\007 \001(\003\022\022\n\nup"
  "dateTime\030\010 \001(\003\0229\n\tgroupType\030\t \001(\0162&.AcFu"
  "nDanmu.Im.Cloud.Message.GroupType\022C\n\016for"
  "biddenState\030\n \001(\0162+.AcFunDanmu.Im.Cloud."
  "Message.ForbiddenState\032r\n\024GroupMemberBri"
  "efInfo\022\023\n\013memberCount\030\001 \001(\005\022-\n\ntopMember"
  "s\030\002 \003(\0132\031.AcFunDanmu.Im.Basic.User\022\026\n\016la"
  "stUpdateTime\030\003 \001(\003\032v\n\025ImcPassThroughRequ"
  "est\0227\n\nchatTarget\030\001 \001(\0132#.AcFunDanmu.Im."
  "ImMessage.ChatTarget\022\017\n\007content\030\002 \001(\014\022\023\n"
  "\013contentType\030\003 \001(\005\032\030\n\026ImcPassThroughResp"
  "onse\032\240\001\n\022ImcPassThroughPush\0227\n\nchatTarge"
  "t\030\001 \001(\0132#.AcFunDanmu.Im.ImMessage.ChatTa"
  "rget\022+\n\010fromUser\030\002 \001(\0132\031.AcFunDanmu.Im.B"
  "asic.User\022\017\n\007content\030\003 \001(\014\022\023\n\013contentTyp"
  "e\030\004 \001(\005\032+\n\020InputtingContent\022\027\n\017displayIn"
  "terval\030\001 \001(\005\"\345\001\n\016ImcMessageType\022\010\n\004TEXT\020"
  "\000\022\t\n\005IMAGE\020\001\022\n\n\006CUSTOM\020\002\022\t\n\005AUDIO\020\003\022\t\n\005V"
  "IDEO\020\004\022\014\n\010EMOTICON\020\005\022\010\n\004FILE\020\006\022\n\n\006NOTICE"
  "\020\n\022\014\n\010RECALLED\020\013\022\r\n\tREFERENCE\020\014\022\021\n\rMERGE"
  "_FORWARD\020\r\022\020\n\014PLACE_HOLDER\020d\022\013\n\007REPLACE\020"
  "e\022\027\n\022INVISIBLE_TYPE_MAS\020\307\001\022\020\n\013RICH_NOTIC"
  "E\020\310\001\"\221\001\n\016NoticeMetaType\022\034\n\030UNKNOWN_NOTIC"
  "E_META_TYPE\020\000\022\033\n\027COMMON_NOTICE_META_TYPE"
  "\020\001\022\"\n\036CONFIRM_INVITE_INTO_GROUP_META\020\002\022 "
  "\n\034CONFIRM_JOIN_INTO_GROUP_META\020\003\"z\n\rGrou"
  "pFindType\022\016\n\nBY_UNKNOWN\020\000\022\t\n\005BY_ID\020\001\022\013\n\007"
  "BY_NAME\020\002\022\016\n\nBY_QR_CODE\020\003\022\013\n\007BY_CARD\020\004\022\021"
  "\n\rBY_INVITATION\020\005\022\021\n\rBY_SHARE_LINK\020\006\"Q\n\021"
  "JoinRequestStatus\022\022\n\016UNKNOWN_STATUS\020\000\022\r\n"
  "\tREQUESTED\020\001\022\014\n\010APPROVED\020\002\022\013\n\007REFUSED\020\003\""
  "T\n\026JoinNeedPermissionType\022%\n!UNKNOWN_JOI"
  "N_NEED_PERMISSION_TYPE\020\000\022\010\n\004NONE\020\001\022\t\n\005AD"
  "MIN\020\002\">\n\013GroupStatus\022\027\n\023UNKNOW_GROUP_STA"
  "TUS\020\000\022\t\n\005VALID\020\001\022\013\n\007INVALID\020\002\";\n\tGroupTy"
  "pe\022\025\n\021UNKNOW_GROUP_TYPE\020\000\022\013\n\007PRIVATE\020\003\022\n"
  "\n\006PUBLIC\020\004\"S\n\016ForbiddenState\022\033\n\027UNKNOWN_"
  "FORBIDDEN_STATE\020\000\022\020\n\014UN_FORBIDDEN\020\001\022\022\n\016F"
  "ORBID_MESSAGE\020\002\"1\n\017PassThroughType\022\017\n\013IN"
  "VALID_PTT\020\000\022\r\n\tINPUTTING\020\001b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_Im_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_Im_2eproto_sccs[184] = {
  &scc_info_Basic_Im_2eproto.base,
  &scc_info_Basic_AccessPoint_Im_2eproto.base,
  &scc_info_Basic_AccessPointsConfig_Im_2eproto.base,
  &scc_info_Basic_AppInfo_Im_2eproto.base,
  &scc_info_Basic_DeviceInfo_Im_2eproto.base,
  &scc_info_Basic_DownstreamPayload_Im_2eproto.base,
  &scc_info_Basic_EnvInfo_Im_2eproto.base,
  &scc_info_Basic_ErrorMessage_Im_2eproto.base,
  &scc_info_Basic_I18nCopyWriting_Im_2eproto.base,
  &scc_info_Basic_KeepAliveRequest_Im_2eproto.base,
  &scc_info_Basic_KeepAliveResponse_Im_2eproto.base,
  &scc_info_Basic_LocaleMessage_Im_2eproto.base,
  &scc_info_Basic_LocaleMessage_ErrorMessageEntry_DoNotUse_Im_2eproto.base,
  &scc_info_Basic_PacketHeader_Im_2eproto.base,
  &scc_info_Basic_PingRequest_Im_2eproto.base,
  &scc_info_Basic_PingResponse_Im_2eproto.base,
  &scc_info_Basic_PushServiceToken_Im_2eproto.base,
  &scc_info_Basic_RegisterRequest_Im_2eproto.base,
  &scc_info_Basic_RegisterResponse_Im_2eproto.base,
  &scc_info_Basic_RequestBasicInfo_Im_2eproto.base,
  &scc_info_Basic_SdkOption_Im_2eproto.base,
  &scc_info_Basic_SettingInfo_Im_2eproto.base,
  &scc_info_Basic_SyncCookie_Im_2eproto.base,
  &scc_info_Basic_TokenInfo_Im_2eproto.base,
  &scc_info_Basic_UnregisterRequest_Im_2eproto.base,
  &scc_info_Basic_UnregisterResponse_Im_2eproto.base,
  &scc_info_Basic_UpstreamPayload_Im_2eproto.base,
  &scc_info_Basic_User_Im_2eproto.base,
  &scc_info_Basic_UserInstance_Im_2eproto.base,
  &scc_info_Cloud_Im_2eproto.base,
  &scc_info_Cloud_Channel_Im_2eproto.base,
  &scc_info_Cloud_Channel_ChannelBasicInfo_Im_2eproto.base,
  &scc_info_Cloud_Channel_ChannelBasicInfoGetRequest_Im_2eproto.base,
  &scc_info_Cloud_Channel_ChannelBasicInfoGetResponse_Im_2eproto.base,
  &scc_info_Cloud_Channel_ChannelBasicInfoNotify_Im_2eproto.base,
  &scc_info_Cloud_Channel_ChannelHeartbeatRequest_Im_2eproto.base,
  &scc_info_Cloud_Channel_ChannelHeartbeatResponse_Im_2eproto.base,
  &scc_info_Cloud_Channel_ChannelSubscribeRequest_Im_2eproto.base,
  &scc_info_Cloud_Channel_ChannelSubscribeResponse_Im_2eproto.base,
  &scc_info_Cloud_Channel_ChannelSubscribersGetRequest_Im_2eproto.base,
  &scc_info_Cloud_Channel_ChannelSubscribersGetResposne_Im_2eproto.base,
  &scc_info_Cloud_Channel_ChannelUnsubscribeRequest_Im_2eproto.base,
  &scc_info_Cloud_Channel_UserActionInfo_Im_2eproto.base,
  &scc_info_Cloud_Config_Im_2eproto.base,
  &scc_info_Cloud_Config_ClientConfig_Im_2eproto.base,
  &scc_info_Cloud_Config_ClientConfigGetRequest_Im_2eproto.base,
  &scc_info_Cloud_Config_ClientConfigGetResponse_Im_2eproto.base,
  &scc_info_Cloud_Config_NetworkQualityDetectionConfig_Im_2eproto.base,
  &scc_info_Cloud_Data_Im_2eproto.base,
  &scc_info_Cloud_Data_Update_Im_2eproto.base,
  &scc_info_Cloud_Data_Update_GroupInfoDataUpdate_Im_2eproto.base,
  &scc_info_Cloud_Data_Update_GroupMemberListUpdate_Im_2eproto.base,
  &scc_info_Cloud_Data_Update_KsImDataUpdatePushPayload_Im_2eproto.base,
  &scc_info_Cloud_Data_Update_MessageRead_Im_2eproto.base,
  &scc_info_Cloud_Data_Update_MessageReceipt_Im_2eproto.base,
  &scc_info_Cloud_Data_Update_YouBeKicked_Im_2eproto.base,
  &scc_info_Cloud_Message_Im_2eproto.base,
  &scc_info_Cloud_Message_Audio_Im_2eproto.base,
  &scc_info_Cloud_Message_ConfirmInviteIntoGroupNoticeMetaInfo_Im_2eproto.base,
  &scc_info_Cloud_Message_ConfirmJoinIntoGroupNoticeMetaInfo_Im_2eproto.base,
  &scc_info_Cloud_Message_Custom_Im_2eproto.base,
  &scc_info_Cloud_Message_Emoticon_Im_2eproto.base,
  &scc_info_Cloud_Message_Emoticon_Code_Im_2eproto.base,
  &scc_info_Cloud_Message_File_Im_2eproto.base,
  &scc_info_Cloud_Message_ForwardMessageContent_Im_2eproto.base,
  &scc_info_Cloud_Message_GroupBasicInfo_Im_2eproto.base,
  &scc_info_Cloud_Message_GroupCreateReponse_Im_2eproto.base,
  &scc_info_Cloud_Message_GroupCreateRequest_Im_2eproto.base,
  &scc_info_Cloud_Message_GroupDeleteRequest_Im_2eproto.base,
  &scc_info_Cloud_Message_GroupDeleteResponse_Im_2eproto.base,
  &scc_info_Cloud_Message_GroupInfo_Im_2eproto.base,
  &scc_info_Cloud_Message_GroupInvideResponse_Im_2eproto.base,
  &scc_info_Cloud_Message_GroupInviteRequest_Im_2eproto.base,
  &scc_info_Cloud_Message_GroupJoinRequest_Im_2eproto.base,
  &scc_info_Cloud_Message_GroupJoinRequestAckRequest_Im_2eproto.base,
  &scc_info_Cloud_Message_GroupJoinRequestAckResponse_Im_2eproto.base,
  &scc_info_Cloud_Message_GroupJoinRequestCancelRequest_Im_2eproto.base,
  &scc_info_Cloud_Message_GroupJoinRequestCancelResposne_Im_2eproto.base,
  &scc_info_Cloud_Message_GroupJoinRequestGetRequest_Im_2eproto.base,
  &scc_info_Cloud_Message_GroupJoinRequestGetResponse_Im_2eproto.base,
  &scc_info_Cloud_Message_GroupJoinResponse_Im_2eproto.base,
  &scc_info_Cloud_Message_GroupKickRequest_Im_2eproto.base,
  &scc_info_Cloud_Message_GroupKickResponse_Im_2eproto.base,
  &scc_info_Cloud_Message_GroupMember_Im_2eproto.base,
  &scc_info_Cloud_Message_GroupMemberBriefInfo_Im_2eproto.base,
  &scc_info_Cloud_Message_GroupMemberGetRequest_Im_2eproto.base,
  &scc_info_Cloud_Message_GroupMemberGetResponse_Im_2eproto.base,
  &scc_info_Cloud_Message_GroupMemberListGetRequest_Im_2eproto.base,
  &scc_info_Cloud_Message_GroupMemberListGetResponse_Im_2eproto.base,
  &scc_info_Cloud_Message_GroupMemberSettingRequest_Im_2eproto.base,
  &scc_info_Cloud_Message_GroupMemberSettingResponse_Im_2eproto.base,
  &scc_info_Cloud_Message_GroupQuitRequest_Im_2eproto.base,
  &scc_info_Cloud_Message_GroupQuitResponse_Im_2eproto.base,
  &scc_info_Cloud_Message_GroupSettingDesc_Im_2eproto.base,
  &scc_info_Cloud_Message_GroupSettingJoinNeedPermission_Im_2eproto.base,
  &scc_info_Cloud_Message_GroupSettingRename_Im_2eproto.base,
  &scc_info_Cloud_Message_GroupSettingRequest_Im_2eproto.base,
  &scc_info_Cloud_Message_GroupSettingResponse_Im_2eproto.base,
  &scc_info_Cloud_Message_Image_Im_2eproto.base,
  &scc_info_Cloud_Message_ImcNoticeMessage_Im_2eproto.base,
  &scc_info_Cloud_Message_ImcPassThroughPush_Im_2eproto.base,
  &scc_info_Cloud_Message_ImcPassThroughRequest_Im_2eproto.base,
  &scc_info_Cloud_Message_ImcPassThroughResponse_Im_2eproto.base,
  &scc_info_Cloud_Message_ImcRecalledMessage_Im_2eproto.base,
  &scc_info_Cloud_Message_ImcReplaceMessage_Im_2eproto.base,
  &scc_info_Cloud_Message_InputtingContent_Im_2eproto.base,
  &scc_info_Cloud_Message_NoticePlaceholderMeta_Im_2eproto.base,
  &scc_info_Cloud_Message_PicUrl_Im_2eproto.base,
  &scc_info_Cloud_Message_Reference_Im_2eproto.base,
  &scc_info_Cloud_Message_Reference_ReferenceMessage_Im_2eproto.base,
  &scc_info_Cloud_Message_SetUserAntiDisturbing_Im_2eproto.base,
  &scc_info_Cloud_Message_SetUserNickname_Im_2eproto.base,
  &scc_info_Cloud_Message_Text_Im_2eproto.base,
  &scc_info_Cloud_Message_UserGroupGetRequest_Im_2eproto.base,
  &scc_info_Cloud_Message_UserGroupGetResponse_Im_2eproto.base,
  &scc_info_Cloud_Message_UserGroupInfo_Im_2eproto.base,
  &scc_info_Cloud_Message_UserGroupListRequest_Im_2eproto.base,
  &scc_info_Cloud_Message_UserGroupListResponse_Im_2eproto.base,
  &scc_info_Cloud_Message_UserGroupRecord_Im_2eproto.base,
  &scc_info_Cloud_Message_Video_Im_2eproto.base,
  &scc_info_Cloud_Profile_Im_2eproto.base,
  &scc_info_Cloud_Profile_ProfileBatchOnlineTimeRequest_Im_2eproto.base,
  &scc_info_Cloud_Profile_ProfileBatchOnlineTimeResponse_Im_2eproto.base,
  &scc_info_Cloud_Profile_UserOnlineStatus_Im_2eproto.base,
  &scc_info_ImMessage_Im_2eproto.base,
  &scc_info_ImMessage_AllUnreadCountRequest_Im_2eproto.base,
  &scc_info_ImMessage_AllUnreadCountResponse_Im_2eproto.base,
  &scc_info_ImMessage_Attachment_Im_2eproto.base,
  &scc_info_ImMessage_Attachments_Im_2eproto.base,
  &scc_info_ImMessage_AudioAttachment_Im_2eproto.base,
  &scc_info_ImMessage_ChatSession_Im_2eproto.base,
  &scc_info_ImMessage_ChatTarget_Im_2eproto.base,
  &scc_info_ImMessage_GifAttachment_Im_2eproto.base,
  &scc_info_ImMessage_ImageAttachment_Im_2eproto.base,
  &scc_info_ImMessage_ImageTextMessage_Im_2eproto.base,
  &scc_info_ImMessage_Message_Im_2eproto.base,
  &scc_info_ImMessage_MessageBatchSendRequest_Im_2eproto.base,
  &scc_info_ImMessage_MessageBatchSendResponse_Im_2eproto.base,
  &scc_info_ImMessage_MessageCancelRequest_Im_2eproto.base,
  &scc_info_ImMessage_MessageCancelResponse_Im_2eproto.base,
  &scc_info_ImMessage_MessageClearRequest_Im_2eproto.base,
  &scc_info_ImMessage_MessageClearResponse_Im_2eproto.base,
  &scc_info_ImMessage_MessageDeleteRequest_Im_2eproto.base,
  &scc_info_ImMessage_MessageDeleteResponse_Im_2eproto.base,
  &scc_info_ImMessage_MessageReadAllRequest_Im_2eproto.base,
  &scc_info_ImMessage_MessageReadAllResponse_Im_2eproto.base,
  &scc_info_ImMessage_MessageReadPush_Im_2eproto.base,
  &scc_info_ImMessage_MessageReadSeqRequest_Im_2eproto.base,
  &scc_info_ImMessage_MessageReadSeqResponse_Im_2eproto.base,
  &scc_info_ImMessage_MessageRecallRequest_Im_2eproto.base,
  &scc_info_ImMessage_MessageRecallResponse_Im_2eproto.base,
  &scc_info_ImMessage_MessageReceiptCountGetRequest_Im_2eproto.base,
  &scc_info_ImMessage_MessageReceiptCountGetResponse_Im_2eproto.base,
  &scc_info_ImMessage_MessageReceiptDetailGetRequest_Im_2eproto.base,
  &scc_info_ImMessage_MessageReceiptDetailGetResponse_Im_2eproto.base,
  &scc_info_ImMessage_MessageReceiptInfo_Im_2eproto.base,
  &scc_info_ImMessage_MessageReceiptRequest_Im_2eproto.base,
  &scc_info_ImMessage_MessageReceiptResponse_Im_2eproto.base,
  &scc_info_ImMessage_MessageReceiptStatus_Im_2eproto.base,
  &scc_info_ImMessage_NoticeMessage_Im_2eproto.base,
  &scc_info_ImMessage_PlaceHolderMessage_Im_2eproto.base,
  &scc_info_ImMessage_PullNewRequest_Im_2eproto.base,
  &scc_info_ImMessage_PullNewResponse_Im_2eproto.base,
  &scc_info_ImMessage_PullOldRequest_Im_2eproto.base,
  &scc_info_ImMessage_PullOldResponse_Im_2eproto.base,
  &scc_info_ImMessage_ReadSeqInfo_Im_2eproto.base,
  &scc_info_ImMessage_RemindBody_Im_2eproto.base,
  &scc_info_ImMessage_Reminder_Im_2eproto.base,
  &scc_info_ImMessage_RichTextMessage_Im_2eproto.base,
  &scc_info_ImMessage_RichTextNoticeMessage_Im_2eproto.base,
  &scc_info_ImMessage_RichTextNoticeMessage_RichTextItem_Im_2eproto.base,
  &scc_info_ImMessage_SendMessageResponse_Im_2eproto.base,
  &scc_info_ImMessage_SesionStickyOnTopRequest_Im_2eproto.base,
  &scc_info_ImMessage_SessionCleanRequest_Im_2eproto.base,
  &scc_info_ImMessage_SessionCleanResponse_Im_2eproto.base,
  &scc_info_ImMessage_SessionListRequest_Im_2eproto.base,
  &scc_info_ImMessage_SessionListResponse_Im_2eproto.base,
  &scc_info_ImMessage_SessionPageListRequest_Im_2eproto.base,
  &scc_info_ImMessage_SessionPageListResponse_Im_2eproto.base,
  &scc_info_ImMessage_SessionRaw_Im_2eproto.base,
  &scc_info_ImMessage_SessionRaw_RawEntry_DoNotUse_Im_2eproto.base,
  &scc_info_ImMessage_SessionRemoveRequest_Im_2eproto.base,
  &scc_info_ImMessage_SessionRemoveResponse_Im_2eproto.base,
  &scc_info_ImMessage_SessionStickyOnTopResponse_Im_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_Im_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_Im_2eproto = {
  false, false, descriptor_table_protodef_Im_2eproto, "Im.proto", 34754,
  &descriptor_table_Im_2eproto_once, descriptor_table_Im_2eproto_sccs, descriptor_table_Im_2eproto_deps, 184, 0,
  schemas, file_default_instances, TableStruct_Im_2eproto::offsets,
  file_level_metadata_Im_2eproto, 184, file_level_enum_descriptors_Im_2eproto, file_level_service_descriptors_Im_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_Im_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_Im_2eproto)), true);
namespace AcFunDanmu {
namespace Im {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Basic_PacketHeader_Flags_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_Im_2eproto);
  return file_level_enum_descriptors_Im_2eproto[0];
}
bool Basic_PacketHeader_Flags_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Basic_PacketHeader_Flags Basic_PacketHeader::kDirUpstream;
constexpr Basic_PacketHeader_Flags Basic_PacketHeader::kDirDownstream;
constexpr Basic_PacketHeader_Flags Basic_PacketHeader::kDirMask;
constexpr Basic_PacketHeader_Flags Basic_PacketHeader::Flags_MIN;
constexpr Basic_PacketHeader_Flags Basic_PacketHeader::Flags_MAX;
constexpr int Basic_PacketHeader::Flags_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Basic_PacketHeader_EncodingType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_Im_2eproto);
  return file_level_enum_descriptors_Im_2eproto[1];
}
bool Basic_PacketHeader_EncodingType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Basic_PacketHeader_EncodingType Basic_PacketHeader::kEncodingNone;
constexpr Basic_PacketHeader_EncodingType Basic_PacketHeader::kEncodingLz4;
constexpr Basic_PacketHeader_EncodingType Basic_PacketHeader::EncodingType_MIN;
constexpr Basic_PacketHeader_EncodingType Basic_PacketHeader::EncodingType_MAX;
constexpr int Basic_PacketHeader::EncodingType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Basic_PacketHeader_EncryptionMode_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_Im_2eproto);
  return file_level_enum_descriptors_Im_2eproto[2];
}
bool Basic_PacketHeader_EncryptionMode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Basic_PacketHeader_EncryptionMode Basic_PacketHeader::kEncryptionNone;
constexpr Basic_PacketHeader_EncryptionMode Basic_PacketHeader::kEncryptionServiceToken;
constexpr Basic_PacketHeader_EncryptionMode Basic_PacketHeader::kEncryptionSessionKey;
constexpr Basic_PacketHeader_EncryptionMode Basic_PacketHeader::EncryptionMode_MIN;
constexpr Basic_PacketHeader_EncryptionMode Basic_PacketHeader::EncryptionMode_MAX;
constexpr int Basic_PacketHeader::EncryptionMode_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Basic_PacketHeader_Feature_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_Im_2eproto);
  return file_level_enum_descriptors_Im_2eproto[3];
}
bool Basic_PacketHeader_Feature_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Basic_PacketHeader_Feature Basic_PacketHeader::kReserve;
constexpr Basic_PacketHeader_Feature Basic_PacketHeader::kCompressLz4;
constexpr Basic_PacketHeader_Feature Basic_PacketHeader::Feature_MIN;
constexpr Basic_PacketHeader_Feature Basic_PacketHeader::Feature_MAX;
constexpr int Basic_PacketHeader::Feature_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Basic_PingRequest_PingType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_Im_2eproto);
  return file_level_enum_descriptors_Im_2eproto[4];
}
bool Basic_PingRequest_PingType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Basic_PingRequest_PingType Basic_PingRequest::kInvalid;
constexpr Basic_PingRequest_PingType Basic_PingRequest::kPriorRegister;
constexpr Basic_PingRequest_PingType Basic_PingRequest::kPostRegister;
constexpr Basic_PingRequest_PingType Basic_PingRequest::PingType_MIN;
constexpr Basic_PingRequest_PingType Basic_PingRequest::PingType_MAX;
constexpr int Basic_PingRequest::PingType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Basic_RegisterRequest_PresenceStatus_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_Im_2eproto);
  return file_level_enum_descriptors_Im_2eproto[5];
}
bool Basic_RegisterRequest_PresenceStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Basic_RegisterRequest_PresenceStatus Basic_RegisterRequest::kPresenceOffline;
constexpr Basic_RegisterRequest_PresenceStatus Basic_RegisterRequest::kPresenceOnline;
constexpr Basic_RegisterRequest_PresenceStatus Basic_RegisterRequest::PresenceStatus_MIN;
constexpr Basic_RegisterRequest_PresenceStatus Basic_RegisterRequest::PresenceStatus_MAX;
constexpr int Basic_RegisterRequest::PresenceStatus_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Basic_RegisterRequest_ActiveStatus_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_Im_2eproto);
  return file_level_enum_descriptors_Im_2eproto[6];
}
bool Basic_RegisterRequest_ActiveStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Basic_RegisterRequest_ActiveStatus Basic_RegisterRequest::kInvalid;
constexpr Basic_RegisterRequest_ActiveStatus Basic_RegisterRequest::kAppInForeground;
constexpr Basic_RegisterRequest_ActiveStatus Basic_RegisterRequest::kAppinBackground;
constexpr Basic_RegisterRequest_ActiveStatus Basic_RegisterRequest::ActiveStatus_MIN;
constexpr Basic_RegisterRequest_ActiveStatus Basic_RegisterRequest::ActiveStatus_MAX;
constexpr int Basic_RegisterRequest::ActiveStatus_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Basic_AccessPoint_AddressType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_Im_2eproto);
  return file_level_enum_descriptors_Im_2eproto[7];
}
bool Basic_AccessPoint_AddressType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Basic_AccessPoint_AddressType Basic_AccessPoint::kIPV4;
constexpr Basic_AccessPoint_AddressType Basic_AccessPoint::kIPV6;
constexpr Basic_AccessPoint_AddressType Basic_AccessPoint::kDomain;
constexpr Basic_AccessPoint_AddressType Basic_AccessPoint::AddressType_MIN;
constexpr Basic_AccessPoint_AddressType Basic_AccessPoint::AddressType_MAX;
constexpr int Basic_AccessPoint::AddressType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Basic_TokenInfo_TokenType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_Im_2eproto);
  return file_level_enum_descriptors_Im_2eproto[8];
}
bool Basic_TokenInfo_TokenType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Basic_TokenInfo_TokenType Basic_TokenInfo::kInvalid;
constexpr Basic_TokenInfo_TokenType Basic_TokenInfo::kServiceToken;
constexpr Basic_TokenInfo_TokenType Basic_TokenInfo::TokenType_MIN;
constexpr Basic_TokenInfo_TokenType Basic_TokenInfo::TokenType_MAX;
constexpr int Basic_TokenInfo::TokenType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Basic_PushServiceToken_PushType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_Im_2eproto);
  return file_level_enum_descriptors_Im_2eproto[9];
}
bool Basic_PushServiceToken_PushType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Basic_PushServiceToken_PushType Basic_PushServiceToken::kPushTypeInvalid;
constexpr Basic_PushServiceToken_PushType Basic_PushServiceToken::kPushTypeAPNS;
constexpr Basic_PushServiceToken_PushType Basic_PushServiceToken::kPushTypeXmPush;
constexpr Basic_PushServiceToken_PushType Basic_PushServiceToken::kPushTypeJgPush;
constexpr Basic_PushServiceToken_PushType Basic_PushServiceToken::kPushTypeGtPUsh;
constexpr Basic_PushServiceToken_PushType Basic_PushServiceToken::kPushTypeOpPush;
constexpr Basic_PushServiceToken_PushType Basic_PushServiceToken::kPushTYpeVvPush;
constexpr Basic_PushServiceToken_PushType Basic_PushServiceToken::kPushTypeHwPush;
constexpr Basic_PushServiceToken_PushType Basic_PushServiceToken::kPushTYpeFcm;
constexpr Basic_PushServiceToken_PushType Basic_PushServiceToken::PushType_MIN;
constexpr Basic_PushServiceToken_PushType Basic_PushServiceToken::PushType_MAX;
constexpr int Basic_PushServiceToken::PushType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Basic_DeviceInfo_PlatformType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_Im_2eproto);
  return file_level_enum_descriptors_Im_2eproto[10];
}
bool Basic_DeviceInfo_PlatformType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Basic_DeviceInfo_PlatformType Basic_DeviceInfo::kInvalid;
constexpr Basic_DeviceInfo_PlatformType Basic_DeviceInfo::kAndroid;
constexpr Basic_DeviceInfo_PlatformType Basic_DeviceInfo::kiOS;
constexpr Basic_DeviceInfo_PlatformType Basic_DeviceInfo::kWindows;
constexpr Basic_DeviceInfo_PlatformType Basic_DeviceInfo::WECHAT_ANDROID;
constexpr Basic_DeviceInfo_PlatformType Basic_DeviceInfo::WECHAT_IOS;
constexpr Basic_DeviceInfo_PlatformType Basic_DeviceInfo::H5;
constexpr Basic_DeviceInfo_PlatformType Basic_DeviceInfo::kPlatformNum;
constexpr Basic_DeviceInfo_PlatformType Basic_DeviceInfo::PlatformType_MIN;
constexpr Basic_DeviceInfo_PlatformType Basic_DeviceInfo::PlatformType_MAX;
constexpr int Basic_DeviceInfo::PlatformType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Basic_EnvInfo_NetworkType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_Im_2eproto);
  return file_level_enum_descriptors_Im_2eproto[11];
}
bool Basic_EnvInfo_NetworkType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Basic_EnvInfo_NetworkType Basic_EnvInfo::kInvalid;
constexpr Basic_EnvInfo_NetworkType Basic_EnvInfo::kWIFI;
constexpr Basic_EnvInfo_NetworkType Basic_EnvInfo::kCellular;
constexpr Basic_EnvInfo_NetworkType Basic_EnvInfo::NetworkType_MIN;
constexpr Basic_EnvInfo_NetworkType Basic_EnvInfo::NetworkType_MAX;
constexpr int Basic_EnvInfo::NetworkType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Basic_SharePlatform_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_Im_2eproto);
  return file_level_enum_descriptors_Im_2eproto[12];
}
bool Basic_SharePlatform_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Basic_SharePlatform Basic::kSharePlatformInvalid;
constexpr Basic_SharePlatform Basic::kSharePlatformWechat;
constexpr Basic_SharePlatform Basic::kSharePlatformWechatMoments;
constexpr Basic_SharePlatform Basic::kSharePlatformQQ;
constexpr Basic_SharePlatform Basic::kSharePlatformQzone;
constexpr Basic_SharePlatform Basic::kSharePlatformWeibo;
constexpr Basic_SharePlatform Basic::kSharePlatformKuaishou;
constexpr Basic_SharePlatform Basic::kSharePlatformFacebook;
constexpr Basic_SharePlatform Basic::kSharePlatformTwitter;
constexpr Basic_SharePlatform Basic::kSharePlatformGoogle;
constexpr Basic_SharePlatform Basic::kSharePlatformKakao;
constexpr Basic_SharePlatform Basic::kSharePlatformZalo;
constexpr Basic_SharePlatform Basic::SharePlatform_MIN;
constexpr Basic_SharePlatform Basic::SharePlatform_MAX;
constexpr int Basic::SharePlatform_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Basic_ErrorCode_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_Im_2eproto);
  return file_level_enum_descriptors_Im_2eproto[13];
}
bool Basic_ErrorCode_IsValid(int value) {
  switch (value) {
    case 0:
    case 10000:
    case 10001:
    case 10002:
    case 10003:
    case 10004:
    case 10005:
    case 10006:
    case 10007:
    case 10008:
    case 10009:
    case 10010:
    case 10011:
    case 10012:
    case 10013:
    case 10014:
    case 10016:
    case 10017:
    case 10018:
    case 10019:
    case 10020:
    case 10021:
    case 10022:
    case 10023:
    case 10024:
    case 10025:
    case 10026:
    case 10027:
    case 10028:
    case 10029:
    case 10030:
    case 10031:
    case 10032:
    case 10033:
    case 10034:
    case 10035:
    case 10036:
    case 20000:
    case 20001:
    case 20002:
    case 20003:
    case 20004:
    case 20005:
    case 20006:
    case 20007:
    case 20008:
    case 20009:
    case 20010:
    case 21003:
    case 21004:
    case 21005:
    case 21006:
    case 21007:
    case 21008:
    case 21009:
    case 21010:
    case 21011:
    case 21012:
    case 21013:
    case 21014:
    case 21015:
    case 21016:
    case 21017:
    case 22000:
    case 22001:
    case 23000:
    case 24000:
    case 24001:
    case 24002:
    case 24003:
    case 24004:
    case 24005:
    case 24100:
    case 24101:
    case 24102:
    case 24103:
    case 24104:
    case 24105:
    case 50001:
    case 50002:
    case 50003:
    case 50004:
    case 50006:
    case 50007:
    case 50008:
    case 50009:
    case 50010:
    case 50011:
    case 50012:
    case 50013:
    case 50014:
    case 50015:
    case 50016:
    case 50017:
    case 50018:
    case 50019:
    case 50020:
    case 50021:
    case 50022:
    case 50023:
    case 50024:
    case 50025:
    case 50026:
    case 50027:
    case 50028:
    case 50029:
    case 50030:
    case 50031:
    case 50032:
    case 50033:
    case 50034:
    case 50040:
    case 50041:
    case 50042:
    case 50050:
    case 50051:
    case 50060:
    case 50061:
    case 50062:
    case 50063:
    case 50064:
    case 50065:
    case 50066:
    case 50067:
    case 50068:
    case 50069:
    case 50070:
    case 50071:
    case 50072:
    case 50073:
    case 50074:
    case 50075:
    case 50076:
    case 50077:
    case 50078:
    case 50079:
    case 50080:
    case 50081:
    case 50082:
    case 50083:
    case 50100:
    case 50101:
    case 50102:
    case 50103:
    case 50200:
    case 50201:
    case 50202:
    case 50203:
    case 50204:
    case 50205:
    case 50210:
    case 50211:
    case 50300:
    case 50301:
    case 50302:
    case 50303:
    case 50304:
    case 50400:
    case 50401:
    case 50402:
    case 50403:
    case 50500:
    case 50501:
    case 50502:
    case 50503:
    case 50504:
    case 50505:
    case 50506:
    case 50507:
    case 50508:
    case 50600:
    case 50601:
    case 50602:
    case 50603:
    case 50604:
    case 50605:
    case 50606:
    case 50607:
    case 50608:
    case 50609:
    case 50610:
    case 50611:
    case 50700:
    case 50701:
    case 50703:
    case 50704:
    case 50705:
    case 50706:
    case 50707:
    case 50708:
    case 50709:
    case 50710:
    case 50711:
    case 50712:
    case 50800:
    case 50801:
    case 50802:
    case 50803:
    case 50804:
    case 50805:
    case 50806:
    case 50807:
    case 50808:
    case 50809:
    case 50810:
    case 50811:
    case 50812:
    case 50813:
    case 50814:
    case 50815:
    case 50816:
    case 50817:
    case 50818:
    case 50819:
    case 50820:
    case 50821:
    case 50822:
    case 50823:
    case 50824:
    case 50825:
    case 50826:
    case 50827:
    case 50828:
    case 50829:
    case 50830:
    case 50831:
    case 50832:
    case 50833:
    case 50834:
    case 50835:
    case 50836:
    case 50837:
    case 50838:
    case 50839:
    case 50840:
    case 50841:
    case 50842:
    case 50843:
    case 50844:
    case 50845:
    case 50846:
    case 50847:
    case 50848:
    case 50849:
    case 50850:
    case 50860:
    case 50861:
    case 50862:
    case 50863:
    case 50864:
    case 50865:
    case 50866:
    case 50900:
    case 50901:
    case 50902:
    case 50903:
    case 50904:
    case 50905:
    case 50906:
    case 50907:
    case 50908:
    case 50909:
    case 50910:
    case 50911:
    case 50912:
    case 50913:
    case 50914:
    case 50915:
    case 50921:
    case 50922:
    case 50923:
    case 50924:
    case 50925:
    case 50926:
    case 50927:
    case 50928:
    case 50929:
    case 50930:
    case 50931:
    case 50932:
    case 50933:
    case 50934:
    case 50950:
    case 50951:
    case 50952:
    case 50953:
    case 50954:
    case 50955:
    case 51000:
    case 51001:
    case 51002:
    case 51003:
    case 51004:
    case 51050:
    case 51051:
    case 51052:
    case 51100:
    case 60001:
    case 60002:
    case 60003:
    case 60004:
    case 70001:
    case 80100:
    case 80101:
    case 80102:
    case 80103:
    case 80104:
    case 80105:
    case 80106:
    case 80107:
    case 80108:
    case 80109:
    case 80110:
    case 80111:
    case 80112:
    case 80113:
    case 80114:
    case 80115:
    case 80116:
    case 80117:
    case 80118:
    case 80119:
    case 80120:
    case 80121:
    case 80122:
    case 80123:
    case 80124:
    case 80125:
    case 80126:
    case 80127:
    case 80128:
    case 80129:
    case 80130:
    case 80131:
    case 80132:
    case 81000:
    case 81001:
    case 82000:
    case 82001:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Basic_ErrorCode Basic::SUCC;
constexpr Basic_ErrorCode Basic::BASIC_MIN;
constexpr Basic_ErrorCode Basic::INTERNEL_ERROR;
constexpr Basic_ErrorCode Basic::SERVICE_UNAVAILABLE;
constexpr Basic_ErrorCode Basic::SERVICE_TIMEOUT;
constexpr Basic_ErrorCode Basic::INVALID_TOKEN;
constexpr Basic_ErrorCode Basic::REG_ENCYRPT_WITHOUT_TOKEN;
constexpr Basic_ErrorCode Basic::PARSE_PB_HDR_FAIL;
constexpr Basic_ErrorCode Basic::PARSE_PB_PLD_FAIL;
constexpr Basic_ErrorCode Basic::PARSE_PB_FAIL;
constexpr Basic_ErrorCode Basic::DECODED_LEN_FAIL;
constexpr Basic_ErrorCode Basic::INVALID_KEY;
constexpr Basic_ErrorCode Basic::ENCRYPT_FAIL;
constexpr Basic_ErrorCode Basic::DECRYPT_FAIL;
constexpr Basic_ErrorCode Basic::INVALID_TAG;
constexpr Basic_ErrorCode Basic::INVALID_VER;
constexpr Basic_ErrorCode Basic::INVALID_COMPRESS_TYPE;
constexpr Basic_ErrorCode Basic::INVALID_ENCRYPT_TYPE;
constexpr Basic_ErrorCode Basic::NOT_REGISTER;
constexpr Basic_ErrorCode Basic::USER_NOT_ONLINE;
constexpr Basic_ErrorCode Basic::INVALID_COMMAND;
constexpr Basic_ErrorCode Basic::PUSH_UNREGISTER_ERROR;
constexpr Basic_ErrorCode Basic::INVALID_SID;
constexpr Basic_ErrorCode Basic::INVALID_INSTANCE_ID;
constexpr Basic_ErrorCode Basic::CLIENT_LOCALE_NOT_MATCH;
constexpr Basic_ErrorCode Basic::INVALID_TOKEN_PASSWORD_CHANGED;
constexpr Basic_ErrorCode Basic::INVALID_TOKEN_TOKEN_EXPIRED;
constexpr Basic_ErrorCode Basic::INVALID_TOKEN_TOKEN_VALUE_ERROR;
constexpr Basic_ErrorCode Basic::INVALID_TOKEN_LOGIN_ON_OTHER_DEVICE;
constexpr Basic_ErrorCode Basic::FORCE_RECONNECT;
constexpr Basic_ErrorCode Basic::CLIENT_TIMEOUT;
constexpr Basic_ErrorCode Basic::INVALID_ARGUMENT;
constexpr Basic_ErrorCode Basic::INVALID_FORMAT_TOKEN;
constexpr Basic_ErrorCode Basic::EMPTY_PAYLOAD;
constexpr Basic_ErrorCode Basic::COMPRESS_FAIL;
constexpr Basic_ErrorCode Basic::DECOMPRESS_FAIL;
constexpr Basic_ErrorCode Basic::OUT_OF_ORDER;
constexpr Basic_ErrorCode Basic::MESSAGE_MIN;
constexpr Basic_ErrorCode Basic::ILLEGAL_PARAMETER;
constexpr Basic_ErrorCode Basic::SYSTEM_BUSY;
constexpr Basic_ErrorCode Basic::ILLEGAL_USER;
constexpr Basic_ErrorCode Basic::PARAMETER_LEN_TOO_LONG;
constexpr Basic_ErrorCode Basic::DATABASE_ERROR_MYSQL;
constexpr Basic_ErrorCode Basic::DATABASE_ERROR_HBASE;
constexpr Basic_ErrorCode Basic::DATABASE_ERROR_REDIS;
constexpr Basic_ErrorCode Basic::USER_REGISTER_LIMIT_IN_ALPHA;
constexpr Basic_ErrorCode Basic::FLOW_CONTROL;
constexpr Basic_ErrorCode Basic::LOCKED_USER_ACCOUNT_NEED_UPDATE_VERSION;
constexpr Basic_ErrorCode Basic::USER_NOT_REGISTER;
constexpr Basic_ErrorCode Basic::USER_NOT_FOUND;
constexpr Basic_ErrorCode Basic::FRIEND_ADD_NEED_VERIFY;
constexpr Basic_ErrorCode Basic::NO_FRIEND_REQUEST;
constexpr Basic_ErrorCode Basic::TOO_MANY_FRIENDS;
constexpr Basic_ErrorCode Basic::FRIEND_REQUEST_TOO_FREQUENTLY;
constexpr Basic_ErrorCode Basic::CHAT_NEED_TO_BE_FRIEND;
constexpr Basic_ErrorCode Basic::ADD_FRIEND_BLOCKED;
constexpr Basic_ErrorCode Basic::CANNOT_ADD_FRIEND_TO_SELF;
constexpr Basic_ErrorCode Basic::CANNOT_FOLLOW_SELF;
constexpr Basic_ErrorCode Basic::ADD_FOLLOW_BLOCKED;
constexpr Basic_ErrorCode Basic::TARGET_FRIEND_TOO_MANY;
constexpr Basic_ErrorCode Basic::TOO_MANY_IDOLS;
constexpr Basic_ErrorCode Basic::FRIEND_FOLLOW_OVER_LIMIT;
constexpr Basic_ErrorCode Basic::FRIEND_FOLLOW_SPAM;
constexpr Basic_ErrorCode Basic::CLIENT_CONFIG_READ_ERROR;
constexpr Basic_ErrorCode Basic::CLIENT_CONFIG_NOT_EXISTS_ERROR;
constexpr Basic_ErrorCode Basic::CONTENT_HIT_SENSITIVE_WORDS;
constexpr Basic_ErrorCode Basic::MORE_THAN_MAX_LENGTH;
constexpr Basic_ErrorCode Basic::MSG_TEXT_MAX_LENGTH;
constexpr Basic_ErrorCode Basic::MSG_CANCEL_OVERDUE;
constexpr Basic_ErrorCode Basic::CANNOT_RECALL_NON_SELF_MSG;
constexpr Basic_ErrorCode Basic::RECALL_NOT_EXIST_MSG;
constexpr Basic_ErrorCode Basic::REF_MSG_NESTING_DEPTH_REACH_LIMIT;
constexpr Basic_ErrorCode Basic::SEND_KS_MESSAGE_NOT_MATCH_RULE;
constexpr Basic_ErrorCode Basic::FIND_USER_FREQUENCY;
constexpr Basic_ErrorCode Basic::KUAISHOU_FANS_TOKEN_INVALID;
constexpr Basic_ErrorCode Basic::KUAISHOU_AUTHORIZE_FAILED;
constexpr Basic_ErrorCode Basic::ADD_FRIEND_TOO_FREQUENTLY;
constexpr Basic_ErrorCode Basic::BLACK_LIST_REACHED_LIMIT;
constexpr Basic_ErrorCode Basic::GAME_ROOM_IS_RELEASED;
constexpr Basic_ErrorCode Basic::CREATE_GAME_ROOM_FAIL;
constexpr Basic_ErrorCode Basic::GAME_SERVER_ERROR;
constexpr Basic_ErrorCode Basic::GAME_ROOM_IS_EXPIRED;
constexpr Basic_ErrorCode Basic::ALREADY_IN_GAME;
constexpr Basic_ErrorCode Basic::TARGET_ALREADY_IN_GAME;
constexpr Basic_ErrorCode Basic::GAME_NOT_EXIST;
constexpr Basic_ErrorCode Basic::GAME_ACCEPT_BUT_ALREAD_IN_GAME;
constexpr Basic_ErrorCode Basic::GAME_ACCEPT_BUT_TARGET_ALREADY_IN_GAME;
constexpr Basic_ErrorCode Basic::GAME_ACCEPT_BUT_APP_VERSION_TOO_LOW;
constexpr Basic_ErrorCode Basic::GAME_USER_MATCH_FAIL;
constexpr Basic_ErrorCode Basic::USER_FREQUENT_LEAVE_GAME_BE_PUNISHED;
constexpr Basic_ErrorCode Basic::RELATIONSHIP_INVALID_CANNOT_SEND_GAME_INVITE;
constexpr Basic_ErrorCode Basic::GAME_USER_MATCH_SYNC_NO_MATCH;
constexpr Basic_ErrorCode Basic::FORBID_MATCH;
constexpr Basic_ErrorCode Basic::GAME_RESOURCE_NO_EXIST;
constexpr Basic_ErrorCode Basic::GAME_MATCH_SYNC_NO_MATCH;
constexpr Basic_ErrorCode Basic::GAME_MATCH_SYNC_ALREADY_FINISH;
constexpr Basic_ErrorCode Basic::INVITATION_SEND_REACH_LIMITATION;
constexpr Basic_ErrorCode Basic::GAME_MATCH_TEAM_NOT_EXIST;
constexpr Basic_ErrorCode Basic::GAME_MATCH_TEAM_NO_TARGET;
constexpr Basic_ErrorCode Basic::GAME_MATCH_TEAM_OTHER_ALREADY_JOIN_SUCC;
constexpr Basic_ErrorCode Basic::FORZEN_USER;
constexpr Basic_ErrorCode Basic::FORZEN_USER_PROFILE;
constexpr Basic_ErrorCode Basic::FORZEN_USER_ACCOUNT;
constexpr Basic_ErrorCode Basic::TEMP_FORZEN_USER_ACCOUNT;
constexpr Basic_ErrorCode Basic::LOCKED_USER_ACCOUNT;
constexpr Basic_ErrorCode Basic::UNFREEZE_USER_ACCOUNT_APPLY_IN_PROCESS;
constexpr Basic_ErrorCode Basic::GAME_MATH_TEAM_DISBANDED;
constexpr Basic_ErrorCode Basic::USER_ACCOUNT_IS_NOT_FORZEN;
constexpr Basic_ErrorCode Basic::CAPTCHA_VERIFY_FAILED;
constexpr Basic_ErrorCode Basic::PROFILE_UPDATE_NOT_PERMIT;
constexpr Basic_ErrorCode Basic::GAME_REQUEST_TOO_FREQUENTLY;
constexpr Basic_ErrorCode Basic::WECHAT_GAME_INVITE_CANCEL;
constexpr Basic_ErrorCode Basic::WECHAT_GAME_INVITE_ACCEPTED;
constexpr Basic_ErrorCode Basic::THIRD_PARTY_NOT_BIND;
constexpr Basic_ErrorCode Basic::THIRD_PARTY_TOKEN_EXPIRE;
constexpr Basic_ErrorCode Basic::THIRD_PARTY_NO_FRIEND_PERMISSION;
constexpr Basic_ErrorCode Basic::GAME_INVITE_INFO_NOT_EXIST;
constexpr Basic_ErrorCode Basic::GAME_ACCEPT_IS_INVALID;
constexpr Basic_ErrorCode Basic::GAME_ARENA_NOT_EXIST;
constexpr Basic_ErrorCode Basic::GAME_SHOP_PROPS_BUY_FAIL;
constexpr Basic_ErrorCode Basic::GAME_SHOP_PROPS_USE_FAIL;
constexpr Basic_ErrorCode Basic::GAME_SHOP_PROPS_NOT_EXIST;
constexpr Basic_ErrorCode Basic::GAME_SHOP_PROPS_COUNT_UNMATCH;
constexpr Basic_ErrorCode Basic::GAME_SKIN_NOT_EXIST;
constexpr Basic_ErrorCode Basic::GAME_COIN_SHARE_TAKE_OVER_LIMIT;
constexpr Basic_ErrorCode Basic::GAME_COIN_TIMELY_TAKE_IN_CD;
constexpr Basic_ErrorCode Basic::GAME_SKIN_IN_LOCKED;
constexpr Basic_ErrorCode Basic::GAME_SHOP_BALANCE_NOT_ENOUGH;
constexpr Basic_ErrorCode Basic::GAME_SKIN_ALREADY_UNLOCKED;
constexpr Basic_ErrorCode Basic::GAME_SKIN_UPDATE_FAIL;
constexpr Basic_ErrorCode Basic::GAME_SKIN_IS_IN_USED;
constexpr Basic_ErrorCode Basic::GAME_USER_MATCH_TIMES_LIMIT;
constexpr Basic_ErrorCode Basic::GAME_SKIN_BUY_FAIL;
constexpr Basic_ErrorCode Basic::GAME_RESULT_VERIFY_NOT_PASS;
constexpr Basic_ErrorCode Basic::USE_RANK_TITLE_FAILED;
constexpr Basic_ErrorCode Basic::USER_LOCATION_FAILD;
constexpr Basic_ErrorCode Basic::GAME_ACHIEVEMENT_NOT_EXIST;
constexpr Basic_ErrorCode Basic::BALANCE_NOT_ENOUGH;
constexpr Basic_ErrorCode Basic::COIN_USE_FAIL;
constexpr Basic_ErrorCode Basic::COIN_ADD_FAIL;
constexpr Basic_ErrorCode Basic::GAME_LINK_MIC_ROOM_NOT_EXIST;
constexpr Basic_ErrorCode Basic::GAME_LINK_MIC_USER_NOT_IN_ROOM;
constexpr Basic_ErrorCode Basic::GAME_LINK_MIC_ROOM_UNEXPECTED_MESSAGE;
constexpr Basic_ErrorCode Basic::GAME_LINK_MIC_USER_ALREADY_IN_ROOM;
constexpr Basic_ErrorCode Basic::CHAT_ROOM_NOT_EXIST;
constexpr Basic_ErrorCode Basic::CHAT_ROOM_NOT_MEMBER;
constexpr Basic_ErrorCode Basic::CHAT_ROOM_TARGET_LEAVE;
constexpr Basic_ErrorCode Basic::CHAT_ROOM_TARGET_LEAVE_2P;
constexpr Basic_ErrorCode Basic::CHAT_ROOM_FORBID_IMAGE_BETWEEN_STRANGER;
constexpr Basic_ErrorCode Basic::CHAT_ROOM_LEAVE_TOO_FREQUENTLY;
constexpr Basic_ErrorCode Basic::SESSION_FORBID_IMAGE_BETWEEN_STRANGER;
constexpr Basic_ErrorCode Basic::SEND_MESSAGE_IS_BANNED;
constexpr Basic_ErrorCode Basic::QUIZZES_NOT_EXIST;
constexpr Basic_ErrorCode Basic::QUIZZES_ANSWER_TIMEOUT;
constexpr Basic_ErrorCode Basic::ALREADY_USED_INVITATION_CODE;
constexpr Basic_ErrorCode Basic::CANNOT_USE_ONESELF_INVITATION_CODE;
constexpr Basic_ErrorCode Basic::INVITATION_CODE_IS_INVALID;
constexpr Basic_ErrorCode Basic::MULTIPLAYER_GAME_ROOM_NOT_EXIST;
constexpr Basic_ErrorCode Basic::MULTIPLAYER_GAME_ROOM_NOT_MEMBER;
constexpr Basic_ErrorCode Basic::MULTIPLAYER_GAME_ROOM_MEMBER_KICKED;
constexpr Basic_ErrorCode Basic::MULTIPLAYER_GAME_ROOM_LEAVE_FREQUENCY;
constexpr Basic_ErrorCode Basic::DRAW_GUESS_ROOM_NOT_EXIST;
constexpr Basic_ErrorCode Basic::GUESS_WORD_NOT_EXIST;
constexpr Basic_ErrorCode Basic::DRAW_GUESS_ROOM_NOT_MEMBER;
constexpr Basic_ErrorCode Basic::NOT_DRAW_USER;
constexpr Basic_ErrorCode Basic::CANNOT_GUESS_NOW;
constexpr Basic_ErrorCode Basic::DRAW_USER_CANNOT_GUESS;
constexpr Basic_ErrorCode Basic::CANNOT_DRAW_NOW;
constexpr Basic_ErrorCode Basic::GUESS_WORD_EXCEED_MAX_LENGTH;
constexpr Basic_ErrorCode Basic::GUESS_WORD_HIT_SENSITIVE_WORDS;
constexpr Basic_ErrorCode Basic::USER_IN_TRAVEL_FOR_INVITOR;
constexpr Basic_ErrorCode Basic::PEER_IN_TRAVEL;
constexpr Basic_ErrorCode Basic::TRAVEL_FINISHED;
constexpr Basic_ErrorCode Basic::TRAVEL_INVITE_INVALID;
constexpr Basic_ErrorCode Basic::TRAVEL_NOT_FRIEND;
constexpr Basic_ErrorCode Basic::TRAVEL_NOT_EXIST;
constexpr Basic_ErrorCode Basic::TRAVEL_SELF_FORBID;
constexpr Basic_ErrorCode Basic::TRAVEL_SCENARIO_END;
constexpr Basic_ErrorCode Basic::USER_IN_TRAVEL_FOR_ACCEPTOR;
constexpr Basic_ErrorCode Basic::TRAVEL_ENTRANCE_CLOSED;
constexpr Basic_ErrorCode Basic::USER_HAS_OPERATED_MESSAGE;
constexpr Basic_ErrorCode Basic::TRAVEL_NOT_FRIEND_FOR_ACCEPTOR;
constexpr Basic_ErrorCode Basic::WHO_SPY_ROOM_NOT_EXIST;
constexpr Basic_ErrorCode Basic::WHO_SPY_ROOM_NOT_MEMBER;
constexpr Basic_ErrorCode Basic::CANNOT_DESCRIBE_NOW;
constexpr Basic_ErrorCode Basic::CANNOT_VOTE_NOW;
constexpr Basic_ErrorCode Basic::SPY_CANNOT_GUESS;
constexpr Basic_ErrorCode Basic::NOT_DESCRIBE_USER;
constexpr Basic_ErrorCode Basic::NOT_VOTE_USER;
constexpr Basic_ErrorCode Basic::INVALID_VOTE_TARGET;
constexpr Basic_ErrorCode Basic::DESCRIPTION_EXCEED_MAX_LENGTH;
constexpr Basic_ErrorCode Basic::DESCRIPTION_HIT_SENSITIVE_WORDS;
constexpr Basic_ErrorCode Basic::SPY_GUESS_WORD_EXCEED_MAX_LENGTH;
constexpr Basic_ErrorCode Basic::SPY_GUESS_WORD_HIT_SENSITIVE_WORDS;
constexpr Basic_ErrorCode Basic::ALREADY_IN_MULTI_PLAYER_CHAT_ROOM;
constexpr Basic_ErrorCode Basic::CHAT_ROOM_TOPIC_HIT_SENSITIVE_WORDS;
constexpr Basic_ErrorCode Basic::MULTI_PLAYER_CHAT_ROOM_CREATE_FAIL;
constexpr Basic_ErrorCode Basic::MULTI_PLAYER_CHAT_ROOM_CREATE_FREQUENT;
constexpr Basic_ErrorCode Basic::MULTI_PLAYER_CHAT_ROOM_NOT_EXIST;
constexpr Basic_ErrorCode Basic::OPERATION_ALLOWED_FOR_OWNER_ONLY;
constexpr Basic_ErrorCode Basic::MULTI_PLAYER_CHAT_ROOM_GAME_CREATE_FAIL;
constexpr Basic_ErrorCode Basic::MULTI_PLAYER_CHAT_ROOM_GAME_NOT_MATCH;
constexpr Basic_ErrorCode Basic::NOT_MEMBER_FOR_MULTI_PLAYER_CHAT_ROOM;
constexpr Basic_ErrorCode Basic::MULTI_PLAYER_CHAT_ROOM_RELEASED;
constexpr Basic_ErrorCode Basic::MULTI_PLAYER_CHAT_ROOM_FULL;
constexpr Basic_ErrorCode Basic::ALREADY_IN_OTHER_MULTI_PLAYER_CHAT_ROOM;
constexpr Basic_ErrorCode Basic::FORBID_JOIN_PRIVATE_MULTI_PLAYER_CHAT_ROOM;
constexpr Basic_ErrorCode Basic::MULTI_PLAYER_CHAT_ROOM_JOIN_FAIL;
constexpr Basic_ErrorCode Basic::QUICK_MATCH_SYNC_NO_MATCH;
constexpr Basic_ErrorCode Basic::PLAYER_LEAVE_MULTI_PLAYER_CHAT_ROOM;
constexpr Basic_ErrorCode Basic::LINKMIC_COUNT_REACH_LIMIT;
constexpr Basic_ErrorCode Basic::PLAYER_ALREADY_LINKMIC_ONLINE;
constexpr Basic_ErrorCode Basic::PLAYER_ALREADY_LINKMIC_OFFLINE;
constexpr Basic_ErrorCode Basic::PLAYER_ALREADY_LEAVE_CHAT_ROOM;
constexpr Basic_ErrorCode Basic::FORBID_LINK_MIC_OFFLINE_FOR_OWNER;
constexpr Basic_ErrorCode Basic::FORBID_LINK_MIC_OFFLINE_PLAYING_GAME;
constexpr Basic_ErrorCode Basic::FORBID_LINK_MIC_ONLINE_PLAYING_GAME;
constexpr Basic_ErrorCode Basic::MULTI_PLAYER_CHAT_ROOM_MEMBER_KICKEDOUT;
constexpr Basic_ErrorCode Basic::FORBID_KICKOUT_PLAYER_PLAYING_GAME;
constexpr Basic_ErrorCode Basic::MULTI_PLAYER_CHAT_ROOM_GAME_NOT_EXIST;
constexpr Basic_ErrorCode Basic::MULTI_PLAYER_CHAT_ROOM_MEMBER_TIMEOUT;
constexpr Basic_ErrorCode Basic::FORBID_GAME_UNREADY_FOR_OWNER;
constexpr Basic_ErrorCode Basic::FORBID_CREATE_CHAT_ROOM;
constexpr Basic_ErrorCode Basic::CHAT_ROOM_TOPIC_NOT_ALLOWED_EMPTY;
constexpr Basic_ErrorCode Basic::MULTI_PLAYER_CHAT_ROOM_GAME_ROOM_FULL;
constexpr Basic_ErrorCode Basic::PLAYER_NOT_LINKMIC_ONLINE;
constexpr Basic_ErrorCode Basic::LINKMIC_STATUS_ALREADY_UPDATE;
constexpr Basic_ErrorCode Basic::CANNOT_APPLY_LINKMIC;
constexpr Basic_ErrorCode Basic::CANNOT_CREATE_CHAT_ROOM_FOR_BLACKLIST;
constexpr Basic_ErrorCode Basic::CANNOT_CREATE_CHAT_ROOM_FOR_NOT_BIND;
constexpr Basic_ErrorCode Basic::CANNOT_JOIN_CHAT_ROOM_FOR_BLACKLIST;
constexpr Basic_ErrorCode Basic::NO_AVAILABLE_CHAT_ROOM;
constexpr Basic_ErrorCode Basic::MAX_PLAYER_COUNT_REACH_LIMIT;
constexpr Basic_ErrorCode Basic::MULTI_PLAYER_CHAT_ROOM_NEED_UPDATE_VERSION;
constexpr Basic_ErrorCode Basic::MULTI_PLAYER_CHAT_ROOM_START_GAME_UPDATE_VERSION;
constexpr Basic_ErrorCode Basic::MULTI_PLAYER_CHAT_ROOM_ALREADY_IN_GAME;
constexpr Basic_ErrorCode Basic::MULTI_PLAYER_CHAT_ROOM_FORBID_CANCEL_CREATE;
constexpr Basic_ErrorCode Basic::CHAT_ROOM_SEATNAME_HIT_SENSITIVE_WORDS;
constexpr Basic_ErrorCode Basic::CHAT_ROOM_THEME_NOT_EXIST;
constexpr Basic_ErrorCode Basic::ONLY_VIP_CAN_UPLOAD_BACKGROUND;
constexpr Basic_ErrorCode Basic::MORE_THAN_BACKGROUND_MAX_COUNT;
constexpr Basic_ErrorCode Basic::MODIFY_BACKGROUND_FOR_NORMAL_ROOM;
constexpr Basic_ErrorCode Basic::CHAT_ROOM_ANNOUNCEMENT_EXCEED_MAX_LENGTH;
constexpr Basic_ErrorCode Basic::CHAT_ROOM_ANNOUNCEMENT_HIT_SENSITIVE_WORDS;
constexpr Basic_ErrorCode Basic::NOT_THEME_ROOM;
constexpr Basic_ErrorCode Basic::FEED_NOT_EXIST;
constexpr Basic_ErrorCode Basic::FEED_NOT_OWNER;
constexpr Basic_ErrorCode Basic::FEED_PUBLISHED;
constexpr Basic_ErrorCode Basic::FEED_TEXT_EXCEED_MAX_LENGTH;
constexpr Basic_ErrorCode Basic::FEED_TEXT_HIT_SENSITIVE_WORDS;
constexpr Basic_ErrorCode Basic::FEED_ATTACHMENT_MISSING_INFO;
constexpr Basic_ErrorCode Basic::FEED_USER_LIKED;
constexpr Basic_ErrorCode Basic::FEED_CITY_NOT_LOCATED;
constexpr Basic_ErrorCode Basic::FEED_PROFILE_AUTHOR_BLOCK_USER;
constexpr Basic_ErrorCode Basic::FEED_PROFILE_USER_BLOCK_AUTHOR;
constexpr Basic_ErrorCode Basic::FEED_USER_NOT_LIKED;
constexpr Basic_ErrorCode Basic::FEED_PUBLISH_BANNED;
constexpr Basic_ErrorCode Basic::FEED_FROZEN_USER;
constexpr Basic_ErrorCode Basic::FEED_PUBLISH_OVER_LIMIT;
constexpr Basic_ErrorCode Basic::FEED_PUBLISH_REQUEST_OVER_LIMIT;
constexpr Basic_ErrorCode Basic::FEED_LIKE_SPAM;
constexpr Basic_ErrorCode Basic::TRADE_PRODUCT_NOT_FOUND;
constexpr Basic_ErrorCode Basic::TRADE_PRODUCT_CHANGED;
constexpr Basic_ErrorCode Basic::TRADE_ORDER_DUPLICATE;
constexpr Basic_ErrorCode Basic::TRADE_ORDER_FAILED;
constexpr Basic_ErrorCode Basic::TRADE_ORDER_NOT_FOUND;
constexpr Basic_ErrorCode Basic::TRADE_RECEIPT_BINDED;
constexpr Basic_ErrorCode Basic::TRADE_RECEIPT_VERIFY_FAILED;
constexpr Basic_ErrorCode Basic::TRADE_RECEIPT_VERIFY_SYSTEM_ERROR;
constexpr Basic_ErrorCode Basic::TRADE_RECEIPT_VERIFY_CHECK_FAILED;
constexpr Basic_ErrorCode Basic::TRADE_RECEIPT_UNSUPPORTED_VERSION;
constexpr Basic_ErrorCode Basic::TRADE_RECEIPT_BUY_FAILED;
constexpr Basic_ErrorCode Basic::TRADE_SERVICE_UNAVAILABLE;
constexpr Basic_ErrorCode Basic::TRADE_AGREEMENT_NOT_FOUND;
constexpr Basic_ErrorCode Basic::TRADE_AGREEMENT_UNSIGN_FAILED;
constexpr Basic_ErrorCode Basic::C2C_STRANGER_SESSION_OVER_LIMIT;
constexpr Basic_ErrorCode Basic::GAME_INVALID_COMMAND;
constexpr Basic_ErrorCode Basic::GAME_USER_NOT_FOUND;
constexpr Basic_ErrorCode Basic::GAME_INVALID_MESSAGE;
constexpr Basic_ErrorCode Basic::GAME_FINISHED;
constexpr Basic_ErrorCode Basic::REPORT_TOO_FREQUENTLY;
constexpr Basic_ErrorCode Basic::GROUP_CREATE_FAIL;
constexpr Basic_ErrorCode Basic::NOT_GROUP_MEMBER;
constexpr Basic_ErrorCode Basic::NOT_GROUP_ADMIN;
constexpr Basic_ErrorCode Basic::GROUP_DELETE_FAIL;
constexpr Basic_ErrorCode Basic::ADMIN_TRANSFER_FAIL;
constexpr Basic_ErrorCode Basic::GROUP_SETTING_FAIL;
constexpr Basic_ErrorCode Basic::GROUP_EXCEED_MAX_NUMBERS;
constexpr Basic_ErrorCode Basic::GROUP_ADMIN_CANNOT_QUIT;
constexpr Basic_ErrorCode Basic::CANNOT_KICK_ADMIN;
constexpr Basic_ErrorCode Basic::GROUP_NOT_EXISTS;
constexpr Basic_ErrorCode Basic::GROUP_NOT_ENOUGH_MEMBERS;
constexpr Basic_ErrorCode Basic::USER_CREATE_GROUP_EXCEED_MAX_COUNT;
constexpr Basic_ErrorCode Basic::GROUP_NAME_UNAVAILABLE;
constexpr Basic_ErrorCode Basic::USER_NICK_NAME_UNAVAILABLE;
constexpr Basic_ErrorCode Basic::GROUP_OFF_LINE;
constexpr Basic_ErrorCode Basic::FORBID_USER_CREATE_GROUP;
constexpr Basic_ErrorCode Basic::GROUP_SHARE_GROUP_NOT_EXIST;
constexpr Basic_ErrorCode Basic::GROUP_SHARE_INVITEOR_NOT_GROUP_MEMBER;
constexpr Basic_ErrorCode Basic::GROUP_SHARE_QR_CODE_EXPIRE;
constexpr Basic_ErrorCode Basic::GROUP_SHARE_GROUP_EXCEED_MAX_NUMBERS;
constexpr Basic_ErrorCode Basic::GROUP_SHARE_QR_CODE_INVALID;
constexpr Basic_ErrorCode Basic::GROUP_SHARE_LINK_INVALID;
constexpr Basic_ErrorCode Basic::GROUP_SHARE_WITHIN_NEED_PERMISSION;
constexpr Basic_ErrorCode Basic::GROUP_BULLETIN_SIZE_OVER_LIMIT;
constexpr Basic_ErrorCode Basic::GROUP_BULLETIN_NOT_ADMIN;
constexpr Basic_ErrorCode Basic::GROUP_JOIN_REQUEST_NOT_FOUND;
constexpr Basic_ErrorCode Basic::GROUP_JOIN_REQUEST_HAS_BEEN_PROCESSED;
constexpr Basic_ErrorCode Basic::GROUP_NAME_LENGTH_OVER_LIMIT;
constexpr Basic_ErrorCode Basic::GROUP_PK_NOT_QUIT;
constexpr Basic_ErrorCode Basic::GROUP_PK_NOT_RENAME;
constexpr Basic_ErrorCode Basic::GROUP_PK_NOT_INVITE;
constexpr Basic_ErrorCode Basic::GROUP_PK_NOT_INVITE_QR_CODE;
constexpr Basic_ErrorCode Basic::GROUP_MEMBER_NICK_NAME_LENGTH_OVER_LIMIT;
constexpr Basic_ErrorCode Basic::CHANNEL_INVALID_CHANNEL_ID;
constexpr Basic_ErrorCode Basic::CHANNEL_USER_HAS_BEEN_KICKED;
constexpr Basic_ErrorCode Basic::MESSAGE_TOO_LARGE_TO_SEND;
constexpr Basic_ErrorCode Basic::MESSAGE_BATCH_SEND_COUNT_EXCEED_LIMIT;
constexpr Basic_ErrorCode Basic::DIAN_DIAN_COVER_IMAGE_NOT_REAL;
constexpr Basic_ErrorCode Basic::DIAN_DIAN_COVER_IMAGE_NOT_SET;
constexpr Basic_ErrorCode Basic::DIAN_DIAN_SETTING_UPDATE_FAIL;
constexpr Basic_ErrorCode Basic::DIAN_DIAN_ALBUM_UPDATE_FAIL;
constexpr Basic_ErrorCode Basic::DIAN_DIAN_USER_FROZEN;
constexpr Basic_ErrorCode Basic::DIAN_DIAN_LIKE_FREQUENCY_LIMIT;
constexpr Basic_ErrorCode Basic::DIAN_DIAN_YOUNG_AGE_LIMIT;
constexpr Basic_ErrorCode Basic::GIFT_BALANCE_NOT_ENOUGH;
constexpr Basic_ErrorCode Basic::GIFT_GIVED;
constexpr Basic_ErrorCode Basic::GIFT_RECEIVER_NOT_EXIST;
constexpr Basic_ErrorCode Basic::GIFT_RECEIVER_NOT_IN_ROOM;
constexpr Basic_ErrorCode Basic::GIFT_INFO_NOT_EXIST;
constexpr Basic_ErrorCode Basic::FREE_VIP_CARD_NO_EXIST;
constexpr Basic_ErrorCode Basic::FREE_VIP_CARD_EXPIRE;
constexpr Basic_ErrorCode Basic::FREE_VIP_CARD_USE_FAILED;
constexpr Basic_ErrorCode Basic::SECRET_SIGNAL_GENERATE_FAIL;
constexpr Basic_ErrorCode Basic::SECRET_SIGNAL_SHARE_FAIL;
constexpr Basic_ErrorCode Basic::SECRET_SIGNAL_INVALID_PREFIX;
constexpr Basic_ErrorCode Basic::SECRET_SIGNAL_MATCH_FAIL;
constexpr Basic_ErrorCode Basic::SECRET_SIGNAL_DUPLICATE_MATCH;
constexpr Basic_ErrorCode Basic::SECRET_SIGNAL_FORBID_MATCH_SELF;
constexpr Basic_ErrorCode Basic::ErrorCode_MIN;
constexpr Basic_ErrorCode Basic::ErrorCode_MAX;
constexpr int Basic::ErrorCode_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ImMessage_RemindBody_RemindType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_Im_2eproto);
  return file_level_enum_descriptors_Im_2eproto[14];
}
bool ImMessage_RemindBody_RemindType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr ImMessage_RemindBody_RemindType ImMessage_RemindBody::UNKNOWN;
constexpr ImMessage_RemindBody_RemindType ImMessage_RemindBody::AT_ALL;
constexpr ImMessage_RemindBody_RemindType ImMessage_RemindBody::AT_USER;
constexpr ImMessage_RemindBody_RemindType ImMessage_RemindBody::GROUP_BULLETIN;
constexpr ImMessage_RemindBody_RemindType ImMessage_RemindBody::RECEIPT_MESSAGE;
constexpr ImMessage_RemindBody_RemindType ImMessage_RemindBody::GROUP_JOIN_REQUEST;
constexpr ImMessage_RemindBody_RemindType ImMessage_RemindBody::RemindType_MIN;
constexpr ImMessage_RemindBody_RemindType ImMessage_RemindBody::RemindType_MAX;
constexpr int ImMessage_RemindBody::RemindType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ImMessage_MessageType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_Im_2eproto);
  return file_level_enum_descriptors_Im_2eproto[15];
}
bool ImMessage_MessageType_IsValid(int value) {
  switch (value) {
    case 0:
    case 2:
    case 3:
    case 4:
    case 5:
    case 7:
    case 8:
    case 100:
    case 101:
    case 103:
    case 104:
    case 105:
    case 200:
    case 201:
    case 202:
    case 210:
    case 211:
    case 300:
    case 301:
    case 400:
    case 401:
    case 402:
    case 500:
    case 600:
    case 601:
    case 700:
    case 999:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr ImMessage_MessageType ImMessage::Text;
constexpr ImMessage_MessageType ImMessage::Image;
constexpr ImMessage_MessageType ImMessage::Audio;
constexpr ImMessage_MessageType ImMessage::Movie;
constexpr ImMessage_MessageType ImMessage::File;
constexpr ImMessage_MessageType ImMessage::Gif;
constexpr ImMessage_MessageType ImMessage::ImageText;
constexpr ImMessage_MessageType ImMessage::PlaceHolder;
constexpr ImMessage_MessageType ImMessage::Notice;
constexpr ImMessage_MessageType ImMessage::MultiFormNotice;
constexpr ImMessage_MessageType ImMessage::MessageCancel;
constexpr ImMessage_MessageType ImMessage::MessageCancelOrigin;
constexpr ImMessage_MessageType ImMessage::GameInvite;
constexpr ImMessage_MessageType ImMessage::FavouriteGame;
constexpr ImMessage_MessageType ImMessage::TeamInvite;
constexpr ImMessage_MessageType ImMessage::MultiPlayerGame;
constexpr ImMessage_MessageType ImMessage::MultiPlayerGameInvite;
constexpr ImMessage_MessageType ImMessage::GameFriendTravel;
constexpr ImMessage_MessageType ImMessage::GameTravelInvite;
constexpr ImMessage_MessageType ImMessage::MultiPlayerChatRoom;
constexpr ImMessage_MessageType ImMessage::MultiPlayerChatRoomInvite;
constexpr ImMessage_MessageType ImMessage::MultiPlayerChatRoomGameInvite;
constexpr ImMessage_MessageType ImMessage::FeedShare;
constexpr ImMessage_MessageType ImMessage::DianDianMatchSuccess;
constexpr ImMessage_MessageType ImMessage::DianDianNotification;
constexpr ImMessage_MessageType ImMessage::Gift;
constexpr ImMessage_MessageType ImMessage::SOGAME_MESSAGE_TYPE_MAX;
constexpr ImMessage_MessageType ImMessage::MessageType_MIN;
constexpr ImMessage_MessageType ImMessage::MessageType_MAX;
constexpr int ImMessage::MessageType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ImMessage_KsUserRelationShip_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_Im_2eproto);
  return file_level_enum_descriptors_Im_2eproto[16];
}
bool ImMessage_KsUserRelationShip_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr ImMessage_KsUserRelationShip ImMessage::kUNKNOW;
constexpr ImMessage_KsUserRelationShip ImMessage::FOLLOW_EACH_OTHER;
constexpr ImMessage_KsUserRelationShip ImMessage::TO_FOLLOW_FROM;
constexpr ImMessage_KsUserRelationShip ImMessage::FROM_FOLLOW_TO;
constexpr ImMessage_KsUserRelationShip ImMessage::KsUserRelationShip_MIN;
constexpr ImMessage_KsUserRelationShip ImMessage::KsUserRelationShip_MAX;
constexpr int ImMessage::KsUserRelationShip_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ImMessage_AccountType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_Im_2eproto);
  return file_level_enum_descriptors_Im_2eproto[17];
}
bool ImMessage_AccountType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr ImMessage_AccountType ImMessage::UNKNOWN;
constexpr ImMessage_AccountType ImMessage::OFFICIAL;
constexpr ImMessage_AccountType ImMessage::NORMAL;
constexpr ImMessage_AccountType ImMessage::STRANGER;
constexpr ImMessage_AccountType ImMessage::AccountType_MIN;
constexpr ImMessage_AccountType ImMessage::AccountType_MAX;
constexpr int ImMessage::AccountType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ImMessage_ChatTargetType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_Im_2eproto);
  return file_level_enum_descriptors_Im_2eproto[18];
}
bool ImMessage_ChatTargetType_IsValid(int value) {
  switch (value) {
    case 0:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr ImMessage_ChatTargetType ImMessage::CTT_USER;
constexpr ImMessage_ChatTargetType ImMessage::CTT_CHAT_ROOM;
constexpr ImMessage_ChatTargetType ImMessage::CTT_MULTI_PLAYER_ROOM;
constexpr ImMessage_ChatTargetType ImMessage::CTT_GROUP;
constexpr ImMessage_ChatTargetType ImMessage::CTT_CHANNEL;
constexpr ImMessage_ChatTargetType ImMessage::CTT_AGGREGATE;
constexpr ImMessage_ChatTargetType ImMessage::ChatTargetType_MIN;
constexpr ImMessage_ChatTargetType ImMessage::ChatTargetType_MAX;
constexpr int ImMessage::ChatTargetType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ImMessage_SystemUser_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_Im_2eproto);
  return file_level_enum_descriptors_Im_2eproto[19];
}
bool ImMessage_SystemUser_IsValid(int value) {
  switch (value) {
    case 0:
    case 10000:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr ImMessage_SystemUser ImMessage::kSystemUserInvalid;
constexpr ImMessage_SystemUser ImMessage::SYSTEM_USER_ID;
constexpr ImMessage_SystemUser ImMessage::SystemUser_MIN;
constexpr ImMessage_SystemUser ImMessage::SystemUser_MAX;
constexpr int ImMessage::SystemUser_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Cloud_Channel_UserAction_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_Im_2eproto);
  return file_level_enum_descriptors_Im_2eproto[20];
}
bool Cloud_Channel_UserAction_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Cloud_Channel_UserAction Cloud_Channel::USER_ACTION_UNKNOWN;
constexpr Cloud_Channel_UserAction Cloud_Channel::USER_JOIN_CHANNEL;
constexpr Cloud_Channel_UserAction Cloud_Channel::USER_QUIT_CHANNEL;
constexpr Cloud_Channel_UserAction Cloud_Channel::USER_OFFLINE;
constexpr Cloud_Channel_UserAction Cloud_Channel::UserAction_MIN;
constexpr Cloud_Channel_UserAction Cloud_Channel::UserAction_MAX;
constexpr int Cloud_Channel::UserAction_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Cloud_Profile_UserOnlineStatus_Status_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_Im_2eproto);
  return file_level_enum_descriptors_Im_2eproto[21];
}
bool Cloud_Profile_UserOnlineStatus_Status_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Cloud_Profile_UserOnlineStatus_Status Cloud_Profile_UserOnlineStatus::UNKNOWN;
constexpr Cloud_Profile_UserOnlineStatus_Status Cloud_Profile_UserOnlineStatus::ONLINE;
constexpr Cloud_Profile_UserOnlineStatus_Status Cloud_Profile_UserOnlineStatus::OFFLINE;
constexpr Cloud_Profile_UserOnlineStatus_Status Cloud_Profile_UserOnlineStatus::Status_MIN;
constexpr Cloud_Profile_UserOnlineStatus_Status Cloud_Profile_UserOnlineStatus::Status_MAX;
constexpr int Cloud_Profile_UserOnlineStatus::Status_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Cloud_Data_Update_KsImDataUpdateType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_Im_2eproto);
  return file_level_enum_descriptors_Im_2eproto[22];
}
bool Cloud_Data_Update_KsImDataUpdateType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Cloud_Data_Update_KsImDataUpdateType Cloud_Data_Update::INVALID;
constexpr Cloud_Data_Update_KsImDataUpdateType Cloud_Data_Update::GROUP_INFO_UPDATE;
constexpr Cloud_Data_Update_KsImDataUpdateType Cloud_Data_Update::GROUP_MEMBER_LIST_UPDATE;
constexpr Cloud_Data_Update_KsImDataUpdateType Cloud_Data_Update::YOU_BE_KICKED;
constexpr Cloud_Data_Update_KsImDataUpdateType Cloud_Data_Update::MESSAGE_READ_EVENT;
constexpr Cloud_Data_Update_KsImDataUpdateType Cloud_Data_Update::MESSAGE_RECEIPT_EVENT;
constexpr Cloud_Data_Update_KsImDataUpdateType Cloud_Data_Update::KsImDataUpdateType_MIN;
constexpr Cloud_Data_Update_KsImDataUpdateType Cloud_Data_Update::KsImDataUpdateType_MAX;
constexpr int Cloud_Data_Update::KsImDataUpdateType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Cloud_Message_Emoticon_Type_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_Im_2eproto);
  return file_level_enum_descriptors_Im_2eproto[23];
}
bool Cloud_Message_Emoticon_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Cloud_Message_Emoticon_Type Cloud_Message_Emoticon::UNKNOWN;
constexpr Cloud_Message_Emoticon_Type Cloud_Message_Emoticon::BASIC;
constexpr Cloud_Message_Emoticon_Type Cloud_Message_Emoticon::IMAGE;
constexpr Cloud_Message_Emoticon_Type Cloud_Message_Emoticon::GIF;
constexpr Cloud_Message_Emoticon_Type Cloud_Message_Emoticon::SPECIAL_EFFECT;
constexpr Cloud_Message_Emoticon_Type Cloud_Message_Emoticon::SCRIPT;
constexpr Cloud_Message_Emoticon_Type Cloud_Message_Emoticon::Type_MIN;
constexpr Cloud_Message_Emoticon_Type Cloud_Message_Emoticon::Type_MAX;
constexpr int Cloud_Message_Emoticon::Type_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Cloud_Message_GroupInvideResponse_InviteStatus_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_Im_2eproto);
  return file_level_enum_descriptors_Im_2eproto[24];
}
bool Cloud_Message_GroupInvideResponse_InviteStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Cloud_Message_GroupInvideResponse_InviteStatus Cloud_Message_GroupInvideResponse::UNKNOWN_STATUS;
constexpr Cloud_Message_GroupInvideResponse_InviteStatus Cloud_Message_GroupInvideResponse::SUCC;
constexpr Cloud_Message_GroupInvideResponse_InviteStatus Cloud_Message_GroupInvideResponse::PENDING;
constexpr Cloud_Message_GroupInvideResponse_InviteStatus Cloud_Message_GroupInvideResponse::InviteStatus_MIN;
constexpr Cloud_Message_GroupInvideResponse_InviteStatus Cloud_Message_GroupInvideResponse::InviteStatus_MAX;
constexpr int Cloud_Message_GroupInvideResponse::InviteStatus_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Cloud_Message_GroupJoinResponse_JoinStatus_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_Im_2eproto);
  return file_level_enum_descriptors_Im_2eproto[25];
}
bool Cloud_Message_GroupJoinResponse_JoinStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Cloud_Message_GroupJoinResponse_JoinStatus Cloud_Message_GroupJoinResponse::UNKNOWN_STATUS;
constexpr Cloud_Message_GroupJoinResponse_JoinStatus Cloud_Message_GroupJoinResponse::SUCC;
constexpr Cloud_Message_GroupJoinResponse_JoinStatus Cloud_Message_GroupJoinResponse::PENDING;
constexpr Cloud_Message_GroupJoinResponse_JoinStatus Cloud_Message_GroupJoinResponse::JoinStatus_MIN;
constexpr Cloud_Message_GroupJoinResponse_JoinStatus Cloud_Message_GroupJoinResponse::JoinStatus_MAX;
constexpr int Cloud_Message_GroupJoinResponse::JoinStatus_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Cloud_Message_GroupJoinRequestAckRequest_GroupJoinAckType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_Im_2eproto);
  return file_level_enum_descriptors_Im_2eproto[26];
}
bool Cloud_Message_GroupJoinRequestAckRequest_GroupJoinAckType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Cloud_Message_GroupJoinRequestAckRequest_GroupJoinAckType Cloud_Message_GroupJoinRequestAckRequest::UNKNOWN_TYPE;
constexpr Cloud_Message_GroupJoinRequestAckRequest_GroupJoinAckType Cloud_Message_GroupJoinRequestAckRequest::AGREE;
constexpr Cloud_Message_GroupJoinRequestAckRequest_GroupJoinAckType Cloud_Message_GroupJoinRequestAckRequest::REFUSE;
constexpr Cloud_Message_GroupJoinRequestAckRequest_GroupJoinAckType Cloud_Message_GroupJoinRequestAckRequest::IGNORE;
constexpr Cloud_Message_GroupJoinRequestAckRequest_GroupJoinAckType Cloud_Message_GroupJoinRequestAckRequest::GroupJoinAckType_MIN;
constexpr Cloud_Message_GroupJoinRequestAckRequest_GroupJoinAckType Cloud_Message_GroupJoinRequestAckRequest::GroupJoinAckType_MAX;
constexpr int Cloud_Message_GroupJoinRequestAckRequest::GroupJoinAckType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Cloud_Message_GroupMember_GroupMemberStatus_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_Im_2eproto);
  return file_level_enum_descriptors_Im_2eproto[27];
}
bool Cloud_Message_GroupMember_GroupMemberStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Cloud_Message_GroupMember_GroupMemberStatus Cloud_Message_GroupMember::UNKNOWN_MEMBER_STATUS;
constexpr Cloud_Message_GroupMember_GroupMemberStatus Cloud_Message_GroupMember::NORMAL;
constexpr Cloud_Message_GroupMember_GroupMemberStatus Cloud_Message_GroupMember::QUITTED;
constexpr Cloud_Message_GroupMember_GroupMemberStatus Cloud_Message_GroupMember::KICKED;
constexpr Cloud_Message_GroupMember_GroupMemberStatus Cloud_Message_GroupMember::DISMISSED;
constexpr Cloud_Message_GroupMember_GroupMemberStatus Cloud_Message_GroupMember::GroupMemberStatus_MIN;
constexpr Cloud_Message_GroupMember_GroupMemberStatus Cloud_Message_GroupMember::GroupMemberStatus_MAX;
constexpr int Cloud_Message_GroupMember::GroupMemberStatus_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Cloud_Message_GroupMember_GroupMemberRole_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_Im_2eproto);
  return file_level_enum_descriptors_Im_2eproto[28];
}
bool Cloud_Message_GroupMember_GroupMemberRole_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Cloud_Message_GroupMember_GroupMemberRole Cloud_Message_GroupMember::UNKNOWN_ROLE;
constexpr Cloud_Message_GroupMember_GroupMemberRole Cloud_Message_GroupMember::COMMON;
constexpr Cloud_Message_GroupMember_GroupMemberRole Cloud_Message_GroupMember::ADMIN;
constexpr Cloud_Message_GroupMember_GroupMemberRole Cloud_Message_GroupMember::GroupMemberRole_MIN;
constexpr Cloud_Message_GroupMember_GroupMemberRole Cloud_Message_GroupMember::GroupMemberRole_MAX;
constexpr int Cloud_Message_GroupMember::GroupMemberRole_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Cloud_Message_ImcMessageType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_Im_2eproto);
  return file_level_enum_descriptors_Im_2eproto[29];
}
bool Cloud_Message_ImcMessageType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 10:
    case 11:
    case 12:
    case 13:
    case 100:
    case 101:
    case 199:
    case 200:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Cloud_Message_ImcMessageType Cloud_Message::TEXT;
constexpr Cloud_Message_ImcMessageType Cloud_Message::IMAGE;
constexpr Cloud_Message_ImcMessageType Cloud_Message::CUSTOM;
constexpr Cloud_Message_ImcMessageType Cloud_Message::AUDIO;
constexpr Cloud_Message_ImcMessageType Cloud_Message::VIDEO;
constexpr Cloud_Message_ImcMessageType Cloud_Message::EMOTICON;
constexpr Cloud_Message_ImcMessageType Cloud_Message::FILE;
constexpr Cloud_Message_ImcMessageType Cloud_Message::NOTICE;
constexpr Cloud_Message_ImcMessageType Cloud_Message::RECALLED;
constexpr Cloud_Message_ImcMessageType Cloud_Message::REFERENCE;
constexpr Cloud_Message_ImcMessageType Cloud_Message::MERGE_FORWARD;
constexpr Cloud_Message_ImcMessageType Cloud_Message::PLACE_HOLDER;
constexpr Cloud_Message_ImcMessageType Cloud_Message::REPLACE;
constexpr Cloud_Message_ImcMessageType Cloud_Message::INVISIBLE_TYPE_MAS;
constexpr Cloud_Message_ImcMessageType Cloud_Message::RICH_NOTICE;
constexpr Cloud_Message_ImcMessageType Cloud_Message::ImcMessageType_MIN;
constexpr Cloud_Message_ImcMessageType Cloud_Message::ImcMessageType_MAX;
constexpr int Cloud_Message::ImcMessageType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Cloud_Message_NoticeMetaType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_Im_2eproto);
  return file_level_enum_descriptors_Im_2eproto[30];
}
bool Cloud_Message_NoticeMetaType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Cloud_Message_NoticeMetaType Cloud_Message::UNKNOWN_NOTICE_META_TYPE;
constexpr Cloud_Message_NoticeMetaType Cloud_Message::COMMON_NOTICE_META_TYPE;
constexpr Cloud_Message_NoticeMetaType Cloud_Message::CONFIRM_INVITE_INTO_GROUP_META;
constexpr Cloud_Message_NoticeMetaType Cloud_Message::CONFIRM_JOIN_INTO_GROUP_META;
constexpr Cloud_Message_NoticeMetaType Cloud_Message::NoticeMetaType_MIN;
constexpr Cloud_Message_NoticeMetaType Cloud_Message::NoticeMetaType_MAX;
constexpr int Cloud_Message::NoticeMetaType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Cloud_Message_GroupFindType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_Im_2eproto);
  return file_level_enum_descriptors_Im_2eproto[31];
}
bool Cloud_Message_GroupFindType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Cloud_Message_GroupFindType Cloud_Message::BY_UNKNOWN;
constexpr Cloud_Message_GroupFindType Cloud_Message::BY_ID;
constexpr Cloud_Message_GroupFindType Cloud_Message::BY_NAME;
constexpr Cloud_Message_GroupFindType Cloud_Message::BY_QR_CODE;
constexpr Cloud_Message_GroupFindType Cloud_Message::BY_CARD;
constexpr Cloud_Message_GroupFindType Cloud_Message::BY_INVITATION;
constexpr Cloud_Message_GroupFindType Cloud_Message::BY_SHARE_LINK;
constexpr Cloud_Message_GroupFindType Cloud_Message::GroupFindType_MIN;
constexpr Cloud_Message_GroupFindType Cloud_Message::GroupFindType_MAX;
constexpr int Cloud_Message::GroupFindType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Cloud_Message_JoinRequestStatus_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_Im_2eproto);
  return file_level_enum_descriptors_Im_2eproto[32];
}
bool Cloud_Message_JoinRequestStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Cloud_Message_JoinRequestStatus Cloud_Message::UNKNOWN_STATUS;
constexpr Cloud_Message_JoinRequestStatus Cloud_Message::REQUESTED;
constexpr Cloud_Message_JoinRequestStatus Cloud_Message::APPROVED;
constexpr Cloud_Message_JoinRequestStatus Cloud_Message::REFUSED;
constexpr Cloud_Message_JoinRequestStatus Cloud_Message::JoinRequestStatus_MIN;
constexpr Cloud_Message_JoinRequestStatus Cloud_Message::JoinRequestStatus_MAX;
constexpr int Cloud_Message::JoinRequestStatus_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Cloud_Message_JoinNeedPermissionType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_Im_2eproto);
  return file_level_enum_descriptors_Im_2eproto[33];
}
bool Cloud_Message_JoinNeedPermissionType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Cloud_Message_JoinNeedPermissionType Cloud_Message::UNKNOWN_JOIN_NEED_PERMISSION_TYPE;
constexpr Cloud_Message_JoinNeedPermissionType Cloud_Message::NONE;
constexpr Cloud_Message_JoinNeedPermissionType Cloud_Message::ADMIN;
constexpr Cloud_Message_JoinNeedPermissionType Cloud_Message::JoinNeedPermissionType_MIN;
constexpr Cloud_Message_JoinNeedPermissionType Cloud_Message::JoinNeedPermissionType_MAX;
constexpr int Cloud_Message::JoinNeedPermissionType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Cloud_Message_GroupStatus_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_Im_2eproto);
  return file_level_enum_descriptors_Im_2eproto[34];
}
bool Cloud_Message_GroupStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Cloud_Message_GroupStatus Cloud_Message::UNKNOW_GROUP_STATUS;
constexpr Cloud_Message_GroupStatus Cloud_Message::VALID;
constexpr Cloud_Message_GroupStatus Cloud_Message::INVALID;
constexpr Cloud_Message_GroupStatus Cloud_Message::GroupStatus_MIN;
constexpr Cloud_Message_GroupStatus Cloud_Message::GroupStatus_MAX;
constexpr int Cloud_Message::GroupStatus_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Cloud_Message_GroupType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_Im_2eproto);
  return file_level_enum_descriptors_Im_2eproto[35];
}
bool Cloud_Message_GroupType_IsValid(int value) {
  switch (value) {
    case 0:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Cloud_Message_GroupType Cloud_Message::UNKNOW_GROUP_TYPE;
constexpr Cloud_Message_GroupType Cloud_Message::PRIVATE;
constexpr Cloud_Message_GroupType Cloud_Message::PUBLIC;
constexpr Cloud_Message_GroupType Cloud_Message::GroupType_MIN;
constexpr Cloud_Message_GroupType Cloud_Message::GroupType_MAX;
constexpr int Cloud_Message::GroupType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Cloud_Message_ForbiddenState_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_Im_2eproto);
  return file_level_enum_descriptors_Im_2eproto[36];
}
bool Cloud_Message_ForbiddenState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Cloud_Message_ForbiddenState Cloud_Message::UNKNOWN_FORBIDDEN_STATE;
constexpr Cloud_Message_ForbiddenState Cloud_Message::UN_FORBIDDEN;
constexpr Cloud_Message_ForbiddenState Cloud_Message::FORBID_MESSAGE;
constexpr Cloud_Message_ForbiddenState Cloud_Message::ForbiddenState_MIN;
constexpr Cloud_Message_ForbiddenState Cloud_Message::ForbiddenState_MAX;
constexpr int Cloud_Message::ForbiddenState_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Cloud_Message_PassThroughType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_Im_2eproto);
  return file_level_enum_descriptors_Im_2eproto[37];
}
bool Cloud_Message_PassThroughType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Cloud_Message_PassThroughType Cloud_Message::INVALID_PTT;
constexpr Cloud_Message_PassThroughType Cloud_Message::INPUTTING;
constexpr Cloud_Message_PassThroughType Cloud_Message::PassThroughType_MIN;
constexpr Cloud_Message_PassThroughType Cloud_Message::PassThroughType_MAX;
constexpr int Cloud_Message::PassThroughType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)

// ===================================================================

class Basic_PacketHeader::_Internal {
 public:
  static const ::AcFunDanmu::Im::Basic_TokenInfo& tokeninfo(const Basic_PacketHeader* msg);
};

const ::AcFunDanmu::Im::Basic_TokenInfo&
Basic_PacketHeader::_Internal::tokeninfo(const Basic_PacketHeader* msg) {
  return *msg->tokeninfo_;
}
Basic_PacketHeader::Basic_PacketHeader(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  features_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Basic.PacketHeader)
}
Basic_PacketHeader::Basic_PacketHeader(const Basic_PacketHeader& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      features_(from.features_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_tokeninfo()) {
    tokeninfo_ = new ::AcFunDanmu::Im::Basic_TokenInfo(*from.tokeninfo_);
  } else {
    tokeninfo_ = nullptr;
  }
  ::memcpy(&uid_, &from.uid_,
    static_cast<size_t>(reinterpret_cast<char*>(&encryptionmode_) -
    reinterpret_cast<char*>(&uid_)) + sizeof(encryptionmode_));
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Basic.PacketHeader)
}

void Basic_PacketHeader::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Basic_PacketHeader_Im_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&tokeninfo_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&encryptionmode_) -
      reinterpret_cast<char*>(&tokeninfo_)) + sizeof(encryptionmode_));
}

Basic_PacketHeader::~Basic_PacketHeader() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Basic.PacketHeader)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Basic_PacketHeader::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete tokeninfo_;
}

void Basic_PacketHeader::ArenaDtor(void* object) {
  Basic_PacketHeader* _this = reinterpret_cast< Basic_PacketHeader* >(object);
  (void)_this;
}
void Basic_PacketHeader::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Basic_PacketHeader::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Basic_PacketHeader& Basic_PacketHeader::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Basic_PacketHeader_Im_2eproto.base);
  return *internal_default_instance();
}


void Basic_PacketHeader::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Basic.PacketHeader)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  features_.Clear();
  if (GetArena() == nullptr && tokeninfo_ != nullptr) {
    delete tokeninfo_;
  }
  tokeninfo_ = nullptr;
  ::memset(&uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&encryptionmode_) -
      reinterpret_cast<char*>(&uid_)) + sizeof(encryptionmode_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Basic_PacketHeader::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 appId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          appid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 uid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          uid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 instanceId = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          instanceid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 flags = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          flags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .AcFunDanmu.Im.Basic.PacketHeader.EncodingType encodingType = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_encodingtype(static_cast<::AcFunDanmu::Im::Basic_PacketHeader_EncodingType>(val));
        } else goto handle_unusual;
        continue;
      // int32 decodedPayloadLen = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          decodedpayloadlen_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .AcFunDanmu.Im.Basic.PacketHeader.EncryptionMode encryptionMode = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_encryptionmode(static_cast<::AcFunDanmu::Im::Basic_PacketHeader_EncryptionMode>(val));
        } else goto handle_unusual;
        continue;
      // .AcFunDanmu.Im.Basic.TokenInfo tokenInfo = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_tokeninfo(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 seqId = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          seqid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .AcFunDanmu.Im.Basic.PacketHeader.Feature features = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedEnumParser(_internal_mutable_features(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_add_features(static_cast<::AcFunDanmu::Im::Basic_PacketHeader_Feature>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Basic_PacketHeader::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Basic.PacketHeader)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 appId = 1;
  if (this->appid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_appid(), target);
  }

  // int64 uid = 2;
  if (this->uid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_uid(), target);
  }

  // int64 instanceId = 3;
  if (this->instanceid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_instanceid(), target);
  }

  // uint32 flags = 5;
  if (this->flags() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(5, this->_internal_flags(), target);
  }

  // .AcFunDanmu.Im.Basic.PacketHeader.EncodingType encodingType = 6;
  if (this->encodingtype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      6, this->_internal_encodingtype(), target);
  }

  // int32 decodedPayloadLen = 7;
  if (this->decodedpayloadlen() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(7, this->_internal_decodedpayloadlen(), target);
  }

  // .AcFunDanmu.Im.Basic.PacketHeader.EncryptionMode encryptionMode = 8;
  if (this->encryptionmode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      8, this->_internal_encryptionmode(), target);
  }

  // .AcFunDanmu.Im.Basic.TokenInfo tokenInfo = 9;
  if (this->has_tokeninfo()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        9, _Internal::tokeninfo(this), target, stream);
  }

  // int64 seqId = 10;
  if (this->seqid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(10, this->_internal_seqid(), target);
  }

  // repeated .AcFunDanmu.Im.Basic.PacketHeader.Feature features = 11;
  {
    int byte_size = _features_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          11, features_, byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Basic.PacketHeader)
  return target;
}

size_t Basic_PacketHeader::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Basic.PacketHeader)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .AcFunDanmu.Im.Basic.PacketHeader.Feature features = 11;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->_internal_features_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(
        this->_internal_features(static_cast<int>(i)));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _features_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // .AcFunDanmu.Im.Basic.TokenInfo tokenInfo = 9;
  if (this->has_tokeninfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *tokeninfo_);
  }

  // int64 uid = 2;
  if (this->uid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_uid());
  }

  // int64 instanceId = 3;
  if (this->instanceid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_instanceid());
  }

  // int32 appId = 1;
  if (this->appid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_appid());
  }

  // uint32 flags = 5;
  if (this->flags() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_flags());
  }

  // .AcFunDanmu.Im.Basic.PacketHeader.EncodingType encodingType = 6;
  if (this->encodingtype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_encodingtype());
  }

  // int32 decodedPayloadLen = 7;
  if (this->decodedpayloadlen() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_decodedpayloadlen());
  }

  // int64 seqId = 10;
  if (this->seqid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_seqid());
  }

  // .AcFunDanmu.Im.Basic.PacketHeader.EncryptionMode encryptionMode = 8;
  if (this->encryptionmode() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_encryptionmode());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Basic_PacketHeader::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Basic.PacketHeader)
  GOOGLE_DCHECK_NE(&from, this);
  const Basic_PacketHeader* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Basic_PacketHeader>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Basic.PacketHeader)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Basic.PacketHeader)
    MergeFrom(*source);
  }
}

void Basic_PacketHeader::MergeFrom(const Basic_PacketHeader& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Basic.PacketHeader)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  features_.MergeFrom(from.features_);
  if (from.has_tokeninfo()) {
    _internal_mutable_tokeninfo()->::AcFunDanmu::Im::Basic_TokenInfo::MergeFrom(from._internal_tokeninfo());
  }
  if (from.uid() != 0) {
    _internal_set_uid(from._internal_uid());
  }
  if (from.instanceid() != 0) {
    _internal_set_instanceid(from._internal_instanceid());
  }
  if (from.appid() != 0) {
    _internal_set_appid(from._internal_appid());
  }
  if (from.flags() != 0) {
    _internal_set_flags(from._internal_flags());
  }
  if (from.encodingtype() != 0) {
    _internal_set_encodingtype(from._internal_encodingtype());
  }
  if (from.decodedpayloadlen() != 0) {
    _internal_set_decodedpayloadlen(from._internal_decodedpayloadlen());
  }
  if (from.seqid() != 0) {
    _internal_set_seqid(from._internal_seqid());
  }
  if (from.encryptionmode() != 0) {
    _internal_set_encryptionmode(from._internal_encryptionmode());
  }
}

void Basic_PacketHeader::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Basic.PacketHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Basic_PacketHeader::CopyFrom(const Basic_PacketHeader& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Basic.PacketHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Basic_PacketHeader::IsInitialized() const {
  return true;
}

void Basic_PacketHeader::InternalSwap(Basic_PacketHeader* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  features_.InternalSwap(&other->features_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Basic_PacketHeader, encryptionmode_)
      + sizeof(Basic_PacketHeader::encryptionmode_)
      - PROTOBUF_FIELD_OFFSET(Basic_PacketHeader, tokeninfo_)>(
          reinterpret_cast<char*>(&tokeninfo_),
          reinterpret_cast<char*>(&other->tokeninfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Basic_PacketHeader::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Basic_User::_Internal {
 public:
};

Basic_User::Basic_User(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Basic.User)
}
Basic_User::Basic_User(const Basic_User& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&uid_, &from.uid_,
    static_cast<size_t>(reinterpret_cast<char*>(&appid_) -
    reinterpret_cast<char*>(&uid_)) + sizeof(appid_));
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Basic.User)
}

void Basic_User::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&uid_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&appid_) -
      reinterpret_cast<char*>(&uid_)) + sizeof(appid_));
}

Basic_User::~Basic_User() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Basic.User)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Basic_User::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Basic_User::ArenaDtor(void* object) {
  Basic_User* _this = reinterpret_cast< Basic_User* >(object);
  (void)_this;
}
void Basic_User::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Basic_User::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Basic_User& Basic_User::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Basic_User_Im_2eproto.base);
  return *internal_default_instance();
}


void Basic_User::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Basic.User)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&appid_) -
      reinterpret_cast<char*>(&uid_)) + sizeof(appid_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Basic_User::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 appId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          appid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 uid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          uid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Basic_User::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Basic.User)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 appId = 1;
  if (this->appid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_appid(), target);
  }

  // int64 uid = 2;
  if (this->uid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_uid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Basic.User)
  return target;
}

size_t Basic_User::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Basic.User)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 uid = 2;
  if (this->uid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_uid());
  }

  // int32 appId = 1;
  if (this->appid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_appid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Basic_User::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Basic.User)
  GOOGLE_DCHECK_NE(&from, this);
  const Basic_User* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Basic_User>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Basic.User)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Basic.User)
    MergeFrom(*source);
  }
}

void Basic_User::MergeFrom(const Basic_User& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Basic.User)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uid() != 0) {
    _internal_set_uid(from._internal_uid());
  }
  if (from.appid() != 0) {
    _internal_set_appid(from._internal_appid());
  }
}

void Basic_User::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Basic.User)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Basic_User::CopyFrom(const Basic_User& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Basic.User)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Basic_User::IsInitialized() const {
  return true;
}

void Basic_User::InternalSwap(Basic_User* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Basic_User, appid_)
      + sizeof(Basic_User::appid_)
      - PROTOBUF_FIELD_OFFSET(Basic_User, uid_)>(
          reinterpret_cast<char*>(&uid_),
          reinterpret_cast<char*>(&other->uid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Basic_User::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Basic_UserInstance::_Internal {
 public:
  static const ::AcFunDanmu::Im::Basic_User& user(const Basic_UserInstance* msg);
};

const ::AcFunDanmu::Im::Basic_User&
Basic_UserInstance::_Internal::user(const Basic_UserInstance* msg) {
  return *msg->user_;
}
Basic_UserInstance::Basic_UserInstance(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Basic.UserInstance)
}
Basic_UserInstance::Basic_UserInstance(const Basic_UserInstance& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_user()) {
    user_ = new ::AcFunDanmu::Im::Basic_User(*from.user_);
  } else {
    user_ = nullptr;
  }
  instanceid_ = from.instanceid_;
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Basic.UserInstance)
}

void Basic_UserInstance::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Basic_UserInstance_Im_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&user_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&instanceid_) -
      reinterpret_cast<char*>(&user_)) + sizeof(instanceid_));
}

Basic_UserInstance::~Basic_UserInstance() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Basic.UserInstance)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Basic_UserInstance::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete user_;
}

void Basic_UserInstance::ArenaDtor(void* object) {
  Basic_UserInstance* _this = reinterpret_cast< Basic_UserInstance* >(object);
  (void)_this;
}
void Basic_UserInstance::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Basic_UserInstance::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Basic_UserInstance& Basic_UserInstance::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Basic_UserInstance_Im_2eproto.base);
  return *internal_default_instance();
}


void Basic_UserInstance::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Basic.UserInstance)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && user_ != nullptr) {
    delete user_;
  }
  user_ = nullptr;
  instanceid_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Basic_UserInstance::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .AcFunDanmu.Im.Basic.User user = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_user(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 instanceId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          instanceid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Basic_UserInstance::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Basic.UserInstance)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .AcFunDanmu.Im.Basic.User user = 1;
  if (this->has_user()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::user(this), target, stream);
  }

  // int64 instanceId = 2;
  if (this->instanceid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_instanceid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Basic.UserInstance)
  return target;
}

size_t Basic_UserInstance::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Basic.UserInstance)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .AcFunDanmu.Im.Basic.User user = 1;
  if (this->has_user()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *user_);
  }

  // int64 instanceId = 2;
  if (this->instanceid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_instanceid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Basic_UserInstance::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Basic.UserInstance)
  GOOGLE_DCHECK_NE(&from, this);
  const Basic_UserInstance* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Basic_UserInstance>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Basic.UserInstance)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Basic.UserInstance)
    MergeFrom(*source);
  }
}

void Basic_UserInstance::MergeFrom(const Basic_UserInstance& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Basic.UserInstance)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_user()) {
    _internal_mutable_user()->::AcFunDanmu::Im::Basic_User::MergeFrom(from._internal_user());
  }
  if (from.instanceid() != 0) {
    _internal_set_instanceid(from._internal_instanceid());
  }
}

void Basic_UserInstance::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Basic.UserInstance)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Basic_UserInstance::CopyFrom(const Basic_UserInstance& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Basic.UserInstance)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Basic_UserInstance::IsInitialized() const {
  return true;
}

void Basic_UserInstance::InternalSwap(Basic_UserInstance* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Basic_UserInstance, instanceid_)
      + sizeof(Basic_UserInstance::instanceid_)
      - PROTOBUF_FIELD_OFFSET(Basic_UserInstance, user_)>(
          reinterpret_cast<char*>(&user_),
          reinterpret_cast<char*>(&other->user_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Basic_UserInstance::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Basic_UpstreamPayload::_Internal {
 public:
  static const ::AcFunDanmu::Im::Basic_UserInstance& userinstance(const Basic_UpstreamPayload* msg);
  static const ::AcFunDanmu::Im::Basic_SettingInfo& settinginfo(const Basic_UpstreamPayload* msg);
  static const ::AcFunDanmu::Im::Basic_RequestBasicInfo& requestbasicinfo(const Basic_UpstreamPayload* msg);
};

const ::AcFunDanmu::Im::Basic_UserInstance&
Basic_UpstreamPayload::_Internal::userinstance(const Basic_UpstreamPayload* msg) {
  return *msg->userinstance_;
}
const ::AcFunDanmu::Im::Basic_SettingInfo&
Basic_UpstreamPayload::_Internal::settinginfo(const Basic_UpstreamPayload* msg) {
  return *msg->settinginfo_;
}
const ::AcFunDanmu::Im::Basic_RequestBasicInfo&
Basic_UpstreamPayload::_Internal::requestbasicinfo(const Basic_UpstreamPayload* msg) {
  return *msg->requestbasicinfo_;
}
Basic_UpstreamPayload::Basic_UpstreamPayload(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Basic.UpstreamPayload)
}
Basic_UpstreamPayload::Basic_UpstreamPayload(const Basic_UpstreamPayload& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  payloaddata_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_payloaddata().empty()) {
    payloaddata_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_payloaddata(), 
      GetArena());
  }
  if (from._internal_has_userinstance()) {
    userinstance_ = new ::AcFunDanmu::Im::Basic_UserInstance(*from.userinstance_);
  } else {
    userinstance_ = nullptr;
  }
  if (from._internal_has_settinginfo()) {
    settinginfo_ = new ::AcFunDanmu::Im::Basic_SettingInfo(*from.settinginfo_);
  } else {
    settinginfo_ = nullptr;
  }
  if (from._internal_has_requestbasicinfo()) {
    requestbasicinfo_ = new ::AcFunDanmu::Im::Basic_RequestBasicInfo(*from.requestbasicinfo_);
  } else {
    requestbasicinfo_ = nullptr;
  }
  ::memcpy(&seqid_, &from.seqid_,
    static_cast<size_t>(reinterpret_cast<char*>(&errorcode_) -
    reinterpret_cast<char*>(&seqid_)) + sizeof(errorcode_));
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Basic.UpstreamPayload)
}

void Basic_UpstreamPayload::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Basic_UpstreamPayload_Im_2eproto.base);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  payloaddata_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&userinstance_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&errorcode_) -
      reinterpret_cast<char*>(&userinstance_)) + sizeof(errorcode_));
}

Basic_UpstreamPayload::~Basic_UpstreamPayload() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Basic.UpstreamPayload)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Basic_UpstreamPayload::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  payloaddata_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete userinstance_;
  if (this != internal_default_instance()) delete settinginfo_;
  if (this != internal_default_instance()) delete requestbasicinfo_;
}

void Basic_UpstreamPayload::ArenaDtor(void* object) {
  Basic_UpstreamPayload* _this = reinterpret_cast< Basic_UpstreamPayload* >(object);
  (void)_this;
}
void Basic_UpstreamPayload::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Basic_UpstreamPayload::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Basic_UpstreamPayload& Basic_UpstreamPayload::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Basic_UpstreamPayload_Im_2eproto.base);
  return *internal_default_instance();
}


void Basic_UpstreamPayload::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Basic.UpstreamPayload)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  payloaddata_.ClearToEmpty();
  if (GetArena() == nullptr && userinstance_ != nullptr) {
    delete userinstance_;
  }
  userinstance_ = nullptr;
  if (GetArena() == nullptr && settinginfo_ != nullptr) {
    delete settinginfo_;
  }
  settinginfo_ = nullptr;
  if (GetArena() == nullptr && requestbasicinfo_ != nullptr) {
    delete requestbasicinfo_;
  }
  requestbasicinfo_ = nullptr;
  ::memset(&seqid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&errorcode_) -
      reinterpret_cast<char*>(&seqid_)) + sizeof(errorcode_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Basic_UpstreamPayload::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.Basic.UpstreamPayload.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 seqId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          seqid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 retryCount = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          retrycount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes payloadData = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_payloaddata();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .AcFunDanmu.Im.Basic.UserInstance userInstance = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_userinstance(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 errorCode = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          errorcode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .AcFunDanmu.Im.Basic.SettingInfo settingInfo = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_settinginfo(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .AcFunDanmu.Im.Basic.RequestBasicInfo requestBasicInfo = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_requestbasicinfo(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Basic_UpstreamPayload::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Basic.UpstreamPayload)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.Basic.UpstreamPayload.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // int64 seqId = 2;
  if (this->seqid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_seqid(), target);
  }

  // uint32 retryCount = 3;
  if (this->retrycount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_retrycount(), target);
  }

  // bytes payloadData = 4;
  if (this->payloaddata().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_payloaddata(), target);
  }

  // .AcFunDanmu.Im.Basic.UserInstance userInstance = 5;
  if (this->has_userinstance()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::userinstance(this), target, stream);
  }

  // int32 errorCode = 6;
  if (this->errorcode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->_internal_errorcode(), target);
  }

  // .AcFunDanmu.Im.Basic.SettingInfo settingInfo = 7;
  if (this->has_settinginfo()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        7, _Internal::settinginfo(this), target, stream);
  }

  // .AcFunDanmu.Im.Basic.RequestBasicInfo requestBasicInfo = 8;
  if (this->has_requestbasicinfo()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        8, _Internal::requestbasicinfo(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Basic.UpstreamPayload)
  return target;
}

size_t Basic_UpstreamPayload::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Basic.UpstreamPayload)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // bytes payloadData = 4;
  if (this->payloaddata().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_payloaddata());
  }

  // .AcFunDanmu.Im.Basic.UserInstance userInstance = 5;
  if (this->has_userinstance()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *userinstance_);
  }

  // .AcFunDanmu.Im.Basic.SettingInfo settingInfo = 7;
  if (this->has_settinginfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *settinginfo_);
  }

  // .AcFunDanmu.Im.Basic.RequestBasicInfo requestBasicInfo = 8;
  if (this->has_requestbasicinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *requestbasicinfo_);
  }

  // int64 seqId = 2;
  if (this->seqid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_seqid());
  }

  // uint32 retryCount = 3;
  if (this->retrycount() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_retrycount());
  }

  // int32 errorCode = 6;
  if (this->errorcode() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_errorcode());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Basic_UpstreamPayload::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Basic.UpstreamPayload)
  GOOGLE_DCHECK_NE(&from, this);
  const Basic_UpstreamPayload* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Basic_UpstreamPayload>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Basic.UpstreamPayload)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Basic.UpstreamPayload)
    MergeFrom(*source);
  }
}

void Basic_UpstreamPayload::MergeFrom(const Basic_UpstreamPayload& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Basic.UpstreamPayload)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.payloaddata().size() > 0) {
    _internal_set_payloaddata(from._internal_payloaddata());
  }
  if (from.has_userinstance()) {
    _internal_mutable_userinstance()->::AcFunDanmu::Im::Basic_UserInstance::MergeFrom(from._internal_userinstance());
  }
  if (from.has_settinginfo()) {
    _internal_mutable_settinginfo()->::AcFunDanmu::Im::Basic_SettingInfo::MergeFrom(from._internal_settinginfo());
  }
  if (from.has_requestbasicinfo()) {
    _internal_mutable_requestbasicinfo()->::AcFunDanmu::Im::Basic_RequestBasicInfo::MergeFrom(from._internal_requestbasicinfo());
  }
  if (from.seqid() != 0) {
    _internal_set_seqid(from._internal_seqid());
  }
  if (from.retrycount() != 0) {
    _internal_set_retrycount(from._internal_retrycount());
  }
  if (from.errorcode() != 0) {
    _internal_set_errorcode(from._internal_errorcode());
  }
}

void Basic_UpstreamPayload::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Basic.UpstreamPayload)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Basic_UpstreamPayload::CopyFrom(const Basic_UpstreamPayload& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Basic.UpstreamPayload)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Basic_UpstreamPayload::IsInitialized() const {
  return true;
}

void Basic_UpstreamPayload::InternalSwap(Basic_UpstreamPayload* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  payloaddata_.Swap(&other->payloaddata_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Basic_UpstreamPayload, errorcode_)
      + sizeof(Basic_UpstreamPayload::errorcode_)
      - PROTOBUF_FIELD_OFFSET(Basic_UpstreamPayload, userinstance_)>(
          reinterpret_cast<char*>(&userinstance_),
          reinterpret_cast<char*>(&other->userinstance_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Basic_UpstreamPayload::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Basic_DownstreamPayload::_Internal {
 public:
};

Basic_DownstreamPayload::Basic_DownstreamPayload(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Basic.DownstreamPayload)
}
Basic_DownstreamPayload::Basic_DownstreamPayload(const Basic_DownstreamPayload& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  payloaddata_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_payloaddata().empty()) {
    payloaddata_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_payloaddata(), 
      GetArena());
  }
  errormsg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_errormsg().empty()) {
    errormsg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_errormsg(), 
      GetArena());
  }
  errordata_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_errordata().empty()) {
    errordata_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_errordata(), 
      GetArena());
  }
  ::memcpy(&seqid_, &from.seqid_,
    static_cast<size_t>(reinterpret_cast<char*>(&errorcode_) -
    reinterpret_cast<char*>(&seqid_)) + sizeof(errorcode_));
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Basic.DownstreamPayload)
}

void Basic_DownstreamPayload::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Basic_DownstreamPayload_Im_2eproto.base);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  payloaddata_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  errormsg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  errordata_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&seqid_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&errorcode_) -
      reinterpret_cast<char*>(&seqid_)) + sizeof(errorcode_));
}

Basic_DownstreamPayload::~Basic_DownstreamPayload() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Basic.DownstreamPayload)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Basic_DownstreamPayload::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  payloaddata_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  errormsg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  errordata_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Basic_DownstreamPayload::ArenaDtor(void* object) {
  Basic_DownstreamPayload* _this = reinterpret_cast< Basic_DownstreamPayload* >(object);
  (void)_this;
}
void Basic_DownstreamPayload::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Basic_DownstreamPayload::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Basic_DownstreamPayload& Basic_DownstreamPayload::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Basic_DownstreamPayload_Im_2eproto.base);
  return *internal_default_instance();
}


void Basic_DownstreamPayload::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Basic.DownstreamPayload)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  payloaddata_.ClearToEmpty();
  errormsg_.ClearToEmpty();
  errordata_.ClearToEmpty();
  ::memset(&seqid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&errorcode_) -
      reinterpret_cast<char*>(&seqid_)) + sizeof(errorcode_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Basic_DownstreamPayload::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.Basic.DownstreamPayload.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 seqId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          seqid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 errorCode = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          errorcode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes payloadData = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_payloaddata();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string errorMsg = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_errormsg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.Basic.DownstreamPayload.errorMsg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes errorData = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_errordata();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Basic_DownstreamPayload::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Basic.DownstreamPayload)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.Basic.DownstreamPayload.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // int64 seqId = 2;
  if (this->seqid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_seqid(), target);
  }

  // int32 errorCode = 3;
  if (this->errorcode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_errorcode(), target);
  }

  // bytes payloadData = 4;
  if (this->payloaddata().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_payloaddata(), target);
  }

  // string errorMsg = 5;
  if (this->errormsg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_errormsg().data(), static_cast<int>(this->_internal_errormsg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.Basic.DownstreamPayload.errorMsg");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_errormsg(), target);
  }

  // bytes errorData = 6;
  if (this->errordata().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        6, this->_internal_errordata(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Basic.DownstreamPayload)
  return target;
}

size_t Basic_DownstreamPayload::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Basic.DownstreamPayload)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // bytes payloadData = 4;
  if (this->payloaddata().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_payloaddata());
  }

  // string errorMsg = 5;
  if (this->errormsg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_errormsg());
  }

  // bytes errorData = 6;
  if (this->errordata().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_errordata());
  }

  // int64 seqId = 2;
  if (this->seqid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_seqid());
  }

  // int32 errorCode = 3;
  if (this->errorcode() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_errorcode());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Basic_DownstreamPayload::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Basic.DownstreamPayload)
  GOOGLE_DCHECK_NE(&from, this);
  const Basic_DownstreamPayload* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Basic_DownstreamPayload>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Basic.DownstreamPayload)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Basic.DownstreamPayload)
    MergeFrom(*source);
  }
}

void Basic_DownstreamPayload::MergeFrom(const Basic_DownstreamPayload& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Basic.DownstreamPayload)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.payloaddata().size() > 0) {
    _internal_set_payloaddata(from._internal_payloaddata());
  }
  if (from.errormsg().size() > 0) {
    _internal_set_errormsg(from._internal_errormsg());
  }
  if (from.errordata().size() > 0) {
    _internal_set_errordata(from._internal_errordata());
  }
  if (from.seqid() != 0) {
    _internal_set_seqid(from._internal_seqid());
  }
  if (from.errorcode() != 0) {
    _internal_set_errorcode(from._internal_errorcode());
  }
}

void Basic_DownstreamPayload::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Basic.DownstreamPayload)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Basic_DownstreamPayload::CopyFrom(const Basic_DownstreamPayload& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Basic.DownstreamPayload)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Basic_DownstreamPayload::IsInitialized() const {
  return true;
}

void Basic_DownstreamPayload::InternalSwap(Basic_DownstreamPayload* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  payloaddata_.Swap(&other->payloaddata_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  errormsg_.Swap(&other->errormsg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  errordata_.Swap(&other->errordata_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Basic_DownstreamPayload, errorcode_)
      + sizeof(Basic_DownstreamPayload::errorcode_)
      - PROTOBUF_FIELD_OFFSET(Basic_DownstreamPayload, seqid_)>(
          reinterpret_cast<char*>(&seqid_),
          reinterpret_cast<char*>(&other->seqid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Basic_DownstreamPayload::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Basic_PingRequest::_Internal {
 public:
};

Basic_PingRequest::Basic_PingRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Basic.PingRequest)
}
Basic_PingRequest::Basic_PingRequest(const Basic_PingRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&pingtype_, &from.pingtype_,
    static_cast<size_t>(reinterpret_cast<char*>(&pinground_) -
    reinterpret_cast<char*>(&pingtype_)) + sizeof(pinground_));
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Basic.PingRequest)
}

void Basic_PingRequest::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&pingtype_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&pinground_) -
      reinterpret_cast<char*>(&pingtype_)) + sizeof(pinground_));
}

Basic_PingRequest::~Basic_PingRequest() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Basic.PingRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Basic_PingRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Basic_PingRequest::ArenaDtor(void* object) {
  Basic_PingRequest* _this = reinterpret_cast< Basic_PingRequest* >(object);
  (void)_this;
}
void Basic_PingRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Basic_PingRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Basic_PingRequest& Basic_PingRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Basic_PingRequest_Im_2eproto.base);
  return *internal_default_instance();
}


void Basic_PingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Basic.PingRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&pingtype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pinground_) -
      reinterpret_cast<char*>(&pingtype_)) + sizeof(pinground_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Basic_PingRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .AcFunDanmu.Im.Basic.PingRequest.PingType pingType = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_pingtype(static_cast<::AcFunDanmu::Im::Basic_PingRequest_PingType>(val));
        } else goto handle_unusual;
        continue;
      // uint32 pingRound = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          pinground_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Basic_PingRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Basic.PingRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .AcFunDanmu.Im.Basic.PingRequest.PingType pingType = 1;
  if (this->pingtype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_pingtype(), target);
  }

  // uint32 pingRound = 2;
  if (this->pinground() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_pinground(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Basic.PingRequest)
  return target;
}

size_t Basic_PingRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Basic.PingRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .AcFunDanmu.Im.Basic.PingRequest.PingType pingType = 1;
  if (this->pingtype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_pingtype());
  }

  // uint32 pingRound = 2;
  if (this->pinground() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_pinground());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Basic_PingRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Basic.PingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const Basic_PingRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Basic_PingRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Basic.PingRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Basic.PingRequest)
    MergeFrom(*source);
  }
}

void Basic_PingRequest::MergeFrom(const Basic_PingRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Basic.PingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.pingtype() != 0) {
    _internal_set_pingtype(from._internal_pingtype());
  }
  if (from.pinground() != 0) {
    _internal_set_pinground(from._internal_pinground());
  }
}

void Basic_PingRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Basic.PingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Basic_PingRequest::CopyFrom(const Basic_PingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Basic.PingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Basic_PingRequest::IsInitialized() const {
  return true;
}

void Basic_PingRequest::InternalSwap(Basic_PingRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Basic_PingRequest, pinground_)
      + sizeof(Basic_PingRequest::pinground_)
      - PROTOBUF_FIELD_OFFSET(Basic_PingRequest, pingtype_)>(
          reinterpret_cast<char*>(&pingtype_),
          reinterpret_cast<char*>(&other->pingtype_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Basic_PingRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Basic_PingResponse::_Internal {
 public:
};

Basic_PingResponse::Basic_PingResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Basic.PingResponse)
}
Basic_PingResponse::Basic_PingResponse(const Basic_PingResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&servertimestamp_, &from.servertimestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&redirectport_) -
    reinterpret_cast<char*>(&servertimestamp_)) + sizeof(redirectport_));
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Basic.PingResponse)
}

void Basic_PingResponse::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&servertimestamp_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&redirectport_) -
      reinterpret_cast<char*>(&servertimestamp_)) + sizeof(redirectport_));
}

Basic_PingResponse::~Basic_PingResponse() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Basic.PingResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Basic_PingResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Basic_PingResponse::ArenaDtor(void* object) {
  Basic_PingResponse* _this = reinterpret_cast< Basic_PingResponse* >(object);
  (void)_this;
}
void Basic_PingResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Basic_PingResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Basic_PingResponse& Basic_PingResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Basic_PingResponse_Im_2eproto.base);
  return *internal_default_instance();
}


void Basic_PingResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Basic.PingResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&servertimestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&redirectport_) -
      reinterpret_cast<char*>(&servertimestamp_)) + sizeof(redirectport_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Basic_PingResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // sfixed32 serverTimestamp = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 13)) {
          servertimestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::int32>(ptr);
          ptr += sizeof(::PROTOBUF_NAMESPACE_ID::int32);
        } else goto handle_unusual;
        continue;
      // fixed32 clientIp = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 21)) {
          clientip_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint32>(ptr);
          ptr += sizeof(::PROTOBUF_NAMESPACE_ID::uint32);
        } else goto handle_unusual;
        continue;
      // fixed32 redirectIp = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 29)) {
          redirectip_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint32>(ptr);
          ptr += sizeof(::PROTOBUF_NAMESPACE_ID::uint32);
        } else goto handle_unusual;
        continue;
      // uint32 redirectPort = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          redirectport_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Basic_PingResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Basic.PingResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sfixed32 serverTimestamp = 1;
  if (this->servertimestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSFixed32ToArray(1, this->_internal_servertimestamp(), target);
  }

  // fixed32 clientIp = 2;
  if (this->clientip() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed32ToArray(2, this->_internal_clientip(), target);
  }

  // fixed32 redirectIp = 3;
  if (this->redirectip() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed32ToArray(3, this->_internal_redirectip(), target);
  }

  // uint32 redirectPort = 4;
  if (this->redirectport() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_redirectport(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Basic.PingResponse)
  return target;
}

size_t Basic_PingResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Basic.PingResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // sfixed32 serverTimestamp = 1;
  if (this->servertimestamp() != 0) {
    total_size += 1 + 4;
  }

  // fixed32 clientIp = 2;
  if (this->clientip() != 0) {
    total_size += 1 + 4;
  }

  // fixed32 redirectIp = 3;
  if (this->redirectip() != 0) {
    total_size += 1 + 4;
  }

  // uint32 redirectPort = 4;
  if (this->redirectport() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_redirectport());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Basic_PingResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Basic.PingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const Basic_PingResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Basic_PingResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Basic.PingResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Basic.PingResponse)
    MergeFrom(*source);
  }
}

void Basic_PingResponse::MergeFrom(const Basic_PingResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Basic.PingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.servertimestamp() != 0) {
    _internal_set_servertimestamp(from._internal_servertimestamp());
  }
  if (from.clientip() != 0) {
    _internal_set_clientip(from._internal_clientip());
  }
  if (from.redirectip() != 0) {
    _internal_set_redirectip(from._internal_redirectip());
  }
  if (from.redirectport() != 0) {
    _internal_set_redirectport(from._internal_redirectport());
  }
}

void Basic_PingResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Basic.PingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Basic_PingResponse::CopyFrom(const Basic_PingResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Basic.PingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Basic_PingResponse::IsInitialized() const {
  return true;
}

void Basic_PingResponse::InternalSwap(Basic_PingResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Basic_PingResponse, redirectport_)
      + sizeof(Basic_PingResponse::redirectport_)
      - PROTOBUF_FIELD_OFFSET(Basic_PingResponse, servertimestamp_)>(
          reinterpret_cast<char*>(&servertimestamp_),
          reinterpret_cast<char*>(&other->servertimestamp_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Basic_PingResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Basic_RegisterRequest::_Internal {
 public:
  static const ::AcFunDanmu::Im::Basic_AppInfo& appinfo(const Basic_RegisterRequest* msg);
  static const ::AcFunDanmu::Im::Basic_DeviceInfo& deviceinfo(const Basic_RegisterRequest* msg);
  static const ::AcFunDanmu::Im::Basic_EnvInfo& envinfo(const Basic_RegisterRequest* msg);
  static const ::AcFunDanmu::Im::Basic_PushServiceToken& pushservicetoken(const Basic_RegisterRequest* msg);
};

const ::AcFunDanmu::Im::Basic_AppInfo&
Basic_RegisterRequest::_Internal::appinfo(const Basic_RegisterRequest* msg) {
  return *msg->appinfo_;
}
const ::AcFunDanmu::Im::Basic_DeviceInfo&
Basic_RegisterRequest::_Internal::deviceinfo(const Basic_RegisterRequest* msg) {
  return *msg->deviceinfo_;
}
const ::AcFunDanmu::Im::Basic_EnvInfo&
Basic_RegisterRequest::_Internal::envinfo(const Basic_RegisterRequest* msg) {
  return *msg->envinfo_;
}
const ::AcFunDanmu::Im::Basic_PushServiceToken&
Basic_RegisterRequest::_Internal::pushservicetoken(const Basic_RegisterRequest* msg) {
  return *msg->pushservicetoken_;
}
Basic_RegisterRequest::Basic_RegisterRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  pushservicetokenlist_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Basic.RegisterRequest)
}
Basic_RegisterRequest::Basic_RegisterRequest(const Basic_RegisterRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      pushservicetokenlist_(from.pushservicetokenlist_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  appcustomstatus_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_appcustomstatus().empty()) {
    appcustomstatus_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_appcustomstatus(), 
      GetArena());
  }
  if (from._internal_has_appinfo()) {
    appinfo_ = new ::AcFunDanmu::Im::Basic_AppInfo(*from.appinfo_);
  } else {
    appinfo_ = nullptr;
  }
  if (from._internal_has_deviceinfo()) {
    deviceinfo_ = new ::AcFunDanmu::Im::Basic_DeviceInfo(*from.deviceinfo_);
  } else {
    deviceinfo_ = nullptr;
  }
  if (from._internal_has_envinfo()) {
    envinfo_ = new ::AcFunDanmu::Im::Basic_EnvInfo(*from.envinfo_);
  } else {
    envinfo_ = nullptr;
  }
  if (from._internal_has_pushservicetoken()) {
    pushservicetoken_ = new ::AcFunDanmu::Im::Basic_PushServiceToken(*from.pushservicetoken_);
  } else {
    pushservicetoken_ = nullptr;
  }
  ::memcpy(&presencestatus_, &from.presencestatus_,
    static_cast<size_t>(reinterpret_cast<char*>(&keepaliveintervalsec_) -
    reinterpret_cast<char*>(&presencestatus_)) + sizeof(keepaliveintervalsec_));
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Basic.RegisterRequest)
}

void Basic_RegisterRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Basic_RegisterRequest_Im_2eproto.base);
  appcustomstatus_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&appinfo_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&keepaliveintervalsec_) -
      reinterpret_cast<char*>(&appinfo_)) + sizeof(keepaliveintervalsec_));
}

Basic_RegisterRequest::~Basic_RegisterRequest() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Basic.RegisterRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Basic_RegisterRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  appcustomstatus_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete appinfo_;
  if (this != internal_default_instance()) delete deviceinfo_;
  if (this != internal_default_instance()) delete envinfo_;
  if (this != internal_default_instance()) delete pushservicetoken_;
}

void Basic_RegisterRequest::ArenaDtor(void* object) {
  Basic_RegisterRequest* _this = reinterpret_cast< Basic_RegisterRequest* >(object);
  (void)_this;
}
void Basic_RegisterRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Basic_RegisterRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Basic_RegisterRequest& Basic_RegisterRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Basic_RegisterRequest_Im_2eproto.base);
  return *internal_default_instance();
}


void Basic_RegisterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Basic.RegisterRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pushservicetokenlist_.Clear();
  appcustomstatus_.ClearToEmpty();
  if (GetArena() == nullptr && appinfo_ != nullptr) {
    delete appinfo_;
  }
  appinfo_ = nullptr;
  if (GetArena() == nullptr && deviceinfo_ != nullptr) {
    delete deviceinfo_;
  }
  deviceinfo_ = nullptr;
  if (GetArena() == nullptr && envinfo_ != nullptr) {
    delete envinfo_;
  }
  envinfo_ = nullptr;
  if (GetArena() == nullptr && pushservicetoken_ != nullptr) {
    delete pushservicetoken_;
  }
  pushservicetoken_ = nullptr;
  ::memset(&presencestatus_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&keepaliveintervalsec_) -
      reinterpret_cast<char*>(&presencestatus_)) + sizeof(keepaliveintervalsec_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Basic_RegisterRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .AcFunDanmu.Im.Basic.AppInfo appInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_appinfo(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .AcFunDanmu.Im.Basic.DeviceInfo deviceInfo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_deviceinfo(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .AcFunDanmu.Im.Basic.EnvInfo envInfo = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_envinfo(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .AcFunDanmu.Im.Basic.RegisterRequest.PresenceStatus presenceStatus = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_presencestatus(static_cast<::AcFunDanmu::Im::Basic_RegisterRequest_PresenceStatus>(val));
        } else goto handle_unusual;
        continue;
      // .AcFunDanmu.Im.Basic.RegisterRequest.ActiveStatus appActiveStatus = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_appactivestatus(static_cast<::AcFunDanmu::Im::Basic_RegisterRequest_ActiveStatus>(val));
        } else goto handle_unusual;
        continue;
      // bytes appCustomStatus = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_appcustomstatus();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .AcFunDanmu.Im.Basic.PushServiceToken pushServiceToken = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_pushservicetoken(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 instanceId = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          instanceid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .AcFunDanmu.Im.Basic.PushServiceToken pushServiceTokenList = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_pushservicetokenlist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<74>(ptr));
        } else goto handle_unusual;
        continue;
      // int32 keepaliveIntervalSec = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          keepaliveintervalsec_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Basic_RegisterRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Basic.RegisterRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .AcFunDanmu.Im.Basic.AppInfo appInfo = 1;
  if (this->has_appinfo()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::appinfo(this), target, stream);
  }

  // .AcFunDanmu.Im.Basic.DeviceInfo deviceInfo = 2;
  if (this->has_deviceinfo()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::deviceinfo(this), target, stream);
  }

  // .AcFunDanmu.Im.Basic.EnvInfo envInfo = 3;
  if (this->has_envinfo()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::envinfo(this), target, stream);
  }

  // .AcFunDanmu.Im.Basic.RegisterRequest.PresenceStatus presenceStatus = 4;
  if (this->presencestatus() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      4, this->_internal_presencestatus(), target);
  }

  // .AcFunDanmu.Im.Basic.RegisterRequest.ActiveStatus appActiveStatus = 5;
  if (this->appactivestatus() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      5, this->_internal_appactivestatus(), target);
  }

  // bytes appCustomStatus = 6;
  if (this->appcustomstatus().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        6, this->_internal_appcustomstatus(), target);
  }

  // .AcFunDanmu.Im.Basic.PushServiceToken pushServiceToken = 7;
  if (this->has_pushservicetoken()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        7, _Internal::pushservicetoken(this), target, stream);
  }

  // int64 instanceId = 8;
  if (this->instanceid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(8, this->_internal_instanceid(), target);
  }

  // repeated .AcFunDanmu.Im.Basic.PushServiceToken pushServiceTokenList = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_pushservicetokenlist_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(9, this->_internal_pushservicetokenlist(i), target, stream);
  }

  // int32 keepaliveIntervalSec = 10;
  if (this->keepaliveintervalsec() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(10, this->_internal_keepaliveintervalsec(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Basic.RegisterRequest)
  return target;
}

size_t Basic_RegisterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Basic.RegisterRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .AcFunDanmu.Im.Basic.PushServiceToken pushServiceTokenList = 9;
  total_size += 1UL * this->_internal_pushservicetokenlist_size();
  for (const auto& msg : this->pushservicetokenlist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // bytes appCustomStatus = 6;
  if (this->appcustomstatus().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_appcustomstatus());
  }

  // .AcFunDanmu.Im.Basic.AppInfo appInfo = 1;
  if (this->has_appinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *appinfo_);
  }

  // .AcFunDanmu.Im.Basic.DeviceInfo deviceInfo = 2;
  if (this->has_deviceinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *deviceinfo_);
  }

  // .AcFunDanmu.Im.Basic.EnvInfo envInfo = 3;
  if (this->has_envinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *envinfo_);
  }

  // .AcFunDanmu.Im.Basic.PushServiceToken pushServiceToken = 7;
  if (this->has_pushservicetoken()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *pushservicetoken_);
  }

  // .AcFunDanmu.Im.Basic.RegisterRequest.PresenceStatus presenceStatus = 4;
  if (this->presencestatus() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_presencestatus());
  }

  // .AcFunDanmu.Im.Basic.RegisterRequest.ActiveStatus appActiveStatus = 5;
  if (this->appactivestatus() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_appactivestatus());
  }

  // int64 instanceId = 8;
  if (this->instanceid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_instanceid());
  }

  // int32 keepaliveIntervalSec = 10;
  if (this->keepaliveintervalsec() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_keepaliveintervalsec());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Basic_RegisterRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Basic.RegisterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const Basic_RegisterRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Basic_RegisterRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Basic.RegisterRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Basic.RegisterRequest)
    MergeFrom(*source);
  }
}

void Basic_RegisterRequest::MergeFrom(const Basic_RegisterRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Basic.RegisterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pushservicetokenlist_.MergeFrom(from.pushservicetokenlist_);
  if (from.appcustomstatus().size() > 0) {
    _internal_set_appcustomstatus(from._internal_appcustomstatus());
  }
  if (from.has_appinfo()) {
    _internal_mutable_appinfo()->::AcFunDanmu::Im::Basic_AppInfo::MergeFrom(from._internal_appinfo());
  }
  if (from.has_deviceinfo()) {
    _internal_mutable_deviceinfo()->::AcFunDanmu::Im::Basic_DeviceInfo::MergeFrom(from._internal_deviceinfo());
  }
  if (from.has_envinfo()) {
    _internal_mutable_envinfo()->::AcFunDanmu::Im::Basic_EnvInfo::MergeFrom(from._internal_envinfo());
  }
  if (from.has_pushservicetoken()) {
    _internal_mutable_pushservicetoken()->::AcFunDanmu::Im::Basic_PushServiceToken::MergeFrom(from._internal_pushservicetoken());
  }
  if (from.presencestatus() != 0) {
    _internal_set_presencestatus(from._internal_presencestatus());
  }
  if (from.appactivestatus() != 0) {
    _internal_set_appactivestatus(from._internal_appactivestatus());
  }
  if (from.instanceid() != 0) {
    _internal_set_instanceid(from._internal_instanceid());
  }
  if (from.keepaliveintervalsec() != 0) {
    _internal_set_keepaliveintervalsec(from._internal_keepaliveintervalsec());
  }
}

void Basic_RegisterRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Basic.RegisterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Basic_RegisterRequest::CopyFrom(const Basic_RegisterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Basic.RegisterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Basic_RegisterRequest::IsInitialized() const {
  return true;
}

void Basic_RegisterRequest::InternalSwap(Basic_RegisterRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  pushservicetokenlist_.InternalSwap(&other->pushservicetokenlist_);
  appcustomstatus_.Swap(&other->appcustomstatus_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Basic_RegisterRequest, keepaliveintervalsec_)
      + sizeof(Basic_RegisterRequest::keepaliveintervalsec_)
      - PROTOBUF_FIELD_OFFSET(Basic_RegisterRequest, appinfo_)>(
          reinterpret_cast<char*>(&appinfo_),
          reinterpret_cast<char*>(&other->appinfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Basic_RegisterRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Basic_RegisterResponse::_Internal {
 public:
  static const ::AcFunDanmu::Im::Basic_AccessPointsConfig& accesspointsconfig(const Basic_RegisterResponse* msg);
  static const ::AcFunDanmu::Im::Basic_SdkOption& sdkoption(const Basic_RegisterResponse* msg);
};

const ::AcFunDanmu::Im::Basic_AccessPointsConfig&
Basic_RegisterResponse::_Internal::accesspointsconfig(const Basic_RegisterResponse* msg) {
  return *msg->accesspointsconfig_;
}
const ::AcFunDanmu::Im::Basic_SdkOption&
Basic_RegisterResponse::_Internal::sdkoption(const Basic_RegisterResponse* msg) {
  return *msg->sdkoption_;
}
Basic_RegisterResponse::Basic_RegisterResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Basic.RegisterResponse)
}
Basic_RegisterResponse::Basic_RegisterResponse(const Basic_RegisterResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  sesskey_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_sesskey().empty()) {
    sesskey_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_sesskey(), 
      GetArena());
  }
  if (from._internal_has_accesspointsconfig()) {
    accesspointsconfig_ = new ::AcFunDanmu::Im::Basic_AccessPointsConfig(*from.accesspointsconfig_);
  } else {
    accesspointsconfig_ = nullptr;
  }
  if (from._internal_has_sdkoption()) {
    sdkoption_ = new ::AcFunDanmu::Im::Basic_SdkOption(*from.sdkoption_);
  } else {
    sdkoption_ = nullptr;
  }
  instanceid_ = from.instanceid_;
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Basic.RegisterResponse)
}

void Basic_RegisterResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Basic_RegisterResponse_Im_2eproto.base);
  sesskey_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&accesspointsconfig_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&instanceid_) -
      reinterpret_cast<char*>(&accesspointsconfig_)) + sizeof(instanceid_));
}

Basic_RegisterResponse::~Basic_RegisterResponse() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Basic.RegisterResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Basic_RegisterResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  sesskey_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete accesspointsconfig_;
  if (this != internal_default_instance()) delete sdkoption_;
}

void Basic_RegisterResponse::ArenaDtor(void* object) {
  Basic_RegisterResponse* _this = reinterpret_cast< Basic_RegisterResponse* >(object);
  (void)_this;
}
void Basic_RegisterResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Basic_RegisterResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Basic_RegisterResponse& Basic_RegisterResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Basic_RegisterResponse_Im_2eproto.base);
  return *internal_default_instance();
}


void Basic_RegisterResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Basic.RegisterResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sesskey_.ClearToEmpty();
  if (GetArena() == nullptr && accesspointsconfig_ != nullptr) {
    delete accesspointsconfig_;
  }
  accesspointsconfig_ = nullptr;
  if (GetArena() == nullptr && sdkoption_ != nullptr) {
    delete sdkoption_;
  }
  sdkoption_ = nullptr;
  instanceid_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Basic_RegisterResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .AcFunDanmu.Im.Basic.AccessPointsConfig accessPointsConfig = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_accesspointsconfig(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes sessKey = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_sesskey();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 instanceId = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          instanceid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .AcFunDanmu.Im.Basic.SdkOption sdkOption = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_sdkoption(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Basic_RegisterResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Basic.RegisterResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .AcFunDanmu.Im.Basic.AccessPointsConfig accessPointsConfig = 1;
  if (this->has_accesspointsconfig()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::accesspointsconfig(this), target, stream);
  }

  // bytes sessKey = 2;
  if (this->sesskey().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_sesskey(), target);
  }

  // int64 instanceId = 3;
  if (this->instanceid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_instanceid(), target);
  }

  // .AcFunDanmu.Im.Basic.SdkOption sdkOption = 4;
  if (this->has_sdkoption()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::sdkoption(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Basic.RegisterResponse)
  return target;
}

size_t Basic_RegisterResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Basic.RegisterResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes sessKey = 2;
  if (this->sesskey().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_sesskey());
  }

  // .AcFunDanmu.Im.Basic.AccessPointsConfig accessPointsConfig = 1;
  if (this->has_accesspointsconfig()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *accesspointsconfig_);
  }

  // .AcFunDanmu.Im.Basic.SdkOption sdkOption = 4;
  if (this->has_sdkoption()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *sdkoption_);
  }

  // int64 instanceId = 3;
  if (this->instanceid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_instanceid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Basic_RegisterResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Basic.RegisterResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const Basic_RegisterResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Basic_RegisterResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Basic.RegisterResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Basic.RegisterResponse)
    MergeFrom(*source);
  }
}

void Basic_RegisterResponse::MergeFrom(const Basic_RegisterResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Basic.RegisterResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sesskey().size() > 0) {
    _internal_set_sesskey(from._internal_sesskey());
  }
  if (from.has_accesspointsconfig()) {
    _internal_mutable_accesspointsconfig()->::AcFunDanmu::Im::Basic_AccessPointsConfig::MergeFrom(from._internal_accesspointsconfig());
  }
  if (from.has_sdkoption()) {
    _internal_mutable_sdkoption()->::AcFunDanmu::Im::Basic_SdkOption::MergeFrom(from._internal_sdkoption());
  }
  if (from.instanceid() != 0) {
    _internal_set_instanceid(from._internal_instanceid());
  }
}

void Basic_RegisterResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Basic.RegisterResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Basic_RegisterResponse::CopyFrom(const Basic_RegisterResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Basic.RegisterResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Basic_RegisterResponse::IsInitialized() const {
  return true;
}

void Basic_RegisterResponse::InternalSwap(Basic_RegisterResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  sesskey_.Swap(&other->sesskey_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Basic_RegisterResponse, instanceid_)
      + sizeof(Basic_RegisterResponse::instanceid_)
      - PROTOBUF_FIELD_OFFSET(Basic_RegisterResponse, accesspointsconfig_)>(
          reinterpret_cast<char*>(&accesspointsconfig_),
          reinterpret_cast<char*>(&other->accesspointsconfig_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Basic_RegisterResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Basic_AccessPointsConfig::_Internal {
 public:
  static const ::AcFunDanmu::Im::Basic_AccessPoint& forecelastconnectedap(const Basic_AccessPointsConfig* msg);
};

const ::AcFunDanmu::Im::Basic_AccessPoint&
Basic_AccessPointsConfig::_Internal::forecelastconnectedap(const Basic_AccessPointsConfig* msg) {
  return *msg->forecelastconnectedap_;
}
Basic_AccessPointsConfig::Basic_AccessPointsConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  optimalaps_(arena),
  backupaps_(arena),
  availableports_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Basic.AccessPointsConfig)
}
Basic_AccessPointsConfig::Basic_AccessPointsConfig(const Basic_AccessPointsConfig& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      optimalaps_(from.optimalaps_),
      backupaps_(from.backupaps_),
      availableports_(from.availableports_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_forecelastconnectedap()) {
    forecelastconnectedap_ = new ::AcFunDanmu::Im::Basic_AccessPoint(*from.forecelastconnectedap_);
  } else {
    forecelastconnectedap_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Basic.AccessPointsConfig)
}

void Basic_AccessPointsConfig::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Basic_AccessPointsConfig_Im_2eproto.base);
  forecelastconnectedap_ = nullptr;
}

Basic_AccessPointsConfig::~Basic_AccessPointsConfig() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Basic.AccessPointsConfig)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Basic_AccessPointsConfig::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete forecelastconnectedap_;
}

void Basic_AccessPointsConfig::ArenaDtor(void* object) {
  Basic_AccessPointsConfig* _this = reinterpret_cast< Basic_AccessPointsConfig* >(object);
  (void)_this;
}
void Basic_AccessPointsConfig::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Basic_AccessPointsConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Basic_AccessPointsConfig& Basic_AccessPointsConfig::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Basic_AccessPointsConfig_Im_2eproto.base);
  return *internal_default_instance();
}


void Basic_AccessPointsConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Basic.AccessPointsConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  optimalaps_.Clear();
  backupaps_.Clear();
  availableports_.Clear();
  if (GetArena() == nullptr && forecelastconnectedap_ != nullptr) {
    delete forecelastconnectedap_;
  }
  forecelastconnectedap_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Basic_AccessPointsConfig::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .AcFunDanmu.Im.Basic.AccessPoint optimalAps = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_optimalaps(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .AcFunDanmu.Im.Basic.AccessPoint backupAps = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_backupaps(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated uint32 availablePorts = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_availableports(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24) {
          _internal_add_availableports(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .AcFunDanmu.Im.Basic.AccessPoint foreceLastConnectedAp = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_forecelastconnectedap(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Basic_AccessPointsConfig::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Basic.AccessPointsConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .AcFunDanmu.Im.Basic.AccessPoint optimalAps = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_optimalaps_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_optimalaps(i), target, stream);
  }

  // repeated .AcFunDanmu.Im.Basic.AccessPoint backupAps = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_backupaps_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_backupaps(i), target, stream);
  }

  // repeated uint32 availablePorts = 3;
  {
    int byte_size = _availableports_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          3, _internal_availableports(), byte_size, target);
    }
  }

  // .AcFunDanmu.Im.Basic.AccessPoint foreceLastConnectedAp = 4;
  if (this->has_forecelastconnectedap()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::forecelastconnectedap(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Basic.AccessPointsConfig)
  return target;
}

size_t Basic_AccessPointsConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Basic.AccessPointsConfig)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .AcFunDanmu.Im.Basic.AccessPoint optimalAps = 1;
  total_size += 1UL * this->_internal_optimalaps_size();
  for (const auto& msg : this->optimalaps_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .AcFunDanmu.Im.Basic.AccessPoint backupAps = 2;
  total_size += 1UL * this->_internal_backupaps_size();
  for (const auto& msg : this->backupaps_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated uint32 availablePorts = 3;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt32Size(this->availableports_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _availableports_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // .AcFunDanmu.Im.Basic.AccessPoint foreceLastConnectedAp = 4;
  if (this->has_forecelastconnectedap()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *forecelastconnectedap_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Basic_AccessPointsConfig::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Basic.AccessPointsConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const Basic_AccessPointsConfig* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Basic_AccessPointsConfig>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Basic.AccessPointsConfig)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Basic.AccessPointsConfig)
    MergeFrom(*source);
  }
}

void Basic_AccessPointsConfig::MergeFrom(const Basic_AccessPointsConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Basic.AccessPointsConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  optimalaps_.MergeFrom(from.optimalaps_);
  backupaps_.MergeFrom(from.backupaps_);
  availableports_.MergeFrom(from.availableports_);
  if (from.has_forecelastconnectedap()) {
    _internal_mutable_forecelastconnectedap()->::AcFunDanmu::Im::Basic_AccessPoint::MergeFrom(from._internal_forecelastconnectedap());
  }
}

void Basic_AccessPointsConfig::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Basic.AccessPointsConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Basic_AccessPointsConfig::CopyFrom(const Basic_AccessPointsConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Basic.AccessPointsConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Basic_AccessPointsConfig::IsInitialized() const {
  return true;
}

void Basic_AccessPointsConfig::InternalSwap(Basic_AccessPointsConfig* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  optimalaps_.InternalSwap(&other->optimalaps_);
  backupaps_.InternalSwap(&other->backupaps_);
  availableports_.InternalSwap(&other->availableports_);
  swap(forecelastconnectedap_, other->forecelastconnectedap_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Basic_AccessPointsConfig::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Basic_UnregisterRequest::_Internal {
 public:
};

Basic_UnregisterRequest::Basic_UnregisterRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Basic.UnregisterRequest)
}
Basic_UnregisterRequest::Basic_UnregisterRequest(const Basic_UnregisterRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Basic.UnregisterRequest)
}

void Basic_UnregisterRequest::SharedCtor() {
}

Basic_UnregisterRequest::~Basic_UnregisterRequest() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Basic.UnregisterRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Basic_UnregisterRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Basic_UnregisterRequest::ArenaDtor(void* object) {
  Basic_UnregisterRequest* _this = reinterpret_cast< Basic_UnregisterRequest* >(object);
  (void)_this;
}
void Basic_UnregisterRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Basic_UnregisterRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Basic_UnregisterRequest& Basic_UnregisterRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Basic_UnregisterRequest_Im_2eproto.base);
  return *internal_default_instance();
}


void Basic_UnregisterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Basic.UnregisterRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Basic_UnregisterRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Basic_UnregisterRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Basic.UnregisterRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Basic.UnregisterRequest)
  return target;
}

size_t Basic_UnregisterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Basic.UnregisterRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Basic_UnregisterRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Basic.UnregisterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const Basic_UnregisterRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Basic_UnregisterRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Basic.UnregisterRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Basic.UnregisterRequest)
    MergeFrom(*source);
  }
}

void Basic_UnregisterRequest::MergeFrom(const Basic_UnregisterRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Basic.UnregisterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Basic_UnregisterRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Basic.UnregisterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Basic_UnregisterRequest::CopyFrom(const Basic_UnregisterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Basic.UnregisterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Basic_UnregisterRequest::IsInitialized() const {
  return true;
}

void Basic_UnregisterRequest::InternalSwap(Basic_UnregisterRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Basic_UnregisterRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Basic_UnregisterResponse::_Internal {
 public:
};

Basic_UnregisterResponse::Basic_UnregisterResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Basic.UnregisterResponse)
}
Basic_UnregisterResponse::Basic_UnregisterResponse(const Basic_UnregisterResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Basic.UnregisterResponse)
}

void Basic_UnregisterResponse::SharedCtor() {
}

Basic_UnregisterResponse::~Basic_UnregisterResponse() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Basic.UnregisterResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Basic_UnregisterResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Basic_UnregisterResponse::ArenaDtor(void* object) {
  Basic_UnregisterResponse* _this = reinterpret_cast< Basic_UnregisterResponse* >(object);
  (void)_this;
}
void Basic_UnregisterResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Basic_UnregisterResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Basic_UnregisterResponse& Basic_UnregisterResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Basic_UnregisterResponse_Im_2eproto.base);
  return *internal_default_instance();
}


void Basic_UnregisterResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Basic.UnregisterResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Basic_UnregisterResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Basic_UnregisterResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Basic.UnregisterResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Basic.UnregisterResponse)
  return target;
}

size_t Basic_UnregisterResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Basic.UnregisterResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Basic_UnregisterResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Basic.UnregisterResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const Basic_UnregisterResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Basic_UnregisterResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Basic.UnregisterResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Basic.UnregisterResponse)
    MergeFrom(*source);
  }
}

void Basic_UnregisterResponse::MergeFrom(const Basic_UnregisterResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Basic.UnregisterResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Basic_UnregisterResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Basic.UnregisterResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Basic_UnregisterResponse::CopyFrom(const Basic_UnregisterResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Basic.UnregisterResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Basic_UnregisterResponse::IsInitialized() const {
  return true;
}

void Basic_UnregisterResponse::InternalSwap(Basic_UnregisterResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Basic_UnregisterResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Basic_KeepAliveRequest::_Internal {
 public:
  static const ::AcFunDanmu::Im::Basic_PushServiceToken& pushservicetoken(const Basic_KeepAliveRequest* msg);
};

const ::AcFunDanmu::Im::Basic_PushServiceToken&
Basic_KeepAliveRequest::_Internal::pushservicetoken(const Basic_KeepAliveRequest* msg) {
  return *msg->pushservicetoken_;
}
Basic_KeepAliveRequest::Basic_KeepAliveRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  pushservicetokenlist_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Basic.KeepAliveRequest)
}
Basic_KeepAliveRequest::Basic_KeepAliveRequest(const Basic_KeepAliveRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      pushservicetokenlist_(from.pushservicetokenlist_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_pushservicetoken()) {
    pushservicetoken_ = new ::AcFunDanmu::Im::Basic_PushServiceToken(*from.pushservicetoken_);
  } else {
    pushservicetoken_ = nullptr;
  }
  ::memcpy(&presencestatus_, &from.presencestatus_,
    static_cast<size_t>(reinterpret_cast<char*>(&keepaliveintervalsec_) -
    reinterpret_cast<char*>(&presencestatus_)) + sizeof(keepaliveintervalsec_));
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Basic.KeepAliveRequest)
}

void Basic_KeepAliveRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Basic_KeepAliveRequest_Im_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&pushservicetoken_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&keepaliveintervalsec_) -
      reinterpret_cast<char*>(&pushservicetoken_)) + sizeof(keepaliveintervalsec_));
}

Basic_KeepAliveRequest::~Basic_KeepAliveRequest() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Basic.KeepAliveRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Basic_KeepAliveRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete pushservicetoken_;
}

void Basic_KeepAliveRequest::ArenaDtor(void* object) {
  Basic_KeepAliveRequest* _this = reinterpret_cast< Basic_KeepAliveRequest* >(object);
  (void)_this;
}
void Basic_KeepAliveRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Basic_KeepAliveRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Basic_KeepAliveRequest& Basic_KeepAliveRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Basic_KeepAliveRequest_Im_2eproto.base);
  return *internal_default_instance();
}


void Basic_KeepAliveRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Basic.KeepAliveRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pushservicetokenlist_.Clear();
  if (GetArena() == nullptr && pushservicetoken_ != nullptr) {
    delete pushservicetoken_;
  }
  pushservicetoken_ = nullptr;
  ::memset(&presencestatus_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&keepaliveintervalsec_) -
      reinterpret_cast<char*>(&presencestatus_)) + sizeof(keepaliveintervalsec_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Basic_KeepAliveRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .AcFunDanmu.Im.Basic.RegisterRequest.PresenceStatus presenceStatus = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_presencestatus(static_cast<::AcFunDanmu::Im::Basic_RegisterRequest_PresenceStatus>(val));
        } else goto handle_unusual;
        continue;
      // .AcFunDanmu.Im.Basic.RegisterRequest.ActiveStatus appActiveStatus = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_appactivestatus(static_cast<::AcFunDanmu::Im::Basic_RegisterRequest_ActiveStatus>(val));
        } else goto handle_unusual;
        continue;
      // .AcFunDanmu.Im.Basic.PushServiceToken pushServiceToken = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_pushservicetoken(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .AcFunDanmu.Im.Basic.PushServiceToken pushServiceTokenList = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_pushservicetokenlist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      // int32 keepaliveIntervalSec = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          keepaliveintervalsec_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Basic_KeepAliveRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Basic.KeepAliveRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .AcFunDanmu.Im.Basic.RegisterRequest.PresenceStatus presenceStatus = 1;
  if (this->presencestatus() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_presencestatus(), target);
  }

  // .AcFunDanmu.Im.Basic.RegisterRequest.ActiveStatus appActiveStatus = 2;
  if (this->appactivestatus() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_appactivestatus(), target);
  }

  // .AcFunDanmu.Im.Basic.PushServiceToken pushServiceToken = 3;
  if (this->has_pushservicetoken()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::pushservicetoken(this), target, stream);
  }

  // repeated .AcFunDanmu.Im.Basic.PushServiceToken pushServiceTokenList = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_pushservicetokenlist_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, this->_internal_pushservicetokenlist(i), target, stream);
  }

  // int32 keepaliveIntervalSec = 5;
  if (this->keepaliveintervalsec() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_keepaliveintervalsec(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Basic.KeepAliveRequest)
  return target;
}

size_t Basic_KeepAliveRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Basic.KeepAliveRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .AcFunDanmu.Im.Basic.PushServiceToken pushServiceTokenList = 4;
  total_size += 1UL * this->_internal_pushservicetokenlist_size();
  for (const auto& msg : this->pushservicetokenlist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .AcFunDanmu.Im.Basic.PushServiceToken pushServiceToken = 3;
  if (this->has_pushservicetoken()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *pushservicetoken_);
  }

  // .AcFunDanmu.Im.Basic.RegisterRequest.PresenceStatus presenceStatus = 1;
  if (this->presencestatus() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_presencestatus());
  }

  // .AcFunDanmu.Im.Basic.RegisterRequest.ActiveStatus appActiveStatus = 2;
  if (this->appactivestatus() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_appactivestatus());
  }

  // int32 keepaliveIntervalSec = 5;
  if (this->keepaliveintervalsec() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_keepaliveintervalsec());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Basic_KeepAliveRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Basic.KeepAliveRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const Basic_KeepAliveRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Basic_KeepAliveRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Basic.KeepAliveRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Basic.KeepAliveRequest)
    MergeFrom(*source);
  }
}

void Basic_KeepAliveRequest::MergeFrom(const Basic_KeepAliveRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Basic.KeepAliveRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pushservicetokenlist_.MergeFrom(from.pushservicetokenlist_);
  if (from.has_pushservicetoken()) {
    _internal_mutable_pushservicetoken()->::AcFunDanmu::Im::Basic_PushServiceToken::MergeFrom(from._internal_pushservicetoken());
  }
  if (from.presencestatus() != 0) {
    _internal_set_presencestatus(from._internal_presencestatus());
  }
  if (from.appactivestatus() != 0) {
    _internal_set_appactivestatus(from._internal_appactivestatus());
  }
  if (from.keepaliveintervalsec() != 0) {
    _internal_set_keepaliveintervalsec(from._internal_keepaliveintervalsec());
  }
}

void Basic_KeepAliveRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Basic.KeepAliveRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Basic_KeepAliveRequest::CopyFrom(const Basic_KeepAliveRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Basic.KeepAliveRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Basic_KeepAliveRequest::IsInitialized() const {
  return true;
}

void Basic_KeepAliveRequest::InternalSwap(Basic_KeepAliveRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  pushservicetokenlist_.InternalSwap(&other->pushservicetokenlist_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Basic_KeepAliveRequest, keepaliveintervalsec_)
      + sizeof(Basic_KeepAliveRequest::keepaliveintervalsec_)
      - PROTOBUF_FIELD_OFFSET(Basic_KeepAliveRequest, pushservicetoken_)>(
          reinterpret_cast<char*>(&pushservicetoken_),
          reinterpret_cast<char*>(&other->pushservicetoken_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Basic_KeepAliveRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Basic_KeepAliveResponse::_Internal {
 public:
  static const ::AcFunDanmu::Im::Basic_AccessPointsConfig& accesspointsconfig(const Basic_KeepAliveResponse* msg);
};

const ::AcFunDanmu::Im::Basic_AccessPointsConfig&
Basic_KeepAliveResponse::_Internal::accesspointsconfig(const Basic_KeepAliveResponse* msg) {
  return *msg->accesspointsconfig_;
}
Basic_KeepAliveResponse::Basic_KeepAliveResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Basic.KeepAliveResponse)
}
Basic_KeepAliveResponse::Basic_KeepAliveResponse(const Basic_KeepAliveResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_accesspointsconfig()) {
    accesspointsconfig_ = new ::AcFunDanmu::Im::Basic_AccessPointsConfig(*from.accesspointsconfig_);
  } else {
    accesspointsconfig_ = nullptr;
  }
  servermsec_ = from.servermsec_;
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Basic.KeepAliveResponse)
}

void Basic_KeepAliveResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Basic_KeepAliveResponse_Im_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&accesspointsconfig_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&servermsec_) -
      reinterpret_cast<char*>(&accesspointsconfig_)) + sizeof(servermsec_));
}

Basic_KeepAliveResponse::~Basic_KeepAliveResponse() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Basic.KeepAliveResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Basic_KeepAliveResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete accesspointsconfig_;
}

void Basic_KeepAliveResponse::ArenaDtor(void* object) {
  Basic_KeepAliveResponse* _this = reinterpret_cast< Basic_KeepAliveResponse* >(object);
  (void)_this;
}
void Basic_KeepAliveResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Basic_KeepAliveResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Basic_KeepAliveResponse& Basic_KeepAliveResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Basic_KeepAliveResponse_Im_2eproto.base);
  return *internal_default_instance();
}


void Basic_KeepAliveResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Basic.KeepAliveResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && accesspointsconfig_ != nullptr) {
    delete accesspointsconfig_;
  }
  accesspointsconfig_ = nullptr;
  servermsec_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Basic_KeepAliveResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .AcFunDanmu.Im.Basic.AccessPointsConfig accessPointsConfig = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_accesspointsconfig(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 serverMsec = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          servermsec_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Basic_KeepAliveResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Basic.KeepAliveResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .AcFunDanmu.Im.Basic.AccessPointsConfig accessPointsConfig = 1;
  if (this->has_accesspointsconfig()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::accesspointsconfig(this), target, stream);
  }

  // int64 serverMsec = 2;
  if (this->servermsec() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_servermsec(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Basic.KeepAliveResponse)
  return target;
}

size_t Basic_KeepAliveResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Basic.KeepAliveResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .AcFunDanmu.Im.Basic.AccessPointsConfig accessPointsConfig = 1;
  if (this->has_accesspointsconfig()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *accesspointsconfig_);
  }

  // int64 serverMsec = 2;
  if (this->servermsec() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_servermsec());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Basic_KeepAliveResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Basic.KeepAliveResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const Basic_KeepAliveResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Basic_KeepAliveResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Basic.KeepAliveResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Basic.KeepAliveResponse)
    MergeFrom(*source);
  }
}

void Basic_KeepAliveResponse::MergeFrom(const Basic_KeepAliveResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Basic.KeepAliveResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_accesspointsconfig()) {
    _internal_mutable_accesspointsconfig()->::AcFunDanmu::Im::Basic_AccessPointsConfig::MergeFrom(from._internal_accesspointsconfig());
  }
  if (from.servermsec() != 0) {
    _internal_set_servermsec(from._internal_servermsec());
  }
}

void Basic_KeepAliveResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Basic.KeepAliveResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Basic_KeepAliveResponse::CopyFrom(const Basic_KeepAliveResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Basic.KeepAliveResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Basic_KeepAliveResponse::IsInitialized() const {
  return true;
}

void Basic_KeepAliveResponse::InternalSwap(Basic_KeepAliveResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Basic_KeepAliveResponse, servermsec_)
      + sizeof(Basic_KeepAliveResponse::servermsec_)
      - PROTOBUF_FIELD_OFFSET(Basic_KeepAliveResponse, accesspointsconfig_)>(
          reinterpret_cast<char*>(&accesspointsconfig_),
          reinterpret_cast<char*>(&other->accesspointsconfig_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Basic_KeepAliveResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Basic_AccessPoint::_Internal {
 public:
};

Basic_AccessPoint::Basic_AccessPoint(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Basic.AccessPoint)
}
Basic_AccessPoint::Basic_AccessPoint(const Basic_AccessPoint& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ipv6_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_ipv6().empty()) {
    ipv6_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_ipv6(), 
      GetArena());
  }
  domain_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_domain().empty()) {
    domain_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_domain(), 
      GetArena());
  }
  ::memcpy(&addresstype_, &from.addresstype_,
    static_cast<size_t>(reinterpret_cast<char*>(&ipv4_) -
    reinterpret_cast<char*>(&addresstype_)) + sizeof(ipv4_));
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Basic.AccessPoint)
}

void Basic_AccessPoint::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Basic_AccessPoint_Im_2eproto.base);
  ipv6_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  domain_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&addresstype_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&ipv4_) -
      reinterpret_cast<char*>(&addresstype_)) + sizeof(ipv4_));
}

Basic_AccessPoint::~Basic_AccessPoint() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Basic.AccessPoint)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Basic_AccessPoint::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  ipv6_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  domain_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Basic_AccessPoint::ArenaDtor(void* object) {
  Basic_AccessPoint* _this = reinterpret_cast< Basic_AccessPoint* >(object);
  (void)_this;
}
void Basic_AccessPoint::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Basic_AccessPoint::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Basic_AccessPoint& Basic_AccessPoint::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Basic_AccessPoint_Im_2eproto.base);
  return *internal_default_instance();
}


void Basic_AccessPoint::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Basic.AccessPoint)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ipv6_.ClearToEmpty();
  domain_.ClearToEmpty();
  ::memset(&addresstype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ipv4_) -
      reinterpret_cast<char*>(&addresstype_)) + sizeof(ipv4_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Basic_AccessPoint::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .AcFunDanmu.Im.Basic.AccessPoint.AddressType addressType = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_addresstype(static_cast<::AcFunDanmu::Im::Basic_AccessPoint_AddressType>(val));
        } else goto handle_unusual;
        continue;
      // uint32 port = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          port_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // fixed32 ipV4 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 29)) {
          ipv4_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint32>(ptr);
          ptr += sizeof(::PROTOBUF_NAMESPACE_ID::uint32);
        } else goto handle_unusual;
        continue;
      // bytes ipV6 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_ipv6();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string domain = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_domain();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.Basic.AccessPoint.domain"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Basic_AccessPoint::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Basic.AccessPoint)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .AcFunDanmu.Im.Basic.AccessPoint.AddressType addressType = 1;
  if (this->addresstype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_addresstype(), target);
  }

  // uint32 port = 2;
  if (this->port() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_port(), target);
  }

  // fixed32 ipV4 = 3;
  if (this->ipv4() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed32ToArray(3, this->_internal_ipv4(), target);
  }

  // bytes ipV6 = 4;
  if (this->ipv6().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_ipv6(), target);
  }

  // string domain = 5;
  if (this->domain().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_domain().data(), static_cast<int>(this->_internal_domain().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.Basic.AccessPoint.domain");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_domain(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Basic.AccessPoint)
  return target;
}

size_t Basic_AccessPoint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Basic.AccessPoint)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes ipV6 = 4;
  if (this->ipv6().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_ipv6());
  }

  // string domain = 5;
  if (this->domain().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_domain());
  }

  // .AcFunDanmu.Im.Basic.AccessPoint.AddressType addressType = 1;
  if (this->addresstype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_addresstype());
  }

  // uint32 port = 2;
  if (this->port() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_port());
  }

  // fixed32 ipV4 = 3;
  if (this->ipv4() != 0) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Basic_AccessPoint::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Basic.AccessPoint)
  GOOGLE_DCHECK_NE(&from, this);
  const Basic_AccessPoint* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Basic_AccessPoint>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Basic.AccessPoint)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Basic.AccessPoint)
    MergeFrom(*source);
  }
}

void Basic_AccessPoint::MergeFrom(const Basic_AccessPoint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Basic.AccessPoint)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ipv6().size() > 0) {
    _internal_set_ipv6(from._internal_ipv6());
  }
  if (from.domain().size() > 0) {
    _internal_set_domain(from._internal_domain());
  }
  if (from.addresstype() != 0) {
    _internal_set_addresstype(from._internal_addresstype());
  }
  if (from.port() != 0) {
    _internal_set_port(from._internal_port());
  }
  if (from.ipv4() != 0) {
    _internal_set_ipv4(from._internal_ipv4());
  }
}

void Basic_AccessPoint::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Basic.AccessPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Basic_AccessPoint::CopyFrom(const Basic_AccessPoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Basic.AccessPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Basic_AccessPoint::IsInitialized() const {
  return true;
}

void Basic_AccessPoint::InternalSwap(Basic_AccessPoint* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ipv6_.Swap(&other->ipv6_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  domain_.Swap(&other->domain_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Basic_AccessPoint, ipv4_)
      + sizeof(Basic_AccessPoint::ipv4_)
      - PROTOBUF_FIELD_OFFSET(Basic_AccessPoint, addresstype_)>(
          reinterpret_cast<char*>(&addresstype_),
          reinterpret_cast<char*>(&other->addresstype_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Basic_AccessPoint::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Basic_TokenInfo::_Internal {
 public:
};

Basic_TokenInfo::Basic_TokenInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Basic.TokenInfo)
}
Basic_TokenInfo::Basic_TokenInfo(const Basic_TokenInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_token().empty()) {
    token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_token(), 
      GetArena());
  }
  tokentype_ = from.tokentype_;
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Basic.TokenInfo)
}

void Basic_TokenInfo::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Basic_TokenInfo_Im_2eproto.base);
  token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  tokentype_ = 0;
}

Basic_TokenInfo::~Basic_TokenInfo() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Basic.TokenInfo)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Basic_TokenInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Basic_TokenInfo::ArenaDtor(void* object) {
  Basic_TokenInfo* _this = reinterpret_cast< Basic_TokenInfo* >(object);
  (void)_this;
}
void Basic_TokenInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Basic_TokenInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Basic_TokenInfo& Basic_TokenInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Basic_TokenInfo_Im_2eproto.base);
  return *internal_default_instance();
}


void Basic_TokenInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Basic.TokenInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  token_.ClearToEmpty();
  tokentype_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Basic_TokenInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .AcFunDanmu.Im.Basic.TokenInfo.TokenType tokenType = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_tokentype(static_cast<::AcFunDanmu::Im::Basic_TokenInfo_TokenType>(val));
        } else goto handle_unusual;
        continue;
      // bytes token = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Basic_TokenInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Basic.TokenInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .AcFunDanmu.Im.Basic.TokenInfo.TokenType tokenType = 1;
  if (this->tokentype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_tokentype(), target);
  }

  // bytes token = 2;
  if (this->token().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Basic.TokenInfo)
  return target;
}

size_t Basic_TokenInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Basic.TokenInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes token = 2;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_token());
  }

  // .AcFunDanmu.Im.Basic.TokenInfo.TokenType tokenType = 1;
  if (this->tokentype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_tokentype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Basic_TokenInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Basic.TokenInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const Basic_TokenInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Basic_TokenInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Basic.TokenInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Basic.TokenInfo)
    MergeFrom(*source);
  }
}

void Basic_TokenInfo::MergeFrom(const Basic_TokenInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Basic.TokenInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {
    _internal_set_token(from._internal_token());
  }
  if (from.tokentype() != 0) {
    _internal_set_tokentype(from._internal_tokentype());
  }
}

void Basic_TokenInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Basic.TokenInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Basic_TokenInfo::CopyFrom(const Basic_TokenInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Basic.TokenInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Basic_TokenInfo::IsInitialized() const {
  return true;
}

void Basic_TokenInfo::InternalSwap(Basic_TokenInfo* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  token_.Swap(&other->token_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(tokentype_, other->tokentype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Basic_TokenInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Basic_PushServiceToken::_Internal {
 public:
};

Basic_PushServiceToken::Basic_PushServiceToken(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Basic.PushServiceToken)
}
Basic_PushServiceToken::Basic_PushServiceToken(const Basic_PushServiceToken& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_token().empty()) {
    token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_token(), 
      GetArena());
  }
  ::memcpy(&pushtype_, &from.pushtype_,
    static_cast<size_t>(reinterpret_cast<char*>(&ispassthrough_) -
    reinterpret_cast<char*>(&pushtype_)) + sizeof(ispassthrough_));
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Basic.PushServiceToken)
}

void Basic_PushServiceToken::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Basic_PushServiceToken_Im_2eproto.base);
  token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&pushtype_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&ispassthrough_) -
      reinterpret_cast<char*>(&pushtype_)) + sizeof(ispassthrough_));
}

Basic_PushServiceToken::~Basic_PushServiceToken() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Basic.PushServiceToken)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Basic_PushServiceToken::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Basic_PushServiceToken::ArenaDtor(void* object) {
  Basic_PushServiceToken* _this = reinterpret_cast< Basic_PushServiceToken* >(object);
  (void)_this;
}
void Basic_PushServiceToken::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Basic_PushServiceToken::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Basic_PushServiceToken& Basic_PushServiceToken::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Basic_PushServiceToken_Im_2eproto.base);
  return *internal_default_instance();
}


void Basic_PushServiceToken::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Basic.PushServiceToken)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  token_.ClearToEmpty();
  ::memset(&pushtype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ispassthrough_) -
      reinterpret_cast<char*>(&pushtype_)) + sizeof(ispassthrough_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Basic_PushServiceToken::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .AcFunDanmu.Im.Basic.PushServiceToken.PushType pushType = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_pushtype(static_cast<::AcFunDanmu::Im::Basic_PushServiceToken_PushType>(val));
        } else goto handle_unusual;
        continue;
      // bytes token = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool isPassThrough = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ispassthrough_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Basic_PushServiceToken::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Basic.PushServiceToken)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .AcFunDanmu.Im.Basic.PushServiceToken.PushType pushType = 1;
  if (this->pushtype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_pushtype(), target);
  }

  // bytes token = 2;
  if (this->token().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_token(), target);
  }

  // bool isPassThrough = 3;
  if (this->ispassthrough() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_ispassthrough(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Basic.PushServiceToken)
  return target;
}

size_t Basic_PushServiceToken::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Basic.PushServiceToken)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes token = 2;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_token());
  }

  // .AcFunDanmu.Im.Basic.PushServiceToken.PushType pushType = 1;
  if (this->pushtype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_pushtype());
  }

  // bool isPassThrough = 3;
  if (this->ispassthrough() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Basic_PushServiceToken::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Basic.PushServiceToken)
  GOOGLE_DCHECK_NE(&from, this);
  const Basic_PushServiceToken* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Basic_PushServiceToken>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Basic.PushServiceToken)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Basic.PushServiceToken)
    MergeFrom(*source);
  }
}

void Basic_PushServiceToken::MergeFrom(const Basic_PushServiceToken& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Basic.PushServiceToken)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {
    _internal_set_token(from._internal_token());
  }
  if (from.pushtype() != 0) {
    _internal_set_pushtype(from._internal_pushtype());
  }
  if (from.ispassthrough() != 0) {
    _internal_set_ispassthrough(from._internal_ispassthrough());
  }
}

void Basic_PushServiceToken::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Basic.PushServiceToken)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Basic_PushServiceToken::CopyFrom(const Basic_PushServiceToken& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Basic.PushServiceToken)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Basic_PushServiceToken::IsInitialized() const {
  return true;
}

void Basic_PushServiceToken::InternalSwap(Basic_PushServiceToken* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  token_.Swap(&other->token_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Basic_PushServiceToken, ispassthrough_)
      + sizeof(Basic_PushServiceToken::ispassthrough_)
      - PROTOBUF_FIELD_OFFSET(Basic_PushServiceToken, pushtype_)>(
          reinterpret_cast<char*>(&pushtype_),
          reinterpret_cast<char*>(&other->pushtype_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Basic_PushServiceToken::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Basic_SettingInfo::_Internal {
 public:
};

Basic_SettingInfo::Basic_SettingInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Basic.SettingInfo)
}
Basic_SettingInfo::Basic_SettingInfo(const Basic_SettingInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  locale_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_locale().empty()) {
    locale_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_locale(), 
      GetArena());
  }
  timezone_ = from.timezone_;
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Basic.SettingInfo)
}

void Basic_SettingInfo::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Basic_SettingInfo_Im_2eproto.base);
  locale_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  timezone_ = 0;
}

Basic_SettingInfo::~Basic_SettingInfo() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Basic.SettingInfo)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Basic_SettingInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  locale_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Basic_SettingInfo::ArenaDtor(void* object) {
  Basic_SettingInfo* _this = reinterpret_cast< Basic_SettingInfo* >(object);
  (void)_this;
}
void Basic_SettingInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Basic_SettingInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Basic_SettingInfo& Basic_SettingInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Basic_SettingInfo_Im_2eproto.base);
  return *internal_default_instance();
}


void Basic_SettingInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Basic.SettingInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  locale_.ClearToEmpty();
  timezone_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Basic_SettingInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string locale = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_locale();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.Basic.SettingInfo.locale"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // sint32 timezone = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          timezone_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Basic_SettingInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Basic.SettingInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string locale = 1;
  if (this->locale().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_locale().data(), static_cast<int>(this->_internal_locale().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.Basic.SettingInfo.locale");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_locale(), target);
  }

  // sint32 timezone = 2;
  if (this->timezone() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSInt32ToArray(2, this->_internal_timezone(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Basic.SettingInfo)
  return target;
}

size_t Basic_SettingInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Basic.SettingInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string locale = 1;
  if (this->locale().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_locale());
  }

  // sint32 timezone = 2;
  if (this->timezone() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SInt32Size(
        this->_internal_timezone());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Basic_SettingInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Basic.SettingInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const Basic_SettingInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Basic_SettingInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Basic.SettingInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Basic.SettingInfo)
    MergeFrom(*source);
  }
}

void Basic_SettingInfo::MergeFrom(const Basic_SettingInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Basic.SettingInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.locale().size() > 0) {
    _internal_set_locale(from._internal_locale());
  }
  if (from.timezone() != 0) {
    _internal_set_timezone(from._internal_timezone());
  }
}

void Basic_SettingInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Basic.SettingInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Basic_SettingInfo::CopyFrom(const Basic_SettingInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Basic.SettingInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Basic_SettingInfo::IsInitialized() const {
  return true;
}

void Basic_SettingInfo::InternalSwap(Basic_SettingInfo* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  locale_.Swap(&other->locale_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(timezone_, other->timezone_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Basic_SettingInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Basic_AppInfo::_Internal {
 public:
};

Basic_AppInfo::Basic_AppInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Basic.AppInfo)
}
Basic_AppInfo::Basic_AppInfo(const Basic_AppInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  appname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_appname().empty()) {
    appname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_appname(), 
      GetArena());
  }
  appversion_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_appversion().empty()) {
    appversion_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_appversion(), 
      GetArena());
  }
  appchannel_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_appchannel().empty()) {
    appchannel_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_appchannel(), 
      GetArena());
  }
  sdkversion_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_sdkversion().empty()) {
    sdkversion_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_sdkversion(), 
      GetArena());
  }
  extensioninfo_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_extensioninfo().empty()) {
    extensioninfo_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_extensioninfo(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Basic.AppInfo)
}

void Basic_AppInfo::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Basic_AppInfo_Im_2eproto.base);
  appname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  appversion_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  appchannel_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sdkversion_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  extensioninfo_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Basic_AppInfo::~Basic_AppInfo() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Basic.AppInfo)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Basic_AppInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  appname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  appversion_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  appchannel_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sdkversion_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  extensioninfo_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Basic_AppInfo::ArenaDtor(void* object) {
  Basic_AppInfo* _this = reinterpret_cast< Basic_AppInfo* >(object);
  (void)_this;
}
void Basic_AppInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Basic_AppInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Basic_AppInfo& Basic_AppInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Basic_AppInfo_Im_2eproto.base);
  return *internal_default_instance();
}


void Basic_AppInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Basic.AppInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  appname_.ClearToEmpty();
  appversion_.ClearToEmpty();
  appchannel_.ClearToEmpty();
  sdkversion_.ClearToEmpty();
  extensioninfo_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Basic_AppInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string appName = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_appname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.Basic.AppInfo.appName"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string appVersion = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_appversion();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.Basic.AppInfo.appVersion"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string appChannel = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_appchannel();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.Basic.AppInfo.appChannel"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string sdkVersion = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_sdkversion();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.Basic.AppInfo.sdkVersion"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string extensionInfo = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          auto str = _internal_mutable_extensioninfo();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.Basic.AppInfo.extensionInfo"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Basic_AppInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Basic.AppInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string appName = 1;
  if (this->appname().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_appname().data(), static_cast<int>(this->_internal_appname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.Basic.AppInfo.appName");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_appname(), target);
  }

  // string appVersion = 2;
  if (this->appversion().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_appversion().data(), static_cast<int>(this->_internal_appversion().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.Basic.AppInfo.appVersion");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_appversion(), target);
  }

  // string appChannel = 3;
  if (this->appchannel().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_appchannel().data(), static_cast<int>(this->_internal_appchannel().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.Basic.AppInfo.appChannel");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_appchannel(), target);
  }

  // string sdkVersion = 4;
  if (this->sdkversion().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_sdkversion().data(), static_cast<int>(this->_internal_sdkversion().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.Basic.AppInfo.sdkVersion");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_sdkversion(), target);
  }

  // string extensionInfo = 11;
  if (this->extensioninfo().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_extensioninfo().data(), static_cast<int>(this->_internal_extensioninfo().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.Basic.AppInfo.extensionInfo");
    target = stream->WriteStringMaybeAliased(
        11, this->_internal_extensioninfo(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Basic.AppInfo)
  return target;
}

size_t Basic_AppInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Basic.AppInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string appName = 1;
  if (this->appname().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_appname());
  }

  // string appVersion = 2;
  if (this->appversion().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_appversion());
  }

  // string appChannel = 3;
  if (this->appchannel().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_appchannel());
  }

  // string sdkVersion = 4;
  if (this->sdkversion().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_sdkversion());
  }

  // string extensionInfo = 11;
  if (this->extensioninfo().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_extensioninfo());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Basic_AppInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Basic.AppInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const Basic_AppInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Basic_AppInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Basic.AppInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Basic.AppInfo)
    MergeFrom(*source);
  }
}

void Basic_AppInfo::MergeFrom(const Basic_AppInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Basic.AppInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.appname().size() > 0) {
    _internal_set_appname(from._internal_appname());
  }
  if (from.appversion().size() > 0) {
    _internal_set_appversion(from._internal_appversion());
  }
  if (from.appchannel().size() > 0) {
    _internal_set_appchannel(from._internal_appchannel());
  }
  if (from.sdkversion().size() > 0) {
    _internal_set_sdkversion(from._internal_sdkversion());
  }
  if (from.extensioninfo().size() > 0) {
    _internal_set_extensioninfo(from._internal_extensioninfo());
  }
}

void Basic_AppInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Basic.AppInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Basic_AppInfo::CopyFrom(const Basic_AppInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Basic.AppInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Basic_AppInfo::IsInitialized() const {
  return true;
}

void Basic_AppInfo::InternalSwap(Basic_AppInfo* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  appname_.Swap(&other->appname_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  appversion_.Swap(&other->appversion_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  appchannel_.Swap(&other->appchannel_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  sdkversion_.Swap(&other->sdkversion_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  extensioninfo_.Swap(&other->extensioninfo_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata Basic_AppInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Basic_DeviceInfo::_Internal {
 public:
};

Basic_DeviceInfo::Basic_DeviceInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Basic.DeviceInfo)
}
Basic_DeviceInfo::Basic_DeviceInfo(const Basic_DeviceInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  osversion_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_osversion().empty()) {
    osversion_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_osversion(), 
      GetArena());
  }
  devicemodel_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_devicemodel().empty()) {
    devicemodel_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_devicemodel(), 
      GetArena());
  }
  imeimd5_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_imeimd5().empty()) {
    imeimd5_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_imeimd5(), 
      GetArena());
  }
  deviceid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_deviceid().empty()) {
    deviceid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_deviceid(), 
      GetArena());
  }
  softdid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_softdid().empty()) {
    softdid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_softdid(), 
      GetArena());
  }
  kwaidid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_kwaidid().empty()) {
    kwaidid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_kwaidid(), 
      GetArena());
  }
  manufacturer_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_manufacturer().empty()) {
    manufacturer_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_manufacturer(), 
      GetArena());
  }
  platformtype_ = from.platformtype_;
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Basic.DeviceInfo)
}

void Basic_DeviceInfo::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Basic_DeviceInfo_Im_2eproto.base);
  osversion_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  devicemodel_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  imeimd5_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  deviceid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  softdid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  kwaidid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  manufacturer_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  platformtype_ = 0;
}

Basic_DeviceInfo::~Basic_DeviceInfo() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Basic.DeviceInfo)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Basic_DeviceInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  osversion_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  devicemodel_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  imeimd5_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  deviceid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  softdid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  kwaidid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  manufacturer_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Basic_DeviceInfo::ArenaDtor(void* object) {
  Basic_DeviceInfo* _this = reinterpret_cast< Basic_DeviceInfo* >(object);
  (void)_this;
}
void Basic_DeviceInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Basic_DeviceInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Basic_DeviceInfo& Basic_DeviceInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Basic_DeviceInfo_Im_2eproto.base);
  return *internal_default_instance();
}


void Basic_DeviceInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Basic.DeviceInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  osversion_.ClearToEmpty();
  devicemodel_.ClearToEmpty();
  imeimd5_.ClearToEmpty();
  deviceid_.ClearToEmpty();
  softdid_.ClearToEmpty();
  kwaidid_.ClearToEmpty();
  manufacturer_.ClearToEmpty();
  platformtype_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Basic_DeviceInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .AcFunDanmu.Im.Basic.DeviceInfo.PlatformType platformType = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_platformtype(static_cast<::AcFunDanmu::Im::Basic_DeviceInfo_PlatformType>(val));
        } else goto handle_unusual;
        continue;
      // string osVersion = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_osversion();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.Basic.DeviceInfo.osVersion"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string deviceModel = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_devicemodel();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.Basic.DeviceInfo.deviceModel"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes imeiMd5 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_imeimd5();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string deviceId = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_deviceid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.Basic.DeviceInfo.deviceId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string softDid = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_softdid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.Basic.DeviceInfo.softDid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string kwaiDid = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_kwaidid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.Basic.DeviceInfo.kwaiDid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string manufacturer = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          auto str = _internal_mutable_manufacturer();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.Basic.DeviceInfo.manufacturer"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Basic_DeviceInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Basic.DeviceInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .AcFunDanmu.Im.Basic.DeviceInfo.PlatformType platformType = 1;
  if (this->platformtype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_platformtype(), target);
  }

  // string osVersion = 2;
  if (this->osversion().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_osversion().data(), static_cast<int>(this->_internal_osversion().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.Basic.DeviceInfo.osVersion");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_osversion(), target);
  }

  // string deviceModel = 3;
  if (this->devicemodel().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_devicemodel().data(), static_cast<int>(this->_internal_devicemodel().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.Basic.DeviceInfo.deviceModel");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_devicemodel(), target);
  }

  // bytes imeiMd5 = 4;
  if (this->imeimd5().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_imeimd5(), target);
  }

  // string deviceId = 5;
  if (this->deviceid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_deviceid().data(), static_cast<int>(this->_internal_deviceid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.Basic.DeviceInfo.deviceId");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_deviceid(), target);
  }

  // string softDid = 6;
  if (this->softdid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_softdid().data(), static_cast<int>(this->_internal_softdid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.Basic.DeviceInfo.softDid");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_softdid(), target);
  }

  // string kwaiDid = 7;
  if (this->kwaidid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_kwaidid().data(), static_cast<int>(this->_internal_kwaidid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.Basic.DeviceInfo.kwaiDid");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_kwaidid(), target);
  }

  // string manufacturer = 8;
  if (this->manufacturer().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_manufacturer().data(), static_cast<int>(this->_internal_manufacturer().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.Basic.DeviceInfo.manufacturer");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_manufacturer(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Basic.DeviceInfo)
  return target;
}

size_t Basic_DeviceInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Basic.DeviceInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string osVersion = 2;
  if (this->osversion().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_osversion());
  }

  // string deviceModel = 3;
  if (this->devicemodel().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_devicemodel());
  }

  // bytes imeiMd5 = 4;
  if (this->imeimd5().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_imeimd5());
  }

  // string deviceId = 5;
  if (this->deviceid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_deviceid());
  }

  // string softDid = 6;
  if (this->softdid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_softdid());
  }

  // string kwaiDid = 7;
  if (this->kwaidid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_kwaidid());
  }

  // string manufacturer = 8;
  if (this->manufacturer().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_manufacturer());
  }

  // .AcFunDanmu.Im.Basic.DeviceInfo.PlatformType platformType = 1;
  if (this->platformtype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_platformtype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Basic_DeviceInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Basic.DeviceInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const Basic_DeviceInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Basic_DeviceInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Basic.DeviceInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Basic.DeviceInfo)
    MergeFrom(*source);
  }
}

void Basic_DeviceInfo::MergeFrom(const Basic_DeviceInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Basic.DeviceInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.osversion().size() > 0) {
    _internal_set_osversion(from._internal_osversion());
  }
  if (from.devicemodel().size() > 0) {
    _internal_set_devicemodel(from._internal_devicemodel());
  }
  if (from.imeimd5().size() > 0) {
    _internal_set_imeimd5(from._internal_imeimd5());
  }
  if (from.deviceid().size() > 0) {
    _internal_set_deviceid(from._internal_deviceid());
  }
  if (from.softdid().size() > 0) {
    _internal_set_softdid(from._internal_softdid());
  }
  if (from.kwaidid().size() > 0) {
    _internal_set_kwaidid(from._internal_kwaidid());
  }
  if (from.manufacturer().size() > 0) {
    _internal_set_manufacturer(from._internal_manufacturer());
  }
  if (from.platformtype() != 0) {
    _internal_set_platformtype(from._internal_platformtype());
  }
}

void Basic_DeviceInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Basic.DeviceInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Basic_DeviceInfo::CopyFrom(const Basic_DeviceInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Basic.DeviceInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Basic_DeviceInfo::IsInitialized() const {
  return true;
}

void Basic_DeviceInfo::InternalSwap(Basic_DeviceInfo* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  osversion_.Swap(&other->osversion_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  devicemodel_.Swap(&other->devicemodel_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  imeimd5_.Swap(&other->imeimd5_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  deviceid_.Swap(&other->deviceid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  softdid_.Swap(&other->softdid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  kwaidid_.Swap(&other->kwaidid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  manufacturer_.Swap(&other->manufacturer_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(platformtype_, other->platformtype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Basic_DeviceInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Basic_EnvInfo::_Internal {
 public:
};

Basic_EnvInfo::Basic_EnvInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Basic.EnvInfo)
}
Basic_EnvInfo::Basic_EnvInfo(const Basic_EnvInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  appname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_appname().empty()) {
    appname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_appname(), 
      GetArena());
  }
  networktype_ = from.networktype_;
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Basic.EnvInfo)
}

void Basic_EnvInfo::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Basic_EnvInfo_Im_2eproto.base);
  appname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  networktype_ = 0;
}

Basic_EnvInfo::~Basic_EnvInfo() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Basic.EnvInfo)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Basic_EnvInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  appname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Basic_EnvInfo::ArenaDtor(void* object) {
  Basic_EnvInfo* _this = reinterpret_cast< Basic_EnvInfo* >(object);
  (void)_this;
}
void Basic_EnvInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Basic_EnvInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Basic_EnvInfo& Basic_EnvInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Basic_EnvInfo_Im_2eproto.base);
  return *internal_default_instance();
}


void Basic_EnvInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Basic.EnvInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  appname_.ClearToEmpty();
  networktype_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Basic_EnvInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .AcFunDanmu.Im.Basic.EnvInfo.NetworkType networkType = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_networktype(static_cast<::AcFunDanmu::Im::Basic_EnvInfo_NetworkType>(val));
        } else goto handle_unusual;
        continue;
      // bytes appName = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_appname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Basic_EnvInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Basic.EnvInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .AcFunDanmu.Im.Basic.EnvInfo.NetworkType networkType = 1;
  if (this->networktype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_networktype(), target);
  }

  // bytes appName = 2;
  if (this->appname().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_appname(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Basic.EnvInfo)
  return target;
}

size_t Basic_EnvInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Basic.EnvInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes appName = 2;
  if (this->appname().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_appname());
  }

  // .AcFunDanmu.Im.Basic.EnvInfo.NetworkType networkType = 1;
  if (this->networktype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_networktype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Basic_EnvInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Basic.EnvInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const Basic_EnvInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Basic_EnvInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Basic.EnvInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Basic.EnvInfo)
    MergeFrom(*source);
  }
}

void Basic_EnvInfo::MergeFrom(const Basic_EnvInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Basic.EnvInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.appname().size() > 0) {
    _internal_set_appname(from._internal_appname());
  }
  if (from.networktype() != 0) {
    _internal_set_networktype(from._internal_networktype());
  }
}

void Basic_EnvInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Basic.EnvInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Basic_EnvInfo::CopyFrom(const Basic_EnvInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Basic.EnvInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Basic_EnvInfo::IsInitialized() const {
  return true;
}

void Basic_EnvInfo::InternalSwap(Basic_EnvInfo* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  appname_.Swap(&other->appname_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(networktype_, other->networktype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Basic_EnvInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Basic_RequestBasicInfo::_Internal {
 public:
  static const ::AcFunDanmu::Im::Basic_AppInfo& appinfo(const Basic_RequestBasicInfo* msg);
  static const ::AcFunDanmu::Im::Basic_DeviceInfo& deviceinfo(const Basic_RequestBasicInfo* msg);
  static const ::AcFunDanmu::Im::Basic_EnvInfo& envinfo(const Basic_RequestBasicInfo* msg);
};

const ::AcFunDanmu::Im::Basic_AppInfo&
Basic_RequestBasicInfo::_Internal::appinfo(const Basic_RequestBasicInfo* msg) {
  return *msg->appinfo_;
}
const ::AcFunDanmu::Im::Basic_DeviceInfo&
Basic_RequestBasicInfo::_Internal::deviceinfo(const Basic_RequestBasicInfo* msg) {
  return *msg->deviceinfo_;
}
const ::AcFunDanmu::Im::Basic_EnvInfo&
Basic_RequestBasicInfo::_Internal::envinfo(const Basic_RequestBasicInfo* msg) {
  return *msg->envinfo_;
}
Basic_RequestBasicInfo::Basic_RequestBasicInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Basic.RequestBasicInfo)
}
Basic_RequestBasicInfo::Basic_RequestBasicInfo(const Basic_RequestBasicInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  deviceid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_deviceid().empty()) {
    deviceid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_deviceid(), 
      GetArena());
  }
  clientip_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_clientip().empty()) {
    clientip_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_clientip(), 
      GetArena());
  }
  appversion_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_appversion().empty()) {
    appversion_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_appversion(), 
      GetArena());
  }
  channel_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_channel().empty()) {
    channel_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_channel(), 
      GetArena());
  }
  location_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_location().empty()) {
    location_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_location(), 
      GetArena());
  }
  if (from._internal_has_appinfo()) {
    appinfo_ = new ::AcFunDanmu::Im::Basic_AppInfo(*from.appinfo_);
  } else {
    appinfo_ = nullptr;
  }
  if (from._internal_has_deviceinfo()) {
    deviceinfo_ = new ::AcFunDanmu::Im::Basic_DeviceInfo(*from.deviceinfo_);
  } else {
    deviceinfo_ = nullptr;
  }
  if (from._internal_has_envinfo()) {
    envinfo_ = new ::AcFunDanmu::Im::Basic_EnvInfo(*from.envinfo_);
  } else {
    envinfo_ = nullptr;
  }
  ::memcpy(&clienttype_, &from.clienttype_,
    static_cast<size_t>(reinterpret_cast<char*>(&clientport_) -
    reinterpret_cast<char*>(&clienttype_)) + sizeof(clientport_));
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Basic.RequestBasicInfo)
}

void Basic_RequestBasicInfo::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Basic_RequestBasicInfo_Im_2eproto.base);
  deviceid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  clientip_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  appversion_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  channel_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  location_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&appinfo_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&clientport_) -
      reinterpret_cast<char*>(&appinfo_)) + sizeof(clientport_));
}

Basic_RequestBasicInfo::~Basic_RequestBasicInfo() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Basic.RequestBasicInfo)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Basic_RequestBasicInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  deviceid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  clientip_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  appversion_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  channel_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  location_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete appinfo_;
  if (this != internal_default_instance()) delete deviceinfo_;
  if (this != internal_default_instance()) delete envinfo_;
}

void Basic_RequestBasicInfo::ArenaDtor(void* object) {
  Basic_RequestBasicInfo* _this = reinterpret_cast< Basic_RequestBasicInfo* >(object);
  (void)_this;
}
void Basic_RequestBasicInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Basic_RequestBasicInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Basic_RequestBasicInfo& Basic_RequestBasicInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Basic_RequestBasicInfo_Im_2eproto.base);
  return *internal_default_instance();
}


void Basic_RequestBasicInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Basic.RequestBasicInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  deviceid_.ClearToEmpty();
  clientip_.ClearToEmpty();
  appversion_.ClearToEmpty();
  channel_.ClearToEmpty();
  location_.ClearToEmpty();
  if (GetArena() == nullptr && appinfo_ != nullptr) {
    delete appinfo_;
  }
  appinfo_ = nullptr;
  if (GetArena() == nullptr && deviceinfo_ != nullptr) {
    delete deviceinfo_;
  }
  deviceinfo_ = nullptr;
  if (GetArena() == nullptr && envinfo_ != nullptr) {
    delete envinfo_;
  }
  envinfo_ = nullptr;
  ::memset(&clienttype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&clientport_) -
      reinterpret_cast<char*>(&clienttype_)) + sizeof(clientport_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Basic_RequestBasicInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .AcFunDanmu.Im.Basic.DeviceInfo.PlatformType clientType = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_clienttype(static_cast<::AcFunDanmu::Im::Basic_DeviceInfo_PlatformType>(val));
        } else goto handle_unusual;
        continue;
      // string deviceId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_deviceid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.Basic.RequestBasicInfo.deviceId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string clientIp = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_clientip();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.Basic.RequestBasicInfo.clientIp"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string appVersion = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_appversion();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.Basic.RequestBasicInfo.appVersion"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string channel = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_channel();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.Basic.RequestBasicInfo.channel"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .AcFunDanmu.Im.Basic.AppInfo appInfo = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_appinfo(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .AcFunDanmu.Im.Basic.DeviceInfo deviceInfo = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_deviceinfo(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .AcFunDanmu.Im.Basic.EnvInfo envInfo = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_envinfo(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 clientPort = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          clientport_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string location = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          auto str = _internal_mutable_location();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.Basic.RequestBasicInfo.location"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Basic_RequestBasicInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Basic.RequestBasicInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .AcFunDanmu.Im.Basic.DeviceInfo.PlatformType clientType = 1;
  if (this->clienttype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_clienttype(), target);
  }

  // string deviceId = 2;
  if (this->deviceid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_deviceid().data(), static_cast<int>(this->_internal_deviceid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.Basic.RequestBasicInfo.deviceId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_deviceid(), target);
  }

  // string clientIp = 3;
  if (this->clientip().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_clientip().data(), static_cast<int>(this->_internal_clientip().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.Basic.RequestBasicInfo.clientIp");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_clientip(), target);
  }

  // string appVersion = 4;
  if (this->appversion().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_appversion().data(), static_cast<int>(this->_internal_appversion().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.Basic.RequestBasicInfo.appVersion");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_appversion(), target);
  }

  // string channel = 5;
  if (this->channel().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_channel().data(), static_cast<int>(this->_internal_channel().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.Basic.RequestBasicInfo.channel");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_channel(), target);
  }

  // .AcFunDanmu.Im.Basic.AppInfo appInfo = 6;
  if (this->has_appinfo()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::appinfo(this), target, stream);
  }

  // .AcFunDanmu.Im.Basic.DeviceInfo deviceInfo = 7;
  if (this->has_deviceinfo()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        7, _Internal::deviceinfo(this), target, stream);
  }

  // .AcFunDanmu.Im.Basic.EnvInfo envInfo = 8;
  if (this->has_envinfo()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        8, _Internal::envinfo(this), target, stream);
  }

  // int32 clientPort = 9;
  if (this->clientport() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(9, this->_internal_clientport(), target);
  }

  // string location = 10;
  if (this->location().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_location().data(), static_cast<int>(this->_internal_location().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.Basic.RequestBasicInfo.location");
    target = stream->WriteStringMaybeAliased(
        10, this->_internal_location(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Basic.RequestBasicInfo)
  return target;
}

size_t Basic_RequestBasicInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Basic.RequestBasicInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string deviceId = 2;
  if (this->deviceid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_deviceid());
  }

  // string clientIp = 3;
  if (this->clientip().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_clientip());
  }

  // string appVersion = 4;
  if (this->appversion().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_appversion());
  }

  // string channel = 5;
  if (this->channel().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_channel());
  }

  // string location = 10;
  if (this->location().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_location());
  }

  // .AcFunDanmu.Im.Basic.AppInfo appInfo = 6;
  if (this->has_appinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *appinfo_);
  }

  // .AcFunDanmu.Im.Basic.DeviceInfo deviceInfo = 7;
  if (this->has_deviceinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *deviceinfo_);
  }

  // .AcFunDanmu.Im.Basic.EnvInfo envInfo = 8;
  if (this->has_envinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *envinfo_);
  }

  // .AcFunDanmu.Im.Basic.DeviceInfo.PlatformType clientType = 1;
  if (this->clienttype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_clienttype());
  }

  // int32 clientPort = 9;
  if (this->clientport() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_clientport());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Basic_RequestBasicInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Basic.RequestBasicInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const Basic_RequestBasicInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Basic_RequestBasicInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Basic.RequestBasicInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Basic.RequestBasicInfo)
    MergeFrom(*source);
  }
}

void Basic_RequestBasicInfo::MergeFrom(const Basic_RequestBasicInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Basic.RequestBasicInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.deviceid().size() > 0) {
    _internal_set_deviceid(from._internal_deviceid());
  }
  if (from.clientip().size() > 0) {
    _internal_set_clientip(from._internal_clientip());
  }
  if (from.appversion().size() > 0) {
    _internal_set_appversion(from._internal_appversion());
  }
  if (from.channel().size() > 0) {
    _internal_set_channel(from._internal_channel());
  }
  if (from.location().size() > 0) {
    _internal_set_location(from._internal_location());
  }
  if (from.has_appinfo()) {
    _internal_mutable_appinfo()->::AcFunDanmu::Im::Basic_AppInfo::MergeFrom(from._internal_appinfo());
  }
  if (from.has_deviceinfo()) {
    _internal_mutable_deviceinfo()->::AcFunDanmu::Im::Basic_DeviceInfo::MergeFrom(from._internal_deviceinfo());
  }
  if (from.has_envinfo()) {
    _internal_mutable_envinfo()->::AcFunDanmu::Im::Basic_EnvInfo::MergeFrom(from._internal_envinfo());
  }
  if (from.clienttype() != 0) {
    _internal_set_clienttype(from._internal_clienttype());
  }
  if (from.clientport() != 0) {
    _internal_set_clientport(from._internal_clientport());
  }
}

void Basic_RequestBasicInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Basic.RequestBasicInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Basic_RequestBasicInfo::CopyFrom(const Basic_RequestBasicInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Basic.RequestBasicInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Basic_RequestBasicInfo::IsInitialized() const {
  return true;
}

void Basic_RequestBasicInfo::InternalSwap(Basic_RequestBasicInfo* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  deviceid_.Swap(&other->deviceid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  clientip_.Swap(&other->clientip_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  appversion_.Swap(&other->appversion_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  channel_.Swap(&other->channel_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  location_.Swap(&other->location_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Basic_RequestBasicInfo, clientport_)
      + sizeof(Basic_RequestBasicInfo::clientport_)
      - PROTOBUF_FIELD_OFFSET(Basic_RequestBasicInfo, appinfo_)>(
          reinterpret_cast<char*>(&appinfo_),
          reinterpret_cast<char*>(&other->appinfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Basic_RequestBasicInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Basic_SyncCookie::_Internal {
 public:
};

Basic_SyncCookie::Basic_SyncCookie(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Basic.SyncCookie)
}
Basic_SyncCookie::Basic_SyncCookie(const Basic_SyncCookie& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  syncoffset_ = from.syncoffset_;
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Basic.SyncCookie)
}

void Basic_SyncCookie::SharedCtor() {
  syncoffset_ = PROTOBUF_LONGLONG(0);
}

Basic_SyncCookie::~Basic_SyncCookie() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Basic.SyncCookie)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Basic_SyncCookie::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Basic_SyncCookie::ArenaDtor(void* object) {
  Basic_SyncCookie* _this = reinterpret_cast< Basic_SyncCookie* >(object);
  (void)_this;
}
void Basic_SyncCookie::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Basic_SyncCookie::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Basic_SyncCookie& Basic_SyncCookie::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Basic_SyncCookie_Im_2eproto.base);
  return *internal_default_instance();
}


void Basic_SyncCookie::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Basic.SyncCookie)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  syncoffset_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Basic_SyncCookie::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 syncOffset = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          syncoffset_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Basic_SyncCookie::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Basic.SyncCookie)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 syncOffset = 1;
  if (this->syncoffset() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_syncoffset(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Basic.SyncCookie)
  return target;
}

size_t Basic_SyncCookie::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Basic.SyncCookie)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 syncOffset = 1;
  if (this->syncoffset() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_syncoffset());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Basic_SyncCookie::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Basic.SyncCookie)
  GOOGLE_DCHECK_NE(&from, this);
  const Basic_SyncCookie* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Basic_SyncCookie>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Basic.SyncCookie)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Basic.SyncCookie)
    MergeFrom(*source);
  }
}

void Basic_SyncCookie::MergeFrom(const Basic_SyncCookie& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Basic.SyncCookie)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.syncoffset() != 0) {
    _internal_set_syncoffset(from._internal_syncoffset());
  }
}

void Basic_SyncCookie::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Basic.SyncCookie)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Basic_SyncCookie::CopyFrom(const Basic_SyncCookie& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Basic.SyncCookie)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Basic_SyncCookie::IsInitialized() const {
  return true;
}

void Basic_SyncCookie::InternalSwap(Basic_SyncCookie* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(syncoffset_, other->syncoffset_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Basic_SyncCookie::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Basic_I18nCopyWriting::_Internal {
 public:
};

Basic_I18nCopyWriting::Basic_I18nCopyWriting(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  formatparam_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Basic.I18nCopyWriting)
}
Basic_I18nCopyWriting::Basic_I18nCopyWriting(const Basic_I18nCopyWriting& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      formatparam_(from.formatparam_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  formatkey_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_formatkey().empty()) {
    formatkey_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_formatkey(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Basic.I18nCopyWriting)
}

void Basic_I18nCopyWriting::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Basic_I18nCopyWriting_Im_2eproto.base);
  formatkey_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Basic_I18nCopyWriting::~Basic_I18nCopyWriting() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Basic.I18nCopyWriting)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Basic_I18nCopyWriting::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  formatkey_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Basic_I18nCopyWriting::ArenaDtor(void* object) {
  Basic_I18nCopyWriting* _this = reinterpret_cast< Basic_I18nCopyWriting* >(object);
  (void)_this;
}
void Basic_I18nCopyWriting::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Basic_I18nCopyWriting::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Basic_I18nCopyWriting& Basic_I18nCopyWriting::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Basic_I18nCopyWriting_Im_2eproto.base);
  return *internal_default_instance();
}


void Basic_I18nCopyWriting::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Basic.I18nCopyWriting)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  formatparam_.Clear();
  formatkey_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Basic_I18nCopyWriting::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string formatKey = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_formatkey();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.Basic.I18nCopyWriting.formatKey"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string formatParam = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_formatparam();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.Basic.I18nCopyWriting.formatParam"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Basic_I18nCopyWriting::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Basic.I18nCopyWriting)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string formatKey = 1;
  if (this->formatkey().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_formatkey().data(), static_cast<int>(this->_internal_formatkey().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.Basic.I18nCopyWriting.formatKey");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_formatkey(), target);
  }

  // repeated string formatParam = 2;
  for (int i = 0, n = this->_internal_formatparam_size(); i < n; i++) {
    const auto& s = this->_internal_formatparam(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.Basic.I18nCopyWriting.formatParam");
    target = stream->WriteString(2, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Basic.I18nCopyWriting)
  return target;
}

size_t Basic_I18nCopyWriting::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Basic.I18nCopyWriting)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string formatParam = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(formatparam_.size());
  for (int i = 0, n = formatparam_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      formatparam_.Get(i));
  }

  // string formatKey = 1;
  if (this->formatkey().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_formatkey());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Basic_I18nCopyWriting::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Basic.I18nCopyWriting)
  GOOGLE_DCHECK_NE(&from, this);
  const Basic_I18nCopyWriting* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Basic_I18nCopyWriting>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Basic.I18nCopyWriting)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Basic.I18nCopyWriting)
    MergeFrom(*source);
  }
}

void Basic_I18nCopyWriting::MergeFrom(const Basic_I18nCopyWriting& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Basic.I18nCopyWriting)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  formatparam_.MergeFrom(from.formatparam_);
  if (from.formatkey().size() > 0) {
    _internal_set_formatkey(from._internal_formatkey());
  }
}

void Basic_I18nCopyWriting::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Basic.I18nCopyWriting)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Basic_I18nCopyWriting::CopyFrom(const Basic_I18nCopyWriting& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Basic.I18nCopyWriting)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Basic_I18nCopyWriting::IsInitialized() const {
  return true;
}

void Basic_I18nCopyWriting::InternalSwap(Basic_I18nCopyWriting* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  formatparam_.InternalSwap(&other->formatparam_);
  formatkey_.Swap(&other->formatkey_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata Basic_I18nCopyWriting::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Basic_SdkOption::_Internal {
 public:
};

Basic_SdkOption::Basic_SdkOption(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Basic.SdkOption)
}
Basic_SdkOption::Basic_SdkOption(const Basic_SdkOption& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  reportsecurity_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_reportsecurity().empty()) {
    reportsecurity_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_reportsecurity(), 
      GetArena());
  }
  ::memcpy(&reportintervalseconds_, &from.reportintervalseconds_,
    static_cast<size_t>(reinterpret_cast<char*>(&lz4compressionthresholdbytes_) -
    reinterpret_cast<char*>(&reportintervalseconds_)) + sizeof(lz4compressionthresholdbytes_));
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Basic.SdkOption)
}

void Basic_SdkOption::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Basic_SdkOption_Im_2eproto.base);
  reportsecurity_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&reportintervalseconds_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&lz4compressionthresholdbytes_) -
      reinterpret_cast<char*>(&reportintervalseconds_)) + sizeof(lz4compressionthresholdbytes_));
}

Basic_SdkOption::~Basic_SdkOption() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Basic.SdkOption)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Basic_SdkOption::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  reportsecurity_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Basic_SdkOption::ArenaDtor(void* object) {
  Basic_SdkOption* _this = reinterpret_cast< Basic_SdkOption* >(object);
  (void)_this;
}
void Basic_SdkOption::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Basic_SdkOption::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Basic_SdkOption& Basic_SdkOption::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Basic_SdkOption_Im_2eproto.base);
  return *internal_default_instance();
}


void Basic_SdkOption::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Basic.SdkOption)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reportsecurity_.ClearToEmpty();
  ::memset(&reportintervalseconds_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&lz4compressionthresholdbytes_) -
      reinterpret_cast<char*>(&reportintervalseconds_)) + sizeof(lz4compressionthresholdbytes_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Basic_SdkOption::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 reportIntervalSeconds = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          reportintervalseconds_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string reportSecurity = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_reportsecurity();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.Basic.SdkOption.reportSecurity"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 lz4CompressionThresholdBytes = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          lz4compressionthresholdbytes_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Basic_SdkOption::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Basic.SdkOption)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 reportIntervalSeconds = 1;
  if (this->reportintervalseconds() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_reportintervalseconds(), target);
  }

  // string reportSecurity = 2;
  if (this->reportsecurity().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_reportsecurity().data(), static_cast<int>(this->_internal_reportsecurity().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.Basic.SdkOption.reportSecurity");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_reportsecurity(), target);
  }

  // int32 lz4CompressionThresholdBytes = 3;
  if (this->lz4compressionthresholdbytes() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_lz4compressionthresholdbytes(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Basic.SdkOption)
  return target;
}

size_t Basic_SdkOption::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Basic.SdkOption)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string reportSecurity = 2;
  if (this->reportsecurity().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_reportsecurity());
  }

  // int32 reportIntervalSeconds = 1;
  if (this->reportintervalseconds() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_reportintervalseconds());
  }

  // int32 lz4CompressionThresholdBytes = 3;
  if (this->lz4compressionthresholdbytes() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_lz4compressionthresholdbytes());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Basic_SdkOption::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Basic.SdkOption)
  GOOGLE_DCHECK_NE(&from, this);
  const Basic_SdkOption* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Basic_SdkOption>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Basic.SdkOption)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Basic.SdkOption)
    MergeFrom(*source);
  }
}

void Basic_SdkOption::MergeFrom(const Basic_SdkOption& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Basic.SdkOption)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.reportsecurity().size() > 0) {
    _internal_set_reportsecurity(from._internal_reportsecurity());
  }
  if (from.reportintervalseconds() != 0) {
    _internal_set_reportintervalseconds(from._internal_reportintervalseconds());
  }
  if (from.lz4compressionthresholdbytes() != 0) {
    _internal_set_lz4compressionthresholdbytes(from._internal_lz4compressionthresholdbytes());
  }
}

void Basic_SdkOption::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Basic.SdkOption)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Basic_SdkOption::CopyFrom(const Basic_SdkOption& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Basic.SdkOption)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Basic_SdkOption::IsInitialized() const {
  return true;
}

void Basic_SdkOption::InternalSwap(Basic_SdkOption* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  reportsecurity_.Swap(&other->reportsecurity_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Basic_SdkOption, lz4compressionthresholdbytes_)
      + sizeof(Basic_SdkOption::lz4compressionthresholdbytes_)
      - PROTOBUF_FIELD_OFFSET(Basic_SdkOption, reportintervalseconds_)>(
          reinterpret_cast<char*>(&reportintervalseconds_),
          reinterpret_cast<char*>(&other->reportintervalseconds_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Basic_SdkOption::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

Basic_LocaleMessage_ErrorMessageEntry_DoNotUse::Basic_LocaleMessage_ErrorMessageEntry_DoNotUse() {}
Basic_LocaleMessage_ErrorMessageEntry_DoNotUse::Basic_LocaleMessage_ErrorMessageEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void Basic_LocaleMessage_ErrorMessageEntry_DoNotUse::MergeFrom(const Basic_LocaleMessage_ErrorMessageEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata Basic_LocaleMessage_ErrorMessageEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void Basic_LocaleMessage_ErrorMessageEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

class Basic_LocaleMessage::_Internal {
 public:
};

Basic_LocaleMessage::Basic_LocaleMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  errormessage_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Basic.LocaleMessage)
}
Basic_LocaleMessage::Basic_LocaleMessage(const Basic_LocaleMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  errormessage_.MergeFrom(from.errormessage_);
  locale_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_locale().empty()) {
    locale_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_locale(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Basic.LocaleMessage)
}

void Basic_LocaleMessage::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Basic_LocaleMessage_Im_2eproto.base);
  locale_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Basic_LocaleMessage::~Basic_LocaleMessage() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Basic.LocaleMessage)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Basic_LocaleMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  locale_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Basic_LocaleMessage::ArenaDtor(void* object) {
  Basic_LocaleMessage* _this = reinterpret_cast< Basic_LocaleMessage* >(object);
  (void)_this;
}
void Basic_LocaleMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Basic_LocaleMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Basic_LocaleMessage& Basic_LocaleMessage::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Basic_LocaleMessage_Im_2eproto.base);
  return *internal_default_instance();
}


void Basic_LocaleMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Basic.LocaleMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  errormessage_.Clear();
  locale_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Basic_LocaleMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string locale = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_locale();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.Basic.LocaleMessage.locale"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<int32, string> errorMessage = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&errormessage_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Basic_LocaleMessage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Basic.LocaleMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string locale = 1;
  if (this->locale().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_locale().data(), static_cast<int>(this->_internal_locale().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.Basic.LocaleMessage.locale");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_locale(), target);
  }

  // map<int32, string> errorMessage = 2;
  if (!this->_internal_errormessage().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, std::string >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::int32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "AcFunDanmu.Im.Basic.LocaleMessage.ErrorMessageEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_errormessage().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_errormessage().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, std::string >::const_iterator
          it = this->_internal_errormessage().begin();
          it != this->_internal_errormessage().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = Basic_LocaleMessage_ErrorMessageEntry_DoNotUse::Funcs::InternalSerialize(2, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)].second));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, std::string >::const_iterator
          it = this->_internal_errormessage().begin();
          it != this->_internal_errormessage().end(); ++it) {
        target = Basic_LocaleMessage_ErrorMessageEntry_DoNotUse::Funcs::InternalSerialize(2, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Basic.LocaleMessage)
  return target;
}

size_t Basic_LocaleMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Basic.LocaleMessage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<int32, string> errorMessage = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_errormessage_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, std::string >::const_iterator
      it = this->_internal_errormessage().begin();
      it != this->_internal_errormessage().end(); ++it) {
    total_size += Basic_LocaleMessage_ErrorMessageEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string locale = 1;
  if (this->locale().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_locale());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Basic_LocaleMessage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Basic.LocaleMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const Basic_LocaleMessage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Basic_LocaleMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Basic.LocaleMessage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Basic.LocaleMessage)
    MergeFrom(*source);
  }
}

void Basic_LocaleMessage::MergeFrom(const Basic_LocaleMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Basic.LocaleMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  errormessage_.MergeFrom(from.errormessage_);
  if (from.locale().size() > 0) {
    _internal_set_locale(from._internal_locale());
  }
}

void Basic_LocaleMessage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Basic.LocaleMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Basic_LocaleMessage::CopyFrom(const Basic_LocaleMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Basic.LocaleMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Basic_LocaleMessage::IsInitialized() const {
  return true;
}

void Basic_LocaleMessage::InternalSwap(Basic_LocaleMessage* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  errormessage_.Swap(&other->errormessage_);
  locale_.Swap(&other->locale_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata Basic_LocaleMessage::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Basic_ErrorMessage::_Internal {
 public:
};

Basic_ErrorMessage::Basic_ErrorMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  localemessages_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Basic.ErrorMessage)
}
Basic_ErrorMessage::Basic_ErrorMessage(const Basic_ErrorMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      localemessages_(from.localemessages_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Basic.ErrorMessage)
}

void Basic_ErrorMessage::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Basic_ErrorMessage_Im_2eproto.base);
}

Basic_ErrorMessage::~Basic_ErrorMessage() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Basic.ErrorMessage)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Basic_ErrorMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Basic_ErrorMessage::ArenaDtor(void* object) {
  Basic_ErrorMessage* _this = reinterpret_cast< Basic_ErrorMessage* >(object);
  (void)_this;
}
void Basic_ErrorMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Basic_ErrorMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Basic_ErrorMessage& Basic_ErrorMessage::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Basic_ErrorMessage_Im_2eproto.base);
  return *internal_default_instance();
}


void Basic_ErrorMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Basic.ErrorMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  localemessages_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Basic_ErrorMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .AcFunDanmu.Im.Basic.LocaleMessage localeMessages = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_localemessages(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Basic_ErrorMessage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Basic.ErrorMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .AcFunDanmu.Im.Basic.LocaleMessage localeMessages = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_localemessages_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_localemessages(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Basic.ErrorMessage)
  return target;
}

size_t Basic_ErrorMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Basic.ErrorMessage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .AcFunDanmu.Im.Basic.LocaleMessage localeMessages = 1;
  total_size += 1UL * this->_internal_localemessages_size();
  for (const auto& msg : this->localemessages_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Basic_ErrorMessage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Basic.ErrorMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const Basic_ErrorMessage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Basic_ErrorMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Basic.ErrorMessage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Basic.ErrorMessage)
    MergeFrom(*source);
  }
}

void Basic_ErrorMessage::MergeFrom(const Basic_ErrorMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Basic.ErrorMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  localemessages_.MergeFrom(from.localemessages_);
}

void Basic_ErrorMessage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Basic.ErrorMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Basic_ErrorMessage::CopyFrom(const Basic_ErrorMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Basic.ErrorMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Basic_ErrorMessage::IsInitialized() const {
  return true;
}

void Basic_ErrorMessage::InternalSwap(Basic_ErrorMessage* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  localemessages_.InternalSwap(&other->localemessages_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Basic_ErrorMessage::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Basic::_Internal {
 public:
};

Basic::Basic(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Basic)
}
Basic::Basic(const Basic& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Basic)
}

void Basic::SharedCtor() {
}

Basic::~Basic() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Basic)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Basic::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Basic::ArenaDtor(void* object) {
  Basic* _this = reinterpret_cast< Basic* >(object);
  (void)_this;
}
void Basic::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Basic::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Basic& Basic::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Basic_Im_2eproto.base);
  return *internal_default_instance();
}


void Basic::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Basic)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Basic::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Basic::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Basic)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Basic)
  return target;
}

size_t Basic::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Basic)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Basic::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Basic)
  GOOGLE_DCHECK_NE(&from, this);
  const Basic* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Basic>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Basic)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Basic)
    MergeFrom(*source);
  }
}

void Basic::MergeFrom(const Basic& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Basic)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Basic::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Basic)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Basic::CopyFrom(const Basic& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Basic)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Basic::IsInitialized() const {
  return true;
}

void Basic::InternalSwap(Basic* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Basic::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ImMessage_Message::_Internal {
 public:
  static const ::AcFunDanmu::Im::Basic_User& fromuser(const ImMessage_Message* msg);
  static const ::AcFunDanmu::Im::Basic_User& touser(const ImMessage_Message* msg);
  static const ::AcFunDanmu::Im::ImMessage_Reminder& reminder(const ImMessage_Message* msg);
};

const ::AcFunDanmu::Im::Basic_User&
ImMessage_Message::_Internal::fromuser(const ImMessage_Message* msg) {
  return *msg->fromuser_;
}
const ::AcFunDanmu::Im::Basic_User&
ImMessage_Message::_Internal::touser(const ImMessage_Message* msg) {
  return *msg->touser_;
}
const ::AcFunDanmu::Im::ImMessage_Reminder&
ImMessage_Message::_Internal::reminder(const ImMessage_Message* msg) {
  return *msg->reminder_;
}
ImMessage_Message::ImMessage_Message(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  receivers_(arena),
  excludereceivers_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.ImMessage.Message)
}
ImMessage_Message::ImMessage_Message(const ImMessage_Message& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      receivers_(from.receivers_),
      excludereceivers_(from.excludereceivers_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  title_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_title().empty()) {
    title_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_title(), 
      GetArena());
  }
  content_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_content().empty()) {
    content_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_content(), 
      GetArena());
  }
  buckuptips_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_buckuptips().empty()) {
    buckuptips_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_buckuptips(), 
      GetArena());
  }
  strtargetid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_strtargetid().empty()) {
    strtargetid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_strtargetid(), 
      GetArena());
  }
  extra_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_extra().empty()) {
    extra_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_extra(), 
      GetArena());
  }
  if (from._internal_has_fromuser()) {
    fromuser_ = new ::AcFunDanmu::Im::Basic_User(*from.fromuser_);
  } else {
    fromuser_ = nullptr;
  }
  if (from._internal_has_touser()) {
    touser_ = new ::AcFunDanmu::Im::Basic_User(*from.touser_);
  } else {
    touser_ = nullptr;
  }
  if (from._internal_has_reminder()) {
    reminder_ = new ::AcFunDanmu::Im::ImMessage_Reminder(*from.reminder_);
  } else {
    reminder_ = nullptr;
  }
  ::memcpy(&seqid_, &from.seqid_,
    static_cast<size_t>(reinterpret_cast<char*>(&receiptrequired_) -
    reinterpret_cast<char*>(&seqid_)) + sizeof(receiptrequired_));
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.ImMessage.Message)
}

void ImMessage_Message::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ImMessage_Message_Im_2eproto.base);
  title_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  content_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  buckuptips_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  strtargetid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  extra_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&fromuser_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&receiptrequired_) -
      reinterpret_cast<char*>(&fromuser_)) + sizeof(receiptrequired_));
}

ImMessage_Message::~ImMessage_Message() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.ImMessage.Message)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ImMessage_Message::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  title_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  content_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  buckuptips_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  strtargetid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  extra_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete fromuser_;
  if (this != internal_default_instance()) delete touser_;
  if (this != internal_default_instance()) delete reminder_;
}

void ImMessage_Message::ArenaDtor(void* object) {
  ImMessage_Message* _this = reinterpret_cast< ImMessage_Message* >(object);
  (void)_this;
}
void ImMessage_Message::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ImMessage_Message::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ImMessage_Message& ImMessage_Message::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ImMessage_Message_Im_2eproto.base);
  return *internal_default_instance();
}


void ImMessage_Message::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.ImMessage.Message)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  receivers_.Clear();
  excludereceivers_.Clear();
  title_.ClearToEmpty();
  content_.ClearToEmpty();
  buckuptips_.ClearToEmpty();
  strtargetid_.ClearToEmpty();
  extra_.ClearToEmpty();
  if (GetArena() == nullptr && fromuser_ != nullptr) {
    delete fromuser_;
  }
  fromuser_ = nullptr;
  if (GetArena() == nullptr && touser_ != nullptr) {
    delete touser_;
  }
  touser_ = nullptr;
  if (GetArena() == nullptr && reminder_ != nullptr) {
    delete reminder_;
  }
  reminder_ = nullptr;
  ::memset(&seqid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&receiptrequired_) -
      reinterpret_cast<char*>(&seqid_)) + sizeof(receiptrequired_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ImMessage_Message::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 seqId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          seqid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 clientSeqId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          clientseqid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 timestampMs = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          timestampms_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .AcFunDanmu.Im.Basic.User fromUser = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_fromuser(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 targetId = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          targetid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .AcFunDanmu.Im.Basic.User toUser = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_touser(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string title = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_title();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.ImMessage.Message.title"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 contentType = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          contenttype_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes content = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          auto str = _internal_mutable_content();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string buckupTips = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          auto str = _internal_mutable_buckuptips();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.ImMessage.Message.buckupTips"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .AcFunDanmu.Im.Basic.User receivers = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_receivers(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<90>(ptr));
        } else goto handle_unusual;
        continue;
      // bool notContentUnread = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          notcontentunread_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 sessionPriority = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 104)) {
          sessionpriority_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 sessionCategoryId = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 112)) {
          sessioncategoryid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 sessionAccountType = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 120)) {
          sessionaccounttype_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool notAutoCreateSession = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 128)) {
          notautocreatesession_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 userRelationship = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 136)) {
          userrelationship_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string strTargetId = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 146)) {
          auto str = _internal_mutable_strtargetid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.ImMessage.Message.strTargetId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .AcFunDanmu.Im.Basic.User excludeReceivers = 19;
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 154)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_excludereceivers(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<154>(ptr));
        } else goto handle_unusual;
        continue;
      // bool markDelte = 20;
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 160)) {
          markdelte_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .AcFunDanmu.Im.ImMessage.Reminder reminder = 21;
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 170)) {
          ptr = ctx->ParseMessage(_internal_mutable_reminder(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes extra = 22;
      case 22:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 178)) {
          auto str = _internal_mutable_extra();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool receiptRequired = 23;
      case 23:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 184)) {
          receiptrequired_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ImMessage_Message::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.ImMessage.Message)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 seqId = 1;
  if (this->seqid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_seqid(), target);
  }

  // int64 clientSeqId = 2;
  if (this->clientseqid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_clientseqid(), target);
  }

  // int64 timestampMs = 3;
  if (this->timestampms() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_timestampms(), target);
  }

  // .AcFunDanmu.Im.Basic.User fromUser = 4;
  if (this->has_fromuser()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::fromuser(this), target, stream);
  }

  // int64 targetId = 5;
  if (this->targetid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(5, this->_internal_targetid(), target);
  }

  // .AcFunDanmu.Im.Basic.User toUser = 6;
  if (this->has_touser()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::touser(this), target, stream);
  }

  // string title = 7;
  if (this->title().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_title().data(), static_cast<int>(this->_internal_title().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.ImMessage.Message.title");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_title(), target);
  }

  // int32 contentType = 8;
  if (this->contenttype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(8, this->_internal_contenttype(), target);
  }

  // bytes content = 9;
  if (this->content().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        9, this->_internal_content(), target);
  }

  // string buckupTips = 10;
  if (this->buckuptips().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_buckuptips().data(), static_cast<int>(this->_internal_buckuptips().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.ImMessage.Message.buckupTips");
    target = stream->WriteStringMaybeAliased(
        10, this->_internal_buckuptips(), target);
  }

  // repeated .AcFunDanmu.Im.Basic.User receivers = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_receivers_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(11, this->_internal_receivers(i), target, stream);
  }

  // bool notContentUnread = 12;
  if (this->notcontentunread() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(12, this->_internal_notcontentunread(), target);
  }

  // int32 sessionPriority = 13;
  if (this->sessionpriority() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(13, this->_internal_sessionpriority(), target);
  }

  // int32 sessionCategoryId = 14;
  if (this->sessioncategoryid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(14, this->_internal_sessioncategoryid(), target);
  }

  // int32 sessionAccountType = 15;
  if (this->sessionaccounttype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(15, this->_internal_sessionaccounttype(), target);
  }

  // bool notAutoCreateSession = 16;
  if (this->notautocreatesession() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(16, this->_internal_notautocreatesession(), target);
  }

  // int32 userRelationship = 17;
  if (this->userrelationship() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(17, this->_internal_userrelationship(), target);
  }

  // string strTargetId = 18;
  if (this->strtargetid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_strtargetid().data(), static_cast<int>(this->_internal_strtargetid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.ImMessage.Message.strTargetId");
    target = stream->WriteStringMaybeAliased(
        18, this->_internal_strtargetid(), target);
  }

  // repeated .AcFunDanmu.Im.Basic.User excludeReceivers = 19;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_excludereceivers_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(19, this->_internal_excludereceivers(i), target, stream);
  }

  // bool markDelte = 20;
  if (this->markdelte() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(20, this->_internal_markdelte(), target);
  }

  // .AcFunDanmu.Im.ImMessage.Reminder reminder = 21;
  if (this->has_reminder()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        21, _Internal::reminder(this), target, stream);
  }

  // bytes extra = 22;
  if (this->extra().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        22, this->_internal_extra(), target);
  }

  // bool receiptRequired = 23;
  if (this->receiptrequired() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(23, this->_internal_receiptrequired(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.ImMessage.Message)
  return target;
}

size_t ImMessage_Message::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.ImMessage.Message)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .AcFunDanmu.Im.Basic.User receivers = 11;
  total_size += 1UL * this->_internal_receivers_size();
  for (const auto& msg : this->receivers_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .AcFunDanmu.Im.Basic.User excludeReceivers = 19;
  total_size += 2UL * this->_internal_excludereceivers_size();
  for (const auto& msg : this->excludereceivers_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string title = 7;
  if (this->title().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_title());
  }

  // bytes content = 9;
  if (this->content().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_content());
  }

  // string buckupTips = 10;
  if (this->buckuptips().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_buckuptips());
  }

  // string strTargetId = 18;
  if (this->strtargetid().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_strtargetid());
  }

  // bytes extra = 22;
  if (this->extra().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_extra());
  }

  // .AcFunDanmu.Im.Basic.User fromUser = 4;
  if (this->has_fromuser()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *fromuser_);
  }

  // .AcFunDanmu.Im.Basic.User toUser = 6;
  if (this->has_touser()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *touser_);
  }

  // .AcFunDanmu.Im.ImMessage.Reminder reminder = 21;
  if (this->has_reminder()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *reminder_);
  }

  // int64 seqId = 1;
  if (this->seqid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_seqid());
  }

  // int64 clientSeqId = 2;
  if (this->clientseqid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_clientseqid());
  }

  // int64 timestampMs = 3;
  if (this->timestampms() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_timestampms());
  }

  // int64 targetId = 5;
  if (this->targetid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_targetid());
  }

  // int32 contentType = 8;
  if (this->contenttype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_contenttype());
  }

  // int32 sessionPriority = 13;
  if (this->sessionpriority() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_sessionpriority());
  }

  // int32 sessionCategoryId = 14;
  if (this->sessioncategoryid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_sessioncategoryid());
  }

  // int32 sessionAccountType = 15;
  if (this->sessionaccounttype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_sessionaccounttype());
  }

  // int32 userRelationship = 17;
  if (this->userrelationship() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_userrelationship());
  }

  // bool notContentUnread = 12;
  if (this->notcontentunread() != 0) {
    total_size += 1 + 1;
  }

  // bool notAutoCreateSession = 16;
  if (this->notautocreatesession() != 0) {
    total_size += 2 + 1;
  }

  // bool markDelte = 20;
  if (this->markdelte() != 0) {
    total_size += 2 + 1;
  }

  // bool receiptRequired = 23;
  if (this->receiptrequired() != 0) {
    total_size += 2 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImMessage_Message::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.ImMessage.Message)
  GOOGLE_DCHECK_NE(&from, this);
  const ImMessage_Message* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ImMessage_Message>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.ImMessage.Message)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.ImMessage.Message)
    MergeFrom(*source);
  }
}

void ImMessage_Message::MergeFrom(const ImMessage_Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.ImMessage.Message)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  receivers_.MergeFrom(from.receivers_);
  excludereceivers_.MergeFrom(from.excludereceivers_);
  if (from.title().size() > 0) {
    _internal_set_title(from._internal_title());
  }
  if (from.content().size() > 0) {
    _internal_set_content(from._internal_content());
  }
  if (from.buckuptips().size() > 0) {
    _internal_set_buckuptips(from._internal_buckuptips());
  }
  if (from.strtargetid().size() > 0) {
    _internal_set_strtargetid(from._internal_strtargetid());
  }
  if (from.extra().size() > 0) {
    _internal_set_extra(from._internal_extra());
  }
  if (from.has_fromuser()) {
    _internal_mutable_fromuser()->::AcFunDanmu::Im::Basic_User::MergeFrom(from._internal_fromuser());
  }
  if (from.has_touser()) {
    _internal_mutable_touser()->::AcFunDanmu::Im::Basic_User::MergeFrom(from._internal_touser());
  }
  if (from.has_reminder()) {
    _internal_mutable_reminder()->::AcFunDanmu::Im::ImMessage_Reminder::MergeFrom(from._internal_reminder());
  }
  if (from.seqid() != 0) {
    _internal_set_seqid(from._internal_seqid());
  }
  if (from.clientseqid() != 0) {
    _internal_set_clientseqid(from._internal_clientseqid());
  }
  if (from.timestampms() != 0) {
    _internal_set_timestampms(from._internal_timestampms());
  }
  if (from.targetid() != 0) {
    _internal_set_targetid(from._internal_targetid());
  }
  if (from.contenttype() != 0) {
    _internal_set_contenttype(from._internal_contenttype());
  }
  if (from.sessionpriority() != 0) {
    _internal_set_sessionpriority(from._internal_sessionpriority());
  }
  if (from.sessioncategoryid() != 0) {
    _internal_set_sessioncategoryid(from._internal_sessioncategoryid());
  }
  if (from.sessionaccounttype() != 0) {
    _internal_set_sessionaccounttype(from._internal_sessionaccounttype());
  }
  if (from.userrelationship() != 0) {
    _internal_set_userrelationship(from._internal_userrelationship());
  }
  if (from.notcontentunread() != 0) {
    _internal_set_notcontentunread(from._internal_notcontentunread());
  }
  if (from.notautocreatesession() != 0) {
    _internal_set_notautocreatesession(from._internal_notautocreatesession());
  }
  if (from.markdelte() != 0) {
    _internal_set_markdelte(from._internal_markdelte());
  }
  if (from.receiptrequired() != 0) {
    _internal_set_receiptrequired(from._internal_receiptrequired());
  }
}

void ImMessage_Message::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.ImMessage.Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImMessage_Message::CopyFrom(const ImMessage_Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.ImMessage.Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImMessage_Message::IsInitialized() const {
  return true;
}

void ImMessage_Message::InternalSwap(ImMessage_Message* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  receivers_.InternalSwap(&other->receivers_);
  excludereceivers_.InternalSwap(&other->excludereceivers_);
  title_.Swap(&other->title_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  content_.Swap(&other->content_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  buckuptips_.Swap(&other->buckuptips_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  strtargetid_.Swap(&other->strtargetid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  extra_.Swap(&other->extra_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ImMessage_Message, receiptrequired_)
      + sizeof(ImMessage_Message::receiptrequired_)
      - PROTOBUF_FIELD_OFFSET(ImMessage_Message, fromuser_)>(
          reinterpret_cast<char*>(&fromuser_),
          reinterpret_cast<char*>(&other->fromuser_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ImMessage_Message::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ImMessage_SendMessageResponse::_Internal {
 public:
};

ImMessage_SendMessageResponse::ImMessage_SendMessageResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.ImMessage.SendMessageResponse)
}
ImMessage_SendMessageResponse::ImMessage_SendMessageResponse(const ImMessage_SendMessageResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&clientseqid_, &from.clientseqid_,
    static_cast<size_t>(reinterpret_cast<char*>(&sessioncategoryid_) -
    reinterpret_cast<char*>(&clientseqid_)) + sizeof(sessioncategoryid_));
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.ImMessage.SendMessageResponse)
}

void ImMessage_SendMessageResponse::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&clientseqid_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&sessioncategoryid_) -
      reinterpret_cast<char*>(&clientseqid_)) + sizeof(sessioncategoryid_));
}

ImMessage_SendMessageResponse::~ImMessage_SendMessageResponse() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.ImMessage.SendMessageResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ImMessage_SendMessageResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ImMessage_SendMessageResponse::ArenaDtor(void* object) {
  ImMessage_SendMessageResponse* _this = reinterpret_cast< ImMessage_SendMessageResponse* >(object);
  (void)_this;
}
void ImMessage_SendMessageResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ImMessage_SendMessageResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ImMessage_SendMessageResponse& ImMessage_SendMessageResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ImMessage_SendMessageResponse_Im_2eproto.base);
  return *internal_default_instance();
}


void ImMessage_SendMessageResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.ImMessage.SendMessageResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&clientseqid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sessioncategoryid_) -
      reinterpret_cast<char*>(&clientseqid_)) + sizeof(sessioncategoryid_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ImMessage_SendMessageResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 clientSeqId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          clientseqid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 messageTimestamp = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          messagetimestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 seqId = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          seqid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 sessionAccountType = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          sessionaccounttype_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 sessionPriority = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          sessionpriority_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 sessionCategoryId = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          sessioncategoryid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ImMessage_SendMessageResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.ImMessage.SendMessageResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 clientSeqId = 1;
  if (this->clientseqid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_clientseqid(), target);
  }

  // int64 messageTimestamp = 2;
  if (this->messagetimestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_messagetimestamp(), target);
  }

  // int64 seqId = 3;
  if (this->seqid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_seqid(), target);
  }

  // int32 sessionAccountType = 4;
  if (this->sessionaccounttype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_sessionaccounttype(), target);
  }

  // int32 sessionPriority = 5;
  if (this->sessionpriority() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_sessionpriority(), target);
  }

  // int32 sessionCategoryId = 6;
  if (this->sessioncategoryid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->_internal_sessioncategoryid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.ImMessage.SendMessageResponse)
  return target;
}

size_t ImMessage_SendMessageResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.ImMessage.SendMessageResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 clientSeqId = 1;
  if (this->clientseqid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_clientseqid());
  }

  // int64 messageTimestamp = 2;
  if (this->messagetimestamp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_messagetimestamp());
  }

  // int64 seqId = 3;
  if (this->seqid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_seqid());
  }

  // int32 sessionAccountType = 4;
  if (this->sessionaccounttype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_sessionaccounttype());
  }

  // int32 sessionPriority = 5;
  if (this->sessionpriority() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_sessionpriority());
  }

  // int32 sessionCategoryId = 6;
  if (this->sessioncategoryid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_sessioncategoryid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImMessage_SendMessageResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.ImMessage.SendMessageResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ImMessage_SendMessageResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ImMessage_SendMessageResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.ImMessage.SendMessageResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.ImMessage.SendMessageResponse)
    MergeFrom(*source);
  }
}

void ImMessage_SendMessageResponse::MergeFrom(const ImMessage_SendMessageResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.ImMessage.SendMessageResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.clientseqid() != 0) {
    _internal_set_clientseqid(from._internal_clientseqid());
  }
  if (from.messagetimestamp() != 0) {
    _internal_set_messagetimestamp(from._internal_messagetimestamp());
  }
  if (from.seqid() != 0) {
    _internal_set_seqid(from._internal_seqid());
  }
  if (from.sessionaccounttype() != 0) {
    _internal_set_sessionaccounttype(from._internal_sessionaccounttype());
  }
  if (from.sessionpriority() != 0) {
    _internal_set_sessionpriority(from._internal_sessionpriority());
  }
  if (from.sessioncategoryid() != 0) {
    _internal_set_sessioncategoryid(from._internal_sessioncategoryid());
  }
}

void ImMessage_SendMessageResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.ImMessage.SendMessageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImMessage_SendMessageResponse::CopyFrom(const ImMessage_SendMessageResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.ImMessage.SendMessageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImMessage_SendMessageResponse::IsInitialized() const {
  return true;
}

void ImMessage_SendMessageResponse::InternalSwap(ImMessage_SendMessageResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ImMessage_SendMessageResponse, sessioncategoryid_)
      + sizeof(ImMessage_SendMessageResponse::sessioncategoryid_)
      - PROTOBUF_FIELD_OFFSET(ImMessage_SendMessageResponse, clientseqid_)>(
          reinterpret_cast<char*>(&clientseqid_),
          reinterpret_cast<char*>(&other->clientseqid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ImMessage_SendMessageResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ImMessage_PullOldRequest::_Internal {
 public:
  static const ::AcFunDanmu::Im::Basic_User& target(const ImMessage_PullOldRequest* msg);
};

const ::AcFunDanmu::Im::Basic_User&
ImMessage_PullOldRequest::_Internal::target(const ImMessage_PullOldRequest* msg) {
  return *msg->target_;
}
ImMessage_PullOldRequest::ImMessage_PullOldRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.ImMessage.PullOldRequest)
}
ImMessage_PullOldRequest::ImMessage_PullOldRequest(const ImMessage_PullOldRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  strtargetid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_strtargetid().empty()) {
    strtargetid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_strtargetid(), 
      GetArena());
  }
  if (from._internal_has_target()) {
    target_ = new ::AcFunDanmu::Im::Basic_User(*from.target_);
  } else {
    target_ = nullptr;
  }
  ::memcpy(&minseq_, &from.minseq_,
    static_cast<size_t>(reinterpret_cast<char*>(&count_) -
    reinterpret_cast<char*>(&minseq_)) + sizeof(count_));
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.ImMessage.PullOldRequest)
}

void ImMessage_PullOldRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ImMessage_PullOldRequest_Im_2eproto.base);
  strtargetid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&target_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&count_) -
      reinterpret_cast<char*>(&target_)) + sizeof(count_));
}

ImMessage_PullOldRequest::~ImMessage_PullOldRequest() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.ImMessage.PullOldRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ImMessage_PullOldRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  strtargetid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete target_;
}

void ImMessage_PullOldRequest::ArenaDtor(void* object) {
  ImMessage_PullOldRequest* _this = reinterpret_cast< ImMessage_PullOldRequest* >(object);
  (void)_this;
}
void ImMessage_PullOldRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ImMessage_PullOldRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ImMessage_PullOldRequest& ImMessage_PullOldRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ImMessage_PullOldRequest_Im_2eproto.base);
  return *internal_default_instance();
}


void ImMessage_PullOldRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.ImMessage.PullOldRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  strtargetid_.ClearToEmpty();
  if (GetArena() == nullptr && target_ != nullptr) {
    delete target_;
  }
  target_ = nullptr;
  ::memset(&minseq_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_) -
      reinterpret_cast<char*>(&minseq_)) + sizeof(count_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ImMessage_PullOldRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .AcFunDanmu.Im.Basic.User target = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_target(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 minSeq = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          minseq_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 maxSeq = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          maxseq_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 count = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 targetId = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          targetid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string strTargetId = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_strtargetid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.ImMessage.PullOldRequest.strTargetId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ImMessage_PullOldRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.ImMessage.PullOldRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .AcFunDanmu.Im.Basic.User target = 1;
  if (this->has_target()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::target(this), target, stream);
  }

  // int64 minSeq = 2;
  if (this->minseq() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_minseq(), target);
  }

  // int64 maxSeq = 3;
  if (this->maxseq() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_maxseq(), target);
  }

  // int32 count = 4;
  if (this->count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_count(), target);
  }

  // int64 targetId = 5;
  if (this->targetid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(5, this->_internal_targetid(), target);
  }

  // string strTargetId = 6;
  if (this->strtargetid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_strtargetid().data(), static_cast<int>(this->_internal_strtargetid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.ImMessage.PullOldRequest.strTargetId");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_strtargetid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.ImMessage.PullOldRequest)
  return target;
}

size_t ImMessage_PullOldRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.ImMessage.PullOldRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string strTargetId = 6;
  if (this->strtargetid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_strtargetid());
  }

  // .AcFunDanmu.Im.Basic.User target = 1;
  if (this->has_target()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *target_);
  }

  // int64 minSeq = 2;
  if (this->minseq() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_minseq());
  }

  // int64 maxSeq = 3;
  if (this->maxseq() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_maxseq());
  }

  // int64 targetId = 5;
  if (this->targetid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_targetid());
  }

  // int32 count = 4;
  if (this->count() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_count());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImMessage_PullOldRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.ImMessage.PullOldRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ImMessage_PullOldRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ImMessage_PullOldRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.ImMessage.PullOldRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.ImMessage.PullOldRequest)
    MergeFrom(*source);
  }
}

void ImMessage_PullOldRequest::MergeFrom(const ImMessage_PullOldRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.ImMessage.PullOldRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.strtargetid().size() > 0) {
    _internal_set_strtargetid(from._internal_strtargetid());
  }
  if (from.has_target()) {
    _internal_mutable_target()->::AcFunDanmu::Im::Basic_User::MergeFrom(from._internal_target());
  }
  if (from.minseq() != 0) {
    _internal_set_minseq(from._internal_minseq());
  }
  if (from.maxseq() != 0) {
    _internal_set_maxseq(from._internal_maxseq());
  }
  if (from.targetid() != 0) {
    _internal_set_targetid(from._internal_targetid());
  }
  if (from.count() != 0) {
    _internal_set_count(from._internal_count());
  }
}

void ImMessage_PullOldRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.ImMessage.PullOldRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImMessage_PullOldRequest::CopyFrom(const ImMessage_PullOldRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.ImMessage.PullOldRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImMessage_PullOldRequest::IsInitialized() const {
  return true;
}

void ImMessage_PullOldRequest::InternalSwap(ImMessage_PullOldRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  strtargetid_.Swap(&other->strtargetid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ImMessage_PullOldRequest, count_)
      + sizeof(ImMessage_PullOldRequest::count_)
      - PROTOBUF_FIELD_OFFSET(ImMessage_PullOldRequest, target_)>(
          reinterpret_cast<char*>(&target_),
          reinterpret_cast<char*>(&other->target_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ImMessage_PullOldRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ImMessage_PullOldResponse::_Internal {
 public:
};

ImMessage_PullOldResponse::ImMessage_PullOldResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  messages_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.ImMessage.PullOldResponse)
}
ImMessage_PullOldResponse::ImMessage_PullOldResponse(const ImMessage_PullOldResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      messages_(from.messages_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  servertime_ = from.servertime_;
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.ImMessage.PullOldResponse)
}

void ImMessage_PullOldResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ImMessage_PullOldResponse_Im_2eproto.base);
  servertime_ = PROTOBUF_LONGLONG(0);
}

ImMessage_PullOldResponse::~ImMessage_PullOldResponse() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.ImMessage.PullOldResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ImMessage_PullOldResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ImMessage_PullOldResponse::ArenaDtor(void* object) {
  ImMessage_PullOldResponse* _this = reinterpret_cast< ImMessage_PullOldResponse* >(object);
  (void)_this;
}
void ImMessage_PullOldResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ImMessage_PullOldResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ImMessage_PullOldResponse& ImMessage_PullOldResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ImMessage_PullOldResponse_Im_2eproto.base);
  return *internal_default_instance();
}


void ImMessage_PullOldResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.ImMessage.PullOldResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  messages_.Clear();
  servertime_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ImMessage_PullOldResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .AcFunDanmu.Im.ImMessage.Message messages = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_messages(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // int64 serverTime = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          servertime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ImMessage_PullOldResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.ImMessage.PullOldResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .AcFunDanmu.Im.ImMessage.Message messages = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_messages_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_messages(i), target, stream);
  }

  // int64 serverTime = 2;
  if (this->servertime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_servertime(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.ImMessage.PullOldResponse)
  return target;
}

size_t ImMessage_PullOldResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.ImMessage.PullOldResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .AcFunDanmu.Im.ImMessage.Message messages = 1;
  total_size += 1UL * this->_internal_messages_size();
  for (const auto& msg : this->messages_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // int64 serverTime = 2;
  if (this->servertime() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_servertime());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImMessage_PullOldResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.ImMessage.PullOldResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ImMessage_PullOldResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ImMessage_PullOldResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.ImMessage.PullOldResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.ImMessage.PullOldResponse)
    MergeFrom(*source);
  }
}

void ImMessage_PullOldResponse::MergeFrom(const ImMessage_PullOldResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.ImMessage.PullOldResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  messages_.MergeFrom(from.messages_);
  if (from.servertime() != 0) {
    _internal_set_servertime(from._internal_servertime());
  }
}

void ImMessage_PullOldResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.ImMessage.PullOldResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImMessage_PullOldResponse::CopyFrom(const ImMessage_PullOldResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.ImMessage.PullOldResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImMessage_PullOldResponse::IsInitialized() const {
  return true;
}

void ImMessage_PullOldResponse::InternalSwap(ImMessage_PullOldResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  messages_.InternalSwap(&other->messages_);
  swap(servertime_, other->servertime_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ImMessage_PullOldResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ImMessage_PullNewRequest::_Internal {
 public:
  static const ::AcFunDanmu::Im::Basic_User& target(const ImMessage_PullNewRequest* msg);
};

const ::AcFunDanmu::Im::Basic_User&
ImMessage_PullNewRequest::_Internal::target(const ImMessage_PullNewRequest* msg) {
  return *msg->target_;
}
ImMessage_PullNewRequest::ImMessage_PullNewRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.ImMessage.PullNewRequest)
}
ImMessage_PullNewRequest::ImMessage_PullNewRequest(const ImMessage_PullNewRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  strtargetid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_strtargetid().empty()) {
    strtargetid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_strtargetid(), 
      GetArena());
  }
  if (from._internal_has_target()) {
    target_ = new ::AcFunDanmu::Im::Basic_User(*from.target_);
  } else {
    target_ = nullptr;
  }
  ::memcpy(&minseq_, &from.minseq_,
    static_cast<size_t>(reinterpret_cast<char*>(&count_) -
    reinterpret_cast<char*>(&minseq_)) + sizeof(count_));
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.ImMessage.PullNewRequest)
}

void ImMessage_PullNewRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ImMessage_PullNewRequest_Im_2eproto.base);
  strtargetid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&target_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&count_) -
      reinterpret_cast<char*>(&target_)) + sizeof(count_));
}

ImMessage_PullNewRequest::~ImMessage_PullNewRequest() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.ImMessage.PullNewRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ImMessage_PullNewRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  strtargetid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete target_;
}

void ImMessage_PullNewRequest::ArenaDtor(void* object) {
  ImMessage_PullNewRequest* _this = reinterpret_cast< ImMessage_PullNewRequest* >(object);
  (void)_this;
}
void ImMessage_PullNewRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ImMessage_PullNewRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ImMessage_PullNewRequest& ImMessage_PullNewRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ImMessage_PullNewRequest_Im_2eproto.base);
  return *internal_default_instance();
}


void ImMessage_PullNewRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.ImMessage.PullNewRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  strtargetid_.ClearToEmpty();
  if (GetArena() == nullptr && target_ != nullptr) {
    delete target_;
  }
  target_ = nullptr;
  ::memset(&minseq_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_) -
      reinterpret_cast<char*>(&minseq_)) + sizeof(count_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ImMessage_PullNewRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .AcFunDanmu.Im.Basic.User target = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_target(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 minSeq = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          minseq_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 count = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 targetId = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          targetid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string strTargetId = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_strtargetid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.ImMessage.PullNewRequest.strTargetId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ImMessage_PullNewRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.ImMessage.PullNewRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .AcFunDanmu.Im.Basic.User target = 1;
  if (this->has_target()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::target(this), target, stream);
  }

  // int64 minSeq = 2;
  if (this->minseq() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_minseq(), target);
  }

  // int32 count = 3;
  if (this->count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_count(), target);
  }

  // int64 targetId = 4;
  if (this->targetid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(4, this->_internal_targetid(), target);
  }

  // string strTargetId = 5;
  if (this->strtargetid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_strtargetid().data(), static_cast<int>(this->_internal_strtargetid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.ImMessage.PullNewRequest.strTargetId");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_strtargetid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.ImMessage.PullNewRequest)
  return target;
}

size_t ImMessage_PullNewRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.ImMessage.PullNewRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string strTargetId = 5;
  if (this->strtargetid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_strtargetid());
  }

  // .AcFunDanmu.Im.Basic.User target = 1;
  if (this->has_target()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *target_);
  }

  // int64 minSeq = 2;
  if (this->minseq() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_minseq());
  }

  // int64 targetId = 4;
  if (this->targetid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_targetid());
  }

  // int32 count = 3;
  if (this->count() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_count());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImMessage_PullNewRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.ImMessage.PullNewRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ImMessage_PullNewRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ImMessage_PullNewRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.ImMessage.PullNewRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.ImMessage.PullNewRequest)
    MergeFrom(*source);
  }
}

void ImMessage_PullNewRequest::MergeFrom(const ImMessage_PullNewRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.ImMessage.PullNewRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.strtargetid().size() > 0) {
    _internal_set_strtargetid(from._internal_strtargetid());
  }
  if (from.has_target()) {
    _internal_mutable_target()->::AcFunDanmu::Im::Basic_User::MergeFrom(from._internal_target());
  }
  if (from.minseq() != 0) {
    _internal_set_minseq(from._internal_minseq());
  }
  if (from.targetid() != 0) {
    _internal_set_targetid(from._internal_targetid());
  }
  if (from.count() != 0) {
    _internal_set_count(from._internal_count());
  }
}

void ImMessage_PullNewRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.ImMessage.PullNewRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImMessage_PullNewRequest::CopyFrom(const ImMessage_PullNewRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.ImMessage.PullNewRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImMessage_PullNewRequest::IsInitialized() const {
  return true;
}

void ImMessage_PullNewRequest::InternalSwap(ImMessage_PullNewRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  strtargetid_.Swap(&other->strtargetid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ImMessage_PullNewRequest, count_)
      + sizeof(ImMessage_PullNewRequest::count_)
      - PROTOBUF_FIELD_OFFSET(ImMessage_PullNewRequest, target_)>(
          reinterpret_cast<char*>(&target_),
          reinterpret_cast<char*>(&other->target_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ImMessage_PullNewRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ImMessage_PullNewResponse::_Internal {
 public:
};

ImMessage_PullNewResponse::ImMessage_PullNewResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  messages_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.ImMessage.PullNewResponse)
}
ImMessage_PullNewResponse::ImMessage_PullNewResponse(const ImMessage_PullNewResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      messages_(from.messages_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.ImMessage.PullNewResponse)
}

void ImMessage_PullNewResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ImMessage_PullNewResponse_Im_2eproto.base);
}

ImMessage_PullNewResponse::~ImMessage_PullNewResponse() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.ImMessage.PullNewResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ImMessage_PullNewResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ImMessage_PullNewResponse::ArenaDtor(void* object) {
  ImMessage_PullNewResponse* _this = reinterpret_cast< ImMessage_PullNewResponse* >(object);
  (void)_this;
}
void ImMessage_PullNewResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ImMessage_PullNewResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ImMessage_PullNewResponse& ImMessage_PullNewResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ImMessage_PullNewResponse_Im_2eproto.base);
  return *internal_default_instance();
}


void ImMessage_PullNewResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.ImMessage.PullNewResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  messages_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ImMessage_PullNewResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .AcFunDanmu.Im.ImMessage.Message messages = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_messages(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ImMessage_PullNewResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.ImMessage.PullNewResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .AcFunDanmu.Im.ImMessage.Message messages = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_messages_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_messages(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.ImMessage.PullNewResponse)
  return target;
}

size_t ImMessage_PullNewResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.ImMessage.PullNewResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .AcFunDanmu.Im.ImMessage.Message messages = 1;
  total_size += 1UL * this->_internal_messages_size();
  for (const auto& msg : this->messages_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImMessage_PullNewResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.ImMessage.PullNewResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ImMessage_PullNewResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ImMessage_PullNewResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.ImMessage.PullNewResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.ImMessage.PullNewResponse)
    MergeFrom(*source);
  }
}

void ImMessage_PullNewResponse::MergeFrom(const ImMessage_PullNewResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.ImMessage.PullNewResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  messages_.MergeFrom(from.messages_);
}

void ImMessage_PullNewResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.ImMessage.PullNewResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImMessage_PullNewResponse::CopyFrom(const ImMessage_PullNewResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.ImMessage.PullNewResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImMessage_PullNewResponse::IsInitialized() const {
  return true;
}

void ImMessage_PullNewResponse::InternalSwap(ImMessage_PullNewResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  messages_.InternalSwap(&other->messages_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ImMessage_PullNewResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ImMessage_SessionListRequest::_Internal {
 public:
  static const ::AcFunDanmu::Im::Basic_SyncCookie& synccookie(const ImMessage_SessionListRequest* msg);
};

const ::AcFunDanmu::Im::Basic_SyncCookie&
ImMessage_SessionListRequest::_Internal::synccookie(const ImMessage_SessionListRequest* msg) {
  return *msg->synccookie_;
}
ImMessage_SessionListRequest::ImMessage_SessionListRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.ImMessage.SessionListRequest)
}
ImMessage_SessionListRequest::ImMessage_SessionListRequest(const ImMessage_SessionListRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_synccookie()) {
    synccookie_ = new ::AcFunDanmu::Im::Basic_SyncCookie(*from.synccookie_);
  } else {
    synccookie_ = nullptr;
  }
  ::memcpy(&categoryid_, &from.categoryid_,
    static_cast<size_t>(reinterpret_cast<char*>(&localdatastatus_) -
    reinterpret_cast<char*>(&categoryid_)) + sizeof(localdatastatus_));
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.ImMessage.SessionListRequest)
}

void ImMessage_SessionListRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ImMessage_SessionListRequest_Im_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&synccookie_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&localdatastatus_) -
      reinterpret_cast<char*>(&synccookie_)) + sizeof(localdatastatus_));
}

ImMessage_SessionListRequest::~ImMessage_SessionListRequest() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.ImMessage.SessionListRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ImMessage_SessionListRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete synccookie_;
}

void ImMessage_SessionListRequest::ArenaDtor(void* object) {
  ImMessage_SessionListRequest* _this = reinterpret_cast< ImMessage_SessionListRequest* >(object);
  (void)_this;
}
void ImMessage_SessionListRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ImMessage_SessionListRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ImMessage_SessionListRequest& ImMessage_SessionListRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ImMessage_SessionListRequest_Im_2eproto.base);
  return *internal_default_instance();
}


void ImMessage_SessionListRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.ImMessage.SessionListRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && synccookie_ != nullptr) {
    delete synccookie_;
  }
  synccookie_ = nullptr;
  ::memset(&categoryid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&localdatastatus_) -
      reinterpret_cast<char*>(&categoryid_)) + sizeof(localdatastatus_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ImMessage_SessionListRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .AcFunDanmu.Im.Basic.SyncCookie syncCookie = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_synccookie(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 categoryId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          categoryid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 localDataStatus = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          localdatastatus_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ImMessage_SessionListRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.ImMessage.SessionListRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .AcFunDanmu.Im.Basic.SyncCookie syncCookie = 1;
  if (this->has_synccookie()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::synccookie(this), target, stream);
  }

  // int32 categoryId = 2;
  if (this->categoryid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_categoryid(), target);
  }

  // int32 localDataStatus = 3;
  if (this->localdatastatus() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_localdatastatus(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.ImMessage.SessionListRequest)
  return target;
}

size_t ImMessage_SessionListRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.ImMessage.SessionListRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .AcFunDanmu.Im.Basic.SyncCookie syncCookie = 1;
  if (this->has_synccookie()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *synccookie_);
  }

  // int32 categoryId = 2;
  if (this->categoryid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_categoryid());
  }

  // int32 localDataStatus = 3;
  if (this->localdatastatus() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_localdatastatus());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImMessage_SessionListRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.ImMessage.SessionListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ImMessage_SessionListRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ImMessage_SessionListRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.ImMessage.SessionListRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.ImMessage.SessionListRequest)
    MergeFrom(*source);
  }
}

void ImMessage_SessionListRequest::MergeFrom(const ImMessage_SessionListRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.ImMessage.SessionListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_synccookie()) {
    _internal_mutable_synccookie()->::AcFunDanmu::Im::Basic_SyncCookie::MergeFrom(from._internal_synccookie());
  }
  if (from.categoryid() != 0) {
    _internal_set_categoryid(from._internal_categoryid());
  }
  if (from.localdatastatus() != 0) {
    _internal_set_localdatastatus(from._internal_localdatastatus());
  }
}

void ImMessage_SessionListRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.ImMessage.SessionListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImMessage_SessionListRequest::CopyFrom(const ImMessage_SessionListRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.ImMessage.SessionListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImMessage_SessionListRequest::IsInitialized() const {
  return true;
}

void ImMessage_SessionListRequest::InternalSwap(ImMessage_SessionListRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ImMessage_SessionListRequest, localdatastatus_)
      + sizeof(ImMessage_SessionListRequest::localdatastatus_)
      - PROTOBUF_FIELD_OFFSET(ImMessage_SessionListRequest, synccookie_)>(
          reinterpret_cast<char*>(&synccookie_),
          reinterpret_cast<char*>(&other->synccookie_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ImMessage_SessionListRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ImMessage_ChatSession::_Internal {
 public:
  static const ::AcFunDanmu::Im::Basic_User& target(const ImMessage_ChatSession* msg);
};

const ::AcFunDanmu::Im::Basic_User&
ImMessage_ChatSession::_Internal::target(const ImMessage_ChatSession* msg) {
  return *msg->target_;
}
ImMessage_ChatSession::ImMessage_ChatSession(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  latestmessage_(arena),
  remindbody_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.ImMessage.ChatSession)
}
ImMessage_ChatSession::ImMessage_ChatSession(const ImMessage_ChatSession& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      latestmessage_(from.latestmessage_),
      remindbody_(from.remindbody_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  cursor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_cursor().empty()) {
    cursor_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_cursor(), 
      GetArena());
  }
  strtargetid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_strtargetid().empty()) {
    strtargetid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_strtargetid(), 
      GetArena());
  }
  if (from._internal_has_target()) {
    target_ = new ::AcFunDanmu::Im::Basic_User(*from.target_);
  } else {
    target_ = nullptr;
  }
  ::memcpy(&maxseqid_, &from.maxseqid_,
    static_cast<size_t>(reinterpret_cast<char*>(&targetreadseqid_) -
    reinterpret_cast<char*>(&maxseqid_)) + sizeof(targetreadseqid_));
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.ImMessage.ChatSession)
}

void ImMessage_ChatSession::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ImMessage_ChatSession_Im_2eproto.base);
  cursor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  strtargetid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&target_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&targetreadseqid_) -
      reinterpret_cast<char*>(&target_)) + sizeof(targetreadseqid_));
}

ImMessage_ChatSession::~ImMessage_ChatSession() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.ImMessage.ChatSession)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ImMessage_ChatSession::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  cursor_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  strtargetid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete target_;
}

void ImMessage_ChatSession::ArenaDtor(void* object) {
  ImMessage_ChatSession* _this = reinterpret_cast< ImMessage_ChatSession* >(object);
  (void)_this;
}
void ImMessage_ChatSession::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ImMessage_ChatSession::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ImMessage_ChatSession& ImMessage_ChatSession::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ImMessage_ChatSession_Im_2eproto.base);
  return *internal_default_instance();
}


void ImMessage_ChatSession::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.ImMessage.ChatSession)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  latestmessage_.Clear();
  remindbody_.Clear();
  cursor_.ClearToEmpty();
  strtargetid_.ClearToEmpty();
  if (GetArena() == nullptr && target_ != nullptr) {
    delete target_;
  }
  target_ = nullptr;
  ::memset(&maxseqid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&targetreadseqid_) -
      reinterpret_cast<char*>(&maxseqid_)) + sizeof(targetreadseqid_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ImMessage_ChatSession::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .AcFunDanmu.Im.Basic.User target = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_target(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 maxSeqId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          maxseqid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 readSeqId = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          readseqid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 unreadMsgCount = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          unreadmsgcount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .AcFunDanmu.Im.ImMessage.Message latestMessage = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_latestmessage(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else goto handle_unusual;
        continue;
      // .AcFunDanmu.Im.ImMessage.ChatTargetType chatTargetType = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_chattargettype(static_cast<::AcFunDanmu::Im::ImMessage_ChatTargetType>(val));
        } else goto handle_unusual;
        continue;
      // int64 targetId = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          targetid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 activeTime = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          activetime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 priority = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88)) {
          priority_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 categoryId = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          categoryid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string cursor = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          auto str = _internal_mutable_cursor();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.ImMessage.ChatSession.cursor"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 accountType = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 112)) {
          accounttype_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool aggregateSession = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 120)) {
          aggregatesession_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 jumpCategoryId = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 128)) {
          jumpcategoryid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 expireAt = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 136)) {
          expireat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 effectiveFrom = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 144)) {
          effectivefrom_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string strTargetId = 19;
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 154)) {
          auto str = _internal_mutable_strtargetid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.ImMessage.ChatSession.strTargetId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .AcFunDanmu.Im.ImMessage.RemindBody remindBody = 20;
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 162)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_remindbody(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<162>(ptr));
        } else goto handle_unusual;
        continue;
      // int64 targetReadSeqId = 21;
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 168)) {
          targetreadseqid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ImMessage_ChatSession::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.ImMessage.ChatSession)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .AcFunDanmu.Im.Basic.User target = 1;
  if (this->has_target()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::target(this), target, stream);
  }

  // int64 maxSeqId = 2;
  if (this->maxseqid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_maxseqid(), target);
  }

  // int64 readSeqId = 3;
  if (this->readseqid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_readseqid(), target);
  }

  // int32 unreadMsgCount = 4;
  if (this->unreadmsgcount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_unreadmsgcount(), target);
  }

  // repeated .AcFunDanmu.Im.ImMessage.Message latestMessage = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_latestmessage_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, this->_internal_latestmessage(i), target, stream);
  }

  // .AcFunDanmu.Im.ImMessage.ChatTargetType chatTargetType = 8;
  if (this->chattargettype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      8, this->_internal_chattargettype(), target);
  }

  // int64 targetId = 9;
  if (this->targetid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(9, this->_internal_targetid(), target);
  }

  // int64 activeTime = 10;
  if (this->activetime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(10, this->_internal_activetime(), target);
  }

  // int32 priority = 11;
  if (this->priority() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(11, this->_internal_priority(), target);
  }

  // int32 categoryId = 12;
  if (this->categoryid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(12, this->_internal_categoryid(), target);
  }

  // string cursor = 13;
  if (this->cursor().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_cursor().data(), static_cast<int>(this->_internal_cursor().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.ImMessage.ChatSession.cursor");
    target = stream->WriteStringMaybeAliased(
        13, this->_internal_cursor(), target);
  }

  // int32 accountType = 14;
  if (this->accounttype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(14, this->_internal_accounttype(), target);
  }

  // bool aggregateSession = 15;
  if (this->aggregatesession() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(15, this->_internal_aggregatesession(), target);
  }

  // int32 jumpCategoryId = 16;
  if (this->jumpcategoryid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(16, this->_internal_jumpcategoryid(), target);
  }

  // int64 expireAt = 17;
  if (this->expireat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(17, this->_internal_expireat(), target);
  }

  // int64 effectiveFrom = 18;
  if (this->effectivefrom() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(18, this->_internal_effectivefrom(), target);
  }

  // string strTargetId = 19;
  if (this->strtargetid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_strtargetid().data(), static_cast<int>(this->_internal_strtargetid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.ImMessage.ChatSession.strTargetId");
    target = stream->WriteStringMaybeAliased(
        19, this->_internal_strtargetid(), target);
  }

  // repeated .AcFunDanmu.Im.ImMessage.RemindBody remindBody = 20;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_remindbody_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(20, this->_internal_remindbody(i), target, stream);
  }

  // int64 targetReadSeqId = 21;
  if (this->targetreadseqid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(21, this->_internal_targetreadseqid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.ImMessage.ChatSession)
  return target;
}

size_t ImMessage_ChatSession::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.ImMessage.ChatSession)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .AcFunDanmu.Im.ImMessage.Message latestMessage = 5;
  total_size += 1UL * this->_internal_latestmessage_size();
  for (const auto& msg : this->latestmessage_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .AcFunDanmu.Im.ImMessage.RemindBody remindBody = 20;
  total_size += 2UL * this->_internal_remindbody_size();
  for (const auto& msg : this->remindbody_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string cursor = 13;
  if (this->cursor().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_cursor());
  }

  // string strTargetId = 19;
  if (this->strtargetid().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_strtargetid());
  }

  // .AcFunDanmu.Im.Basic.User target = 1;
  if (this->has_target()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *target_);
  }

  // int64 maxSeqId = 2;
  if (this->maxseqid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_maxseqid());
  }

  // int64 readSeqId = 3;
  if (this->readseqid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_readseqid());
  }

  // int32 unreadMsgCount = 4;
  if (this->unreadmsgcount() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_unreadmsgcount());
  }

  // .AcFunDanmu.Im.ImMessage.ChatTargetType chatTargetType = 8;
  if (this->chattargettype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_chattargettype());
  }

  // int64 targetId = 9;
  if (this->targetid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_targetid());
  }

  // int64 activeTime = 10;
  if (this->activetime() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_activetime());
  }

  // int32 priority = 11;
  if (this->priority() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_priority());
  }

  // int32 categoryId = 12;
  if (this->categoryid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_categoryid());
  }

  // int32 accountType = 14;
  if (this->accounttype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_accounttype());
  }

  // bool aggregateSession = 15;
  if (this->aggregatesession() != 0) {
    total_size += 1 + 1;
  }

  // int64 expireAt = 17;
  if (this->expireat() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_expireat());
  }

  // int64 effectiveFrom = 18;
  if (this->effectivefrom() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_effectivefrom());
  }

  // int32 jumpCategoryId = 16;
  if (this->jumpcategoryid() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_jumpcategoryid());
  }

  // int64 targetReadSeqId = 21;
  if (this->targetreadseqid() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_targetreadseqid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImMessage_ChatSession::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.ImMessage.ChatSession)
  GOOGLE_DCHECK_NE(&from, this);
  const ImMessage_ChatSession* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ImMessage_ChatSession>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.ImMessage.ChatSession)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.ImMessage.ChatSession)
    MergeFrom(*source);
  }
}

void ImMessage_ChatSession::MergeFrom(const ImMessage_ChatSession& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.ImMessage.ChatSession)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  latestmessage_.MergeFrom(from.latestmessage_);
  remindbody_.MergeFrom(from.remindbody_);
  if (from.cursor().size() > 0) {
    _internal_set_cursor(from._internal_cursor());
  }
  if (from.strtargetid().size() > 0) {
    _internal_set_strtargetid(from._internal_strtargetid());
  }
  if (from.has_target()) {
    _internal_mutable_target()->::AcFunDanmu::Im::Basic_User::MergeFrom(from._internal_target());
  }
  if (from.maxseqid() != 0) {
    _internal_set_maxseqid(from._internal_maxseqid());
  }
  if (from.readseqid() != 0) {
    _internal_set_readseqid(from._internal_readseqid());
  }
  if (from.unreadmsgcount() != 0) {
    _internal_set_unreadmsgcount(from._internal_unreadmsgcount());
  }
  if (from.chattargettype() != 0) {
    _internal_set_chattargettype(from._internal_chattargettype());
  }
  if (from.targetid() != 0) {
    _internal_set_targetid(from._internal_targetid());
  }
  if (from.activetime() != 0) {
    _internal_set_activetime(from._internal_activetime());
  }
  if (from.priority() != 0) {
    _internal_set_priority(from._internal_priority());
  }
  if (from.categoryid() != 0) {
    _internal_set_categoryid(from._internal_categoryid());
  }
  if (from.accounttype() != 0) {
    _internal_set_accounttype(from._internal_accounttype());
  }
  if (from.aggregatesession() != 0) {
    _internal_set_aggregatesession(from._internal_aggregatesession());
  }
  if (from.expireat() != 0) {
    _internal_set_expireat(from._internal_expireat());
  }
  if (from.effectivefrom() != 0) {
    _internal_set_effectivefrom(from._internal_effectivefrom());
  }
  if (from.jumpcategoryid() != 0) {
    _internal_set_jumpcategoryid(from._internal_jumpcategoryid());
  }
  if (from.targetreadseqid() != 0) {
    _internal_set_targetreadseqid(from._internal_targetreadseqid());
  }
}

void ImMessage_ChatSession::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.ImMessage.ChatSession)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImMessage_ChatSession::CopyFrom(const ImMessage_ChatSession& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.ImMessage.ChatSession)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImMessage_ChatSession::IsInitialized() const {
  return true;
}

void ImMessage_ChatSession::InternalSwap(ImMessage_ChatSession* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  latestmessage_.InternalSwap(&other->latestmessage_);
  remindbody_.InternalSwap(&other->remindbody_);
  cursor_.Swap(&other->cursor_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  strtargetid_.Swap(&other->strtargetid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ImMessage_ChatSession, targetreadseqid_)
      + sizeof(ImMessage_ChatSession::targetreadseqid_)
      - PROTOBUF_FIELD_OFFSET(ImMessage_ChatSession, target_)>(
          reinterpret_cast<char*>(&target_),
          reinterpret_cast<char*>(&other->target_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ImMessage_ChatSession::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ImMessage_Reminder::_Internal {
 public:
};

ImMessage_Reminder::ImMessage_Reminder(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  remindbody_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.ImMessage.Reminder)
}
ImMessage_Reminder::ImMessage_Reminder(const ImMessage_Reminder& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      remindbody_(from.remindbody_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  origintext_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_origintext().empty()) {
    origintext_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_origintext(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.ImMessage.Reminder)
}

void ImMessage_Reminder::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ImMessage_Reminder_Im_2eproto.base);
  origintext_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ImMessage_Reminder::~ImMessage_Reminder() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.ImMessage.Reminder)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ImMessage_Reminder::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  origintext_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ImMessage_Reminder::ArenaDtor(void* object) {
  ImMessage_Reminder* _this = reinterpret_cast< ImMessage_Reminder* >(object);
  (void)_this;
}
void ImMessage_Reminder::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ImMessage_Reminder::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ImMessage_Reminder& ImMessage_Reminder::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ImMessage_Reminder_Im_2eproto.base);
  return *internal_default_instance();
}


void ImMessage_Reminder::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.ImMessage.Reminder)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  remindbody_.Clear();
  origintext_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ImMessage_Reminder::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string originText = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_origintext();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.ImMessage.Reminder.originText"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .AcFunDanmu.Im.ImMessage.RemindBody remindBody = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_remindbody(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ImMessage_Reminder::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.ImMessage.Reminder)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string originText = 1;
  if (this->origintext().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_origintext().data(), static_cast<int>(this->_internal_origintext().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.ImMessage.Reminder.originText");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_origintext(), target);
  }

  // repeated .AcFunDanmu.Im.ImMessage.RemindBody remindBody = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_remindbody_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_remindbody(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.ImMessage.Reminder)
  return target;
}

size_t ImMessage_Reminder::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.ImMessage.Reminder)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .AcFunDanmu.Im.ImMessage.RemindBody remindBody = 2;
  total_size += 1UL * this->_internal_remindbody_size();
  for (const auto& msg : this->remindbody_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string originText = 1;
  if (this->origintext().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_origintext());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImMessage_Reminder::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.ImMessage.Reminder)
  GOOGLE_DCHECK_NE(&from, this);
  const ImMessage_Reminder* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ImMessage_Reminder>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.ImMessage.Reminder)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.ImMessage.Reminder)
    MergeFrom(*source);
  }
}

void ImMessage_Reminder::MergeFrom(const ImMessage_Reminder& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.ImMessage.Reminder)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  remindbody_.MergeFrom(from.remindbody_);
  if (from.origintext().size() > 0) {
    _internal_set_origintext(from._internal_origintext());
  }
}

void ImMessage_Reminder::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.ImMessage.Reminder)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImMessage_Reminder::CopyFrom(const ImMessage_Reminder& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.ImMessage.Reminder)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImMessage_Reminder::IsInitialized() const {
  return true;
}

void ImMessage_Reminder::InternalSwap(ImMessage_Reminder* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  remindbody_.InternalSwap(&other->remindbody_);
  origintext_.Swap(&other->origintext_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ImMessage_Reminder::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ImMessage_RemindBody::_Internal {
 public:
};

ImMessage_RemindBody::ImMessage_RemindBody(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.ImMessage.RemindBody)
}
ImMessage_RemindBody::ImMessage_RemindBody(const ImMessage_RemindBody& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  username_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_username().empty()) {
    username_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_username(), 
      GetArena());
  }
  ::memcpy(&seqid_, &from.seqid_,
    static_cast<size_t>(reinterpret_cast<char*>(&length_) -
    reinterpret_cast<char*>(&seqid_)) + sizeof(length_));
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.ImMessage.RemindBody)
}

void ImMessage_RemindBody::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ImMessage_RemindBody_Im_2eproto.base);
  username_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&seqid_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&length_) -
      reinterpret_cast<char*>(&seqid_)) + sizeof(length_));
}

ImMessage_RemindBody::~ImMessage_RemindBody() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.ImMessage.RemindBody)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ImMessage_RemindBody::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  username_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ImMessage_RemindBody::ArenaDtor(void* object) {
  ImMessage_RemindBody* _this = reinterpret_cast< ImMessage_RemindBody* >(object);
  (void)_this;
}
void ImMessage_RemindBody::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ImMessage_RemindBody::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ImMessage_RemindBody& ImMessage_RemindBody::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ImMessage_RemindBody_Im_2eproto.base);
  return *internal_default_instance();
}


void ImMessage_RemindBody::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.ImMessage.RemindBody)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  username_.ClearToEmpty();
  ::memset(&seqid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&length_) -
      reinterpret_cast<char*>(&seqid_)) + sizeof(length_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ImMessage_RemindBody::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .AcFunDanmu.Im.ImMessage.RemindBody.RemindType remindType = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_remindtype(static_cast<::AcFunDanmu::Im::ImMessage_RemindBody_RemindType>(val));
        } else goto handle_unusual;
        continue;
      // int64 seqId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          seqid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 targetId = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          targetid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string userName = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_username();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.ImMessage.RemindBody.userName"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 startIndex = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          startindex_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 length = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          length_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ImMessage_RemindBody::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.ImMessage.RemindBody)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .AcFunDanmu.Im.ImMessage.RemindBody.RemindType remindType = 1;
  if (this->remindtype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_remindtype(), target);
  }

  // int64 seqId = 2;
  if (this->seqid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_seqid(), target);
  }

  // int64 targetId = 3;
  if (this->targetid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_targetid(), target);
  }

  // string userName = 4;
  if (this->username().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_username().data(), static_cast<int>(this->_internal_username().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.ImMessage.RemindBody.userName");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_username(), target);
  }

  // int32 startIndex = 5;
  if (this->startindex() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_startindex(), target);
  }

  // int32 length = 6;
  if (this->length() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->_internal_length(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.ImMessage.RemindBody)
  return target;
}

size_t ImMessage_RemindBody::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.ImMessage.RemindBody)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string userName = 4;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_username());
  }

  // int64 seqId = 2;
  if (this->seqid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_seqid());
  }

  // int64 targetId = 3;
  if (this->targetid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_targetid());
  }

  // .AcFunDanmu.Im.ImMessage.RemindBody.RemindType remindType = 1;
  if (this->remindtype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_remindtype());
  }

  // int32 startIndex = 5;
  if (this->startindex() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_startindex());
  }

  // int32 length = 6;
  if (this->length() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_length());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImMessage_RemindBody::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.ImMessage.RemindBody)
  GOOGLE_DCHECK_NE(&from, this);
  const ImMessage_RemindBody* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ImMessage_RemindBody>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.ImMessage.RemindBody)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.ImMessage.RemindBody)
    MergeFrom(*source);
  }
}

void ImMessage_RemindBody::MergeFrom(const ImMessage_RemindBody& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.ImMessage.RemindBody)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.username().size() > 0) {
    _internal_set_username(from._internal_username());
  }
  if (from.seqid() != 0) {
    _internal_set_seqid(from._internal_seqid());
  }
  if (from.targetid() != 0) {
    _internal_set_targetid(from._internal_targetid());
  }
  if (from.remindtype() != 0) {
    _internal_set_remindtype(from._internal_remindtype());
  }
  if (from.startindex() != 0) {
    _internal_set_startindex(from._internal_startindex());
  }
  if (from.length() != 0) {
    _internal_set_length(from._internal_length());
  }
}

void ImMessage_RemindBody::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.ImMessage.RemindBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImMessage_RemindBody::CopyFrom(const ImMessage_RemindBody& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.ImMessage.RemindBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImMessage_RemindBody::IsInitialized() const {
  return true;
}

void ImMessage_RemindBody::InternalSwap(ImMessage_RemindBody* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  username_.Swap(&other->username_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ImMessage_RemindBody, length_)
      + sizeof(ImMessage_RemindBody::length_)
      - PROTOBUF_FIELD_OFFSET(ImMessage_RemindBody, seqid_)>(
          reinterpret_cast<char*>(&seqid_),
          reinterpret_cast<char*>(&other->seqid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ImMessage_RemindBody::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ImMessage_ChatTarget::_Internal {
 public:
};

ImMessage_ChatTarget::ImMessage_ChatTarget(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.ImMessage.ChatTarget)
}
ImMessage_ChatTarget::ImMessage_ChatTarget(const ImMessage_ChatTarget& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  targetid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_targetid().empty()) {
    targetid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_targetid(), 
      GetArena());
  }
  targettype_ = from.targettype_;
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.ImMessage.ChatTarget)
}

void ImMessage_ChatTarget::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ImMessage_ChatTarget_Im_2eproto.base);
  targetid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  targettype_ = 0;
}

ImMessage_ChatTarget::~ImMessage_ChatTarget() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.ImMessage.ChatTarget)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ImMessage_ChatTarget::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  targetid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ImMessage_ChatTarget::ArenaDtor(void* object) {
  ImMessage_ChatTarget* _this = reinterpret_cast< ImMessage_ChatTarget* >(object);
  (void)_this;
}
void ImMessage_ChatTarget::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ImMessage_ChatTarget::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ImMessage_ChatTarget& ImMessage_ChatTarget::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ImMessage_ChatTarget_Im_2eproto.base);
  return *internal_default_instance();
}


void ImMessage_ChatTarget::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.ImMessage.ChatTarget)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  targetid_.ClearToEmpty();
  targettype_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ImMessage_ChatTarget::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string targetId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_targetid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.ImMessage.ChatTarget.targetId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .AcFunDanmu.Im.ImMessage.ChatTargetType targetType = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_targettype(static_cast<::AcFunDanmu::Im::ImMessage_ChatTargetType>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ImMessage_ChatTarget::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.ImMessage.ChatTarget)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string targetId = 1;
  if (this->targetid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_targetid().data(), static_cast<int>(this->_internal_targetid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.ImMessage.ChatTarget.targetId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_targetid(), target);
  }

  // .AcFunDanmu.Im.ImMessage.ChatTargetType targetType = 2;
  if (this->targettype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_targettype(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.ImMessage.ChatTarget)
  return target;
}

size_t ImMessage_ChatTarget::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.ImMessage.ChatTarget)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string targetId = 1;
  if (this->targetid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_targetid());
  }

  // .AcFunDanmu.Im.ImMessage.ChatTargetType targetType = 2;
  if (this->targettype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_targettype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImMessage_ChatTarget::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.ImMessage.ChatTarget)
  GOOGLE_DCHECK_NE(&from, this);
  const ImMessage_ChatTarget* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ImMessage_ChatTarget>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.ImMessage.ChatTarget)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.ImMessage.ChatTarget)
    MergeFrom(*source);
  }
}

void ImMessage_ChatTarget::MergeFrom(const ImMessage_ChatTarget& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.ImMessage.ChatTarget)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.targetid().size() > 0) {
    _internal_set_targetid(from._internal_targetid());
  }
  if (from.targettype() != 0) {
    _internal_set_targettype(from._internal_targettype());
  }
}

void ImMessage_ChatTarget::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.ImMessage.ChatTarget)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImMessage_ChatTarget::CopyFrom(const ImMessage_ChatTarget& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.ImMessage.ChatTarget)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImMessage_ChatTarget::IsInitialized() const {
  return true;
}

void ImMessage_ChatTarget::InternalSwap(ImMessage_ChatTarget* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  targetid_.Swap(&other->targetid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(targettype_, other->targettype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ImMessage_ChatTarget::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ImMessage_SessionListResponse::_Internal {
 public:
  static const ::AcFunDanmu::Im::Basic_SyncCookie& synccookie(const ImMessage_SessionListResponse* msg);
};

const ::AcFunDanmu::Im::Basic_SyncCookie&
ImMessage_SessionListResponse::_Internal::synccookie(const ImMessage_SessionListResponse* msg) {
  return *msg->synccookie_;
}
ImMessage_SessionListResponse::ImMessage_SessionListResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  sessions_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.ImMessage.SessionListResponse)
}
ImMessage_SessionListResponse::ImMessage_SessionListResponse(const ImMessage_SessionListResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      sessions_(from.sessions_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_synccookie()) {
    synccookie_ = new ::AcFunDanmu::Im::Basic_SyncCookie(*from.synccookie_);
  } else {
    synccookie_ = nullptr;
  }
  ::memcpy(&servertime_, &from.servertime_,
    static_cast<size_t>(reinterpret_cast<char*>(&clientdatastatus_) -
    reinterpret_cast<char*>(&servertime_)) + sizeof(clientdatastatus_));
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.ImMessage.SessionListResponse)
}

void ImMessage_SessionListResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ImMessage_SessionListResponse_Im_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&synccookie_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&clientdatastatus_) -
      reinterpret_cast<char*>(&synccookie_)) + sizeof(clientdatastatus_));
}

ImMessage_SessionListResponse::~ImMessage_SessionListResponse() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.ImMessage.SessionListResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ImMessage_SessionListResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete synccookie_;
}

void ImMessage_SessionListResponse::ArenaDtor(void* object) {
  ImMessage_SessionListResponse* _this = reinterpret_cast< ImMessage_SessionListResponse* >(object);
  (void)_this;
}
void ImMessage_SessionListResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ImMessage_SessionListResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ImMessage_SessionListResponse& ImMessage_SessionListResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ImMessage_SessionListResponse_Im_2eproto.base);
  return *internal_default_instance();
}


void ImMessage_SessionListResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.ImMessage.SessionListResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sessions_.Clear();
  if (GetArena() == nullptr && synccookie_ != nullptr) {
    delete synccookie_;
  }
  synccookie_ = nullptr;
  ::memset(&servertime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&clientdatastatus_) -
      reinterpret_cast<char*>(&servertime_)) + sizeof(clientdatastatus_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ImMessage_SessionListResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .AcFunDanmu.Im.Basic.SyncCookie syncCookie = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_synccookie(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .AcFunDanmu.Im.ImMessage.ChatSession sessions = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_sessions(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // bool notFullFetch = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          notfullfetch_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 serverTime = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          servertime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool clearLocalData = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          clearlocaldata_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 categoryId = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          categoryid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 clientDataStatus = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          clientdatastatus_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ImMessage_SessionListResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.ImMessage.SessionListResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .AcFunDanmu.Im.Basic.SyncCookie syncCookie = 1;
  if (this->has_synccookie()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::synccookie(this), target, stream);
  }

  // repeated .AcFunDanmu.Im.ImMessage.ChatSession sessions = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_sessions_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_sessions(i), target, stream);
  }

  // bool notFullFetch = 3;
  if (this->notfullfetch() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_notfullfetch(), target);
  }

  // int64 serverTime = 4;
  if (this->servertime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(4, this->_internal_servertime(), target);
  }

  // bool clearLocalData = 5;
  if (this->clearlocaldata() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(5, this->_internal_clearlocaldata(), target);
  }

  // int32 categoryId = 6;
  if (this->categoryid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->_internal_categoryid(), target);
  }

  // int32 clientDataStatus = 7;
  if (this->clientdatastatus() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(7, this->_internal_clientdatastatus(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.ImMessage.SessionListResponse)
  return target;
}

size_t ImMessage_SessionListResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.ImMessage.SessionListResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .AcFunDanmu.Im.ImMessage.ChatSession sessions = 2;
  total_size += 1UL * this->_internal_sessions_size();
  for (const auto& msg : this->sessions_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .AcFunDanmu.Im.Basic.SyncCookie syncCookie = 1;
  if (this->has_synccookie()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *synccookie_);
  }

  // int64 serverTime = 4;
  if (this->servertime() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_servertime());
  }

  // bool notFullFetch = 3;
  if (this->notfullfetch() != 0) {
    total_size += 1 + 1;
  }

  // bool clearLocalData = 5;
  if (this->clearlocaldata() != 0) {
    total_size += 1 + 1;
  }

  // int32 categoryId = 6;
  if (this->categoryid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_categoryid());
  }

  // int32 clientDataStatus = 7;
  if (this->clientdatastatus() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_clientdatastatus());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImMessage_SessionListResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.ImMessage.SessionListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ImMessage_SessionListResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ImMessage_SessionListResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.ImMessage.SessionListResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.ImMessage.SessionListResponse)
    MergeFrom(*source);
  }
}

void ImMessage_SessionListResponse::MergeFrom(const ImMessage_SessionListResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.ImMessage.SessionListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  sessions_.MergeFrom(from.sessions_);
  if (from.has_synccookie()) {
    _internal_mutable_synccookie()->::AcFunDanmu::Im::Basic_SyncCookie::MergeFrom(from._internal_synccookie());
  }
  if (from.servertime() != 0) {
    _internal_set_servertime(from._internal_servertime());
  }
  if (from.notfullfetch() != 0) {
    _internal_set_notfullfetch(from._internal_notfullfetch());
  }
  if (from.clearlocaldata() != 0) {
    _internal_set_clearlocaldata(from._internal_clearlocaldata());
  }
  if (from.categoryid() != 0) {
    _internal_set_categoryid(from._internal_categoryid());
  }
  if (from.clientdatastatus() != 0) {
    _internal_set_clientdatastatus(from._internal_clientdatastatus());
  }
}

void ImMessage_SessionListResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.ImMessage.SessionListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImMessage_SessionListResponse::CopyFrom(const ImMessage_SessionListResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.ImMessage.SessionListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImMessage_SessionListResponse::IsInitialized() const {
  return true;
}

void ImMessage_SessionListResponse::InternalSwap(ImMessage_SessionListResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  sessions_.InternalSwap(&other->sessions_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ImMessage_SessionListResponse, clientdatastatus_)
      + sizeof(ImMessage_SessionListResponse::clientdatastatus_)
      - PROTOBUF_FIELD_OFFSET(ImMessage_SessionListResponse, synccookie_)>(
          reinterpret_cast<char*>(&synccookie_),
          reinterpret_cast<char*>(&other->synccookie_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ImMessage_SessionListResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ImMessage_SessionPageListRequest::_Internal {
 public:
};

ImMessage_SessionPageListRequest::ImMessage_SessionPageListRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.ImMessage.SessionPageListRequest)
}
ImMessage_SessionPageListRequest::ImMessage_SessionPageListRequest(const ImMessage_SessionPageListRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  cursor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_cursor().empty()) {
    cursor_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_cursor(), 
      GetArena());
  }
  ::memcpy(&count_, &from.count_,
    static_cast<size_t>(reinterpret_cast<char*>(&categoryid_) -
    reinterpret_cast<char*>(&count_)) + sizeof(categoryid_));
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.ImMessage.SessionPageListRequest)
}

void ImMessage_SessionPageListRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ImMessage_SessionPageListRequest_Im_2eproto.base);
  cursor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&count_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&categoryid_) -
      reinterpret_cast<char*>(&count_)) + sizeof(categoryid_));
}

ImMessage_SessionPageListRequest::~ImMessage_SessionPageListRequest() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.ImMessage.SessionPageListRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ImMessage_SessionPageListRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  cursor_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ImMessage_SessionPageListRequest::ArenaDtor(void* object) {
  ImMessage_SessionPageListRequest* _this = reinterpret_cast< ImMessage_SessionPageListRequest* >(object);
  (void)_this;
}
void ImMessage_SessionPageListRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ImMessage_SessionPageListRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ImMessage_SessionPageListRequest& ImMessage_SessionPageListRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ImMessage_SessionPageListRequest_Im_2eproto.base);
  return *internal_default_instance();
}


void ImMessage_SessionPageListRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.ImMessage.SessionPageListRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cursor_.ClearToEmpty();
  ::memset(&count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&categoryid_) -
      reinterpret_cast<char*>(&count_)) + sizeof(categoryid_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ImMessage_SessionPageListRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string cursor = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_cursor();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.ImMessage.SessionPageListRequest.cursor"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 count = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 categoryId = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          categoryid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ImMessage_SessionPageListRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.ImMessage.SessionPageListRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cursor = 1;
  if (this->cursor().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_cursor().data(), static_cast<int>(this->_internal_cursor().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.ImMessage.SessionPageListRequest.cursor");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_cursor(), target);
  }

  // int32 count = 2;
  if (this->count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_count(), target);
  }

  // int32 categoryId = 3;
  if (this->categoryid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_categoryid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.ImMessage.SessionPageListRequest)
  return target;
}

size_t ImMessage_SessionPageListRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.ImMessage.SessionPageListRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string cursor = 1;
  if (this->cursor().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_cursor());
  }

  // int32 count = 2;
  if (this->count() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_count());
  }

  // int32 categoryId = 3;
  if (this->categoryid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_categoryid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImMessage_SessionPageListRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.ImMessage.SessionPageListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ImMessage_SessionPageListRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ImMessage_SessionPageListRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.ImMessage.SessionPageListRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.ImMessage.SessionPageListRequest)
    MergeFrom(*source);
  }
}

void ImMessage_SessionPageListRequest::MergeFrom(const ImMessage_SessionPageListRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.ImMessage.SessionPageListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cursor().size() > 0) {
    _internal_set_cursor(from._internal_cursor());
  }
  if (from.count() != 0) {
    _internal_set_count(from._internal_count());
  }
  if (from.categoryid() != 0) {
    _internal_set_categoryid(from._internal_categoryid());
  }
}

void ImMessage_SessionPageListRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.ImMessage.SessionPageListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImMessage_SessionPageListRequest::CopyFrom(const ImMessage_SessionPageListRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.ImMessage.SessionPageListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImMessage_SessionPageListRequest::IsInitialized() const {
  return true;
}

void ImMessage_SessionPageListRequest::InternalSwap(ImMessage_SessionPageListRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  cursor_.Swap(&other->cursor_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ImMessage_SessionPageListRequest, categoryid_)
      + sizeof(ImMessage_SessionPageListRequest::categoryid_)
      - PROTOBUF_FIELD_OFFSET(ImMessage_SessionPageListRequest, count_)>(
          reinterpret_cast<char*>(&count_),
          reinterpret_cast<char*>(&other->count_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ImMessage_SessionPageListRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ImMessage_SessionPageListResponse::_Internal {
 public:
};

ImMessage_SessionPageListResponse::ImMessage_SessionPageListResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  sessions_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.ImMessage.SessionPageListResponse)
}
ImMessage_SessionPageListResponse::ImMessage_SessionPageListResponse(const ImMessage_SessionPageListResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      sessions_(from.sessions_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  hasmore_ = from.hasmore_;
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.ImMessage.SessionPageListResponse)
}

void ImMessage_SessionPageListResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ImMessage_SessionPageListResponse_Im_2eproto.base);
  hasmore_ = false;
}

ImMessage_SessionPageListResponse::~ImMessage_SessionPageListResponse() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.ImMessage.SessionPageListResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ImMessage_SessionPageListResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ImMessage_SessionPageListResponse::ArenaDtor(void* object) {
  ImMessage_SessionPageListResponse* _this = reinterpret_cast< ImMessage_SessionPageListResponse* >(object);
  (void)_this;
}
void ImMessage_SessionPageListResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ImMessage_SessionPageListResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ImMessage_SessionPageListResponse& ImMessage_SessionPageListResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ImMessage_SessionPageListResponse_Im_2eproto.base);
  return *internal_default_instance();
}


void ImMessage_SessionPageListResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.ImMessage.SessionPageListResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sessions_.Clear();
  hasmore_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ImMessage_SessionPageListResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool hasMore = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          hasmore_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .AcFunDanmu.Im.ImMessage.ChatSession sessions = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_sessions(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ImMessage_SessionPageListResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.ImMessage.SessionPageListResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool hasMore = 1;
  if (this->hasmore() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_hasmore(), target);
  }

  // repeated .AcFunDanmu.Im.ImMessage.ChatSession sessions = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_sessions_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_sessions(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.ImMessage.SessionPageListResponse)
  return target;
}

size_t ImMessage_SessionPageListResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.ImMessage.SessionPageListResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .AcFunDanmu.Im.ImMessage.ChatSession sessions = 2;
  total_size += 1UL * this->_internal_sessions_size();
  for (const auto& msg : this->sessions_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // bool hasMore = 1;
  if (this->hasmore() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImMessage_SessionPageListResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.ImMessage.SessionPageListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ImMessage_SessionPageListResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ImMessage_SessionPageListResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.ImMessage.SessionPageListResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.ImMessage.SessionPageListResponse)
    MergeFrom(*source);
  }
}

void ImMessage_SessionPageListResponse::MergeFrom(const ImMessage_SessionPageListResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.ImMessage.SessionPageListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  sessions_.MergeFrom(from.sessions_);
  if (from.hasmore() != 0) {
    _internal_set_hasmore(from._internal_hasmore());
  }
}

void ImMessage_SessionPageListResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.ImMessage.SessionPageListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImMessage_SessionPageListResponse::CopyFrom(const ImMessage_SessionPageListResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.ImMessage.SessionPageListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImMessage_SessionPageListResponse::IsInitialized() const {
  return true;
}

void ImMessage_SessionPageListResponse::InternalSwap(ImMessage_SessionPageListResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  sessions_.InternalSwap(&other->sessions_);
  swap(hasmore_, other->hasmore_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ImMessage_SessionPageListResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ImMessage_SessionRemoveRequest::_Internal {
 public:
};

ImMessage_SessionRemoveRequest::ImMessage_SessionRemoveRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.ImMessage.SessionRemoveRequest)
}
ImMessage_SessionRemoveRequest::ImMessage_SessionRemoveRequest(const ImMessage_SessionRemoveRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  strtargetid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_strtargetid().empty()) {
    strtargetid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_strtargetid(), 
      GetArena());
  }
  ::memcpy(&targetid_, &from.targetid_,
    static_cast<size_t>(reinterpret_cast<char*>(&notcleanallmessages_) -
    reinterpret_cast<char*>(&targetid_)) + sizeof(notcleanallmessages_));
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.ImMessage.SessionRemoveRequest)
}

void ImMessage_SessionRemoveRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ImMessage_SessionRemoveRequest_Im_2eproto.base);
  strtargetid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&targetid_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&notcleanallmessages_) -
      reinterpret_cast<char*>(&targetid_)) + sizeof(notcleanallmessages_));
}

ImMessage_SessionRemoveRequest::~ImMessage_SessionRemoveRequest() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.ImMessage.SessionRemoveRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ImMessage_SessionRemoveRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  strtargetid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ImMessage_SessionRemoveRequest::ArenaDtor(void* object) {
  ImMessage_SessionRemoveRequest* _this = reinterpret_cast< ImMessage_SessionRemoveRequest* >(object);
  (void)_this;
}
void ImMessage_SessionRemoveRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ImMessage_SessionRemoveRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ImMessage_SessionRemoveRequest& ImMessage_SessionRemoveRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ImMessage_SessionRemoveRequest_Im_2eproto.base);
  return *internal_default_instance();
}


void ImMessage_SessionRemoveRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.ImMessage.SessionRemoveRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  strtargetid_.ClearToEmpty();
  ::memset(&targetid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&notcleanallmessages_) -
      reinterpret_cast<char*>(&targetid_)) + sizeof(notcleanallmessages_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ImMessage_SessionRemoveRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 targetId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          targetid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .AcFunDanmu.Im.ImMessage.ChatTargetType chatTargetType = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_chattargettype(static_cast<::AcFunDanmu::Im::ImMessage_ChatTargetType>(val));
        } else goto handle_unusual;
        continue;
      // int32 categoryId = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          categoryid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string strTargetId = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_strtargetid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.ImMessage.SessionRemoveRequest.strTargetId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool notCleanAllMessages = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          notcleanallmessages_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ImMessage_SessionRemoveRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.ImMessage.SessionRemoveRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 targetId = 1;
  if (this->targetid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_targetid(), target);
  }

  // .AcFunDanmu.Im.ImMessage.ChatTargetType chatTargetType = 2;
  if (this->chattargettype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_chattargettype(), target);
  }

  // int32 categoryId = 3;
  if (this->categoryid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_categoryid(), target);
  }

  // string strTargetId = 4;
  if (this->strtargetid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_strtargetid().data(), static_cast<int>(this->_internal_strtargetid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.ImMessage.SessionRemoveRequest.strTargetId");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_strtargetid(), target);
  }

  // bool notCleanAllMessages = 5;
  if (this->notcleanallmessages() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(5, this->_internal_notcleanallmessages(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.ImMessage.SessionRemoveRequest)
  return target;
}

size_t ImMessage_SessionRemoveRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.ImMessage.SessionRemoveRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string strTargetId = 4;
  if (this->strtargetid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_strtargetid());
  }

  // int64 targetId = 1;
  if (this->targetid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_targetid());
  }

  // .AcFunDanmu.Im.ImMessage.ChatTargetType chatTargetType = 2;
  if (this->chattargettype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_chattargettype());
  }

  // int32 categoryId = 3;
  if (this->categoryid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_categoryid());
  }

  // bool notCleanAllMessages = 5;
  if (this->notcleanallmessages() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImMessage_SessionRemoveRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.ImMessage.SessionRemoveRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ImMessage_SessionRemoveRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ImMessage_SessionRemoveRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.ImMessage.SessionRemoveRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.ImMessage.SessionRemoveRequest)
    MergeFrom(*source);
  }
}

void ImMessage_SessionRemoveRequest::MergeFrom(const ImMessage_SessionRemoveRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.ImMessage.SessionRemoveRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.strtargetid().size() > 0) {
    _internal_set_strtargetid(from._internal_strtargetid());
  }
  if (from.targetid() != 0) {
    _internal_set_targetid(from._internal_targetid());
  }
  if (from.chattargettype() != 0) {
    _internal_set_chattargettype(from._internal_chattargettype());
  }
  if (from.categoryid() != 0) {
    _internal_set_categoryid(from._internal_categoryid());
  }
  if (from.notcleanallmessages() != 0) {
    _internal_set_notcleanallmessages(from._internal_notcleanallmessages());
  }
}

void ImMessage_SessionRemoveRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.ImMessage.SessionRemoveRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImMessage_SessionRemoveRequest::CopyFrom(const ImMessage_SessionRemoveRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.ImMessage.SessionRemoveRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImMessage_SessionRemoveRequest::IsInitialized() const {
  return true;
}

void ImMessage_SessionRemoveRequest::InternalSwap(ImMessage_SessionRemoveRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  strtargetid_.Swap(&other->strtargetid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ImMessage_SessionRemoveRequest, notcleanallmessages_)
      + sizeof(ImMessage_SessionRemoveRequest::notcleanallmessages_)
      - PROTOBUF_FIELD_OFFSET(ImMessage_SessionRemoveRequest, targetid_)>(
          reinterpret_cast<char*>(&targetid_),
          reinterpret_cast<char*>(&other->targetid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ImMessage_SessionRemoveRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ImMessage_SessionRemoveResponse::_Internal {
 public:
};

ImMessage_SessionRemoveResponse::ImMessage_SessionRemoveResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.ImMessage.SessionRemoveResponse)
}
ImMessage_SessionRemoveResponse::ImMessage_SessionRemoveResponse(const ImMessage_SessionRemoveResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.ImMessage.SessionRemoveResponse)
}

void ImMessage_SessionRemoveResponse::SharedCtor() {
}

ImMessage_SessionRemoveResponse::~ImMessage_SessionRemoveResponse() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.ImMessage.SessionRemoveResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ImMessage_SessionRemoveResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ImMessage_SessionRemoveResponse::ArenaDtor(void* object) {
  ImMessage_SessionRemoveResponse* _this = reinterpret_cast< ImMessage_SessionRemoveResponse* >(object);
  (void)_this;
}
void ImMessage_SessionRemoveResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ImMessage_SessionRemoveResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ImMessage_SessionRemoveResponse& ImMessage_SessionRemoveResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ImMessage_SessionRemoveResponse_Im_2eproto.base);
  return *internal_default_instance();
}


void ImMessage_SessionRemoveResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.ImMessage.SessionRemoveResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ImMessage_SessionRemoveResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ImMessage_SessionRemoveResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.ImMessage.SessionRemoveResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.ImMessage.SessionRemoveResponse)
  return target;
}

size_t ImMessage_SessionRemoveResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.ImMessage.SessionRemoveResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImMessage_SessionRemoveResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.ImMessage.SessionRemoveResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ImMessage_SessionRemoveResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ImMessage_SessionRemoveResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.ImMessage.SessionRemoveResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.ImMessage.SessionRemoveResponse)
    MergeFrom(*source);
  }
}

void ImMessage_SessionRemoveResponse::MergeFrom(const ImMessage_SessionRemoveResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.ImMessage.SessionRemoveResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ImMessage_SessionRemoveResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.ImMessage.SessionRemoveResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImMessage_SessionRemoveResponse::CopyFrom(const ImMessage_SessionRemoveResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.ImMessage.SessionRemoveResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImMessage_SessionRemoveResponse::IsInitialized() const {
  return true;
}

void ImMessage_SessionRemoveResponse::InternalSwap(ImMessage_SessionRemoveResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ImMessage_SessionRemoveResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ImMessage_SessionCleanRequest::_Internal {
 public:
  static const ::AcFunDanmu::Im::ImMessage_ChatTarget& chattarget(const ImMessage_SessionCleanRequest* msg);
};

const ::AcFunDanmu::Im::ImMessage_ChatTarget&
ImMessage_SessionCleanRequest::_Internal::chattarget(const ImMessage_SessionCleanRequest* msg) {
  return *msg->chattarget_;
}
ImMessage_SessionCleanRequest::ImMessage_SessionCleanRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.ImMessage.SessionCleanRequest)
}
ImMessage_SessionCleanRequest::ImMessage_SessionCleanRequest(const ImMessage_SessionCleanRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_chattarget()) {
    chattarget_ = new ::AcFunDanmu::Im::ImMessage_ChatTarget(*from.chattarget_);
  } else {
    chattarget_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.ImMessage.SessionCleanRequest)
}

void ImMessage_SessionCleanRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ImMessage_SessionCleanRequest_Im_2eproto.base);
  chattarget_ = nullptr;
}

ImMessage_SessionCleanRequest::~ImMessage_SessionCleanRequest() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.ImMessage.SessionCleanRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ImMessage_SessionCleanRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete chattarget_;
}

void ImMessage_SessionCleanRequest::ArenaDtor(void* object) {
  ImMessage_SessionCleanRequest* _this = reinterpret_cast< ImMessage_SessionCleanRequest* >(object);
  (void)_this;
}
void ImMessage_SessionCleanRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ImMessage_SessionCleanRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ImMessage_SessionCleanRequest& ImMessage_SessionCleanRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ImMessage_SessionCleanRequest_Im_2eproto.base);
  return *internal_default_instance();
}


void ImMessage_SessionCleanRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.ImMessage.SessionCleanRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && chattarget_ != nullptr) {
    delete chattarget_;
  }
  chattarget_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ImMessage_SessionCleanRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .AcFunDanmu.Im.ImMessage.ChatTarget chatTarget = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_chattarget(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ImMessage_SessionCleanRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.ImMessage.SessionCleanRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .AcFunDanmu.Im.ImMessage.ChatTarget chatTarget = 1;
  if (this->has_chattarget()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::chattarget(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.ImMessage.SessionCleanRequest)
  return target;
}

size_t ImMessage_SessionCleanRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.ImMessage.SessionCleanRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .AcFunDanmu.Im.ImMessage.ChatTarget chatTarget = 1;
  if (this->has_chattarget()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *chattarget_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImMessage_SessionCleanRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.ImMessage.SessionCleanRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ImMessage_SessionCleanRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ImMessage_SessionCleanRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.ImMessage.SessionCleanRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.ImMessage.SessionCleanRequest)
    MergeFrom(*source);
  }
}

void ImMessage_SessionCleanRequest::MergeFrom(const ImMessage_SessionCleanRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.ImMessage.SessionCleanRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_chattarget()) {
    _internal_mutable_chattarget()->::AcFunDanmu::Im::ImMessage_ChatTarget::MergeFrom(from._internal_chattarget());
  }
}

void ImMessage_SessionCleanRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.ImMessage.SessionCleanRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImMessage_SessionCleanRequest::CopyFrom(const ImMessage_SessionCleanRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.ImMessage.SessionCleanRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImMessage_SessionCleanRequest::IsInitialized() const {
  return true;
}

void ImMessage_SessionCleanRequest::InternalSwap(ImMessage_SessionCleanRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(chattarget_, other->chattarget_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ImMessage_SessionCleanRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ImMessage_SessionCleanResponse::_Internal {
 public:
};

ImMessage_SessionCleanResponse::ImMessage_SessionCleanResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.ImMessage.SessionCleanResponse)
}
ImMessage_SessionCleanResponse::ImMessage_SessionCleanResponse(const ImMessage_SessionCleanResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.ImMessage.SessionCleanResponse)
}

void ImMessage_SessionCleanResponse::SharedCtor() {
}

ImMessage_SessionCleanResponse::~ImMessage_SessionCleanResponse() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.ImMessage.SessionCleanResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ImMessage_SessionCleanResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ImMessage_SessionCleanResponse::ArenaDtor(void* object) {
  ImMessage_SessionCleanResponse* _this = reinterpret_cast< ImMessage_SessionCleanResponse* >(object);
  (void)_this;
}
void ImMessage_SessionCleanResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ImMessage_SessionCleanResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ImMessage_SessionCleanResponse& ImMessage_SessionCleanResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ImMessage_SessionCleanResponse_Im_2eproto.base);
  return *internal_default_instance();
}


void ImMessage_SessionCleanResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.ImMessage.SessionCleanResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ImMessage_SessionCleanResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ImMessage_SessionCleanResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.ImMessage.SessionCleanResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.ImMessage.SessionCleanResponse)
  return target;
}

size_t ImMessage_SessionCleanResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.ImMessage.SessionCleanResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImMessage_SessionCleanResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.ImMessage.SessionCleanResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ImMessage_SessionCleanResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ImMessage_SessionCleanResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.ImMessage.SessionCleanResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.ImMessage.SessionCleanResponse)
    MergeFrom(*source);
  }
}

void ImMessage_SessionCleanResponse::MergeFrom(const ImMessage_SessionCleanResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.ImMessage.SessionCleanResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ImMessage_SessionCleanResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.ImMessage.SessionCleanResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImMessage_SessionCleanResponse::CopyFrom(const ImMessage_SessionCleanResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.ImMessage.SessionCleanResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImMessage_SessionCleanResponse::IsInitialized() const {
  return true;
}

void ImMessage_SessionCleanResponse::InternalSwap(ImMessage_SessionCleanResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ImMessage_SessionCleanResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ImMessage_MessageDeleteRequest::_Internal {
 public:
};

ImMessage_MessageDeleteRequest::ImMessage_MessageDeleteRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  seqid_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.ImMessage.MessageDeleteRequest)
}
ImMessage_MessageDeleteRequest::ImMessage_MessageDeleteRequest(const ImMessage_MessageDeleteRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      seqid_(from.seqid_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  strtargetid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_strtargetid().empty()) {
    strtargetid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_strtargetid(), 
      GetArena());
  }
  ::memcpy(&targetid_, &from.targetid_,
    static_cast<size_t>(reinterpret_cast<char*>(&chattargettype_) -
    reinterpret_cast<char*>(&targetid_)) + sizeof(chattargettype_));
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.ImMessage.MessageDeleteRequest)
}

void ImMessage_MessageDeleteRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ImMessage_MessageDeleteRequest_Im_2eproto.base);
  strtargetid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&targetid_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&chattargettype_) -
      reinterpret_cast<char*>(&targetid_)) + sizeof(chattargettype_));
}

ImMessage_MessageDeleteRequest::~ImMessage_MessageDeleteRequest() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.ImMessage.MessageDeleteRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ImMessage_MessageDeleteRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  strtargetid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ImMessage_MessageDeleteRequest::ArenaDtor(void* object) {
  ImMessage_MessageDeleteRequest* _this = reinterpret_cast< ImMessage_MessageDeleteRequest* >(object);
  (void)_this;
}
void ImMessage_MessageDeleteRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ImMessage_MessageDeleteRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ImMessage_MessageDeleteRequest& ImMessage_MessageDeleteRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ImMessage_MessageDeleteRequest_Im_2eproto.base);
  return *internal_default_instance();
}


void ImMessage_MessageDeleteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.ImMessage.MessageDeleteRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  seqid_.Clear();
  strtargetid_.ClearToEmpty();
  ::memset(&targetid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&chattargettype_) -
      reinterpret_cast<char*>(&targetid_)) + sizeof(chattargettype_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ImMessage_MessageDeleteRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 targetId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          targetid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .AcFunDanmu.Im.ImMessage.ChatTargetType chatTargetType = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_chattargettype(static_cast<::AcFunDanmu::Im::ImMessage_ChatTargetType>(val));
        } else goto handle_unusual;
        continue;
      // repeated int64 seqId = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt64Parser(_internal_mutable_seqid(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24) {
          _internal_add_seqid(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string strTargetId = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_strtargetid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.ImMessage.MessageDeleteRequest.strTargetId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ImMessage_MessageDeleteRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.ImMessage.MessageDeleteRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 targetId = 1;
  if (this->targetid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_targetid(), target);
  }

  // .AcFunDanmu.Im.ImMessage.ChatTargetType chatTargetType = 2;
  if (this->chattargettype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_chattargettype(), target);
  }

  // repeated int64 seqId = 3;
  {
    int byte_size = _seqid_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt64Packed(
          3, _internal_seqid(), byte_size, target);
    }
  }

  // string strTargetId = 4;
  if (this->strtargetid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_strtargetid().data(), static_cast<int>(this->_internal_strtargetid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.ImMessage.MessageDeleteRequest.strTargetId");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_strtargetid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.ImMessage.MessageDeleteRequest)
  return target;
}

size_t ImMessage_MessageDeleteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.ImMessage.MessageDeleteRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int64 seqId = 3;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      Int64Size(this->seqid_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _seqid_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // string strTargetId = 4;
  if (this->strtargetid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_strtargetid());
  }

  // int64 targetId = 1;
  if (this->targetid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_targetid());
  }

  // .AcFunDanmu.Im.ImMessage.ChatTargetType chatTargetType = 2;
  if (this->chattargettype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_chattargettype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImMessage_MessageDeleteRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.ImMessage.MessageDeleteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ImMessage_MessageDeleteRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ImMessage_MessageDeleteRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.ImMessage.MessageDeleteRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.ImMessage.MessageDeleteRequest)
    MergeFrom(*source);
  }
}

void ImMessage_MessageDeleteRequest::MergeFrom(const ImMessage_MessageDeleteRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.ImMessage.MessageDeleteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  seqid_.MergeFrom(from.seqid_);
  if (from.strtargetid().size() > 0) {
    _internal_set_strtargetid(from._internal_strtargetid());
  }
  if (from.targetid() != 0) {
    _internal_set_targetid(from._internal_targetid());
  }
  if (from.chattargettype() != 0) {
    _internal_set_chattargettype(from._internal_chattargettype());
  }
}

void ImMessage_MessageDeleteRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.ImMessage.MessageDeleteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImMessage_MessageDeleteRequest::CopyFrom(const ImMessage_MessageDeleteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.ImMessage.MessageDeleteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImMessage_MessageDeleteRequest::IsInitialized() const {
  return true;
}

void ImMessage_MessageDeleteRequest::InternalSwap(ImMessage_MessageDeleteRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  seqid_.InternalSwap(&other->seqid_);
  strtargetid_.Swap(&other->strtargetid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ImMessage_MessageDeleteRequest, chattargettype_)
      + sizeof(ImMessage_MessageDeleteRequest::chattargettype_)
      - PROTOBUF_FIELD_OFFSET(ImMessage_MessageDeleteRequest, targetid_)>(
          reinterpret_cast<char*>(&targetid_),
          reinterpret_cast<char*>(&other->targetid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ImMessage_MessageDeleteRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ImMessage_MessageDeleteResponse::_Internal {
 public:
};

ImMessage_MessageDeleteResponse::ImMessage_MessageDeleteResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.ImMessage.MessageDeleteResponse)
}
ImMessage_MessageDeleteResponse::ImMessage_MessageDeleteResponse(const ImMessage_MessageDeleteResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.ImMessage.MessageDeleteResponse)
}

void ImMessage_MessageDeleteResponse::SharedCtor() {
}

ImMessage_MessageDeleteResponse::~ImMessage_MessageDeleteResponse() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.ImMessage.MessageDeleteResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ImMessage_MessageDeleteResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ImMessage_MessageDeleteResponse::ArenaDtor(void* object) {
  ImMessage_MessageDeleteResponse* _this = reinterpret_cast< ImMessage_MessageDeleteResponse* >(object);
  (void)_this;
}
void ImMessage_MessageDeleteResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ImMessage_MessageDeleteResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ImMessage_MessageDeleteResponse& ImMessage_MessageDeleteResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ImMessage_MessageDeleteResponse_Im_2eproto.base);
  return *internal_default_instance();
}


void ImMessage_MessageDeleteResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.ImMessage.MessageDeleteResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ImMessage_MessageDeleteResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ImMessage_MessageDeleteResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.ImMessage.MessageDeleteResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.ImMessage.MessageDeleteResponse)
  return target;
}

size_t ImMessage_MessageDeleteResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.ImMessage.MessageDeleteResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImMessage_MessageDeleteResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.ImMessage.MessageDeleteResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ImMessage_MessageDeleteResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ImMessage_MessageDeleteResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.ImMessage.MessageDeleteResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.ImMessage.MessageDeleteResponse)
    MergeFrom(*source);
  }
}

void ImMessage_MessageDeleteResponse::MergeFrom(const ImMessage_MessageDeleteResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.ImMessage.MessageDeleteResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ImMessage_MessageDeleteResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.ImMessage.MessageDeleteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImMessage_MessageDeleteResponse::CopyFrom(const ImMessage_MessageDeleteResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.ImMessage.MessageDeleteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImMessage_MessageDeleteResponse::IsInitialized() const {
  return true;
}

void ImMessage_MessageDeleteResponse::InternalSwap(ImMessage_MessageDeleteResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ImMessage_MessageDeleteResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ImMessage_MessageCancelRequest::_Internal {
 public:
  static const ::AcFunDanmu::Im::ImMessage_ChatTarget& chattarget(const ImMessage_MessageCancelRequest* msg);
};

const ::AcFunDanmu::Im::ImMessage_ChatTarget&
ImMessage_MessageCancelRequest::_Internal::chattarget(const ImMessage_MessageCancelRequest* msg) {
  return *msg->chattarget_;
}
ImMessage_MessageCancelRequest::ImMessage_MessageCancelRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  seqid_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.ImMessage.MessageCancelRequest)
}
ImMessage_MessageCancelRequest::ImMessage_MessageCancelRequest(const ImMessage_MessageCancelRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      seqid_(from.seqid_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_chattarget()) {
    chattarget_ = new ::AcFunDanmu::Im::ImMessage_ChatTarget(*from.chattarget_);
  } else {
    chattarget_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.ImMessage.MessageCancelRequest)
}

void ImMessage_MessageCancelRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ImMessage_MessageCancelRequest_Im_2eproto.base);
  chattarget_ = nullptr;
}

ImMessage_MessageCancelRequest::~ImMessage_MessageCancelRequest() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.ImMessage.MessageCancelRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ImMessage_MessageCancelRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete chattarget_;
}

void ImMessage_MessageCancelRequest::ArenaDtor(void* object) {
  ImMessage_MessageCancelRequest* _this = reinterpret_cast< ImMessage_MessageCancelRequest* >(object);
  (void)_this;
}
void ImMessage_MessageCancelRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ImMessage_MessageCancelRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ImMessage_MessageCancelRequest& ImMessage_MessageCancelRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ImMessage_MessageCancelRequest_Im_2eproto.base);
  return *internal_default_instance();
}


void ImMessage_MessageCancelRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.ImMessage.MessageCancelRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  seqid_.Clear();
  if (GetArena() == nullptr && chattarget_ != nullptr) {
    delete chattarget_;
  }
  chattarget_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ImMessage_MessageCancelRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .AcFunDanmu.Im.ImMessage.ChatTarget chatTarget = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_chattarget(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated int64 seqId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt64Parser(_internal_mutable_seqid(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16) {
          _internal_add_seqid(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ImMessage_MessageCancelRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.ImMessage.MessageCancelRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .AcFunDanmu.Im.ImMessage.ChatTarget chatTarget = 1;
  if (this->has_chattarget()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::chattarget(this), target, stream);
  }

  // repeated int64 seqId = 2;
  {
    int byte_size = _seqid_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt64Packed(
          2, _internal_seqid(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.ImMessage.MessageCancelRequest)
  return target;
}

size_t ImMessage_MessageCancelRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.ImMessage.MessageCancelRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int64 seqId = 2;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      Int64Size(this->seqid_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _seqid_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // .AcFunDanmu.Im.ImMessage.ChatTarget chatTarget = 1;
  if (this->has_chattarget()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *chattarget_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImMessage_MessageCancelRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.ImMessage.MessageCancelRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ImMessage_MessageCancelRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ImMessage_MessageCancelRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.ImMessage.MessageCancelRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.ImMessage.MessageCancelRequest)
    MergeFrom(*source);
  }
}

void ImMessage_MessageCancelRequest::MergeFrom(const ImMessage_MessageCancelRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.ImMessage.MessageCancelRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  seqid_.MergeFrom(from.seqid_);
  if (from.has_chattarget()) {
    _internal_mutable_chattarget()->::AcFunDanmu::Im::ImMessage_ChatTarget::MergeFrom(from._internal_chattarget());
  }
}

void ImMessage_MessageCancelRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.ImMessage.MessageCancelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImMessage_MessageCancelRequest::CopyFrom(const ImMessage_MessageCancelRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.ImMessage.MessageCancelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImMessage_MessageCancelRequest::IsInitialized() const {
  return true;
}

void ImMessage_MessageCancelRequest::InternalSwap(ImMessage_MessageCancelRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  seqid_.InternalSwap(&other->seqid_);
  swap(chattarget_, other->chattarget_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ImMessage_MessageCancelRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ImMessage_MessageCancelResponse::_Internal {
 public:
};

ImMessage_MessageCancelResponse::ImMessage_MessageCancelResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.ImMessage.MessageCancelResponse)
}
ImMessage_MessageCancelResponse::ImMessage_MessageCancelResponse(const ImMessage_MessageCancelResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.ImMessage.MessageCancelResponse)
}

void ImMessage_MessageCancelResponse::SharedCtor() {
}

ImMessage_MessageCancelResponse::~ImMessage_MessageCancelResponse() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.ImMessage.MessageCancelResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ImMessage_MessageCancelResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ImMessage_MessageCancelResponse::ArenaDtor(void* object) {
  ImMessage_MessageCancelResponse* _this = reinterpret_cast< ImMessage_MessageCancelResponse* >(object);
  (void)_this;
}
void ImMessage_MessageCancelResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ImMessage_MessageCancelResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ImMessage_MessageCancelResponse& ImMessage_MessageCancelResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ImMessage_MessageCancelResponse_Im_2eproto.base);
  return *internal_default_instance();
}


void ImMessage_MessageCancelResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.ImMessage.MessageCancelResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ImMessage_MessageCancelResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ImMessage_MessageCancelResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.ImMessage.MessageCancelResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.ImMessage.MessageCancelResponse)
  return target;
}

size_t ImMessage_MessageCancelResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.ImMessage.MessageCancelResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImMessage_MessageCancelResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.ImMessage.MessageCancelResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ImMessage_MessageCancelResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ImMessage_MessageCancelResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.ImMessage.MessageCancelResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.ImMessage.MessageCancelResponse)
    MergeFrom(*source);
  }
}

void ImMessage_MessageCancelResponse::MergeFrom(const ImMessage_MessageCancelResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.ImMessage.MessageCancelResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ImMessage_MessageCancelResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.ImMessage.MessageCancelResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImMessage_MessageCancelResponse::CopyFrom(const ImMessage_MessageCancelResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.ImMessage.MessageCancelResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImMessage_MessageCancelResponse::IsInitialized() const {
  return true;
}

void ImMessage_MessageCancelResponse::InternalSwap(ImMessage_MessageCancelResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ImMessage_MessageCancelResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ImMessage_MessageClearRequest::_Internal {
 public:
  static const ::AcFunDanmu::Im::ImMessage_ChatTarget& chattarget(const ImMessage_MessageClearRequest* msg);
};

const ::AcFunDanmu::Im::ImMessage_ChatTarget&
ImMessage_MessageClearRequest::_Internal::chattarget(const ImMessage_MessageClearRequest* msg) {
  return *msg->chattarget_;
}
ImMessage_MessageClearRequest::ImMessage_MessageClearRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.ImMessage.MessageClearRequest)
}
ImMessage_MessageClearRequest::ImMessage_MessageClearRequest(const ImMessage_MessageClearRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_chattarget()) {
    chattarget_ = new ::AcFunDanmu::Im::ImMessage_ChatTarget(*from.chattarget_);
  } else {
    chattarget_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.ImMessage.MessageClearRequest)
}

void ImMessage_MessageClearRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ImMessage_MessageClearRequest_Im_2eproto.base);
  chattarget_ = nullptr;
}

ImMessage_MessageClearRequest::~ImMessage_MessageClearRequest() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.ImMessage.MessageClearRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ImMessage_MessageClearRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete chattarget_;
}

void ImMessage_MessageClearRequest::ArenaDtor(void* object) {
  ImMessage_MessageClearRequest* _this = reinterpret_cast< ImMessage_MessageClearRequest* >(object);
  (void)_this;
}
void ImMessage_MessageClearRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ImMessage_MessageClearRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ImMessage_MessageClearRequest& ImMessage_MessageClearRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ImMessage_MessageClearRequest_Im_2eproto.base);
  return *internal_default_instance();
}


void ImMessage_MessageClearRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.ImMessage.MessageClearRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && chattarget_ != nullptr) {
    delete chattarget_;
  }
  chattarget_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ImMessage_MessageClearRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .AcFunDanmu.Im.ImMessage.ChatTarget chatTarget = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_chattarget(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ImMessage_MessageClearRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.ImMessage.MessageClearRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .AcFunDanmu.Im.ImMessage.ChatTarget chatTarget = 1;
  if (this->has_chattarget()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::chattarget(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.ImMessage.MessageClearRequest)
  return target;
}

size_t ImMessage_MessageClearRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.ImMessage.MessageClearRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .AcFunDanmu.Im.ImMessage.ChatTarget chatTarget = 1;
  if (this->has_chattarget()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *chattarget_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImMessage_MessageClearRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.ImMessage.MessageClearRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ImMessage_MessageClearRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ImMessage_MessageClearRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.ImMessage.MessageClearRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.ImMessage.MessageClearRequest)
    MergeFrom(*source);
  }
}

void ImMessage_MessageClearRequest::MergeFrom(const ImMessage_MessageClearRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.ImMessage.MessageClearRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_chattarget()) {
    _internal_mutable_chattarget()->::AcFunDanmu::Im::ImMessage_ChatTarget::MergeFrom(from._internal_chattarget());
  }
}

void ImMessage_MessageClearRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.ImMessage.MessageClearRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImMessage_MessageClearRequest::CopyFrom(const ImMessage_MessageClearRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.ImMessage.MessageClearRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImMessage_MessageClearRequest::IsInitialized() const {
  return true;
}

void ImMessage_MessageClearRequest::InternalSwap(ImMessage_MessageClearRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(chattarget_, other->chattarget_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ImMessage_MessageClearRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ImMessage_MessageClearResponse::_Internal {
 public:
};

ImMessage_MessageClearResponse::ImMessage_MessageClearResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.ImMessage.MessageClearResponse)
}
ImMessage_MessageClearResponse::ImMessage_MessageClearResponse(const ImMessage_MessageClearResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.ImMessage.MessageClearResponse)
}

void ImMessage_MessageClearResponse::SharedCtor() {
}

ImMessage_MessageClearResponse::~ImMessage_MessageClearResponse() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.ImMessage.MessageClearResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ImMessage_MessageClearResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ImMessage_MessageClearResponse::ArenaDtor(void* object) {
  ImMessage_MessageClearResponse* _this = reinterpret_cast< ImMessage_MessageClearResponse* >(object);
  (void)_this;
}
void ImMessage_MessageClearResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ImMessage_MessageClearResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ImMessage_MessageClearResponse& ImMessage_MessageClearResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ImMessage_MessageClearResponse_Im_2eproto.base);
  return *internal_default_instance();
}


void ImMessage_MessageClearResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.ImMessage.MessageClearResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ImMessage_MessageClearResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ImMessage_MessageClearResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.ImMessage.MessageClearResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.ImMessage.MessageClearResponse)
  return target;
}

size_t ImMessage_MessageClearResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.ImMessage.MessageClearResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImMessage_MessageClearResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.ImMessage.MessageClearResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ImMessage_MessageClearResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ImMessage_MessageClearResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.ImMessage.MessageClearResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.ImMessage.MessageClearResponse)
    MergeFrom(*source);
  }
}

void ImMessage_MessageClearResponse::MergeFrom(const ImMessage_MessageClearResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.ImMessage.MessageClearResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ImMessage_MessageClearResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.ImMessage.MessageClearResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImMessage_MessageClearResponse::CopyFrom(const ImMessage_MessageClearResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.ImMessage.MessageClearResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImMessage_MessageClearResponse::IsInitialized() const {
  return true;
}

void ImMessage_MessageClearResponse::InternalSwap(ImMessage_MessageClearResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ImMessage_MessageClearResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ImMessage_ReadSeqInfo::_Internal {
 public:
  static const ::AcFunDanmu::Im::ImMessage_ChatTarget& chattarget(const ImMessage_ReadSeqInfo* msg);
};

const ::AcFunDanmu::Im::ImMessage_ChatTarget&
ImMessage_ReadSeqInfo::_Internal::chattarget(const ImMessage_ReadSeqInfo* msg) {
  return *msg->chattarget_;
}
ImMessage_ReadSeqInfo::ImMessage_ReadSeqInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.ImMessage.ReadSeqInfo)
}
ImMessage_ReadSeqInfo::ImMessage_ReadSeqInfo(const ImMessage_ReadSeqInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_chattarget()) {
    chattarget_ = new ::AcFunDanmu::Im::ImMessage_ChatTarget(*from.chattarget_);
  } else {
    chattarget_ = nullptr;
  }
  readseq_ = from.readseq_;
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.ImMessage.ReadSeqInfo)
}

void ImMessage_ReadSeqInfo::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ImMessage_ReadSeqInfo_Im_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&chattarget_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&readseq_) -
      reinterpret_cast<char*>(&chattarget_)) + sizeof(readseq_));
}

ImMessage_ReadSeqInfo::~ImMessage_ReadSeqInfo() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.ImMessage.ReadSeqInfo)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ImMessage_ReadSeqInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete chattarget_;
}

void ImMessage_ReadSeqInfo::ArenaDtor(void* object) {
  ImMessage_ReadSeqInfo* _this = reinterpret_cast< ImMessage_ReadSeqInfo* >(object);
  (void)_this;
}
void ImMessage_ReadSeqInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ImMessage_ReadSeqInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ImMessage_ReadSeqInfo& ImMessage_ReadSeqInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ImMessage_ReadSeqInfo_Im_2eproto.base);
  return *internal_default_instance();
}


void ImMessage_ReadSeqInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.ImMessage.ReadSeqInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && chattarget_ != nullptr) {
    delete chattarget_;
  }
  chattarget_ = nullptr;
  readseq_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ImMessage_ReadSeqInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .AcFunDanmu.Im.ImMessage.ChatTarget chatTarget = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_chattarget(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 readSeq = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          readseq_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ImMessage_ReadSeqInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.ImMessage.ReadSeqInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .AcFunDanmu.Im.ImMessage.ChatTarget chatTarget = 1;
  if (this->has_chattarget()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::chattarget(this), target, stream);
  }

  // int64 readSeq = 2;
  if (this->readseq() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_readseq(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.ImMessage.ReadSeqInfo)
  return target;
}

size_t ImMessage_ReadSeqInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.ImMessage.ReadSeqInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .AcFunDanmu.Im.ImMessage.ChatTarget chatTarget = 1;
  if (this->has_chattarget()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *chattarget_);
  }

  // int64 readSeq = 2;
  if (this->readseq() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_readseq());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImMessage_ReadSeqInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.ImMessage.ReadSeqInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ImMessage_ReadSeqInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ImMessage_ReadSeqInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.ImMessage.ReadSeqInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.ImMessage.ReadSeqInfo)
    MergeFrom(*source);
  }
}

void ImMessage_ReadSeqInfo::MergeFrom(const ImMessage_ReadSeqInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.ImMessage.ReadSeqInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_chattarget()) {
    _internal_mutable_chattarget()->::AcFunDanmu::Im::ImMessage_ChatTarget::MergeFrom(from._internal_chattarget());
  }
  if (from.readseq() != 0) {
    _internal_set_readseq(from._internal_readseq());
  }
}

void ImMessage_ReadSeqInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.ImMessage.ReadSeqInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImMessage_ReadSeqInfo::CopyFrom(const ImMessage_ReadSeqInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.ImMessage.ReadSeqInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImMessage_ReadSeqInfo::IsInitialized() const {
  return true;
}

void ImMessage_ReadSeqInfo::InternalSwap(ImMessage_ReadSeqInfo* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ImMessage_ReadSeqInfo, readseq_)
      + sizeof(ImMessage_ReadSeqInfo::readseq_)
      - PROTOBUF_FIELD_OFFSET(ImMessage_ReadSeqInfo, chattarget_)>(
          reinterpret_cast<char*>(&chattarget_),
          reinterpret_cast<char*>(&other->chattarget_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ImMessage_ReadSeqInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ImMessage_MessageReadSeqRequest::_Internal {
 public:
};

ImMessage_MessageReadSeqRequest::ImMessage_MessageReadSeqRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  chattarget_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.ImMessage.MessageReadSeqRequest)
}
ImMessage_MessageReadSeqRequest::ImMessage_MessageReadSeqRequest(const ImMessage_MessageReadSeqRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      chattarget_(from.chattarget_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.ImMessage.MessageReadSeqRequest)
}

void ImMessage_MessageReadSeqRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ImMessage_MessageReadSeqRequest_Im_2eproto.base);
}

ImMessage_MessageReadSeqRequest::~ImMessage_MessageReadSeqRequest() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.ImMessage.MessageReadSeqRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ImMessage_MessageReadSeqRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ImMessage_MessageReadSeqRequest::ArenaDtor(void* object) {
  ImMessage_MessageReadSeqRequest* _this = reinterpret_cast< ImMessage_MessageReadSeqRequest* >(object);
  (void)_this;
}
void ImMessage_MessageReadSeqRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ImMessage_MessageReadSeqRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ImMessage_MessageReadSeqRequest& ImMessage_MessageReadSeqRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ImMessage_MessageReadSeqRequest_Im_2eproto.base);
  return *internal_default_instance();
}


void ImMessage_MessageReadSeqRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.ImMessage.MessageReadSeqRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  chattarget_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ImMessage_MessageReadSeqRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .AcFunDanmu.Im.ImMessage.ChatTarget chatTarget = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_chattarget(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ImMessage_MessageReadSeqRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.ImMessage.MessageReadSeqRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .AcFunDanmu.Im.ImMessage.ChatTarget chatTarget = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_chattarget_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_chattarget(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.ImMessage.MessageReadSeqRequest)
  return target;
}

size_t ImMessage_MessageReadSeqRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.ImMessage.MessageReadSeqRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .AcFunDanmu.Im.ImMessage.ChatTarget chatTarget = 1;
  total_size += 1UL * this->_internal_chattarget_size();
  for (const auto& msg : this->chattarget_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImMessage_MessageReadSeqRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.ImMessage.MessageReadSeqRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ImMessage_MessageReadSeqRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ImMessage_MessageReadSeqRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.ImMessage.MessageReadSeqRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.ImMessage.MessageReadSeqRequest)
    MergeFrom(*source);
  }
}

void ImMessage_MessageReadSeqRequest::MergeFrom(const ImMessage_MessageReadSeqRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.ImMessage.MessageReadSeqRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  chattarget_.MergeFrom(from.chattarget_);
}

void ImMessage_MessageReadSeqRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.ImMessage.MessageReadSeqRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImMessage_MessageReadSeqRequest::CopyFrom(const ImMessage_MessageReadSeqRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.ImMessage.MessageReadSeqRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImMessage_MessageReadSeqRequest::IsInitialized() const {
  return true;
}

void ImMessage_MessageReadSeqRequest::InternalSwap(ImMessage_MessageReadSeqRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  chattarget_.InternalSwap(&other->chattarget_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ImMessage_MessageReadSeqRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ImMessage_MessageReadSeqResponse::_Internal {
 public:
};

ImMessage_MessageReadSeqResponse::ImMessage_MessageReadSeqResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  readseqinfo_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.ImMessage.MessageReadSeqResponse)
}
ImMessage_MessageReadSeqResponse::ImMessage_MessageReadSeqResponse(const ImMessage_MessageReadSeqResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      readseqinfo_(from.readseqinfo_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.ImMessage.MessageReadSeqResponse)
}

void ImMessage_MessageReadSeqResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ImMessage_MessageReadSeqResponse_Im_2eproto.base);
}

ImMessage_MessageReadSeqResponse::~ImMessage_MessageReadSeqResponse() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.ImMessage.MessageReadSeqResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ImMessage_MessageReadSeqResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ImMessage_MessageReadSeqResponse::ArenaDtor(void* object) {
  ImMessage_MessageReadSeqResponse* _this = reinterpret_cast< ImMessage_MessageReadSeqResponse* >(object);
  (void)_this;
}
void ImMessage_MessageReadSeqResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ImMessage_MessageReadSeqResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ImMessage_MessageReadSeqResponse& ImMessage_MessageReadSeqResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ImMessage_MessageReadSeqResponse_Im_2eproto.base);
  return *internal_default_instance();
}


void ImMessage_MessageReadSeqResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.ImMessage.MessageReadSeqResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  readseqinfo_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ImMessage_MessageReadSeqResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .AcFunDanmu.Im.ImMessage.ReadSeqInfo readSeqInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_readseqinfo(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ImMessage_MessageReadSeqResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.ImMessage.MessageReadSeqResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .AcFunDanmu.Im.ImMessage.ReadSeqInfo readSeqInfo = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_readseqinfo_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_readseqinfo(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.ImMessage.MessageReadSeqResponse)
  return target;
}

size_t ImMessage_MessageReadSeqResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.ImMessage.MessageReadSeqResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .AcFunDanmu.Im.ImMessage.ReadSeqInfo readSeqInfo = 1;
  total_size += 1UL * this->_internal_readseqinfo_size();
  for (const auto& msg : this->readseqinfo_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImMessage_MessageReadSeqResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.ImMessage.MessageReadSeqResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ImMessage_MessageReadSeqResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ImMessage_MessageReadSeqResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.ImMessage.MessageReadSeqResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.ImMessage.MessageReadSeqResponse)
    MergeFrom(*source);
  }
}

void ImMessage_MessageReadSeqResponse::MergeFrom(const ImMessage_MessageReadSeqResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.ImMessage.MessageReadSeqResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  readseqinfo_.MergeFrom(from.readseqinfo_);
}

void ImMessage_MessageReadSeqResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.ImMessage.MessageReadSeqResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImMessage_MessageReadSeqResponse::CopyFrom(const ImMessage_MessageReadSeqResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.ImMessage.MessageReadSeqResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImMessage_MessageReadSeqResponse::IsInitialized() const {
  return true;
}

void ImMessage_MessageReadSeqResponse::InternalSwap(ImMessage_MessageReadSeqResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  readseqinfo_.InternalSwap(&other->readseqinfo_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ImMessage_MessageReadSeqResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ImMessage_MessageReadPush::_Internal {
 public:
};

ImMessage_MessageReadPush::ImMessage_MessageReadPush(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.ImMessage.MessageReadPush)
}
ImMessage_MessageReadPush::ImMessage_MessageReadPush(const ImMessage_MessageReadPush& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  strtargetid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_strtargetid().empty()) {
    strtargetid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_strtargetid(), 
      GetArena());
  }
  ::memcpy(&targetid_, &from.targetid_,
    static_cast<size_t>(reinterpret_cast<char*>(&chattargettype_) -
    reinterpret_cast<char*>(&targetid_)) + sizeof(chattargettype_));
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.ImMessage.MessageReadPush)
}

void ImMessage_MessageReadPush::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ImMessage_MessageReadPush_Im_2eproto.base);
  strtargetid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&targetid_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&chattargettype_) -
      reinterpret_cast<char*>(&targetid_)) + sizeof(chattargettype_));
}

ImMessage_MessageReadPush::~ImMessage_MessageReadPush() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.ImMessage.MessageReadPush)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ImMessage_MessageReadPush::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  strtargetid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ImMessage_MessageReadPush::ArenaDtor(void* object) {
  ImMessage_MessageReadPush* _this = reinterpret_cast< ImMessage_MessageReadPush* >(object);
  (void)_this;
}
void ImMessage_MessageReadPush::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ImMessage_MessageReadPush::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ImMessage_MessageReadPush& ImMessage_MessageReadPush::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ImMessage_MessageReadPush_Im_2eproto.base);
  return *internal_default_instance();
}


void ImMessage_MessageReadPush::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.ImMessage.MessageReadPush)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  strtargetid_.ClearToEmpty();
  ::memset(&targetid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&chattargettype_) -
      reinterpret_cast<char*>(&targetid_)) + sizeof(chattargettype_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ImMessage_MessageReadPush::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 targetId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          targetid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 readSeq = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          readseq_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .AcFunDanmu.Im.ImMessage.ChatTargetType chatTargetType = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_chattargettype(static_cast<::AcFunDanmu::Im::ImMessage_ChatTargetType>(val));
        } else goto handle_unusual;
        continue;
      // string strTargetId = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_strtargetid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.ImMessage.MessageReadPush.strTargetId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ImMessage_MessageReadPush::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.ImMessage.MessageReadPush)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 targetId = 1;
  if (this->targetid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_targetid(), target);
  }

  // int64 readSeq = 2;
  if (this->readseq() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_readseq(), target);
  }

  // .AcFunDanmu.Im.ImMessage.ChatTargetType chatTargetType = 3;
  if (this->chattargettype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->_internal_chattargettype(), target);
  }

  // string strTargetId = 4;
  if (this->strtargetid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_strtargetid().data(), static_cast<int>(this->_internal_strtargetid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.ImMessage.MessageReadPush.strTargetId");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_strtargetid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.ImMessage.MessageReadPush)
  return target;
}

size_t ImMessage_MessageReadPush::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.ImMessage.MessageReadPush)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string strTargetId = 4;
  if (this->strtargetid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_strtargetid());
  }

  // int64 targetId = 1;
  if (this->targetid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_targetid());
  }

  // int64 readSeq = 2;
  if (this->readseq() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_readseq());
  }

  // .AcFunDanmu.Im.ImMessage.ChatTargetType chatTargetType = 3;
  if (this->chattargettype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_chattargettype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImMessage_MessageReadPush::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.ImMessage.MessageReadPush)
  GOOGLE_DCHECK_NE(&from, this);
  const ImMessage_MessageReadPush* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ImMessage_MessageReadPush>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.ImMessage.MessageReadPush)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.ImMessage.MessageReadPush)
    MergeFrom(*source);
  }
}

void ImMessage_MessageReadPush::MergeFrom(const ImMessage_MessageReadPush& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.ImMessage.MessageReadPush)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.strtargetid().size() > 0) {
    _internal_set_strtargetid(from._internal_strtargetid());
  }
  if (from.targetid() != 0) {
    _internal_set_targetid(from._internal_targetid());
  }
  if (from.readseq() != 0) {
    _internal_set_readseq(from._internal_readseq());
  }
  if (from.chattargettype() != 0) {
    _internal_set_chattargettype(from._internal_chattargettype());
  }
}

void ImMessage_MessageReadPush::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.ImMessage.MessageReadPush)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImMessage_MessageReadPush::CopyFrom(const ImMessage_MessageReadPush& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.ImMessage.MessageReadPush)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImMessage_MessageReadPush::IsInitialized() const {
  return true;
}

void ImMessage_MessageReadPush::InternalSwap(ImMessage_MessageReadPush* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  strtargetid_.Swap(&other->strtargetid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ImMessage_MessageReadPush, chattargettype_)
      + sizeof(ImMessage_MessageReadPush::chattargettype_)
      - PROTOBUF_FIELD_OFFSET(ImMessage_MessageReadPush, targetid_)>(
          reinterpret_cast<char*>(&targetid_),
          reinterpret_cast<char*>(&other->targetid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ImMessage_MessageReadPush::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ImMessage_AllUnreadCountRequest::_Internal {
 public:
};

ImMessage_AllUnreadCountRequest::ImMessage_AllUnreadCountRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.ImMessage.AllUnreadCountRequest)
}
ImMessage_AllUnreadCountRequest::ImMessage_AllUnreadCountRequest(const ImMessage_AllUnreadCountRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.ImMessage.AllUnreadCountRequest)
}

void ImMessage_AllUnreadCountRequest::SharedCtor() {
}

ImMessage_AllUnreadCountRequest::~ImMessage_AllUnreadCountRequest() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.ImMessage.AllUnreadCountRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ImMessage_AllUnreadCountRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ImMessage_AllUnreadCountRequest::ArenaDtor(void* object) {
  ImMessage_AllUnreadCountRequest* _this = reinterpret_cast< ImMessage_AllUnreadCountRequest* >(object);
  (void)_this;
}
void ImMessage_AllUnreadCountRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ImMessage_AllUnreadCountRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ImMessage_AllUnreadCountRequest& ImMessage_AllUnreadCountRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ImMessage_AllUnreadCountRequest_Im_2eproto.base);
  return *internal_default_instance();
}


void ImMessage_AllUnreadCountRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.ImMessage.AllUnreadCountRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ImMessage_AllUnreadCountRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ImMessage_AllUnreadCountRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.ImMessage.AllUnreadCountRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.ImMessage.AllUnreadCountRequest)
  return target;
}

size_t ImMessage_AllUnreadCountRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.ImMessage.AllUnreadCountRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImMessage_AllUnreadCountRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.ImMessage.AllUnreadCountRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ImMessage_AllUnreadCountRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ImMessage_AllUnreadCountRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.ImMessage.AllUnreadCountRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.ImMessage.AllUnreadCountRequest)
    MergeFrom(*source);
  }
}

void ImMessage_AllUnreadCountRequest::MergeFrom(const ImMessage_AllUnreadCountRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.ImMessage.AllUnreadCountRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ImMessage_AllUnreadCountRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.ImMessage.AllUnreadCountRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImMessage_AllUnreadCountRequest::CopyFrom(const ImMessage_AllUnreadCountRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.ImMessage.AllUnreadCountRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImMessage_AllUnreadCountRequest::IsInitialized() const {
  return true;
}

void ImMessage_AllUnreadCountRequest::InternalSwap(ImMessage_AllUnreadCountRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ImMessage_AllUnreadCountRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ImMessage_AllUnreadCountResponse::_Internal {
 public:
};

ImMessage_AllUnreadCountResponse::ImMessage_AllUnreadCountResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.ImMessage.AllUnreadCountResponse)
}
ImMessage_AllUnreadCountResponse::ImMessage_AllUnreadCountResponse(const ImMessage_AllUnreadCountResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  allunreadcount_ = from.allunreadcount_;
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.ImMessage.AllUnreadCountResponse)
}

void ImMessage_AllUnreadCountResponse::SharedCtor() {
  allunreadcount_ = 0;
}

ImMessage_AllUnreadCountResponse::~ImMessage_AllUnreadCountResponse() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.ImMessage.AllUnreadCountResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ImMessage_AllUnreadCountResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ImMessage_AllUnreadCountResponse::ArenaDtor(void* object) {
  ImMessage_AllUnreadCountResponse* _this = reinterpret_cast< ImMessage_AllUnreadCountResponse* >(object);
  (void)_this;
}
void ImMessage_AllUnreadCountResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ImMessage_AllUnreadCountResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ImMessage_AllUnreadCountResponse& ImMessage_AllUnreadCountResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ImMessage_AllUnreadCountResponse_Im_2eproto.base);
  return *internal_default_instance();
}


void ImMessage_AllUnreadCountResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.ImMessage.AllUnreadCountResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  allunreadcount_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ImMessage_AllUnreadCountResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 allUnreadCount = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          allunreadcount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ImMessage_AllUnreadCountResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.ImMessage.AllUnreadCountResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 allUnreadCount = 1;
  if (this->allunreadcount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_allunreadcount(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.ImMessage.AllUnreadCountResponse)
  return target;
}

size_t ImMessage_AllUnreadCountResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.ImMessage.AllUnreadCountResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 allUnreadCount = 1;
  if (this->allunreadcount() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_allunreadcount());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImMessage_AllUnreadCountResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.ImMessage.AllUnreadCountResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ImMessage_AllUnreadCountResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ImMessage_AllUnreadCountResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.ImMessage.AllUnreadCountResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.ImMessage.AllUnreadCountResponse)
    MergeFrom(*source);
  }
}

void ImMessage_AllUnreadCountResponse::MergeFrom(const ImMessage_AllUnreadCountResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.ImMessage.AllUnreadCountResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.allunreadcount() != 0) {
    _internal_set_allunreadcount(from._internal_allunreadcount());
  }
}

void ImMessage_AllUnreadCountResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.ImMessage.AllUnreadCountResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImMessage_AllUnreadCountResponse::CopyFrom(const ImMessage_AllUnreadCountResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.ImMessage.AllUnreadCountResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImMessage_AllUnreadCountResponse::IsInitialized() const {
  return true;
}

void ImMessage_AllUnreadCountResponse::InternalSwap(ImMessage_AllUnreadCountResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(allunreadcount_, other->allunreadcount_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ImMessage_AllUnreadCountResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ImMessage_MessageReadAllRequest::_Internal {
 public:
};

ImMessage_MessageReadAllRequest::ImMessage_MessageReadAllRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.ImMessage.MessageReadAllRequest)
}
ImMessage_MessageReadAllRequest::ImMessage_MessageReadAllRequest(const ImMessage_MessageReadAllRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  sessioncategoryid_ = from.sessioncategoryid_;
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.ImMessage.MessageReadAllRequest)
}

void ImMessage_MessageReadAllRequest::SharedCtor() {
  sessioncategoryid_ = 0;
}

ImMessage_MessageReadAllRequest::~ImMessage_MessageReadAllRequest() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.ImMessage.MessageReadAllRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ImMessage_MessageReadAllRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ImMessage_MessageReadAllRequest::ArenaDtor(void* object) {
  ImMessage_MessageReadAllRequest* _this = reinterpret_cast< ImMessage_MessageReadAllRequest* >(object);
  (void)_this;
}
void ImMessage_MessageReadAllRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ImMessage_MessageReadAllRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ImMessage_MessageReadAllRequest& ImMessage_MessageReadAllRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ImMessage_MessageReadAllRequest_Im_2eproto.base);
  return *internal_default_instance();
}


void ImMessage_MessageReadAllRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.ImMessage.MessageReadAllRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sessioncategoryid_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ImMessage_MessageReadAllRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 sessionCategoryId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          sessioncategoryid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ImMessage_MessageReadAllRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.ImMessage.MessageReadAllRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 sessionCategoryId = 1;
  if (this->sessioncategoryid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_sessioncategoryid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.ImMessage.MessageReadAllRequest)
  return target;
}

size_t ImMessage_MessageReadAllRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.ImMessage.MessageReadAllRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 sessionCategoryId = 1;
  if (this->sessioncategoryid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_sessioncategoryid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImMessage_MessageReadAllRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.ImMessage.MessageReadAllRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ImMessage_MessageReadAllRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ImMessage_MessageReadAllRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.ImMessage.MessageReadAllRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.ImMessage.MessageReadAllRequest)
    MergeFrom(*source);
  }
}

void ImMessage_MessageReadAllRequest::MergeFrom(const ImMessage_MessageReadAllRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.ImMessage.MessageReadAllRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sessioncategoryid() != 0) {
    _internal_set_sessioncategoryid(from._internal_sessioncategoryid());
  }
}

void ImMessage_MessageReadAllRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.ImMessage.MessageReadAllRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImMessage_MessageReadAllRequest::CopyFrom(const ImMessage_MessageReadAllRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.ImMessage.MessageReadAllRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImMessage_MessageReadAllRequest::IsInitialized() const {
  return true;
}

void ImMessage_MessageReadAllRequest::InternalSwap(ImMessage_MessageReadAllRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(sessioncategoryid_, other->sessioncategoryid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ImMessage_MessageReadAllRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ImMessage_MessageReadAllResponse::_Internal {
 public:
};

ImMessage_MessageReadAllResponse::ImMessage_MessageReadAllResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.ImMessage.MessageReadAllResponse)
}
ImMessage_MessageReadAllResponse::ImMessage_MessageReadAllResponse(const ImMessage_MessageReadAllResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  readalltimestamp_ = from.readalltimestamp_;
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.ImMessage.MessageReadAllResponse)
}

void ImMessage_MessageReadAllResponse::SharedCtor() {
  readalltimestamp_ = PROTOBUF_LONGLONG(0);
}

ImMessage_MessageReadAllResponse::~ImMessage_MessageReadAllResponse() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.ImMessage.MessageReadAllResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ImMessage_MessageReadAllResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ImMessage_MessageReadAllResponse::ArenaDtor(void* object) {
  ImMessage_MessageReadAllResponse* _this = reinterpret_cast< ImMessage_MessageReadAllResponse* >(object);
  (void)_this;
}
void ImMessage_MessageReadAllResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ImMessage_MessageReadAllResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ImMessage_MessageReadAllResponse& ImMessage_MessageReadAllResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ImMessage_MessageReadAllResponse_Im_2eproto.base);
  return *internal_default_instance();
}


void ImMessage_MessageReadAllResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.ImMessage.MessageReadAllResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  readalltimestamp_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ImMessage_MessageReadAllResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 readAllTimestamp = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          readalltimestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ImMessage_MessageReadAllResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.ImMessage.MessageReadAllResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 readAllTimestamp = 1;
  if (this->readalltimestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_readalltimestamp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.ImMessage.MessageReadAllResponse)
  return target;
}

size_t ImMessage_MessageReadAllResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.ImMessage.MessageReadAllResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 readAllTimestamp = 1;
  if (this->readalltimestamp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_readalltimestamp());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImMessage_MessageReadAllResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.ImMessage.MessageReadAllResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ImMessage_MessageReadAllResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ImMessage_MessageReadAllResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.ImMessage.MessageReadAllResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.ImMessage.MessageReadAllResponse)
    MergeFrom(*source);
  }
}

void ImMessage_MessageReadAllResponse::MergeFrom(const ImMessage_MessageReadAllResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.ImMessage.MessageReadAllResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.readalltimestamp() != 0) {
    _internal_set_readalltimestamp(from._internal_readalltimestamp());
  }
}

void ImMessage_MessageReadAllResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.ImMessage.MessageReadAllResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImMessage_MessageReadAllResponse::CopyFrom(const ImMessage_MessageReadAllResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.ImMessage.MessageReadAllResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImMessage_MessageReadAllResponse::IsInitialized() const {
  return true;
}

void ImMessage_MessageReadAllResponse::InternalSwap(ImMessage_MessageReadAllResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(readalltimestamp_, other->readalltimestamp_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ImMessage_MessageReadAllResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ImMessage_SesionStickyOnTopRequest::_Internal {
 public:
  static const ::AcFunDanmu::Im::ImMessage_ChatTarget& chattarget(const ImMessage_SesionStickyOnTopRequest* msg);
};

const ::AcFunDanmu::Im::ImMessage_ChatTarget&
ImMessage_SesionStickyOnTopRequest::_Internal::chattarget(const ImMessage_SesionStickyOnTopRequest* msg) {
  return *msg->chattarget_;
}
ImMessage_SesionStickyOnTopRequest::ImMessage_SesionStickyOnTopRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.ImMessage.SesionStickyOnTopRequest)
}
ImMessage_SesionStickyOnTopRequest::ImMessage_SesionStickyOnTopRequest(const ImMessage_SesionStickyOnTopRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_chattarget()) {
    chattarget_ = new ::AcFunDanmu::Im::ImMessage_ChatTarget(*from.chattarget_);
  } else {
    chattarget_ = nullptr;
  }
  stickyontop_ = from.stickyontop_;
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.ImMessage.SesionStickyOnTopRequest)
}

void ImMessage_SesionStickyOnTopRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ImMessage_SesionStickyOnTopRequest_Im_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&chattarget_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&stickyontop_) -
      reinterpret_cast<char*>(&chattarget_)) + sizeof(stickyontop_));
}

ImMessage_SesionStickyOnTopRequest::~ImMessage_SesionStickyOnTopRequest() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.ImMessage.SesionStickyOnTopRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ImMessage_SesionStickyOnTopRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete chattarget_;
}

void ImMessage_SesionStickyOnTopRequest::ArenaDtor(void* object) {
  ImMessage_SesionStickyOnTopRequest* _this = reinterpret_cast< ImMessage_SesionStickyOnTopRequest* >(object);
  (void)_this;
}
void ImMessage_SesionStickyOnTopRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ImMessage_SesionStickyOnTopRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ImMessage_SesionStickyOnTopRequest& ImMessage_SesionStickyOnTopRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ImMessage_SesionStickyOnTopRequest_Im_2eproto.base);
  return *internal_default_instance();
}


void ImMessage_SesionStickyOnTopRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.ImMessage.SesionStickyOnTopRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && chattarget_ != nullptr) {
    delete chattarget_;
  }
  chattarget_ = nullptr;
  stickyontop_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ImMessage_SesionStickyOnTopRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .AcFunDanmu.Im.ImMessage.ChatTarget chatTarget = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_chattarget(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool stickyOnTop = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          stickyontop_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ImMessage_SesionStickyOnTopRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.ImMessage.SesionStickyOnTopRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .AcFunDanmu.Im.ImMessage.ChatTarget chatTarget = 1;
  if (this->has_chattarget()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::chattarget(this), target, stream);
  }

  // bool stickyOnTop = 2;
  if (this->stickyontop() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_stickyontop(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.ImMessage.SesionStickyOnTopRequest)
  return target;
}

size_t ImMessage_SesionStickyOnTopRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.ImMessage.SesionStickyOnTopRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .AcFunDanmu.Im.ImMessage.ChatTarget chatTarget = 1;
  if (this->has_chattarget()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *chattarget_);
  }

  // bool stickyOnTop = 2;
  if (this->stickyontop() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImMessage_SesionStickyOnTopRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.ImMessage.SesionStickyOnTopRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ImMessage_SesionStickyOnTopRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ImMessage_SesionStickyOnTopRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.ImMessage.SesionStickyOnTopRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.ImMessage.SesionStickyOnTopRequest)
    MergeFrom(*source);
  }
}

void ImMessage_SesionStickyOnTopRequest::MergeFrom(const ImMessage_SesionStickyOnTopRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.ImMessage.SesionStickyOnTopRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_chattarget()) {
    _internal_mutable_chattarget()->::AcFunDanmu::Im::ImMessage_ChatTarget::MergeFrom(from._internal_chattarget());
  }
  if (from.stickyontop() != 0) {
    _internal_set_stickyontop(from._internal_stickyontop());
  }
}

void ImMessage_SesionStickyOnTopRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.ImMessage.SesionStickyOnTopRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImMessage_SesionStickyOnTopRequest::CopyFrom(const ImMessage_SesionStickyOnTopRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.ImMessage.SesionStickyOnTopRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImMessage_SesionStickyOnTopRequest::IsInitialized() const {
  return true;
}

void ImMessage_SesionStickyOnTopRequest::InternalSwap(ImMessage_SesionStickyOnTopRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ImMessage_SesionStickyOnTopRequest, stickyontop_)
      + sizeof(ImMessage_SesionStickyOnTopRequest::stickyontop_)
      - PROTOBUF_FIELD_OFFSET(ImMessage_SesionStickyOnTopRequest, chattarget_)>(
          reinterpret_cast<char*>(&chattarget_),
          reinterpret_cast<char*>(&other->chattarget_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ImMessage_SesionStickyOnTopRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ImMessage_SessionStickyOnTopResponse::_Internal {
 public:
  static const ::AcFunDanmu::Im::ImMessage_ChatSession& session(const ImMessage_SessionStickyOnTopResponse* msg);
};

const ::AcFunDanmu::Im::ImMessage_ChatSession&
ImMessage_SessionStickyOnTopResponse::_Internal::session(const ImMessage_SessionStickyOnTopResponse* msg) {
  return *msg->session_;
}
ImMessage_SessionStickyOnTopResponse::ImMessage_SessionStickyOnTopResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.ImMessage.SessionStickyOnTopResponse)
}
ImMessage_SessionStickyOnTopResponse::ImMessage_SessionStickyOnTopResponse(const ImMessage_SessionStickyOnTopResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_session()) {
    session_ = new ::AcFunDanmu::Im::ImMessage_ChatSession(*from.session_);
  } else {
    session_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.ImMessage.SessionStickyOnTopResponse)
}

void ImMessage_SessionStickyOnTopResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ImMessage_SessionStickyOnTopResponse_Im_2eproto.base);
  session_ = nullptr;
}

ImMessage_SessionStickyOnTopResponse::~ImMessage_SessionStickyOnTopResponse() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.ImMessage.SessionStickyOnTopResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ImMessage_SessionStickyOnTopResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete session_;
}

void ImMessage_SessionStickyOnTopResponse::ArenaDtor(void* object) {
  ImMessage_SessionStickyOnTopResponse* _this = reinterpret_cast< ImMessage_SessionStickyOnTopResponse* >(object);
  (void)_this;
}
void ImMessage_SessionStickyOnTopResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ImMessage_SessionStickyOnTopResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ImMessage_SessionStickyOnTopResponse& ImMessage_SessionStickyOnTopResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ImMessage_SessionStickyOnTopResponse_Im_2eproto.base);
  return *internal_default_instance();
}


void ImMessage_SessionStickyOnTopResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.ImMessage.SessionStickyOnTopResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && session_ != nullptr) {
    delete session_;
  }
  session_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ImMessage_SessionStickyOnTopResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .AcFunDanmu.Im.ImMessage.ChatSession session = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_session(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ImMessage_SessionStickyOnTopResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.ImMessage.SessionStickyOnTopResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .AcFunDanmu.Im.ImMessage.ChatSession session = 1;
  if (this->has_session()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::session(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.ImMessage.SessionStickyOnTopResponse)
  return target;
}

size_t ImMessage_SessionStickyOnTopResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.ImMessage.SessionStickyOnTopResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .AcFunDanmu.Im.ImMessage.ChatSession session = 1;
  if (this->has_session()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *session_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImMessage_SessionStickyOnTopResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.ImMessage.SessionStickyOnTopResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ImMessage_SessionStickyOnTopResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ImMessage_SessionStickyOnTopResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.ImMessage.SessionStickyOnTopResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.ImMessage.SessionStickyOnTopResponse)
    MergeFrom(*source);
  }
}

void ImMessage_SessionStickyOnTopResponse::MergeFrom(const ImMessage_SessionStickyOnTopResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.ImMessage.SessionStickyOnTopResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_session()) {
    _internal_mutable_session()->::AcFunDanmu::Im::ImMessage_ChatSession::MergeFrom(from._internal_session());
  }
}

void ImMessage_SessionStickyOnTopResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.ImMessage.SessionStickyOnTopResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImMessage_SessionStickyOnTopResponse::CopyFrom(const ImMessage_SessionStickyOnTopResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.ImMessage.SessionStickyOnTopResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImMessage_SessionStickyOnTopResponse::IsInitialized() const {
  return true;
}

void ImMessage_SessionStickyOnTopResponse::InternalSwap(ImMessage_SessionStickyOnTopResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(session_, other->session_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ImMessage_SessionStickyOnTopResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

ImMessage_SessionRaw_RawEntry_DoNotUse::ImMessage_SessionRaw_RawEntry_DoNotUse() {}
ImMessage_SessionRaw_RawEntry_DoNotUse::ImMessage_SessionRaw_RawEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void ImMessage_SessionRaw_RawEntry_DoNotUse::MergeFrom(const ImMessage_SessionRaw_RawEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata ImMessage_SessionRaw_RawEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void ImMessage_SessionRaw_RawEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

class ImMessage_SessionRaw::_Internal {
 public:
};

ImMessage_SessionRaw::ImMessage_SessionRaw(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  raw_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.ImMessage.SessionRaw)
}
ImMessage_SessionRaw::ImMessage_SessionRaw(const ImMessage_SessionRaw& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  raw_.MergeFrom(from.raw_);
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.ImMessage.SessionRaw)
}

void ImMessage_SessionRaw::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ImMessage_SessionRaw_Im_2eproto.base);
}

ImMessage_SessionRaw::~ImMessage_SessionRaw() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.ImMessage.SessionRaw)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ImMessage_SessionRaw::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ImMessage_SessionRaw::ArenaDtor(void* object) {
  ImMessage_SessionRaw* _this = reinterpret_cast< ImMessage_SessionRaw* >(object);
  (void)_this;
}
void ImMessage_SessionRaw::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ImMessage_SessionRaw::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ImMessage_SessionRaw& ImMessage_SessionRaw::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ImMessage_SessionRaw_Im_2eproto.base);
  return *internal_default_instance();
}


void ImMessage_SessionRaw::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.ImMessage.SessionRaw)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  raw_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ImMessage_SessionRaw::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // map<string, bytes> raw = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&raw_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ImMessage_SessionRaw::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.ImMessage.SessionRaw)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, bytes> raw = 1;
  if (!this->_internal_raw().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "AcFunDanmu.Im.ImMessage.SessionRaw.RawEntry.key");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_raw().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_raw().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_raw().begin();
          it != this->_internal_raw().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = ImMessage_SessionRaw_RawEntry_DoNotUse::Funcs::InternalSerialize(1, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_raw().begin();
          it != this->_internal_raw().end(); ++it) {
        target = ImMessage_SessionRaw_RawEntry_DoNotUse::Funcs::InternalSerialize(1, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.ImMessage.SessionRaw)
  return target;
}

size_t ImMessage_SessionRaw::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.ImMessage.SessionRaw)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, bytes> raw = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_raw_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_raw().begin();
      it != this->_internal_raw().end(); ++it) {
    total_size += ImMessage_SessionRaw_RawEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImMessage_SessionRaw::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.ImMessage.SessionRaw)
  GOOGLE_DCHECK_NE(&from, this);
  const ImMessage_SessionRaw* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ImMessage_SessionRaw>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.ImMessage.SessionRaw)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.ImMessage.SessionRaw)
    MergeFrom(*source);
  }
}

void ImMessage_SessionRaw::MergeFrom(const ImMessage_SessionRaw& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.ImMessage.SessionRaw)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  raw_.MergeFrom(from.raw_);
}

void ImMessage_SessionRaw::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.ImMessage.SessionRaw)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImMessage_SessionRaw::CopyFrom(const ImMessage_SessionRaw& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.ImMessage.SessionRaw)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImMessage_SessionRaw::IsInitialized() const {
  return true;
}

void ImMessage_SessionRaw::InternalSwap(ImMessage_SessionRaw* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  raw_.Swap(&other->raw_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ImMessage_SessionRaw::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ImMessage_MessageRecallRequest::_Internal {
 public:
  static const ::AcFunDanmu::Im::ImMessage_ChatTarget& chattarget(const ImMessage_MessageRecallRequest* msg);
};

const ::AcFunDanmu::Im::ImMessage_ChatTarget&
ImMessage_MessageRecallRequest::_Internal::chattarget(const ImMessage_MessageRecallRequest* msg) {
  return *msg->chattarget_;
}
ImMessage_MessageRecallRequest::ImMessage_MessageRecallRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.ImMessage.MessageRecallRequest)
}
ImMessage_MessageRecallRequest::ImMessage_MessageRecallRequest(const ImMessage_MessageRecallRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_chattarget()) {
    chattarget_ = new ::AcFunDanmu::Im::ImMessage_ChatTarget(*from.chattarget_);
  } else {
    chattarget_ = nullptr;
  }
  seqid_ = from.seqid_;
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.ImMessage.MessageRecallRequest)
}

void ImMessage_MessageRecallRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ImMessage_MessageRecallRequest_Im_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&chattarget_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&seqid_) -
      reinterpret_cast<char*>(&chattarget_)) + sizeof(seqid_));
}

ImMessage_MessageRecallRequest::~ImMessage_MessageRecallRequest() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.ImMessage.MessageRecallRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ImMessage_MessageRecallRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete chattarget_;
}

void ImMessage_MessageRecallRequest::ArenaDtor(void* object) {
  ImMessage_MessageRecallRequest* _this = reinterpret_cast< ImMessage_MessageRecallRequest* >(object);
  (void)_this;
}
void ImMessage_MessageRecallRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ImMessage_MessageRecallRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ImMessage_MessageRecallRequest& ImMessage_MessageRecallRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ImMessage_MessageRecallRequest_Im_2eproto.base);
  return *internal_default_instance();
}


void ImMessage_MessageRecallRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.ImMessage.MessageRecallRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && chattarget_ != nullptr) {
    delete chattarget_;
  }
  chattarget_ = nullptr;
  seqid_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ImMessage_MessageRecallRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .AcFunDanmu.Im.ImMessage.ChatTarget chatTarget = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_chattarget(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 seqId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          seqid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ImMessage_MessageRecallRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.ImMessage.MessageRecallRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .AcFunDanmu.Im.ImMessage.ChatTarget chatTarget = 1;
  if (this->has_chattarget()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::chattarget(this), target, stream);
  }

  // int64 seqId = 2;
  if (this->seqid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_seqid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.ImMessage.MessageRecallRequest)
  return target;
}

size_t ImMessage_MessageRecallRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.ImMessage.MessageRecallRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .AcFunDanmu.Im.ImMessage.ChatTarget chatTarget = 1;
  if (this->has_chattarget()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *chattarget_);
  }

  // int64 seqId = 2;
  if (this->seqid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_seqid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImMessage_MessageRecallRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.ImMessage.MessageRecallRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ImMessage_MessageRecallRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ImMessage_MessageRecallRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.ImMessage.MessageRecallRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.ImMessage.MessageRecallRequest)
    MergeFrom(*source);
  }
}

void ImMessage_MessageRecallRequest::MergeFrom(const ImMessage_MessageRecallRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.ImMessage.MessageRecallRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_chattarget()) {
    _internal_mutable_chattarget()->::AcFunDanmu::Im::ImMessage_ChatTarget::MergeFrom(from._internal_chattarget());
  }
  if (from.seqid() != 0) {
    _internal_set_seqid(from._internal_seqid());
  }
}

void ImMessage_MessageRecallRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.ImMessage.MessageRecallRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImMessage_MessageRecallRequest::CopyFrom(const ImMessage_MessageRecallRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.ImMessage.MessageRecallRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImMessage_MessageRecallRequest::IsInitialized() const {
  return true;
}

void ImMessage_MessageRecallRequest::InternalSwap(ImMessage_MessageRecallRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ImMessage_MessageRecallRequest, seqid_)
      + sizeof(ImMessage_MessageRecallRequest::seqid_)
      - PROTOBUF_FIELD_OFFSET(ImMessage_MessageRecallRequest, chattarget_)>(
          reinterpret_cast<char*>(&chattarget_),
          reinterpret_cast<char*>(&other->chattarget_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ImMessage_MessageRecallRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ImMessage_MessageRecallResponse::_Internal {
 public:
};

ImMessage_MessageRecallResponse::ImMessage_MessageRecallResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.ImMessage.MessageRecallResponse)
}
ImMessage_MessageRecallResponse::ImMessage_MessageRecallResponse(const ImMessage_MessageRecallResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.ImMessage.MessageRecallResponse)
}

void ImMessage_MessageRecallResponse::SharedCtor() {
}

ImMessage_MessageRecallResponse::~ImMessage_MessageRecallResponse() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.ImMessage.MessageRecallResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ImMessage_MessageRecallResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ImMessage_MessageRecallResponse::ArenaDtor(void* object) {
  ImMessage_MessageRecallResponse* _this = reinterpret_cast< ImMessage_MessageRecallResponse* >(object);
  (void)_this;
}
void ImMessage_MessageRecallResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ImMessage_MessageRecallResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ImMessage_MessageRecallResponse& ImMessage_MessageRecallResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ImMessage_MessageRecallResponse_Im_2eproto.base);
  return *internal_default_instance();
}


void ImMessage_MessageRecallResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.ImMessage.MessageRecallResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ImMessage_MessageRecallResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ImMessage_MessageRecallResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.ImMessage.MessageRecallResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.ImMessage.MessageRecallResponse)
  return target;
}

size_t ImMessage_MessageRecallResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.ImMessage.MessageRecallResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImMessage_MessageRecallResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.ImMessage.MessageRecallResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ImMessage_MessageRecallResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ImMessage_MessageRecallResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.ImMessage.MessageRecallResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.ImMessage.MessageRecallResponse)
    MergeFrom(*source);
  }
}

void ImMessage_MessageRecallResponse::MergeFrom(const ImMessage_MessageRecallResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.ImMessage.MessageRecallResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ImMessage_MessageRecallResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.ImMessage.MessageRecallResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImMessage_MessageRecallResponse::CopyFrom(const ImMessage_MessageRecallResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.ImMessage.MessageRecallResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImMessage_MessageRecallResponse::IsInitialized() const {
  return true;
}

void ImMessage_MessageRecallResponse::InternalSwap(ImMessage_MessageRecallResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ImMessage_MessageRecallResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ImMessage_MessageReceiptRequest::_Internal {
 public:
  static const ::AcFunDanmu::Im::ImMessage_ChatTarget& chattarget(const ImMessage_MessageReceiptRequest* msg);
};

const ::AcFunDanmu::Im::ImMessage_ChatTarget&
ImMessage_MessageReceiptRequest::_Internal::chattarget(const ImMessage_MessageReceiptRequest* msg) {
  return *msg->chattarget_;
}
ImMessage_MessageReceiptRequest::ImMessage_MessageReceiptRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  messagereceiptinfo_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.ImMessage.MessageReceiptRequest)
}
ImMessage_MessageReceiptRequest::ImMessage_MessageReceiptRequest(const ImMessage_MessageReceiptRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      messagereceiptinfo_(from.messagereceiptinfo_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_chattarget()) {
    chattarget_ = new ::AcFunDanmu::Im::ImMessage_ChatTarget(*from.chattarget_);
  } else {
    chattarget_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.ImMessage.MessageReceiptRequest)
}

void ImMessage_MessageReceiptRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ImMessage_MessageReceiptRequest_Im_2eproto.base);
  chattarget_ = nullptr;
}

ImMessage_MessageReceiptRequest::~ImMessage_MessageReceiptRequest() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.ImMessage.MessageReceiptRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ImMessage_MessageReceiptRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete chattarget_;
}

void ImMessage_MessageReceiptRequest::ArenaDtor(void* object) {
  ImMessage_MessageReceiptRequest* _this = reinterpret_cast< ImMessage_MessageReceiptRequest* >(object);
  (void)_this;
}
void ImMessage_MessageReceiptRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ImMessage_MessageReceiptRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ImMessage_MessageReceiptRequest& ImMessage_MessageReceiptRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ImMessage_MessageReceiptRequest_Im_2eproto.base);
  return *internal_default_instance();
}


void ImMessage_MessageReceiptRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.ImMessage.MessageReceiptRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  messagereceiptinfo_.Clear();
  if (GetArena() == nullptr && chattarget_ != nullptr) {
    delete chattarget_;
  }
  chattarget_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ImMessage_MessageReceiptRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .AcFunDanmu.Im.ImMessage.MessageReceiptInfo messageReceiptInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_messagereceiptinfo(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // .AcFunDanmu.Im.ImMessage.ChatTarget chatTarget = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_chattarget(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ImMessage_MessageReceiptRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.ImMessage.MessageReceiptRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .AcFunDanmu.Im.ImMessage.MessageReceiptInfo messageReceiptInfo = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_messagereceiptinfo_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_messagereceiptinfo(i), target, stream);
  }

  // .AcFunDanmu.Im.ImMessage.ChatTarget chatTarget = 2;
  if (this->has_chattarget()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::chattarget(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.ImMessage.MessageReceiptRequest)
  return target;
}

size_t ImMessage_MessageReceiptRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.ImMessage.MessageReceiptRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .AcFunDanmu.Im.ImMessage.MessageReceiptInfo messageReceiptInfo = 1;
  total_size += 1UL * this->_internal_messagereceiptinfo_size();
  for (const auto& msg : this->messagereceiptinfo_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .AcFunDanmu.Im.ImMessage.ChatTarget chatTarget = 2;
  if (this->has_chattarget()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *chattarget_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImMessage_MessageReceiptRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.ImMessage.MessageReceiptRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ImMessage_MessageReceiptRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ImMessage_MessageReceiptRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.ImMessage.MessageReceiptRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.ImMessage.MessageReceiptRequest)
    MergeFrom(*source);
  }
}

void ImMessage_MessageReceiptRequest::MergeFrom(const ImMessage_MessageReceiptRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.ImMessage.MessageReceiptRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  messagereceiptinfo_.MergeFrom(from.messagereceiptinfo_);
  if (from.has_chattarget()) {
    _internal_mutable_chattarget()->::AcFunDanmu::Im::ImMessage_ChatTarget::MergeFrom(from._internal_chattarget());
  }
}

void ImMessage_MessageReceiptRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.ImMessage.MessageReceiptRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImMessage_MessageReceiptRequest::CopyFrom(const ImMessage_MessageReceiptRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.ImMessage.MessageReceiptRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImMessage_MessageReceiptRequest::IsInitialized() const {
  return true;
}

void ImMessage_MessageReceiptRequest::InternalSwap(ImMessage_MessageReceiptRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  messagereceiptinfo_.InternalSwap(&other->messagereceiptinfo_);
  swap(chattarget_, other->chattarget_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ImMessage_MessageReceiptRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ImMessage_MessageReceiptResponse::_Internal {
 public:
};

ImMessage_MessageReceiptResponse::ImMessage_MessageReceiptResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.ImMessage.MessageReceiptResponse)
}
ImMessage_MessageReceiptResponse::ImMessage_MessageReceiptResponse(const ImMessage_MessageReceiptResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.ImMessage.MessageReceiptResponse)
}

void ImMessage_MessageReceiptResponse::SharedCtor() {
}

ImMessage_MessageReceiptResponse::~ImMessage_MessageReceiptResponse() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.ImMessage.MessageReceiptResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ImMessage_MessageReceiptResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ImMessage_MessageReceiptResponse::ArenaDtor(void* object) {
  ImMessage_MessageReceiptResponse* _this = reinterpret_cast< ImMessage_MessageReceiptResponse* >(object);
  (void)_this;
}
void ImMessage_MessageReceiptResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ImMessage_MessageReceiptResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ImMessage_MessageReceiptResponse& ImMessage_MessageReceiptResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ImMessage_MessageReceiptResponse_Im_2eproto.base);
  return *internal_default_instance();
}


void ImMessage_MessageReceiptResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.ImMessage.MessageReceiptResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ImMessage_MessageReceiptResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ImMessage_MessageReceiptResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.ImMessage.MessageReceiptResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.ImMessage.MessageReceiptResponse)
  return target;
}

size_t ImMessage_MessageReceiptResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.ImMessage.MessageReceiptResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImMessage_MessageReceiptResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.ImMessage.MessageReceiptResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ImMessage_MessageReceiptResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ImMessage_MessageReceiptResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.ImMessage.MessageReceiptResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.ImMessage.MessageReceiptResponse)
    MergeFrom(*source);
  }
}

void ImMessage_MessageReceiptResponse::MergeFrom(const ImMessage_MessageReceiptResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.ImMessage.MessageReceiptResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ImMessage_MessageReceiptResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.ImMessage.MessageReceiptResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImMessage_MessageReceiptResponse::CopyFrom(const ImMessage_MessageReceiptResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.ImMessage.MessageReceiptResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImMessage_MessageReceiptResponse::IsInitialized() const {
  return true;
}

void ImMessage_MessageReceiptResponse::InternalSwap(ImMessage_MessageReceiptResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ImMessage_MessageReceiptResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ImMessage_MessageReceiptInfo::_Internal {
 public:
};

ImMessage_MessageReceiptInfo::ImMessage_MessageReceiptInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.ImMessage.MessageReceiptInfo)
}
ImMessage_MessageReceiptInfo::ImMessage_MessageReceiptInfo(const ImMessage_MessageReceiptInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  readseq_ = from.readseq_;
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.ImMessage.MessageReceiptInfo)
}

void ImMessage_MessageReceiptInfo::SharedCtor() {
  readseq_ = PROTOBUF_LONGLONG(0);
}

ImMessage_MessageReceiptInfo::~ImMessage_MessageReceiptInfo() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.ImMessage.MessageReceiptInfo)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ImMessage_MessageReceiptInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ImMessage_MessageReceiptInfo::ArenaDtor(void* object) {
  ImMessage_MessageReceiptInfo* _this = reinterpret_cast< ImMessage_MessageReceiptInfo* >(object);
  (void)_this;
}
void ImMessage_MessageReceiptInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ImMessage_MessageReceiptInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ImMessage_MessageReceiptInfo& ImMessage_MessageReceiptInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ImMessage_MessageReceiptInfo_Im_2eproto.base);
  return *internal_default_instance();
}


void ImMessage_MessageReceiptInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.ImMessage.MessageReceiptInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  readseq_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ImMessage_MessageReceiptInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 readSeq = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          readseq_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ImMessage_MessageReceiptInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.ImMessage.MessageReceiptInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 readSeq = 1;
  if (this->readseq() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_readseq(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.ImMessage.MessageReceiptInfo)
  return target;
}

size_t ImMessage_MessageReceiptInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.ImMessage.MessageReceiptInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 readSeq = 1;
  if (this->readseq() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_readseq());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImMessage_MessageReceiptInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.ImMessage.MessageReceiptInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ImMessage_MessageReceiptInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ImMessage_MessageReceiptInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.ImMessage.MessageReceiptInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.ImMessage.MessageReceiptInfo)
    MergeFrom(*source);
  }
}

void ImMessage_MessageReceiptInfo::MergeFrom(const ImMessage_MessageReceiptInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.ImMessage.MessageReceiptInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.readseq() != 0) {
    _internal_set_readseq(from._internal_readseq());
  }
}

void ImMessage_MessageReceiptInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.ImMessage.MessageReceiptInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImMessage_MessageReceiptInfo::CopyFrom(const ImMessage_MessageReceiptInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.ImMessage.MessageReceiptInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImMessage_MessageReceiptInfo::IsInitialized() const {
  return true;
}

void ImMessage_MessageReceiptInfo::InternalSwap(ImMessage_MessageReceiptInfo* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(readseq_, other->readseq_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ImMessage_MessageReceiptInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ImMessage_MessageReceiptCountGetRequest::_Internal {
 public:
  static const ::AcFunDanmu::Im::ImMessage_ChatTarget& chattarget(const ImMessage_MessageReceiptCountGetRequest* msg);
};

const ::AcFunDanmu::Im::ImMessage_ChatTarget&
ImMessage_MessageReceiptCountGetRequest::_Internal::chattarget(const ImMessage_MessageReceiptCountGetRequest* msg) {
  return *msg->chattarget_;
}
ImMessage_MessageReceiptCountGetRequest::ImMessage_MessageReceiptCountGetRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  seqid_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.ImMessage.MessageReceiptCountGetRequest)
}
ImMessage_MessageReceiptCountGetRequest::ImMessage_MessageReceiptCountGetRequest(const ImMessage_MessageReceiptCountGetRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      seqid_(from.seqid_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_chattarget()) {
    chattarget_ = new ::AcFunDanmu::Im::ImMessage_ChatTarget(*from.chattarget_);
  } else {
    chattarget_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.ImMessage.MessageReceiptCountGetRequest)
}

void ImMessage_MessageReceiptCountGetRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ImMessage_MessageReceiptCountGetRequest_Im_2eproto.base);
  chattarget_ = nullptr;
}

ImMessage_MessageReceiptCountGetRequest::~ImMessage_MessageReceiptCountGetRequest() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.ImMessage.MessageReceiptCountGetRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ImMessage_MessageReceiptCountGetRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete chattarget_;
}

void ImMessage_MessageReceiptCountGetRequest::ArenaDtor(void* object) {
  ImMessage_MessageReceiptCountGetRequest* _this = reinterpret_cast< ImMessage_MessageReceiptCountGetRequest* >(object);
  (void)_this;
}
void ImMessage_MessageReceiptCountGetRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ImMessage_MessageReceiptCountGetRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ImMessage_MessageReceiptCountGetRequest& ImMessage_MessageReceiptCountGetRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ImMessage_MessageReceiptCountGetRequest_Im_2eproto.base);
  return *internal_default_instance();
}


void ImMessage_MessageReceiptCountGetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.ImMessage.MessageReceiptCountGetRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  seqid_.Clear();
  if (GetArena() == nullptr && chattarget_ != nullptr) {
    delete chattarget_;
  }
  chattarget_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ImMessage_MessageReceiptCountGetRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated int64 seqId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt64Parser(_internal_mutable_seqid(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8) {
          _internal_add_seqid(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .AcFunDanmu.Im.ImMessage.ChatTarget chatTarget = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_chattarget(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ImMessage_MessageReceiptCountGetRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.ImMessage.MessageReceiptCountGetRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 seqId = 1;
  {
    int byte_size = _seqid_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt64Packed(
          1, _internal_seqid(), byte_size, target);
    }
  }

  // .AcFunDanmu.Im.ImMessage.ChatTarget chatTarget = 2;
  if (this->has_chattarget()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::chattarget(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.ImMessage.MessageReceiptCountGetRequest)
  return target;
}

size_t ImMessage_MessageReceiptCountGetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.ImMessage.MessageReceiptCountGetRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int64 seqId = 1;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      Int64Size(this->seqid_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _seqid_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // .AcFunDanmu.Im.ImMessage.ChatTarget chatTarget = 2;
  if (this->has_chattarget()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *chattarget_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImMessage_MessageReceiptCountGetRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.ImMessage.MessageReceiptCountGetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ImMessage_MessageReceiptCountGetRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ImMessage_MessageReceiptCountGetRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.ImMessage.MessageReceiptCountGetRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.ImMessage.MessageReceiptCountGetRequest)
    MergeFrom(*source);
  }
}

void ImMessage_MessageReceiptCountGetRequest::MergeFrom(const ImMessage_MessageReceiptCountGetRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.ImMessage.MessageReceiptCountGetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  seqid_.MergeFrom(from.seqid_);
  if (from.has_chattarget()) {
    _internal_mutable_chattarget()->::AcFunDanmu::Im::ImMessage_ChatTarget::MergeFrom(from._internal_chattarget());
  }
}

void ImMessage_MessageReceiptCountGetRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.ImMessage.MessageReceiptCountGetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImMessage_MessageReceiptCountGetRequest::CopyFrom(const ImMessage_MessageReceiptCountGetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.ImMessage.MessageReceiptCountGetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImMessage_MessageReceiptCountGetRequest::IsInitialized() const {
  return true;
}

void ImMessage_MessageReceiptCountGetRequest::InternalSwap(ImMessage_MessageReceiptCountGetRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  seqid_.InternalSwap(&other->seqid_);
  swap(chattarget_, other->chattarget_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ImMessage_MessageReceiptCountGetRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ImMessage_MessageReceiptCountGetResponse::_Internal {
 public:
};

ImMessage_MessageReceiptCountGetResponse::ImMessage_MessageReceiptCountGetResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  status_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.ImMessage.MessageReceiptCountGetResponse)
}
ImMessage_MessageReceiptCountGetResponse::ImMessage_MessageReceiptCountGetResponse(const ImMessage_MessageReceiptCountGetResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      status_(from.status_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.ImMessage.MessageReceiptCountGetResponse)
}

void ImMessage_MessageReceiptCountGetResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ImMessage_MessageReceiptCountGetResponse_Im_2eproto.base);
}

ImMessage_MessageReceiptCountGetResponse::~ImMessage_MessageReceiptCountGetResponse() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.ImMessage.MessageReceiptCountGetResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ImMessage_MessageReceiptCountGetResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ImMessage_MessageReceiptCountGetResponse::ArenaDtor(void* object) {
  ImMessage_MessageReceiptCountGetResponse* _this = reinterpret_cast< ImMessage_MessageReceiptCountGetResponse* >(object);
  (void)_this;
}
void ImMessage_MessageReceiptCountGetResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ImMessage_MessageReceiptCountGetResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ImMessage_MessageReceiptCountGetResponse& ImMessage_MessageReceiptCountGetResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ImMessage_MessageReceiptCountGetResponse_Im_2eproto.base);
  return *internal_default_instance();
}


void ImMessage_MessageReceiptCountGetResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.ImMessage.MessageReceiptCountGetResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ImMessage_MessageReceiptCountGetResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .AcFunDanmu.Im.ImMessage.MessageReceiptStatus status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_status(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ImMessage_MessageReceiptCountGetResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.ImMessage.MessageReceiptCountGetResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .AcFunDanmu.Im.ImMessage.MessageReceiptStatus status = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_status_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_status(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.ImMessage.MessageReceiptCountGetResponse)
  return target;
}

size_t ImMessage_MessageReceiptCountGetResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.ImMessage.MessageReceiptCountGetResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .AcFunDanmu.Im.ImMessage.MessageReceiptStatus status = 1;
  total_size += 1UL * this->_internal_status_size();
  for (const auto& msg : this->status_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImMessage_MessageReceiptCountGetResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.ImMessage.MessageReceiptCountGetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ImMessage_MessageReceiptCountGetResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ImMessage_MessageReceiptCountGetResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.ImMessage.MessageReceiptCountGetResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.ImMessage.MessageReceiptCountGetResponse)
    MergeFrom(*source);
  }
}

void ImMessage_MessageReceiptCountGetResponse::MergeFrom(const ImMessage_MessageReceiptCountGetResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.ImMessage.MessageReceiptCountGetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  status_.MergeFrom(from.status_);
}

void ImMessage_MessageReceiptCountGetResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.ImMessage.MessageReceiptCountGetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImMessage_MessageReceiptCountGetResponse::CopyFrom(const ImMessage_MessageReceiptCountGetResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.ImMessage.MessageReceiptCountGetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImMessage_MessageReceiptCountGetResponse::IsInitialized() const {
  return true;
}

void ImMessage_MessageReceiptCountGetResponse::InternalSwap(ImMessage_MessageReceiptCountGetResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  status_.InternalSwap(&other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ImMessage_MessageReceiptCountGetResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ImMessage_MessageReceiptStatus::_Internal {
 public:
};

ImMessage_MessageReceiptStatus::ImMessage_MessageReceiptStatus(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.ImMessage.MessageReceiptStatus)
}
ImMessage_MessageReceiptStatus::ImMessage_MessageReceiptStatus(const ImMessage_MessageReceiptStatus& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&readcount_, &from.readcount_,
    static_cast<size_t>(reinterpret_cast<char*>(&servertime_) -
    reinterpret_cast<char*>(&readcount_)) + sizeof(servertime_));
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.ImMessage.MessageReceiptStatus)
}

void ImMessage_MessageReceiptStatus::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&readcount_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&servertime_) -
      reinterpret_cast<char*>(&readcount_)) + sizeof(servertime_));
}

ImMessage_MessageReceiptStatus::~ImMessage_MessageReceiptStatus() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.ImMessage.MessageReceiptStatus)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ImMessage_MessageReceiptStatus::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ImMessage_MessageReceiptStatus::ArenaDtor(void* object) {
  ImMessage_MessageReceiptStatus* _this = reinterpret_cast< ImMessage_MessageReceiptStatus* >(object);
  (void)_this;
}
void ImMessage_MessageReceiptStatus::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ImMessage_MessageReceiptStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ImMessage_MessageReceiptStatus& ImMessage_MessageReceiptStatus::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ImMessage_MessageReceiptStatus_Im_2eproto.base);
  return *internal_default_instance();
}


void ImMessage_MessageReceiptStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.ImMessage.MessageReceiptStatus)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&readcount_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&servertime_) -
      reinterpret_cast<char*>(&readcount_)) + sizeof(servertime_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ImMessage_MessageReceiptStatus::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 readCount = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          readcount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 unreadCount = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          unreadcount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 seqId = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          seqid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 serverTime = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          servertime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ImMessage_MessageReceiptStatus::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.ImMessage.MessageReceiptStatus)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 readCount = 1;
  if (this->readcount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_readcount(), target);
  }

  // int32 unreadCount = 2;
  if (this->unreadcount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_unreadcount(), target);
  }

  // int64 seqId = 3;
  if (this->seqid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_seqid(), target);
  }

  // int64 serverTime = 4;
  if (this->servertime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(4, this->_internal_servertime(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.ImMessage.MessageReceiptStatus)
  return target;
}

size_t ImMessage_MessageReceiptStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.ImMessage.MessageReceiptStatus)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 readCount = 1;
  if (this->readcount() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_readcount());
  }

  // int32 unreadCount = 2;
  if (this->unreadcount() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_unreadcount());
  }

  // int64 seqId = 3;
  if (this->seqid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_seqid());
  }

  // int64 serverTime = 4;
  if (this->servertime() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_servertime());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImMessage_MessageReceiptStatus::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.ImMessage.MessageReceiptStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const ImMessage_MessageReceiptStatus* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ImMessage_MessageReceiptStatus>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.ImMessage.MessageReceiptStatus)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.ImMessage.MessageReceiptStatus)
    MergeFrom(*source);
  }
}

void ImMessage_MessageReceiptStatus::MergeFrom(const ImMessage_MessageReceiptStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.ImMessage.MessageReceiptStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.readcount() != 0) {
    _internal_set_readcount(from._internal_readcount());
  }
  if (from.unreadcount() != 0) {
    _internal_set_unreadcount(from._internal_unreadcount());
  }
  if (from.seqid() != 0) {
    _internal_set_seqid(from._internal_seqid());
  }
  if (from.servertime() != 0) {
    _internal_set_servertime(from._internal_servertime());
  }
}

void ImMessage_MessageReceiptStatus::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.ImMessage.MessageReceiptStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImMessage_MessageReceiptStatus::CopyFrom(const ImMessage_MessageReceiptStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.ImMessage.MessageReceiptStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImMessage_MessageReceiptStatus::IsInitialized() const {
  return true;
}

void ImMessage_MessageReceiptStatus::InternalSwap(ImMessage_MessageReceiptStatus* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ImMessage_MessageReceiptStatus, servertime_)
      + sizeof(ImMessage_MessageReceiptStatus::servertime_)
      - PROTOBUF_FIELD_OFFSET(ImMessage_MessageReceiptStatus, readcount_)>(
          reinterpret_cast<char*>(&readcount_),
          reinterpret_cast<char*>(&other->readcount_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ImMessage_MessageReceiptStatus::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ImMessage_MessageReceiptDetailGetRequest::_Internal {
 public:
  static const ::AcFunDanmu::Im::ImMessage_ChatTarget& chattarget(const ImMessage_MessageReceiptDetailGetRequest* msg);
};

const ::AcFunDanmu::Im::ImMessage_ChatTarget&
ImMessage_MessageReceiptDetailGetRequest::_Internal::chattarget(const ImMessage_MessageReceiptDetailGetRequest* msg) {
  return *msg->chattarget_;
}
ImMessage_MessageReceiptDetailGetRequest::ImMessage_MessageReceiptDetailGetRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.ImMessage.MessageReceiptDetailGetRequest)
}
ImMessage_MessageReceiptDetailGetRequest::ImMessage_MessageReceiptDetailGetRequest(const ImMessage_MessageReceiptDetailGetRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_chattarget()) {
    chattarget_ = new ::AcFunDanmu::Im::ImMessage_ChatTarget(*from.chattarget_);
  } else {
    chattarget_ = nullptr;
  }
  seqid_ = from.seqid_;
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.ImMessage.MessageReceiptDetailGetRequest)
}

void ImMessage_MessageReceiptDetailGetRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ImMessage_MessageReceiptDetailGetRequest_Im_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&chattarget_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&seqid_) -
      reinterpret_cast<char*>(&chattarget_)) + sizeof(seqid_));
}

ImMessage_MessageReceiptDetailGetRequest::~ImMessage_MessageReceiptDetailGetRequest() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.ImMessage.MessageReceiptDetailGetRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ImMessage_MessageReceiptDetailGetRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete chattarget_;
}

void ImMessage_MessageReceiptDetailGetRequest::ArenaDtor(void* object) {
  ImMessage_MessageReceiptDetailGetRequest* _this = reinterpret_cast< ImMessage_MessageReceiptDetailGetRequest* >(object);
  (void)_this;
}
void ImMessage_MessageReceiptDetailGetRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ImMessage_MessageReceiptDetailGetRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ImMessage_MessageReceiptDetailGetRequest& ImMessage_MessageReceiptDetailGetRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ImMessage_MessageReceiptDetailGetRequest_Im_2eproto.base);
  return *internal_default_instance();
}


void ImMessage_MessageReceiptDetailGetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.ImMessage.MessageReceiptDetailGetRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && chattarget_ != nullptr) {
    delete chattarget_;
  }
  chattarget_ = nullptr;
  seqid_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ImMessage_MessageReceiptDetailGetRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 seqId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          seqid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .AcFunDanmu.Im.ImMessage.ChatTarget chatTarget = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_chattarget(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ImMessage_MessageReceiptDetailGetRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.ImMessage.MessageReceiptDetailGetRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 seqId = 1;
  if (this->seqid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_seqid(), target);
  }

  // .AcFunDanmu.Im.ImMessage.ChatTarget chatTarget = 2;
  if (this->has_chattarget()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::chattarget(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.ImMessage.MessageReceiptDetailGetRequest)
  return target;
}

size_t ImMessage_MessageReceiptDetailGetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.ImMessage.MessageReceiptDetailGetRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .AcFunDanmu.Im.ImMessage.ChatTarget chatTarget = 2;
  if (this->has_chattarget()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *chattarget_);
  }

  // int64 seqId = 1;
  if (this->seqid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_seqid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImMessage_MessageReceiptDetailGetRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.ImMessage.MessageReceiptDetailGetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ImMessage_MessageReceiptDetailGetRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ImMessage_MessageReceiptDetailGetRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.ImMessage.MessageReceiptDetailGetRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.ImMessage.MessageReceiptDetailGetRequest)
    MergeFrom(*source);
  }
}

void ImMessage_MessageReceiptDetailGetRequest::MergeFrom(const ImMessage_MessageReceiptDetailGetRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.ImMessage.MessageReceiptDetailGetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_chattarget()) {
    _internal_mutable_chattarget()->::AcFunDanmu::Im::ImMessage_ChatTarget::MergeFrom(from._internal_chattarget());
  }
  if (from.seqid() != 0) {
    _internal_set_seqid(from._internal_seqid());
  }
}

void ImMessage_MessageReceiptDetailGetRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.ImMessage.MessageReceiptDetailGetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImMessage_MessageReceiptDetailGetRequest::CopyFrom(const ImMessage_MessageReceiptDetailGetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.ImMessage.MessageReceiptDetailGetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImMessage_MessageReceiptDetailGetRequest::IsInitialized() const {
  return true;
}

void ImMessage_MessageReceiptDetailGetRequest::InternalSwap(ImMessage_MessageReceiptDetailGetRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ImMessage_MessageReceiptDetailGetRequest, seqid_)
      + sizeof(ImMessage_MessageReceiptDetailGetRequest::seqid_)
      - PROTOBUF_FIELD_OFFSET(ImMessage_MessageReceiptDetailGetRequest, chattarget_)>(
          reinterpret_cast<char*>(&chattarget_),
          reinterpret_cast<char*>(&other->chattarget_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ImMessage_MessageReceiptDetailGetRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ImMessage_MessageReceiptDetailGetResponse::_Internal {
 public:
};

ImMessage_MessageReceiptDetailGetResponse::ImMessage_MessageReceiptDetailGetResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  readuser_(arena),
  unreaduser_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.ImMessage.MessageReceiptDetailGetResponse)
}
ImMessage_MessageReceiptDetailGetResponse::ImMessage_MessageReceiptDetailGetResponse(const ImMessage_MessageReceiptDetailGetResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      readuser_(from.readuser_),
      unreaduser_(from.unreaduser_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.ImMessage.MessageReceiptDetailGetResponse)
}

void ImMessage_MessageReceiptDetailGetResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ImMessage_MessageReceiptDetailGetResponse_Im_2eproto.base);
}

ImMessage_MessageReceiptDetailGetResponse::~ImMessage_MessageReceiptDetailGetResponse() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.ImMessage.MessageReceiptDetailGetResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ImMessage_MessageReceiptDetailGetResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ImMessage_MessageReceiptDetailGetResponse::ArenaDtor(void* object) {
  ImMessage_MessageReceiptDetailGetResponse* _this = reinterpret_cast< ImMessage_MessageReceiptDetailGetResponse* >(object);
  (void)_this;
}
void ImMessage_MessageReceiptDetailGetResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ImMessage_MessageReceiptDetailGetResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ImMessage_MessageReceiptDetailGetResponse& ImMessage_MessageReceiptDetailGetResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ImMessage_MessageReceiptDetailGetResponse_Im_2eproto.base);
  return *internal_default_instance();
}


void ImMessage_MessageReceiptDetailGetResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.ImMessage.MessageReceiptDetailGetResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  readuser_.Clear();
  unreaduser_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ImMessage_MessageReceiptDetailGetResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .AcFunDanmu.Im.Basic.User readUser = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_readuser(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .AcFunDanmu.Im.Basic.User unreadUser = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_unreaduser(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ImMessage_MessageReceiptDetailGetResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.ImMessage.MessageReceiptDetailGetResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .AcFunDanmu.Im.Basic.User readUser = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_readuser_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_readuser(i), target, stream);
  }

  // repeated .AcFunDanmu.Im.Basic.User unreadUser = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_unreaduser_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_unreaduser(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.ImMessage.MessageReceiptDetailGetResponse)
  return target;
}

size_t ImMessage_MessageReceiptDetailGetResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.ImMessage.MessageReceiptDetailGetResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .AcFunDanmu.Im.Basic.User readUser = 1;
  total_size += 1UL * this->_internal_readuser_size();
  for (const auto& msg : this->readuser_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .AcFunDanmu.Im.Basic.User unreadUser = 2;
  total_size += 1UL * this->_internal_unreaduser_size();
  for (const auto& msg : this->unreaduser_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImMessage_MessageReceiptDetailGetResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.ImMessage.MessageReceiptDetailGetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ImMessage_MessageReceiptDetailGetResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ImMessage_MessageReceiptDetailGetResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.ImMessage.MessageReceiptDetailGetResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.ImMessage.MessageReceiptDetailGetResponse)
    MergeFrom(*source);
  }
}

void ImMessage_MessageReceiptDetailGetResponse::MergeFrom(const ImMessage_MessageReceiptDetailGetResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.ImMessage.MessageReceiptDetailGetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  readuser_.MergeFrom(from.readuser_);
  unreaduser_.MergeFrom(from.unreaduser_);
}

void ImMessage_MessageReceiptDetailGetResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.ImMessage.MessageReceiptDetailGetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImMessage_MessageReceiptDetailGetResponse::CopyFrom(const ImMessage_MessageReceiptDetailGetResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.ImMessage.MessageReceiptDetailGetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImMessage_MessageReceiptDetailGetResponse::IsInitialized() const {
  return true;
}

void ImMessage_MessageReceiptDetailGetResponse::InternalSwap(ImMessage_MessageReceiptDetailGetResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  readuser_.InternalSwap(&other->readuser_);
  unreaduser_.InternalSwap(&other->unreaduser_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ImMessage_MessageReceiptDetailGetResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ImMessage_MessageBatchSendRequest::_Internal {
 public:
};

ImMessage_MessageBatchSendRequest::ImMessage_MessageBatchSendRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  message_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.ImMessage.MessageBatchSendRequest)
}
ImMessage_MessageBatchSendRequest::ImMessage_MessageBatchSendRequest(const ImMessage_MessageBatchSendRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      message_(from.message_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.ImMessage.MessageBatchSendRequest)
}

void ImMessage_MessageBatchSendRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ImMessage_MessageBatchSendRequest_Im_2eproto.base);
}

ImMessage_MessageBatchSendRequest::~ImMessage_MessageBatchSendRequest() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.ImMessage.MessageBatchSendRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ImMessage_MessageBatchSendRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ImMessage_MessageBatchSendRequest::ArenaDtor(void* object) {
  ImMessage_MessageBatchSendRequest* _this = reinterpret_cast< ImMessage_MessageBatchSendRequest* >(object);
  (void)_this;
}
void ImMessage_MessageBatchSendRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ImMessage_MessageBatchSendRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ImMessage_MessageBatchSendRequest& ImMessage_MessageBatchSendRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ImMessage_MessageBatchSendRequest_Im_2eproto.base);
  return *internal_default_instance();
}


void ImMessage_MessageBatchSendRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.ImMessage.MessageBatchSendRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ImMessage_MessageBatchSendRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .AcFunDanmu.Im.ImMessage.Message message = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_message(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ImMessage_MessageBatchSendRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.ImMessage.MessageBatchSendRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .AcFunDanmu.Im.ImMessage.Message message = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_message_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_message(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.ImMessage.MessageBatchSendRequest)
  return target;
}

size_t ImMessage_MessageBatchSendRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.ImMessage.MessageBatchSendRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .AcFunDanmu.Im.ImMessage.Message message = 1;
  total_size += 1UL * this->_internal_message_size();
  for (const auto& msg : this->message_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImMessage_MessageBatchSendRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.ImMessage.MessageBatchSendRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ImMessage_MessageBatchSendRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ImMessage_MessageBatchSendRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.ImMessage.MessageBatchSendRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.ImMessage.MessageBatchSendRequest)
    MergeFrom(*source);
  }
}

void ImMessage_MessageBatchSendRequest::MergeFrom(const ImMessage_MessageBatchSendRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.ImMessage.MessageBatchSendRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  message_.MergeFrom(from.message_);
}

void ImMessage_MessageBatchSendRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.ImMessage.MessageBatchSendRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImMessage_MessageBatchSendRequest::CopyFrom(const ImMessage_MessageBatchSendRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.ImMessage.MessageBatchSendRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImMessage_MessageBatchSendRequest::IsInitialized() const {
  return true;
}

void ImMessage_MessageBatchSendRequest::InternalSwap(ImMessage_MessageBatchSendRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  message_.InternalSwap(&other->message_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ImMessage_MessageBatchSendRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ImMessage_MessageBatchSendResponse::_Internal {
 public:
};

ImMessage_MessageBatchSendResponse::ImMessage_MessageBatchSendResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  response_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.ImMessage.MessageBatchSendResponse)
}
ImMessage_MessageBatchSendResponse::ImMessage_MessageBatchSendResponse(const ImMessage_MessageBatchSendResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      response_(from.response_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.ImMessage.MessageBatchSendResponse)
}

void ImMessage_MessageBatchSendResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ImMessage_MessageBatchSendResponse_Im_2eproto.base);
}

ImMessage_MessageBatchSendResponse::~ImMessage_MessageBatchSendResponse() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.ImMessage.MessageBatchSendResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ImMessage_MessageBatchSendResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ImMessage_MessageBatchSendResponse::ArenaDtor(void* object) {
  ImMessage_MessageBatchSendResponse* _this = reinterpret_cast< ImMessage_MessageBatchSendResponse* >(object);
  (void)_this;
}
void ImMessage_MessageBatchSendResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ImMessage_MessageBatchSendResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ImMessage_MessageBatchSendResponse& ImMessage_MessageBatchSendResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ImMessage_MessageBatchSendResponse_Im_2eproto.base);
  return *internal_default_instance();
}


void ImMessage_MessageBatchSendResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.ImMessage.MessageBatchSendResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  response_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ImMessage_MessageBatchSendResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .AcFunDanmu.Im.ImMessage.SendMessageResponse response = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_response(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ImMessage_MessageBatchSendResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.ImMessage.MessageBatchSendResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .AcFunDanmu.Im.ImMessage.SendMessageResponse response = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_response_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_response(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.ImMessage.MessageBatchSendResponse)
  return target;
}

size_t ImMessage_MessageBatchSendResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.ImMessage.MessageBatchSendResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .AcFunDanmu.Im.ImMessage.SendMessageResponse response = 1;
  total_size += 1UL * this->_internal_response_size();
  for (const auto& msg : this->response_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImMessage_MessageBatchSendResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.ImMessage.MessageBatchSendResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ImMessage_MessageBatchSendResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ImMessage_MessageBatchSendResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.ImMessage.MessageBatchSendResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.ImMessage.MessageBatchSendResponse)
    MergeFrom(*source);
  }
}

void ImMessage_MessageBatchSendResponse::MergeFrom(const ImMessage_MessageBatchSendResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.ImMessage.MessageBatchSendResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  response_.MergeFrom(from.response_);
}

void ImMessage_MessageBatchSendResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.ImMessage.MessageBatchSendResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImMessage_MessageBatchSendResponse::CopyFrom(const ImMessage_MessageBatchSendResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.ImMessage.MessageBatchSendResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImMessage_MessageBatchSendResponse::IsInitialized() const {
  return true;
}

void ImMessage_MessageBatchSendResponse::InternalSwap(ImMessage_MessageBatchSendResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  response_.InternalSwap(&other->response_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ImMessage_MessageBatchSendResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ImMessage_ImageAttachment::_Internal {
 public:
};

ImMessage_ImageAttachment::ImMessage_ImageAttachment(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.ImMessage.ImageAttachment)
}
ImMessage_ImageAttachment::ImMessage_ImageAttachment(const ImMessage_ImageAttachment& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  mimetype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_mimetype().empty()) {
    mimetype_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_mimetype(), 
      GetArena());
  }
  url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_url().empty()) {
    url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_url(), 
      GetArena());
  }
  ::memcpy(&width_, &from.width_,
    static_cast<size_t>(reinterpret_cast<char*>(&lengthinbytes_) -
    reinterpret_cast<char*>(&width_)) + sizeof(lengthinbytes_));
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.ImMessage.ImageAttachment)
}

void ImMessage_ImageAttachment::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ImMessage_ImageAttachment_Im_2eproto.base);
  mimetype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&width_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&lengthinbytes_) -
      reinterpret_cast<char*>(&width_)) + sizeof(lengthinbytes_));
}

ImMessage_ImageAttachment::~ImMessage_ImageAttachment() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.ImMessage.ImageAttachment)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ImMessage_ImageAttachment::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  mimetype_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  url_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ImMessage_ImageAttachment::ArenaDtor(void* object) {
  ImMessage_ImageAttachment* _this = reinterpret_cast< ImMessage_ImageAttachment* >(object);
  (void)_this;
}
void ImMessage_ImageAttachment::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ImMessage_ImageAttachment::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ImMessage_ImageAttachment& ImMessage_ImageAttachment::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ImMessage_ImageAttachment_Im_2eproto.base);
  return *internal_default_instance();
}


void ImMessage_ImageAttachment::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.ImMessage.ImageAttachment)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mimetype_.ClearToEmpty();
  url_.ClearToEmpty();
  ::memset(&width_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&lengthinbytes_) -
      reinterpret_cast<char*>(&width_)) + sizeof(lengthinbytes_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ImMessage_ImageAttachment::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string mimeType = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_mimetype();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.ImMessage.ImageAttachment.mimeType"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string url = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_url();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.ImMessage.ImageAttachment.url"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 width = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          width_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 height = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          height_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 lengthInBytes = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          lengthinbytes_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ImMessage_ImageAttachment::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.ImMessage.ImageAttachment)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string mimeType = 1;
  if (this->mimetype().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_mimetype().data(), static_cast<int>(this->_internal_mimetype().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.ImMessage.ImageAttachment.mimeType");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_mimetype(), target);
  }

  // string url = 2;
  if (this->url().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_url().data(), static_cast<int>(this->_internal_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.ImMessage.ImageAttachment.url");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_url(), target);
  }

  // int32 width = 3;
  if (this->width() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_width(), target);
  }

  // int32 height = 4;
  if (this->height() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_height(), target);
  }

  // int64 lengthInBytes = 5;
  if (this->lengthinbytes() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(5, this->_internal_lengthinbytes(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.ImMessage.ImageAttachment)
  return target;
}

size_t ImMessage_ImageAttachment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.ImMessage.ImageAttachment)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string mimeType = 1;
  if (this->mimetype().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_mimetype());
  }

  // string url = 2;
  if (this->url().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_url());
  }

  // int32 width = 3;
  if (this->width() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_width());
  }

  // int32 height = 4;
  if (this->height() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_height());
  }

  // int64 lengthInBytes = 5;
  if (this->lengthinbytes() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_lengthinbytes());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImMessage_ImageAttachment::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.ImMessage.ImageAttachment)
  GOOGLE_DCHECK_NE(&from, this);
  const ImMessage_ImageAttachment* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ImMessage_ImageAttachment>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.ImMessage.ImageAttachment)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.ImMessage.ImageAttachment)
    MergeFrom(*source);
  }
}

void ImMessage_ImageAttachment::MergeFrom(const ImMessage_ImageAttachment& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.ImMessage.ImageAttachment)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mimetype().size() > 0) {
    _internal_set_mimetype(from._internal_mimetype());
  }
  if (from.url().size() > 0) {
    _internal_set_url(from._internal_url());
  }
  if (from.width() != 0) {
    _internal_set_width(from._internal_width());
  }
  if (from.height() != 0) {
    _internal_set_height(from._internal_height());
  }
  if (from.lengthinbytes() != 0) {
    _internal_set_lengthinbytes(from._internal_lengthinbytes());
  }
}

void ImMessage_ImageAttachment::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.ImMessage.ImageAttachment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImMessage_ImageAttachment::CopyFrom(const ImMessage_ImageAttachment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.ImMessage.ImageAttachment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImMessage_ImageAttachment::IsInitialized() const {
  return true;
}

void ImMessage_ImageAttachment::InternalSwap(ImMessage_ImageAttachment* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  mimetype_.Swap(&other->mimetype_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  url_.Swap(&other->url_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ImMessage_ImageAttachment, lengthinbytes_)
      + sizeof(ImMessage_ImageAttachment::lengthinbytes_)
      - PROTOBUF_FIELD_OFFSET(ImMessage_ImageAttachment, width_)>(
          reinterpret_cast<char*>(&width_),
          reinterpret_cast<char*>(&other->width_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ImMessage_ImageAttachment::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ImMessage_AudioAttachment::_Internal {
 public:
};

ImMessage_AudioAttachment::ImMessage_AudioAttachment(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.ImMessage.AudioAttachment)
}
ImMessage_AudioAttachment::ImMessage_AudioAttachment(const ImMessage_AudioAttachment& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  mimetype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_mimetype().empty()) {
    mimetype_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_mimetype(), 
      GetArena());
  }
  url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_url().empty()) {
    url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_url(), 
      GetArena());
  }
  ::memcpy(&width_, &from.width_,
    static_cast<size_t>(reinterpret_cast<char*>(&lengthinbytes_) -
    reinterpret_cast<char*>(&width_)) + sizeof(lengthinbytes_));
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.ImMessage.AudioAttachment)
}

void ImMessage_AudioAttachment::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ImMessage_AudioAttachment_Im_2eproto.base);
  mimetype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&width_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&lengthinbytes_) -
      reinterpret_cast<char*>(&width_)) + sizeof(lengthinbytes_));
}

ImMessage_AudioAttachment::~ImMessage_AudioAttachment() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.ImMessage.AudioAttachment)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ImMessage_AudioAttachment::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  mimetype_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  url_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ImMessage_AudioAttachment::ArenaDtor(void* object) {
  ImMessage_AudioAttachment* _this = reinterpret_cast< ImMessage_AudioAttachment* >(object);
  (void)_this;
}
void ImMessage_AudioAttachment::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ImMessage_AudioAttachment::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ImMessage_AudioAttachment& ImMessage_AudioAttachment::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ImMessage_AudioAttachment_Im_2eproto.base);
  return *internal_default_instance();
}


void ImMessage_AudioAttachment::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.ImMessage.AudioAttachment)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mimetype_.ClearToEmpty();
  url_.ClearToEmpty();
  ::memset(&width_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&lengthinbytes_) -
      reinterpret_cast<char*>(&width_)) + sizeof(lengthinbytes_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ImMessage_AudioAttachment::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string mimeType = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_mimetype();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.ImMessage.AudioAttachment.mimeType"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string url = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_url();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.ImMessage.AudioAttachment.url"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 width = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          width_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 height = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          height_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 lengthInBytes = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          lengthinbytes_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ImMessage_AudioAttachment::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.ImMessage.AudioAttachment)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string mimeType = 1;
  if (this->mimetype().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_mimetype().data(), static_cast<int>(this->_internal_mimetype().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.ImMessage.AudioAttachment.mimeType");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_mimetype(), target);
  }

  // string url = 2;
  if (this->url().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_url().data(), static_cast<int>(this->_internal_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.ImMessage.AudioAttachment.url");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_url(), target);
  }

  // int32 width = 3;
  if (this->width() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_width(), target);
  }

  // int32 height = 4;
  if (this->height() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_height(), target);
  }

  // int64 lengthInBytes = 5;
  if (this->lengthinbytes() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(5, this->_internal_lengthinbytes(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.ImMessage.AudioAttachment)
  return target;
}

size_t ImMessage_AudioAttachment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.ImMessage.AudioAttachment)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string mimeType = 1;
  if (this->mimetype().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_mimetype());
  }

  // string url = 2;
  if (this->url().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_url());
  }

  // int32 width = 3;
  if (this->width() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_width());
  }

  // int32 height = 4;
  if (this->height() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_height());
  }

  // int64 lengthInBytes = 5;
  if (this->lengthinbytes() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_lengthinbytes());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImMessage_AudioAttachment::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.ImMessage.AudioAttachment)
  GOOGLE_DCHECK_NE(&from, this);
  const ImMessage_AudioAttachment* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ImMessage_AudioAttachment>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.ImMessage.AudioAttachment)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.ImMessage.AudioAttachment)
    MergeFrom(*source);
  }
}

void ImMessage_AudioAttachment::MergeFrom(const ImMessage_AudioAttachment& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.ImMessage.AudioAttachment)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mimetype().size() > 0) {
    _internal_set_mimetype(from._internal_mimetype());
  }
  if (from.url().size() > 0) {
    _internal_set_url(from._internal_url());
  }
  if (from.width() != 0) {
    _internal_set_width(from._internal_width());
  }
  if (from.height() != 0) {
    _internal_set_height(from._internal_height());
  }
  if (from.lengthinbytes() != 0) {
    _internal_set_lengthinbytes(from._internal_lengthinbytes());
  }
}

void ImMessage_AudioAttachment::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.ImMessage.AudioAttachment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImMessage_AudioAttachment::CopyFrom(const ImMessage_AudioAttachment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.ImMessage.AudioAttachment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImMessage_AudioAttachment::IsInitialized() const {
  return true;
}

void ImMessage_AudioAttachment::InternalSwap(ImMessage_AudioAttachment* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  mimetype_.Swap(&other->mimetype_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  url_.Swap(&other->url_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ImMessage_AudioAttachment, lengthinbytes_)
      + sizeof(ImMessage_AudioAttachment::lengthinbytes_)
      - PROTOBUF_FIELD_OFFSET(ImMessage_AudioAttachment, width_)>(
          reinterpret_cast<char*>(&width_),
          reinterpret_cast<char*>(&other->width_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ImMessage_AudioAttachment::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ImMessage_GifAttachment::_Internal {
 public:
};

ImMessage_GifAttachment::ImMessage_GifAttachment(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.ImMessage.GifAttachment)
}
ImMessage_GifAttachment::ImMessage_GifAttachment(const ImMessage_GifAttachment& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  mimetype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_mimetype().empty()) {
    mimetype_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_mimetype(), 
      GetArena());
  }
  url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_url().empty()) {
    url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_url(), 
      GetArena());
  }
  thumbaurl_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_thumbaurl().empty()) {
    thumbaurl_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_thumbaurl(), 
      GetArena());
  }
  text_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_text().empty()) {
    text_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_text(), 
      GetArena());
  }
  ::memcpy(&width_, &from.width_,
    static_cast<size_t>(reinterpret_cast<char*>(&height_) -
    reinterpret_cast<char*>(&width_)) + sizeof(height_));
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.ImMessage.GifAttachment)
}

void ImMessage_GifAttachment::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ImMessage_GifAttachment_Im_2eproto.base);
  mimetype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  thumbaurl_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  text_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&width_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&height_) -
      reinterpret_cast<char*>(&width_)) + sizeof(height_));
}

ImMessage_GifAttachment::~ImMessage_GifAttachment() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.ImMessage.GifAttachment)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ImMessage_GifAttachment::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  mimetype_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  url_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  thumbaurl_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  text_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ImMessage_GifAttachment::ArenaDtor(void* object) {
  ImMessage_GifAttachment* _this = reinterpret_cast< ImMessage_GifAttachment* >(object);
  (void)_this;
}
void ImMessage_GifAttachment::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ImMessage_GifAttachment::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ImMessage_GifAttachment& ImMessage_GifAttachment::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ImMessage_GifAttachment_Im_2eproto.base);
  return *internal_default_instance();
}


void ImMessage_GifAttachment::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.ImMessage.GifAttachment)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mimetype_.ClearToEmpty();
  url_.ClearToEmpty();
  thumbaurl_.ClearToEmpty();
  text_.ClearToEmpty();
  ::memset(&width_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&height_) -
      reinterpret_cast<char*>(&width_)) + sizeof(height_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ImMessage_GifAttachment::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string mimeType = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_mimetype();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.ImMessage.GifAttachment.mimeType"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string url = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_url();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.ImMessage.GifAttachment.url"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 width = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          width_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 height = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          height_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string thumbaUrl = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_thumbaurl();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.ImMessage.GifAttachment.thumbaUrl"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string text = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_text();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.ImMessage.GifAttachment.text"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ImMessage_GifAttachment::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.ImMessage.GifAttachment)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string mimeType = 1;
  if (this->mimetype().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_mimetype().data(), static_cast<int>(this->_internal_mimetype().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.ImMessage.GifAttachment.mimeType");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_mimetype(), target);
  }

  // string url = 2;
  if (this->url().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_url().data(), static_cast<int>(this->_internal_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.ImMessage.GifAttachment.url");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_url(), target);
  }

  // int32 width = 3;
  if (this->width() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_width(), target);
  }

  // int32 height = 4;
  if (this->height() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_height(), target);
  }

  // string thumbaUrl = 5;
  if (this->thumbaurl().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_thumbaurl().data(), static_cast<int>(this->_internal_thumbaurl().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.ImMessage.GifAttachment.thumbaUrl");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_thumbaurl(), target);
  }

  // string text = 6;
  if (this->text().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_text().data(), static_cast<int>(this->_internal_text().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.ImMessage.GifAttachment.text");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_text(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.ImMessage.GifAttachment)
  return target;
}

size_t ImMessage_GifAttachment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.ImMessage.GifAttachment)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string mimeType = 1;
  if (this->mimetype().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_mimetype());
  }

  // string url = 2;
  if (this->url().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_url());
  }

  // string thumbaUrl = 5;
  if (this->thumbaurl().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_thumbaurl());
  }

  // string text = 6;
  if (this->text().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_text());
  }

  // int32 width = 3;
  if (this->width() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_width());
  }

  // int32 height = 4;
  if (this->height() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_height());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImMessage_GifAttachment::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.ImMessage.GifAttachment)
  GOOGLE_DCHECK_NE(&from, this);
  const ImMessage_GifAttachment* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ImMessage_GifAttachment>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.ImMessage.GifAttachment)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.ImMessage.GifAttachment)
    MergeFrom(*source);
  }
}

void ImMessage_GifAttachment::MergeFrom(const ImMessage_GifAttachment& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.ImMessage.GifAttachment)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mimetype().size() > 0) {
    _internal_set_mimetype(from._internal_mimetype());
  }
  if (from.url().size() > 0) {
    _internal_set_url(from._internal_url());
  }
  if (from.thumbaurl().size() > 0) {
    _internal_set_thumbaurl(from._internal_thumbaurl());
  }
  if (from.text().size() > 0) {
    _internal_set_text(from._internal_text());
  }
  if (from.width() != 0) {
    _internal_set_width(from._internal_width());
  }
  if (from.height() != 0) {
    _internal_set_height(from._internal_height());
  }
}

void ImMessage_GifAttachment::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.ImMessage.GifAttachment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImMessage_GifAttachment::CopyFrom(const ImMessage_GifAttachment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.ImMessage.GifAttachment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImMessage_GifAttachment::IsInitialized() const {
  return true;
}

void ImMessage_GifAttachment::InternalSwap(ImMessage_GifAttachment* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  mimetype_.Swap(&other->mimetype_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  url_.Swap(&other->url_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  thumbaurl_.Swap(&other->thumbaurl_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  text_.Swap(&other->text_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ImMessage_GifAttachment, height_)
      + sizeof(ImMessage_GifAttachment::height_)
      - PROTOBUF_FIELD_OFFSET(ImMessage_GifAttachment, width_)>(
          reinterpret_cast<char*>(&width_),
          reinterpret_cast<char*>(&other->width_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ImMessage_GifAttachment::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ImMessage_Attachment::_Internal {
 public:
  static const ::AcFunDanmu::Im::ImMessage_ImageAttachment& imageattachment(const ImMessage_Attachment* msg);
  static const ::AcFunDanmu::Im::ImMessage_AudioAttachment& audioattachment(const ImMessage_Attachment* msg);
};

const ::AcFunDanmu::Im::ImMessage_ImageAttachment&
ImMessage_Attachment::_Internal::imageattachment(const ImMessage_Attachment* msg) {
  return *msg->attacmnent_.imageattachment_;
}
const ::AcFunDanmu::Im::ImMessage_AudioAttachment&
ImMessage_Attachment::_Internal::audioattachment(const ImMessage_Attachment* msg) {
  return *msg->attacmnent_.audioattachment_;
}
void ImMessage_Attachment::set_allocated_imageattachment(::AcFunDanmu::Im::ImMessage_ImageAttachment* imageattachment) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_attacmnent();
  if (imageattachment) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(imageattachment);
    if (message_arena != submessage_arena) {
      imageattachment = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, imageattachment, submessage_arena);
    }
    set_has_imageattachment();
    attacmnent_.imageattachment_ = imageattachment;
  }
  // @@protoc_insertion_point(field_set_allocated:AcFunDanmu.Im.ImMessage.Attachment.imageAttachment)
}
void ImMessage_Attachment::set_allocated_audioattachment(::AcFunDanmu::Im::ImMessage_AudioAttachment* audioattachment) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_attacmnent();
  if (audioattachment) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(audioattachment);
    if (message_arena != submessage_arena) {
      audioattachment = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, audioattachment, submessage_arena);
    }
    set_has_audioattachment();
    attacmnent_.audioattachment_ = audioattachment;
  }
  // @@protoc_insertion_point(field_set_allocated:AcFunDanmu.Im.ImMessage.Attachment.audioAttachment)
}
ImMessage_Attachment::ImMessage_Attachment(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.ImMessage.Attachment)
}
ImMessage_Attachment::ImMessage_Attachment(const ImMessage_Attachment& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_attacmnent();
  switch (from.attacmnent_case()) {
    case kImageAttachment: {
      _internal_mutable_imageattachment()->::AcFunDanmu::Im::ImMessage_ImageAttachment::MergeFrom(from._internal_imageattachment());
      break;
    }
    case kAudioAttachment: {
      _internal_mutable_audioattachment()->::AcFunDanmu::Im::ImMessage_AudioAttachment::MergeFrom(from._internal_audioattachment());
      break;
    }
    case ATTACMNENT_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.ImMessage.Attachment)
}

void ImMessage_Attachment::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ImMessage_Attachment_Im_2eproto.base);
  clear_has_attacmnent();
}

ImMessage_Attachment::~ImMessage_Attachment() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.ImMessage.Attachment)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ImMessage_Attachment::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (has_attacmnent()) {
    clear_attacmnent();
  }
}

void ImMessage_Attachment::ArenaDtor(void* object) {
  ImMessage_Attachment* _this = reinterpret_cast< ImMessage_Attachment* >(object);
  (void)_this;
}
void ImMessage_Attachment::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ImMessage_Attachment::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ImMessage_Attachment& ImMessage_Attachment::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ImMessage_Attachment_Im_2eproto.base);
  return *internal_default_instance();
}


void ImMessage_Attachment::clear_attacmnent() {
// @@protoc_insertion_point(one_of_clear_start:AcFunDanmu.Im.ImMessage.Attachment)
  switch (attacmnent_case()) {
    case kImageAttachment: {
      if (GetArena() == nullptr) {
        delete attacmnent_.imageattachment_;
      }
      break;
    }
    case kAudioAttachment: {
      if (GetArena() == nullptr) {
        delete attacmnent_.audioattachment_;
      }
      break;
    }
    case ATTACMNENT_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = ATTACMNENT_NOT_SET;
}


void ImMessage_Attachment::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.ImMessage.Attachment)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_attacmnent();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ImMessage_Attachment::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .AcFunDanmu.Im.ImMessage.ImageAttachment imageAttachment = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_imageattachment(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .AcFunDanmu.Im.ImMessage.AudioAttachment audioAttachment = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_audioattachment(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ImMessage_Attachment::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.ImMessage.Attachment)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .AcFunDanmu.Im.ImMessage.ImageAttachment imageAttachment = 1;
  if (_internal_has_imageattachment()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::imageattachment(this), target, stream);
  }

  // .AcFunDanmu.Im.ImMessage.AudioAttachment audioAttachment = 2;
  if (_internal_has_audioattachment()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::audioattachment(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.ImMessage.Attachment)
  return target;
}

size_t ImMessage_Attachment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.ImMessage.Attachment)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (attacmnent_case()) {
    // .AcFunDanmu.Im.ImMessage.ImageAttachment imageAttachment = 1;
    case kImageAttachment: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *attacmnent_.imageattachment_);
      break;
    }
    // .AcFunDanmu.Im.ImMessage.AudioAttachment audioAttachment = 2;
    case kAudioAttachment: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *attacmnent_.audioattachment_);
      break;
    }
    case ATTACMNENT_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImMessage_Attachment::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.ImMessage.Attachment)
  GOOGLE_DCHECK_NE(&from, this);
  const ImMessage_Attachment* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ImMessage_Attachment>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.ImMessage.Attachment)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.ImMessage.Attachment)
    MergeFrom(*source);
  }
}

void ImMessage_Attachment::MergeFrom(const ImMessage_Attachment& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.ImMessage.Attachment)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.attacmnent_case()) {
    case kImageAttachment: {
      _internal_mutable_imageattachment()->::AcFunDanmu::Im::ImMessage_ImageAttachment::MergeFrom(from._internal_imageattachment());
      break;
    }
    case kAudioAttachment: {
      _internal_mutable_audioattachment()->::AcFunDanmu::Im::ImMessage_AudioAttachment::MergeFrom(from._internal_audioattachment());
      break;
    }
    case ATTACMNENT_NOT_SET: {
      break;
    }
  }
}

void ImMessage_Attachment::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.ImMessage.Attachment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImMessage_Attachment::CopyFrom(const ImMessage_Attachment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.ImMessage.Attachment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImMessage_Attachment::IsInitialized() const {
  return true;
}

void ImMessage_Attachment::InternalSwap(ImMessage_Attachment* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(attacmnent_, other->attacmnent_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata ImMessage_Attachment::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ImMessage_Attachments::_Internal {
 public:
};

ImMessage_Attachments::ImMessage_Attachments(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  attachments_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.ImMessage.Attachments)
}
ImMessage_Attachments::ImMessage_Attachments(const ImMessage_Attachments& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      attachments_(from.attachments_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.ImMessage.Attachments)
}

void ImMessage_Attachments::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ImMessage_Attachments_Im_2eproto.base);
}

ImMessage_Attachments::~ImMessage_Attachments() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.ImMessage.Attachments)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ImMessage_Attachments::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ImMessage_Attachments::ArenaDtor(void* object) {
  ImMessage_Attachments* _this = reinterpret_cast< ImMessage_Attachments* >(object);
  (void)_this;
}
void ImMessage_Attachments::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ImMessage_Attachments::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ImMessage_Attachments& ImMessage_Attachments::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ImMessage_Attachments_Im_2eproto.base);
  return *internal_default_instance();
}


void ImMessage_Attachments::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.ImMessage.Attachments)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  attachments_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ImMessage_Attachments::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .AcFunDanmu.Im.ImMessage.Attachment attachments = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_attachments(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ImMessage_Attachments::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.ImMessage.Attachments)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .AcFunDanmu.Im.ImMessage.Attachment attachments = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_attachments_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_attachments(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.ImMessage.Attachments)
  return target;
}

size_t ImMessage_Attachments::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.ImMessage.Attachments)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .AcFunDanmu.Im.ImMessage.Attachment attachments = 1;
  total_size += 1UL * this->_internal_attachments_size();
  for (const auto& msg : this->attachments_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImMessage_Attachments::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.ImMessage.Attachments)
  GOOGLE_DCHECK_NE(&from, this);
  const ImMessage_Attachments* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ImMessage_Attachments>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.ImMessage.Attachments)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.ImMessage.Attachments)
    MergeFrom(*source);
  }
}

void ImMessage_Attachments::MergeFrom(const ImMessage_Attachments& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.ImMessage.Attachments)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  attachments_.MergeFrom(from.attachments_);
}

void ImMessage_Attachments::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.ImMessage.Attachments)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImMessage_Attachments::CopyFrom(const ImMessage_Attachments& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.ImMessage.Attachments)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImMessage_Attachments::IsInitialized() const {
  return true;
}

void ImMessage_Attachments::InternalSwap(ImMessage_Attachments* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  attachments_.InternalSwap(&other->attachments_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ImMessage_Attachments::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ImMessage_PlaceHolderMessage::_Internal {
 public:
};

ImMessage_PlaceHolderMessage::ImMessage_PlaceHolderMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.ImMessage.PlaceHolderMessage)
}
ImMessage_PlaceHolderMessage::ImMessage_PlaceHolderMessage(const ImMessage_PlaceHolderMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&minseq_, &from.minseq_,
    static_cast<size_t>(reinterpret_cast<char*>(&maxseq_) -
    reinterpret_cast<char*>(&minseq_)) + sizeof(maxseq_));
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.ImMessage.PlaceHolderMessage)
}

void ImMessage_PlaceHolderMessage::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&minseq_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&maxseq_) -
      reinterpret_cast<char*>(&minseq_)) + sizeof(maxseq_));
}

ImMessage_PlaceHolderMessage::~ImMessage_PlaceHolderMessage() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.ImMessage.PlaceHolderMessage)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ImMessage_PlaceHolderMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ImMessage_PlaceHolderMessage::ArenaDtor(void* object) {
  ImMessage_PlaceHolderMessage* _this = reinterpret_cast< ImMessage_PlaceHolderMessage* >(object);
  (void)_this;
}
void ImMessage_PlaceHolderMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ImMessage_PlaceHolderMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ImMessage_PlaceHolderMessage& ImMessage_PlaceHolderMessage::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ImMessage_PlaceHolderMessage_Im_2eproto.base);
  return *internal_default_instance();
}


void ImMessage_PlaceHolderMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.ImMessage.PlaceHolderMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&minseq_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&maxseq_) -
      reinterpret_cast<char*>(&minseq_)) + sizeof(maxseq_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ImMessage_PlaceHolderMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 minSeq = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          minseq_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 maxSeq = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          maxseq_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ImMessage_PlaceHolderMessage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.ImMessage.PlaceHolderMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 minSeq = 1;
  if (this->minseq() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_minseq(), target);
  }

  // int64 maxSeq = 2;
  if (this->maxseq() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_maxseq(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.ImMessage.PlaceHolderMessage)
  return target;
}

size_t ImMessage_PlaceHolderMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.ImMessage.PlaceHolderMessage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 minSeq = 1;
  if (this->minseq() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_minseq());
  }

  // int64 maxSeq = 2;
  if (this->maxseq() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_maxseq());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImMessage_PlaceHolderMessage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.ImMessage.PlaceHolderMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const ImMessage_PlaceHolderMessage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ImMessage_PlaceHolderMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.ImMessage.PlaceHolderMessage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.ImMessage.PlaceHolderMessage)
    MergeFrom(*source);
  }
}

void ImMessage_PlaceHolderMessage::MergeFrom(const ImMessage_PlaceHolderMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.ImMessage.PlaceHolderMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.minseq() != 0) {
    _internal_set_minseq(from._internal_minseq());
  }
  if (from.maxseq() != 0) {
    _internal_set_maxseq(from._internal_maxseq());
  }
}

void ImMessage_PlaceHolderMessage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.ImMessage.PlaceHolderMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImMessage_PlaceHolderMessage::CopyFrom(const ImMessage_PlaceHolderMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.ImMessage.PlaceHolderMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImMessage_PlaceHolderMessage::IsInitialized() const {
  return true;
}

void ImMessage_PlaceHolderMessage::InternalSwap(ImMessage_PlaceHolderMessage* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ImMessage_PlaceHolderMessage, maxseq_)
      + sizeof(ImMessage_PlaceHolderMessage::maxseq_)
      - PROTOBUF_FIELD_OFFSET(ImMessage_PlaceHolderMessage, minseq_)>(
          reinterpret_cast<char*>(&minseq_),
          reinterpret_cast<char*>(&other->minseq_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ImMessage_PlaceHolderMessage::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ImMessage_ImageTextMessage::_Internal {
 public:
};

ImMessage_ImageTextMessage::ImMessage_ImageTextMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.ImMessage.ImageTextMessage)
}
ImMessage_ImageTextMessage::ImMessage_ImageTextMessage(const ImMessage_ImageTextMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  title_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_title().empty()) {
    title_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_title(), 
      GetArena());
  }
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_description().empty()) {
    description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_description(), 
      GetArena());
  }
  imageurl_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_imageurl().empty()) {
    imageurl_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_imageurl(), 
      GetArena());
  }
  actionurl_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_actionurl().empty()) {
    actionurl_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_actionurl(), 
      GetArena());
  }
  ::memcpy(&width_, &from.width_,
    static_cast<size_t>(reinterpret_cast<char*>(&aspectratio_) -
    reinterpret_cast<char*>(&width_)) + sizeof(aspectratio_));
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.ImMessage.ImageTextMessage)
}

void ImMessage_ImageTextMessage::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ImMessage_ImageTextMessage_Im_2eproto.base);
  title_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  imageurl_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  actionurl_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&width_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&aspectratio_) -
      reinterpret_cast<char*>(&width_)) + sizeof(aspectratio_));
}

ImMessage_ImageTextMessage::~ImMessage_ImageTextMessage() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.ImMessage.ImageTextMessage)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ImMessage_ImageTextMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  title_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  imageurl_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  actionurl_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ImMessage_ImageTextMessage::ArenaDtor(void* object) {
  ImMessage_ImageTextMessage* _this = reinterpret_cast< ImMessage_ImageTextMessage* >(object);
  (void)_this;
}
void ImMessage_ImageTextMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ImMessage_ImageTextMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ImMessage_ImageTextMessage& ImMessage_ImageTextMessage::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ImMessage_ImageTextMessage_Im_2eproto.base);
  return *internal_default_instance();
}


void ImMessage_ImageTextMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.ImMessage.ImageTextMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  title_.ClearToEmpty();
  description_.ClearToEmpty();
  imageurl_.ClearToEmpty();
  actionurl_.ClearToEmpty();
  ::memset(&width_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&aspectratio_) -
      reinterpret_cast<char*>(&width_)) + sizeof(aspectratio_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ImMessage_ImageTextMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string title = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_title();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.ImMessage.ImageTextMessage.title"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string description = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_description();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.ImMessage.ImageTextMessage.description"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string imageUrl = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_imageurl();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.ImMessage.ImageTextMessage.imageUrl"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string actionUrl = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_actionurl();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.ImMessage.ImageTextMessage.actionUrl"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 width = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          width_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float aspectRatio = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 53)) {
          aspectratio_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ImMessage_ImageTextMessage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.ImMessage.ImageTextMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string title = 1;
  if (this->title().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_title().data(), static_cast<int>(this->_internal_title().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.ImMessage.ImageTextMessage.title");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_title(), target);
  }

  // string description = 2;
  if (this->description().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.ImMessage.ImageTextMessage.description");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_description(), target);
  }

  // string imageUrl = 3;
  if (this->imageurl().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_imageurl().data(), static_cast<int>(this->_internal_imageurl().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.ImMessage.ImageTextMessage.imageUrl");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_imageurl(), target);
  }

  // string actionUrl = 4;
  if (this->actionurl().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_actionurl().data(), static_cast<int>(this->_internal_actionurl().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.ImMessage.ImageTextMessage.actionUrl");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_actionurl(), target);
  }

  // int32 width = 5;
  if (this->width() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_width(), target);
  }

  // float aspectRatio = 6;
  if (!(this->aspectratio() <= 0 && this->aspectratio() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(6, this->_internal_aspectratio(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.ImMessage.ImageTextMessage)
  return target;
}

size_t ImMessage_ImageTextMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.ImMessage.ImageTextMessage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string title = 1;
  if (this->title().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_title());
  }

  // string description = 2;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  // string imageUrl = 3;
  if (this->imageurl().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_imageurl());
  }

  // string actionUrl = 4;
  if (this->actionurl().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_actionurl());
  }

  // int32 width = 5;
  if (this->width() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_width());
  }

  // float aspectRatio = 6;
  if (!(this->aspectratio() <= 0 && this->aspectratio() >= 0)) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImMessage_ImageTextMessage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.ImMessage.ImageTextMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const ImMessage_ImageTextMessage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ImMessage_ImageTextMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.ImMessage.ImageTextMessage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.ImMessage.ImageTextMessage)
    MergeFrom(*source);
  }
}

void ImMessage_ImageTextMessage::MergeFrom(const ImMessage_ImageTextMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.ImMessage.ImageTextMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.title().size() > 0) {
    _internal_set_title(from._internal_title());
  }
  if (from.description().size() > 0) {
    _internal_set_description(from._internal_description());
  }
  if (from.imageurl().size() > 0) {
    _internal_set_imageurl(from._internal_imageurl());
  }
  if (from.actionurl().size() > 0) {
    _internal_set_actionurl(from._internal_actionurl());
  }
  if (from.width() != 0) {
    _internal_set_width(from._internal_width());
  }
  if (!(from.aspectratio() <= 0 && from.aspectratio() >= 0)) {
    _internal_set_aspectratio(from._internal_aspectratio());
  }
}

void ImMessage_ImageTextMessage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.ImMessage.ImageTextMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImMessage_ImageTextMessage::CopyFrom(const ImMessage_ImageTextMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.ImMessage.ImageTextMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImMessage_ImageTextMessage::IsInitialized() const {
  return true;
}

void ImMessage_ImageTextMessage::InternalSwap(ImMessage_ImageTextMessage* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  title_.Swap(&other->title_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  description_.Swap(&other->description_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  imageurl_.Swap(&other->imageurl_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  actionurl_.Swap(&other->actionurl_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ImMessage_ImageTextMessage, aspectratio_)
      + sizeof(ImMessage_ImageTextMessage::aspectratio_)
      - PROTOBUF_FIELD_OFFSET(ImMessage_ImageTextMessage, width_)>(
          reinterpret_cast<char*>(&width_),
          reinterpret_cast<char*>(&other->width_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ImMessage_ImageTextMessage::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ImMessage_RichTextMessage::_Internal {
 public:
  static const ::AcFunDanmu::Im::ImMessage_RichTextNoticeMessage& richtextmessage(const ImMessage_RichTextMessage* msg);
};

const ::AcFunDanmu::Im::ImMessage_RichTextNoticeMessage&
ImMessage_RichTextMessage::_Internal::richtextmessage(const ImMessage_RichTextMessage* msg) {
  return *msg->richtextmessage_;
}
ImMessage_RichTextMessage::ImMessage_RichTextMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.ImMessage.RichTextMessage)
}
ImMessage_RichTextMessage::ImMessage_RichTextMessage(const ImMessage_RichTextMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_richtextmessage()) {
    richtextmessage_ = new ::AcFunDanmu::Im::ImMessage_RichTextNoticeMessage(*from.richtextmessage_);
  } else {
    richtextmessage_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.ImMessage.RichTextMessage)
}

void ImMessage_RichTextMessage::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ImMessage_RichTextMessage_Im_2eproto.base);
  richtextmessage_ = nullptr;
}

ImMessage_RichTextMessage::~ImMessage_RichTextMessage() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.ImMessage.RichTextMessage)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ImMessage_RichTextMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete richtextmessage_;
}

void ImMessage_RichTextMessage::ArenaDtor(void* object) {
  ImMessage_RichTextMessage* _this = reinterpret_cast< ImMessage_RichTextMessage* >(object);
  (void)_this;
}
void ImMessage_RichTextMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ImMessage_RichTextMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ImMessage_RichTextMessage& ImMessage_RichTextMessage::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ImMessage_RichTextMessage_Im_2eproto.base);
  return *internal_default_instance();
}


void ImMessage_RichTextMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.ImMessage.RichTextMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && richtextmessage_ != nullptr) {
    delete richtextmessage_;
  }
  richtextmessage_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ImMessage_RichTextMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .AcFunDanmu.Im.ImMessage.RichTextNoticeMessage richTextMessage = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_richtextmessage(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ImMessage_RichTextMessage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.ImMessage.RichTextMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .AcFunDanmu.Im.ImMessage.RichTextNoticeMessage richTextMessage = 1;
  if (this->has_richtextmessage()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::richtextmessage(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.ImMessage.RichTextMessage)
  return target;
}

size_t ImMessage_RichTextMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.ImMessage.RichTextMessage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .AcFunDanmu.Im.ImMessage.RichTextNoticeMessage richTextMessage = 1;
  if (this->has_richtextmessage()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *richtextmessage_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImMessage_RichTextMessage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.ImMessage.RichTextMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const ImMessage_RichTextMessage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ImMessage_RichTextMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.ImMessage.RichTextMessage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.ImMessage.RichTextMessage)
    MergeFrom(*source);
  }
}

void ImMessage_RichTextMessage::MergeFrom(const ImMessage_RichTextMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.ImMessage.RichTextMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_richtextmessage()) {
    _internal_mutable_richtextmessage()->::AcFunDanmu::Im::ImMessage_RichTextNoticeMessage::MergeFrom(from._internal_richtextmessage());
  }
}

void ImMessage_RichTextMessage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.ImMessage.RichTextMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImMessage_RichTextMessage::CopyFrom(const ImMessage_RichTextMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.ImMessage.RichTextMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImMessage_RichTextMessage::IsInitialized() const {
  return true;
}

void ImMessage_RichTextMessage::InternalSwap(ImMessage_RichTextMessage* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(richtextmessage_, other->richtextmessage_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ImMessage_RichTextMessage::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ImMessage_NoticeMessage::_Internal {
 public:
  static const ::AcFunDanmu::Im::ImMessage_RichTextNoticeMessage& richtextnotice(const ImMessage_NoticeMessage* msg);
  static const ::AcFunDanmu::Im::Basic_I18nCopyWriting& i18ncopywriting(const ImMessage_NoticeMessage* msg);
};

const ::AcFunDanmu::Im::ImMessage_RichTextNoticeMessage&
ImMessage_NoticeMessage::_Internal::richtextnotice(const ImMessage_NoticeMessage* msg) {
  return *msg->richtextnotice_;
}
const ::AcFunDanmu::Im::Basic_I18nCopyWriting&
ImMessage_NoticeMessage::_Internal::i18ncopywriting(const ImMessage_NoticeMessage* msg) {
  return *msg->i18ncopywriting_;
}
ImMessage_NoticeMessage::ImMessage_NoticeMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.ImMessage.NoticeMessage)
}
ImMessage_NoticeMessage::ImMessage_NoticeMessage(const ImMessage_NoticeMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_msg(), 
      GetArena());
  }
  if (from._internal_has_richtextnotice()) {
    richtextnotice_ = new ::AcFunDanmu::Im::ImMessage_RichTextNoticeMessage(*from.richtextnotice_);
  } else {
    richtextnotice_ = nullptr;
  }
  if (from._internal_has_i18ncopywriting()) {
    i18ncopywriting_ = new ::AcFunDanmu::Im::Basic_I18nCopyWriting(*from.i18ncopywriting_);
  } else {
    i18ncopywriting_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.ImMessage.NoticeMessage)
}

void ImMessage_NoticeMessage::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ImMessage_NoticeMessage_Im_2eproto.base);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&richtextnotice_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&i18ncopywriting_) -
      reinterpret_cast<char*>(&richtextnotice_)) + sizeof(i18ncopywriting_));
}

ImMessage_NoticeMessage::~ImMessage_NoticeMessage() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.ImMessage.NoticeMessage)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ImMessage_NoticeMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete richtextnotice_;
  if (this != internal_default_instance()) delete i18ncopywriting_;
}

void ImMessage_NoticeMessage::ArenaDtor(void* object) {
  ImMessage_NoticeMessage* _this = reinterpret_cast< ImMessage_NoticeMessage* >(object);
  (void)_this;
}
void ImMessage_NoticeMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ImMessage_NoticeMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ImMessage_NoticeMessage& ImMessage_NoticeMessage::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ImMessage_NoticeMessage_Im_2eproto.base);
  return *internal_default_instance();
}


void ImMessage_NoticeMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.ImMessage.NoticeMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmpty();
  if (GetArena() == nullptr && richtextnotice_ != nullptr) {
    delete richtextnotice_;
  }
  richtextnotice_ = nullptr;
  if (GetArena() == nullptr && i18ncopywriting_ != nullptr) {
    delete i18ncopywriting_;
  }
  i18ncopywriting_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ImMessage_NoticeMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .AcFunDanmu.Im.ImMessage.RichTextNoticeMessage richTextNotice = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_richtextnotice(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string msg = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.ImMessage.NoticeMessage.msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .AcFunDanmu.Im.Basic.I18nCopyWriting i18nCopyWriting = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_i18ncopywriting(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ImMessage_NoticeMessage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.ImMessage.NoticeMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .AcFunDanmu.Im.ImMessage.RichTextNoticeMessage richTextNotice = 2;
  if (this->has_richtextnotice()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::richtextnotice(this), target, stream);
  }

  // string msg = 5;
  if (this->msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.ImMessage.NoticeMessage.msg");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_msg(), target);
  }

  // .AcFunDanmu.Im.Basic.I18nCopyWriting i18nCopyWriting = 10;
  if (this->has_i18ncopywriting()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        10, _Internal::i18ncopywriting(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.ImMessage.NoticeMessage)
  return target;
}

size_t ImMessage_NoticeMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.ImMessage.NoticeMessage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string msg = 5;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  // .AcFunDanmu.Im.ImMessage.RichTextNoticeMessage richTextNotice = 2;
  if (this->has_richtextnotice()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *richtextnotice_);
  }

  // .AcFunDanmu.Im.Basic.I18nCopyWriting i18nCopyWriting = 10;
  if (this->has_i18ncopywriting()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *i18ncopywriting_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImMessage_NoticeMessage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.ImMessage.NoticeMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const ImMessage_NoticeMessage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ImMessage_NoticeMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.ImMessage.NoticeMessage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.ImMessage.NoticeMessage)
    MergeFrom(*source);
  }
}

void ImMessage_NoticeMessage::MergeFrom(const ImMessage_NoticeMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.ImMessage.NoticeMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg().size() > 0) {
    _internal_set_msg(from._internal_msg());
  }
  if (from.has_richtextnotice()) {
    _internal_mutable_richtextnotice()->::AcFunDanmu::Im::ImMessage_RichTextNoticeMessage::MergeFrom(from._internal_richtextnotice());
  }
  if (from.has_i18ncopywriting()) {
    _internal_mutable_i18ncopywriting()->::AcFunDanmu::Im::Basic_I18nCopyWriting::MergeFrom(from._internal_i18ncopywriting());
  }
}

void ImMessage_NoticeMessage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.ImMessage.NoticeMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImMessage_NoticeMessage::CopyFrom(const ImMessage_NoticeMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.ImMessage.NoticeMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImMessage_NoticeMessage::IsInitialized() const {
  return true;
}

void ImMessage_NoticeMessage::InternalSwap(ImMessage_NoticeMessage* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  msg_.Swap(&other->msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ImMessage_NoticeMessage, i18ncopywriting_)
      + sizeof(ImMessage_NoticeMessage::i18ncopywriting_)
      - PROTOBUF_FIELD_OFFSET(ImMessage_NoticeMessage, richtextnotice_)>(
          reinterpret_cast<char*>(&richtextnotice_),
          reinterpret_cast<char*>(&other->richtextnotice_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ImMessage_NoticeMessage::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ImMessage_RichTextNoticeMessage_RichTextItem::_Internal {
 public:
};

ImMessage_RichTextNoticeMessage_RichTextItem::ImMessage_RichTextNoticeMessage_RichTextItem(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.ImMessage.RichTextNoticeMessage.RichTextItem)
}
ImMessage_RichTextNoticeMessage_RichTextItem::ImMessage_RichTextNoticeMessage_RichTextItem(const ImMessage_RichTextNoticeMessage_RichTextItem& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clickaction_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_clickaction().empty()) {
    clickaction_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_clickaction(), 
      GetArena());
  }
  ::memcpy(&color_, &from.color_,
    static_cast<size_t>(reinterpret_cast<char*>(&underline_) -
    reinterpret_cast<char*>(&color_)) + sizeof(underline_));
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.ImMessage.RichTextNoticeMessage.RichTextItem)
}

void ImMessage_RichTextNoticeMessage_RichTextItem::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ImMessage_RichTextNoticeMessage_RichTextItem_Im_2eproto.base);
  clickaction_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&color_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&underline_) -
      reinterpret_cast<char*>(&color_)) + sizeof(underline_));
}

ImMessage_RichTextNoticeMessage_RichTextItem::~ImMessage_RichTextNoticeMessage_RichTextItem() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.ImMessage.RichTextNoticeMessage.RichTextItem)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ImMessage_RichTextNoticeMessage_RichTextItem::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  clickaction_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ImMessage_RichTextNoticeMessage_RichTextItem::ArenaDtor(void* object) {
  ImMessage_RichTextNoticeMessage_RichTextItem* _this = reinterpret_cast< ImMessage_RichTextNoticeMessage_RichTextItem* >(object);
  (void)_this;
}
void ImMessage_RichTextNoticeMessage_RichTextItem::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ImMessage_RichTextNoticeMessage_RichTextItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ImMessage_RichTextNoticeMessage_RichTextItem& ImMessage_RichTextNoticeMessage_RichTextItem::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ImMessage_RichTextNoticeMessage_RichTextItem_Im_2eproto.base);
  return *internal_default_instance();
}


void ImMessage_RichTextNoticeMessage_RichTextItem::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.ImMessage.RichTextNoticeMessage.RichTextItem)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clickaction_.ClearToEmpty();
  ::memset(&color_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&underline_) -
      reinterpret_cast<char*>(&color_)) + sizeof(underline_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ImMessage_RichTextNoticeMessage_RichTextItem::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 color = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          color_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 start = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          start_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 len = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          len_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string clickAction = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_clickaction();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.ImMessage.RichTextNoticeMessage.RichTextItem.clickAction"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool underline = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          underline_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ImMessage_RichTextNoticeMessage_RichTextItem::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.ImMessage.RichTextNoticeMessage.RichTextItem)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 color = 1;
  if (this->color() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_color(), target);
  }

  // int32 start = 2;
  if (this->start() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_start(), target);
  }

  // int32 len = 3;
  if (this->len() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_len(), target);
  }

  // string clickAction = 4;
  if (this->clickaction().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_clickaction().data(), static_cast<int>(this->_internal_clickaction().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.ImMessage.RichTextNoticeMessage.RichTextItem.clickAction");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_clickaction(), target);
  }

  // bool underline = 5;
  if (this->underline() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(5, this->_internal_underline(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.ImMessage.RichTextNoticeMessage.RichTextItem)
  return target;
}

size_t ImMessage_RichTextNoticeMessage_RichTextItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.ImMessage.RichTextNoticeMessage.RichTextItem)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string clickAction = 4;
  if (this->clickaction().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_clickaction());
  }

  // int32 color = 1;
  if (this->color() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_color());
  }

  // int32 start = 2;
  if (this->start() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_start());
  }

  // int32 len = 3;
  if (this->len() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_len());
  }

  // bool underline = 5;
  if (this->underline() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImMessage_RichTextNoticeMessage_RichTextItem::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.ImMessage.RichTextNoticeMessage.RichTextItem)
  GOOGLE_DCHECK_NE(&from, this);
  const ImMessage_RichTextNoticeMessage_RichTextItem* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ImMessage_RichTextNoticeMessage_RichTextItem>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.ImMessage.RichTextNoticeMessage.RichTextItem)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.ImMessage.RichTextNoticeMessage.RichTextItem)
    MergeFrom(*source);
  }
}

void ImMessage_RichTextNoticeMessage_RichTextItem::MergeFrom(const ImMessage_RichTextNoticeMessage_RichTextItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.ImMessage.RichTextNoticeMessage.RichTextItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.clickaction().size() > 0) {
    _internal_set_clickaction(from._internal_clickaction());
  }
  if (from.color() != 0) {
    _internal_set_color(from._internal_color());
  }
  if (from.start() != 0) {
    _internal_set_start(from._internal_start());
  }
  if (from.len() != 0) {
    _internal_set_len(from._internal_len());
  }
  if (from.underline() != 0) {
    _internal_set_underline(from._internal_underline());
  }
}

void ImMessage_RichTextNoticeMessage_RichTextItem::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.ImMessage.RichTextNoticeMessage.RichTextItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImMessage_RichTextNoticeMessage_RichTextItem::CopyFrom(const ImMessage_RichTextNoticeMessage_RichTextItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.ImMessage.RichTextNoticeMessage.RichTextItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImMessage_RichTextNoticeMessage_RichTextItem::IsInitialized() const {
  return true;
}

void ImMessage_RichTextNoticeMessage_RichTextItem::InternalSwap(ImMessage_RichTextNoticeMessage_RichTextItem* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  clickaction_.Swap(&other->clickaction_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ImMessage_RichTextNoticeMessage_RichTextItem, underline_)
      + sizeof(ImMessage_RichTextNoticeMessage_RichTextItem::underline_)
      - PROTOBUF_FIELD_OFFSET(ImMessage_RichTextNoticeMessage_RichTextItem, color_)>(
          reinterpret_cast<char*>(&color_),
          reinterpret_cast<char*>(&other->color_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ImMessage_RichTextNoticeMessage_RichTextItem::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ImMessage_RichTextNoticeMessage::_Internal {
 public:
};

ImMessage_RichTextNoticeMessage::ImMessage_RichTextNoticeMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  items_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.ImMessage.RichTextNoticeMessage)
}
ImMessage_RichTextNoticeMessage::ImMessage_RichTextNoticeMessage(const ImMessage_RichTextNoticeMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      items_(from.items_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.ImMessage.RichTextNoticeMessage)
}

void ImMessage_RichTextNoticeMessage::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ImMessage_RichTextNoticeMessage_Im_2eproto.base);
}

ImMessage_RichTextNoticeMessage::~ImMessage_RichTextNoticeMessage() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.ImMessage.RichTextNoticeMessage)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ImMessage_RichTextNoticeMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ImMessage_RichTextNoticeMessage::ArenaDtor(void* object) {
  ImMessage_RichTextNoticeMessage* _this = reinterpret_cast< ImMessage_RichTextNoticeMessage* >(object);
  (void)_this;
}
void ImMessage_RichTextNoticeMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ImMessage_RichTextNoticeMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ImMessage_RichTextNoticeMessage& ImMessage_RichTextNoticeMessage::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ImMessage_RichTextNoticeMessage_Im_2eproto.base);
  return *internal_default_instance();
}


void ImMessage_RichTextNoticeMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.ImMessage.RichTextNoticeMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  items_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ImMessage_RichTextNoticeMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .AcFunDanmu.Im.ImMessage.RichTextNoticeMessage.RichTextItem items = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_items(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ImMessage_RichTextNoticeMessage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.ImMessage.RichTextNoticeMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .AcFunDanmu.Im.ImMessage.RichTextNoticeMessage.RichTextItem items = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_items_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_items(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.ImMessage.RichTextNoticeMessage)
  return target;
}

size_t ImMessage_RichTextNoticeMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.ImMessage.RichTextNoticeMessage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .AcFunDanmu.Im.ImMessage.RichTextNoticeMessage.RichTextItem items = 1;
  total_size += 1UL * this->_internal_items_size();
  for (const auto& msg : this->items_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImMessage_RichTextNoticeMessage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.ImMessage.RichTextNoticeMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const ImMessage_RichTextNoticeMessage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ImMessage_RichTextNoticeMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.ImMessage.RichTextNoticeMessage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.ImMessage.RichTextNoticeMessage)
    MergeFrom(*source);
  }
}

void ImMessage_RichTextNoticeMessage::MergeFrom(const ImMessage_RichTextNoticeMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.ImMessage.RichTextNoticeMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  items_.MergeFrom(from.items_);
}

void ImMessage_RichTextNoticeMessage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.ImMessage.RichTextNoticeMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImMessage_RichTextNoticeMessage::CopyFrom(const ImMessage_RichTextNoticeMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.ImMessage.RichTextNoticeMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImMessage_RichTextNoticeMessage::IsInitialized() const {
  return true;
}

void ImMessage_RichTextNoticeMessage::InternalSwap(ImMessage_RichTextNoticeMessage* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  items_.InternalSwap(&other->items_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ImMessage_RichTextNoticeMessage::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ImMessage::_Internal {
 public:
};

ImMessage::ImMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.ImMessage)
}
ImMessage::ImMessage(const ImMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.ImMessage)
}

void ImMessage::SharedCtor() {
}

ImMessage::~ImMessage() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.ImMessage)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ImMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ImMessage::ArenaDtor(void* object) {
  ImMessage* _this = reinterpret_cast< ImMessage* >(object);
  (void)_this;
}
void ImMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ImMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ImMessage& ImMessage::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ImMessage_Im_2eproto.base);
  return *internal_default_instance();
}


void ImMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.ImMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ImMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ImMessage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.ImMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.ImMessage)
  return target;
}

size_t ImMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.ImMessage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImMessage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.ImMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const ImMessage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ImMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.ImMessage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.ImMessage)
    MergeFrom(*source);
  }
}

void ImMessage::MergeFrom(const ImMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.ImMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ImMessage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.ImMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImMessage::CopyFrom(const ImMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.ImMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImMessage::IsInitialized() const {
  return true;
}

void ImMessage::InternalSwap(ImMessage* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ImMessage::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Cloud_Channel_ChannelSubscribeRequest::_Internal {
 public:
};

Cloud_Channel_ChannelSubscribeRequest::Cloud_Channel_ChannelSubscribeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Cloud.Channel.ChannelSubscribeRequest)
}
Cloud_Channel_ChannelSubscribeRequest::Cloud_Channel_ChannelSubscribeRequest(const Cloud_Channel_ChannelSubscribeRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  channelid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_channelid().empty()) {
    channelid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_channelid(), 
      GetArena());
  }
  setbarrier_ = from.setbarrier_;
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Cloud.Channel.ChannelSubscribeRequest)
}

void Cloud_Channel_ChannelSubscribeRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Cloud_Channel_ChannelSubscribeRequest_Im_2eproto.base);
  channelid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  setbarrier_ = false;
}

Cloud_Channel_ChannelSubscribeRequest::~Cloud_Channel_ChannelSubscribeRequest() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Cloud.Channel.ChannelSubscribeRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Cloud_Channel_ChannelSubscribeRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  channelid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Cloud_Channel_ChannelSubscribeRequest::ArenaDtor(void* object) {
  Cloud_Channel_ChannelSubscribeRequest* _this = reinterpret_cast< Cloud_Channel_ChannelSubscribeRequest* >(object);
  (void)_this;
}
void Cloud_Channel_ChannelSubscribeRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Cloud_Channel_ChannelSubscribeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cloud_Channel_ChannelSubscribeRequest& Cloud_Channel_ChannelSubscribeRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Cloud_Channel_ChannelSubscribeRequest_Im_2eproto.base);
  return *internal_default_instance();
}


void Cloud_Channel_ChannelSubscribeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Cloud.Channel.ChannelSubscribeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  channelid_.ClearToEmpty();
  setbarrier_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Cloud_Channel_ChannelSubscribeRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string channelId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_channelid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.Cloud.Channel.ChannelSubscribeRequest.channelId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool setBarrier = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          setbarrier_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Cloud_Channel_ChannelSubscribeRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Cloud.Channel.ChannelSubscribeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string channelId = 1;
  if (this->channelid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_channelid().data(), static_cast<int>(this->_internal_channelid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.Cloud.Channel.ChannelSubscribeRequest.channelId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_channelid(), target);
  }

  // bool setBarrier = 2;
  if (this->setbarrier() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_setbarrier(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Cloud.Channel.ChannelSubscribeRequest)
  return target;
}

size_t Cloud_Channel_ChannelSubscribeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Cloud.Channel.ChannelSubscribeRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string channelId = 1;
  if (this->channelid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_channelid());
  }

  // bool setBarrier = 2;
  if (this->setbarrier() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cloud_Channel_ChannelSubscribeRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Cloud.Channel.ChannelSubscribeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const Cloud_Channel_ChannelSubscribeRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Cloud_Channel_ChannelSubscribeRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Cloud.Channel.ChannelSubscribeRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Cloud.Channel.ChannelSubscribeRequest)
    MergeFrom(*source);
  }
}

void Cloud_Channel_ChannelSubscribeRequest::MergeFrom(const Cloud_Channel_ChannelSubscribeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Cloud.Channel.ChannelSubscribeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.channelid().size() > 0) {
    _internal_set_channelid(from._internal_channelid());
  }
  if (from.setbarrier() != 0) {
    _internal_set_setbarrier(from._internal_setbarrier());
  }
}

void Cloud_Channel_ChannelSubscribeRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Cloud.Channel.ChannelSubscribeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cloud_Channel_ChannelSubscribeRequest::CopyFrom(const Cloud_Channel_ChannelSubscribeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Cloud.Channel.ChannelSubscribeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cloud_Channel_ChannelSubscribeRequest::IsInitialized() const {
  return true;
}

void Cloud_Channel_ChannelSubscribeRequest::InternalSwap(Cloud_Channel_ChannelSubscribeRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  channelid_.Swap(&other->channelid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(setbarrier_, other->setbarrier_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Cloud_Channel_ChannelSubscribeRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Cloud_Channel_ChannelSubscribeResponse::_Internal {
 public:
};

Cloud_Channel_ChannelSubscribeResponse::Cloud_Channel_ChannelSubscribeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Cloud.Channel.ChannelSubscribeResponse)
}
Cloud_Channel_ChannelSubscribeResponse::Cloud_Channel_ChannelSubscribeResponse(const Cloud_Channel_ChannelSubscribeResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Cloud.Channel.ChannelSubscribeResponse)
}

void Cloud_Channel_ChannelSubscribeResponse::SharedCtor() {
}

Cloud_Channel_ChannelSubscribeResponse::~Cloud_Channel_ChannelSubscribeResponse() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Cloud.Channel.ChannelSubscribeResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Cloud_Channel_ChannelSubscribeResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Cloud_Channel_ChannelSubscribeResponse::ArenaDtor(void* object) {
  Cloud_Channel_ChannelSubscribeResponse* _this = reinterpret_cast< Cloud_Channel_ChannelSubscribeResponse* >(object);
  (void)_this;
}
void Cloud_Channel_ChannelSubscribeResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Cloud_Channel_ChannelSubscribeResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cloud_Channel_ChannelSubscribeResponse& Cloud_Channel_ChannelSubscribeResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Cloud_Channel_ChannelSubscribeResponse_Im_2eproto.base);
  return *internal_default_instance();
}


void Cloud_Channel_ChannelSubscribeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Cloud.Channel.ChannelSubscribeResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Cloud_Channel_ChannelSubscribeResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Cloud_Channel_ChannelSubscribeResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Cloud.Channel.ChannelSubscribeResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Cloud.Channel.ChannelSubscribeResponse)
  return target;
}

size_t Cloud_Channel_ChannelSubscribeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Cloud.Channel.ChannelSubscribeResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cloud_Channel_ChannelSubscribeResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Cloud.Channel.ChannelSubscribeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const Cloud_Channel_ChannelSubscribeResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Cloud_Channel_ChannelSubscribeResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Cloud.Channel.ChannelSubscribeResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Cloud.Channel.ChannelSubscribeResponse)
    MergeFrom(*source);
  }
}

void Cloud_Channel_ChannelSubscribeResponse::MergeFrom(const Cloud_Channel_ChannelSubscribeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Cloud.Channel.ChannelSubscribeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Cloud_Channel_ChannelSubscribeResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Cloud.Channel.ChannelSubscribeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cloud_Channel_ChannelSubscribeResponse::CopyFrom(const Cloud_Channel_ChannelSubscribeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Cloud.Channel.ChannelSubscribeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cloud_Channel_ChannelSubscribeResponse::IsInitialized() const {
  return true;
}

void Cloud_Channel_ChannelSubscribeResponse::InternalSwap(Cloud_Channel_ChannelSubscribeResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Cloud_Channel_ChannelSubscribeResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Cloud_Channel_ChannelUnsubscribeRequest::_Internal {
 public:
};

Cloud_Channel_ChannelUnsubscribeRequest::Cloud_Channel_ChannelUnsubscribeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Cloud.Channel.ChannelUnsubscribeRequest)
}
Cloud_Channel_ChannelUnsubscribeRequest::Cloud_Channel_ChannelUnsubscribeRequest(const Cloud_Channel_ChannelUnsubscribeRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  channelid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_channelid().empty()) {
    channelid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_channelid(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Cloud.Channel.ChannelUnsubscribeRequest)
}

void Cloud_Channel_ChannelUnsubscribeRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Cloud_Channel_ChannelUnsubscribeRequest_Im_2eproto.base);
  channelid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Cloud_Channel_ChannelUnsubscribeRequest::~Cloud_Channel_ChannelUnsubscribeRequest() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Cloud.Channel.ChannelUnsubscribeRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Cloud_Channel_ChannelUnsubscribeRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  channelid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Cloud_Channel_ChannelUnsubscribeRequest::ArenaDtor(void* object) {
  Cloud_Channel_ChannelUnsubscribeRequest* _this = reinterpret_cast< Cloud_Channel_ChannelUnsubscribeRequest* >(object);
  (void)_this;
}
void Cloud_Channel_ChannelUnsubscribeRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Cloud_Channel_ChannelUnsubscribeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cloud_Channel_ChannelUnsubscribeRequest& Cloud_Channel_ChannelUnsubscribeRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Cloud_Channel_ChannelUnsubscribeRequest_Im_2eproto.base);
  return *internal_default_instance();
}


void Cloud_Channel_ChannelUnsubscribeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Cloud.Channel.ChannelUnsubscribeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  channelid_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Cloud_Channel_ChannelUnsubscribeRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string channelId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_channelid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.Cloud.Channel.ChannelUnsubscribeRequest.channelId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Cloud_Channel_ChannelUnsubscribeRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Cloud.Channel.ChannelUnsubscribeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string channelId = 1;
  if (this->channelid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_channelid().data(), static_cast<int>(this->_internal_channelid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.Cloud.Channel.ChannelUnsubscribeRequest.channelId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_channelid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Cloud.Channel.ChannelUnsubscribeRequest)
  return target;
}

size_t Cloud_Channel_ChannelUnsubscribeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Cloud.Channel.ChannelUnsubscribeRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string channelId = 1;
  if (this->channelid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_channelid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cloud_Channel_ChannelUnsubscribeRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Cloud.Channel.ChannelUnsubscribeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const Cloud_Channel_ChannelUnsubscribeRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Cloud_Channel_ChannelUnsubscribeRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Cloud.Channel.ChannelUnsubscribeRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Cloud.Channel.ChannelUnsubscribeRequest)
    MergeFrom(*source);
  }
}

void Cloud_Channel_ChannelUnsubscribeRequest::MergeFrom(const Cloud_Channel_ChannelUnsubscribeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Cloud.Channel.ChannelUnsubscribeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.channelid().size() > 0) {
    _internal_set_channelid(from._internal_channelid());
  }
}

void Cloud_Channel_ChannelUnsubscribeRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Cloud.Channel.ChannelUnsubscribeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cloud_Channel_ChannelUnsubscribeRequest::CopyFrom(const Cloud_Channel_ChannelUnsubscribeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Cloud.Channel.ChannelUnsubscribeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cloud_Channel_ChannelUnsubscribeRequest::IsInitialized() const {
  return true;
}

void Cloud_Channel_ChannelUnsubscribeRequest::InternalSwap(Cloud_Channel_ChannelUnsubscribeRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  channelid_.Swap(&other->channelid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata Cloud_Channel_ChannelUnsubscribeRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Cloud_Channel_ChannelSubscribersGetRequest::_Internal {
 public:
};

Cloud_Channel_ChannelSubscribersGetRequest::Cloud_Channel_ChannelSubscribersGetRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Cloud.Channel.ChannelSubscribersGetRequest)
}
Cloud_Channel_ChannelSubscribersGetRequest::Cloud_Channel_ChannelSubscribersGetRequest(const Cloud_Channel_ChannelSubscribersGetRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  channelid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_channelid().empty()) {
    channelid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_channelid(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Cloud.Channel.ChannelSubscribersGetRequest)
}

void Cloud_Channel_ChannelSubscribersGetRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Cloud_Channel_ChannelSubscribersGetRequest_Im_2eproto.base);
  channelid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Cloud_Channel_ChannelSubscribersGetRequest::~Cloud_Channel_ChannelSubscribersGetRequest() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Cloud.Channel.ChannelSubscribersGetRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Cloud_Channel_ChannelSubscribersGetRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  channelid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Cloud_Channel_ChannelSubscribersGetRequest::ArenaDtor(void* object) {
  Cloud_Channel_ChannelSubscribersGetRequest* _this = reinterpret_cast< Cloud_Channel_ChannelSubscribersGetRequest* >(object);
  (void)_this;
}
void Cloud_Channel_ChannelSubscribersGetRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Cloud_Channel_ChannelSubscribersGetRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cloud_Channel_ChannelSubscribersGetRequest& Cloud_Channel_ChannelSubscribersGetRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Cloud_Channel_ChannelSubscribersGetRequest_Im_2eproto.base);
  return *internal_default_instance();
}


void Cloud_Channel_ChannelSubscribersGetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Cloud.Channel.ChannelSubscribersGetRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  channelid_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Cloud_Channel_ChannelSubscribersGetRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string channelId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_channelid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.Cloud.Channel.ChannelSubscribersGetRequest.channelId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Cloud_Channel_ChannelSubscribersGetRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Cloud.Channel.ChannelSubscribersGetRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string channelId = 1;
  if (this->channelid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_channelid().data(), static_cast<int>(this->_internal_channelid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.Cloud.Channel.ChannelSubscribersGetRequest.channelId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_channelid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Cloud.Channel.ChannelSubscribersGetRequest)
  return target;
}

size_t Cloud_Channel_ChannelSubscribersGetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Cloud.Channel.ChannelSubscribersGetRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string channelId = 1;
  if (this->channelid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_channelid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cloud_Channel_ChannelSubscribersGetRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Cloud.Channel.ChannelSubscribersGetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const Cloud_Channel_ChannelSubscribersGetRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Cloud_Channel_ChannelSubscribersGetRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Cloud.Channel.ChannelSubscribersGetRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Cloud.Channel.ChannelSubscribersGetRequest)
    MergeFrom(*source);
  }
}

void Cloud_Channel_ChannelSubscribersGetRequest::MergeFrom(const Cloud_Channel_ChannelSubscribersGetRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Cloud.Channel.ChannelSubscribersGetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.channelid().size() > 0) {
    _internal_set_channelid(from._internal_channelid());
  }
}

void Cloud_Channel_ChannelSubscribersGetRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Cloud.Channel.ChannelSubscribersGetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cloud_Channel_ChannelSubscribersGetRequest::CopyFrom(const Cloud_Channel_ChannelSubscribersGetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Cloud.Channel.ChannelSubscribersGetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cloud_Channel_ChannelSubscribersGetRequest::IsInitialized() const {
  return true;
}

void Cloud_Channel_ChannelSubscribersGetRequest::InternalSwap(Cloud_Channel_ChannelSubscribersGetRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  channelid_.Swap(&other->channelid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata Cloud_Channel_ChannelSubscribersGetRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Cloud_Channel_ChannelSubscribersGetResposne::_Internal {
 public:
};

Cloud_Channel_ChannelSubscribersGetResposne::Cloud_Channel_ChannelSubscribersGetResposne(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  subscriber_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Cloud.Channel.ChannelSubscribersGetResposne)
}
Cloud_Channel_ChannelSubscribersGetResposne::Cloud_Channel_ChannelSubscribersGetResposne(const Cloud_Channel_ChannelSubscribersGetResposne& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      subscriber_(from.subscriber_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Cloud.Channel.ChannelSubscribersGetResposne)
}

void Cloud_Channel_ChannelSubscribersGetResposne::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Cloud_Channel_ChannelSubscribersGetResposne_Im_2eproto.base);
}

Cloud_Channel_ChannelSubscribersGetResposne::~Cloud_Channel_ChannelSubscribersGetResposne() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Cloud.Channel.ChannelSubscribersGetResposne)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Cloud_Channel_ChannelSubscribersGetResposne::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Cloud_Channel_ChannelSubscribersGetResposne::ArenaDtor(void* object) {
  Cloud_Channel_ChannelSubscribersGetResposne* _this = reinterpret_cast< Cloud_Channel_ChannelSubscribersGetResposne* >(object);
  (void)_this;
}
void Cloud_Channel_ChannelSubscribersGetResposne::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Cloud_Channel_ChannelSubscribersGetResposne::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cloud_Channel_ChannelSubscribersGetResposne& Cloud_Channel_ChannelSubscribersGetResposne::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Cloud_Channel_ChannelSubscribersGetResposne_Im_2eproto.base);
  return *internal_default_instance();
}


void Cloud_Channel_ChannelSubscribersGetResposne::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Cloud.Channel.ChannelSubscribersGetResposne)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  subscriber_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Cloud_Channel_ChannelSubscribersGetResposne::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .AcFunDanmu.Im.Basic.User subscriber = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_subscriber(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Cloud_Channel_ChannelSubscribersGetResposne::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Cloud.Channel.ChannelSubscribersGetResposne)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .AcFunDanmu.Im.Basic.User subscriber = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_subscriber_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_subscriber(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Cloud.Channel.ChannelSubscribersGetResposne)
  return target;
}

size_t Cloud_Channel_ChannelSubscribersGetResposne::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Cloud.Channel.ChannelSubscribersGetResposne)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .AcFunDanmu.Im.Basic.User subscriber = 1;
  total_size += 1UL * this->_internal_subscriber_size();
  for (const auto& msg : this->subscriber_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cloud_Channel_ChannelSubscribersGetResposne::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Cloud.Channel.ChannelSubscribersGetResposne)
  GOOGLE_DCHECK_NE(&from, this);
  const Cloud_Channel_ChannelSubscribersGetResposne* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Cloud_Channel_ChannelSubscribersGetResposne>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Cloud.Channel.ChannelSubscribersGetResposne)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Cloud.Channel.ChannelSubscribersGetResposne)
    MergeFrom(*source);
  }
}

void Cloud_Channel_ChannelSubscribersGetResposne::MergeFrom(const Cloud_Channel_ChannelSubscribersGetResposne& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Cloud.Channel.ChannelSubscribersGetResposne)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  subscriber_.MergeFrom(from.subscriber_);
}

void Cloud_Channel_ChannelSubscribersGetResposne::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Cloud.Channel.ChannelSubscribersGetResposne)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cloud_Channel_ChannelSubscribersGetResposne::CopyFrom(const Cloud_Channel_ChannelSubscribersGetResposne& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Cloud.Channel.ChannelSubscribersGetResposne)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cloud_Channel_ChannelSubscribersGetResposne::IsInitialized() const {
  return true;
}

void Cloud_Channel_ChannelSubscribersGetResposne::InternalSwap(Cloud_Channel_ChannelSubscribersGetResposne* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  subscriber_.InternalSwap(&other->subscriber_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Cloud_Channel_ChannelSubscribersGetResposne::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Cloud_Channel_ChannelBasicInfo::_Internal {
 public:
};

Cloud_Channel_ChannelBasicInfo::Cloud_Channel_ChannelBasicInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Cloud.Channel.ChannelBasicInfo)
}
Cloud_Channel_ChannelBasicInfo::Cloud_Channel_ChannelBasicInfo(const Cloud_Channel_ChannelBasicInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  channelid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_channelid().empty()) {
    channelid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_channelid(), 
      GetArena());
  }
  subscribercount_ = from.subscribercount_;
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Cloud.Channel.ChannelBasicInfo)
}

void Cloud_Channel_ChannelBasicInfo::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Cloud_Channel_ChannelBasicInfo_Im_2eproto.base);
  channelid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  subscribercount_ = 0;
}

Cloud_Channel_ChannelBasicInfo::~Cloud_Channel_ChannelBasicInfo() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Cloud.Channel.ChannelBasicInfo)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Cloud_Channel_ChannelBasicInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  channelid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Cloud_Channel_ChannelBasicInfo::ArenaDtor(void* object) {
  Cloud_Channel_ChannelBasicInfo* _this = reinterpret_cast< Cloud_Channel_ChannelBasicInfo* >(object);
  (void)_this;
}
void Cloud_Channel_ChannelBasicInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Cloud_Channel_ChannelBasicInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cloud_Channel_ChannelBasicInfo& Cloud_Channel_ChannelBasicInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Cloud_Channel_ChannelBasicInfo_Im_2eproto.base);
  return *internal_default_instance();
}


void Cloud_Channel_ChannelBasicInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Cloud.Channel.ChannelBasicInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  channelid_.ClearToEmpty();
  subscribercount_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Cloud_Channel_ChannelBasicInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string channelId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_channelid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.Cloud.Channel.ChannelBasicInfo.channelId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 subscriberCount = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          subscribercount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Cloud_Channel_ChannelBasicInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Cloud.Channel.ChannelBasicInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string channelId = 1;
  if (this->channelid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_channelid().data(), static_cast<int>(this->_internal_channelid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.Cloud.Channel.ChannelBasicInfo.channelId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_channelid(), target);
  }

  // int32 subscriberCount = 2;
  if (this->subscribercount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_subscribercount(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Cloud.Channel.ChannelBasicInfo)
  return target;
}

size_t Cloud_Channel_ChannelBasicInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Cloud.Channel.ChannelBasicInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string channelId = 1;
  if (this->channelid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_channelid());
  }

  // int32 subscriberCount = 2;
  if (this->subscribercount() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_subscribercount());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cloud_Channel_ChannelBasicInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Cloud.Channel.ChannelBasicInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const Cloud_Channel_ChannelBasicInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Cloud_Channel_ChannelBasicInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Cloud.Channel.ChannelBasicInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Cloud.Channel.ChannelBasicInfo)
    MergeFrom(*source);
  }
}

void Cloud_Channel_ChannelBasicInfo::MergeFrom(const Cloud_Channel_ChannelBasicInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Cloud.Channel.ChannelBasicInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.channelid().size() > 0) {
    _internal_set_channelid(from._internal_channelid());
  }
  if (from.subscribercount() != 0) {
    _internal_set_subscribercount(from._internal_subscribercount());
  }
}

void Cloud_Channel_ChannelBasicInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Cloud.Channel.ChannelBasicInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cloud_Channel_ChannelBasicInfo::CopyFrom(const Cloud_Channel_ChannelBasicInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Cloud.Channel.ChannelBasicInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cloud_Channel_ChannelBasicInfo::IsInitialized() const {
  return true;
}

void Cloud_Channel_ChannelBasicInfo::InternalSwap(Cloud_Channel_ChannelBasicInfo* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  channelid_.Swap(&other->channelid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(subscribercount_, other->subscribercount_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Cloud_Channel_ChannelBasicInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Cloud_Channel_UserActionInfo::_Internal {
 public:
  static const ::AcFunDanmu::Im::Basic_User& user(const Cloud_Channel_UserActionInfo* msg);
};

const ::AcFunDanmu::Im::Basic_User&
Cloud_Channel_UserActionInfo::_Internal::user(const Cloud_Channel_UserActionInfo* msg) {
  return *msg->user_;
}
Cloud_Channel_UserActionInfo::Cloud_Channel_UserActionInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Cloud.Channel.UserActionInfo)
}
Cloud_Channel_UserActionInfo::Cloud_Channel_UserActionInfo(const Cloud_Channel_UserActionInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_user()) {
    user_ = new ::AcFunDanmu::Im::Basic_User(*from.user_);
  } else {
    user_ = nullptr;
  }
  ::memcpy(&timestamp_, &from.timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&action_) -
    reinterpret_cast<char*>(&timestamp_)) + sizeof(action_));
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Cloud.Channel.UserActionInfo)
}

void Cloud_Channel_UserActionInfo::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Cloud_Channel_UserActionInfo_Im_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&user_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&action_) -
      reinterpret_cast<char*>(&user_)) + sizeof(action_));
}

Cloud_Channel_UserActionInfo::~Cloud_Channel_UserActionInfo() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Cloud.Channel.UserActionInfo)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Cloud_Channel_UserActionInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete user_;
}

void Cloud_Channel_UserActionInfo::ArenaDtor(void* object) {
  Cloud_Channel_UserActionInfo* _this = reinterpret_cast< Cloud_Channel_UserActionInfo* >(object);
  (void)_this;
}
void Cloud_Channel_UserActionInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Cloud_Channel_UserActionInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cloud_Channel_UserActionInfo& Cloud_Channel_UserActionInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Cloud_Channel_UserActionInfo_Im_2eproto.base);
  return *internal_default_instance();
}


void Cloud_Channel_UserActionInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Cloud.Channel.UserActionInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && user_ != nullptr) {
    delete user_;
  }
  user_ = nullptr;
  ::memset(&timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&action_) -
      reinterpret_cast<char*>(&timestamp_)) + sizeof(action_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Cloud_Channel_UserActionInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .AcFunDanmu.Im.Basic.User user = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_user(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .AcFunDanmu.Im.Cloud.Channel.UserAction action = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_action(static_cast<::AcFunDanmu::Im::Cloud_Channel_UserAction>(val));
        } else goto handle_unusual;
        continue;
      // int64 timestamp = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Cloud_Channel_UserActionInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Cloud.Channel.UserActionInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .AcFunDanmu.Im.Basic.User user = 1;
  if (this->has_user()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::user(this), target, stream);
  }

  // .AcFunDanmu.Im.Cloud.Channel.UserAction action = 2;
  if (this->action() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_action(), target);
  }

  // int64 timestamp = 3;
  if (this->timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_timestamp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Cloud.Channel.UserActionInfo)
  return target;
}

size_t Cloud_Channel_UserActionInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Cloud.Channel.UserActionInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .AcFunDanmu.Im.Basic.User user = 1;
  if (this->has_user()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *user_);
  }

  // int64 timestamp = 3;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_timestamp());
  }

  // .AcFunDanmu.Im.Cloud.Channel.UserAction action = 2;
  if (this->action() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_action());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cloud_Channel_UserActionInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Cloud.Channel.UserActionInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const Cloud_Channel_UserActionInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Cloud_Channel_UserActionInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Cloud.Channel.UserActionInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Cloud.Channel.UserActionInfo)
    MergeFrom(*source);
  }
}

void Cloud_Channel_UserActionInfo::MergeFrom(const Cloud_Channel_UserActionInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Cloud.Channel.UserActionInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_user()) {
    _internal_mutable_user()->::AcFunDanmu::Im::Basic_User::MergeFrom(from._internal_user());
  }
  if (from.timestamp() != 0) {
    _internal_set_timestamp(from._internal_timestamp());
  }
  if (from.action() != 0) {
    _internal_set_action(from._internal_action());
  }
}

void Cloud_Channel_UserActionInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Cloud.Channel.UserActionInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cloud_Channel_UserActionInfo::CopyFrom(const Cloud_Channel_UserActionInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Cloud.Channel.UserActionInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cloud_Channel_UserActionInfo::IsInitialized() const {
  return true;
}

void Cloud_Channel_UserActionInfo::InternalSwap(Cloud_Channel_UserActionInfo* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Cloud_Channel_UserActionInfo, action_)
      + sizeof(Cloud_Channel_UserActionInfo::action_)
      - PROTOBUF_FIELD_OFFSET(Cloud_Channel_UserActionInfo, user_)>(
          reinterpret_cast<char*>(&user_),
          reinterpret_cast<char*>(&other->user_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Cloud_Channel_UserActionInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Cloud_Channel_ChannelBasicInfoGetRequest::_Internal {
 public:
};

Cloud_Channel_ChannelBasicInfoGetRequest::Cloud_Channel_ChannelBasicInfoGetRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  channelid_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Cloud.Channel.ChannelBasicInfoGetRequest)
}
Cloud_Channel_ChannelBasicInfoGetRequest::Cloud_Channel_ChannelBasicInfoGetRequest(const Cloud_Channel_ChannelBasicInfoGetRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      channelid_(from.channelid_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Cloud.Channel.ChannelBasicInfoGetRequest)
}

void Cloud_Channel_ChannelBasicInfoGetRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Cloud_Channel_ChannelBasicInfoGetRequest_Im_2eproto.base);
}

Cloud_Channel_ChannelBasicInfoGetRequest::~Cloud_Channel_ChannelBasicInfoGetRequest() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Cloud.Channel.ChannelBasicInfoGetRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Cloud_Channel_ChannelBasicInfoGetRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Cloud_Channel_ChannelBasicInfoGetRequest::ArenaDtor(void* object) {
  Cloud_Channel_ChannelBasicInfoGetRequest* _this = reinterpret_cast< Cloud_Channel_ChannelBasicInfoGetRequest* >(object);
  (void)_this;
}
void Cloud_Channel_ChannelBasicInfoGetRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Cloud_Channel_ChannelBasicInfoGetRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cloud_Channel_ChannelBasicInfoGetRequest& Cloud_Channel_ChannelBasicInfoGetRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Cloud_Channel_ChannelBasicInfoGetRequest_Im_2eproto.base);
  return *internal_default_instance();
}


void Cloud_Channel_ChannelBasicInfoGetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Cloud.Channel.ChannelBasicInfoGetRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  channelid_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Cloud_Channel_ChannelBasicInfoGetRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated string channelId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_channelid();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.Cloud.Channel.ChannelBasicInfoGetRequest.channelId"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Cloud_Channel_ChannelBasicInfoGetRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Cloud.Channel.ChannelBasicInfoGetRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string channelId = 1;
  for (int i = 0, n = this->_internal_channelid_size(); i < n; i++) {
    const auto& s = this->_internal_channelid(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.Cloud.Channel.ChannelBasicInfoGetRequest.channelId");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Cloud.Channel.ChannelBasicInfoGetRequest)
  return target;
}

size_t Cloud_Channel_ChannelBasicInfoGetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Cloud.Channel.ChannelBasicInfoGetRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string channelId = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(channelid_.size());
  for (int i = 0, n = channelid_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      channelid_.Get(i));
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cloud_Channel_ChannelBasicInfoGetRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Cloud.Channel.ChannelBasicInfoGetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const Cloud_Channel_ChannelBasicInfoGetRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Cloud_Channel_ChannelBasicInfoGetRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Cloud.Channel.ChannelBasicInfoGetRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Cloud.Channel.ChannelBasicInfoGetRequest)
    MergeFrom(*source);
  }
}

void Cloud_Channel_ChannelBasicInfoGetRequest::MergeFrom(const Cloud_Channel_ChannelBasicInfoGetRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Cloud.Channel.ChannelBasicInfoGetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  channelid_.MergeFrom(from.channelid_);
}

void Cloud_Channel_ChannelBasicInfoGetRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Cloud.Channel.ChannelBasicInfoGetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cloud_Channel_ChannelBasicInfoGetRequest::CopyFrom(const Cloud_Channel_ChannelBasicInfoGetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Cloud.Channel.ChannelBasicInfoGetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cloud_Channel_ChannelBasicInfoGetRequest::IsInitialized() const {
  return true;
}

void Cloud_Channel_ChannelBasicInfoGetRequest::InternalSwap(Cloud_Channel_ChannelBasicInfoGetRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  channelid_.InternalSwap(&other->channelid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Cloud_Channel_ChannelBasicInfoGetRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Cloud_Channel_ChannelBasicInfoGetResponse::_Internal {
 public:
};

Cloud_Channel_ChannelBasicInfoGetResponse::Cloud_Channel_ChannelBasicInfoGetResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  basicinfo_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Cloud.Channel.ChannelBasicInfoGetResponse)
}
Cloud_Channel_ChannelBasicInfoGetResponse::Cloud_Channel_ChannelBasicInfoGetResponse(const Cloud_Channel_ChannelBasicInfoGetResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      basicinfo_(from.basicinfo_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Cloud.Channel.ChannelBasicInfoGetResponse)
}

void Cloud_Channel_ChannelBasicInfoGetResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Cloud_Channel_ChannelBasicInfoGetResponse_Im_2eproto.base);
}

Cloud_Channel_ChannelBasicInfoGetResponse::~Cloud_Channel_ChannelBasicInfoGetResponse() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Cloud.Channel.ChannelBasicInfoGetResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Cloud_Channel_ChannelBasicInfoGetResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Cloud_Channel_ChannelBasicInfoGetResponse::ArenaDtor(void* object) {
  Cloud_Channel_ChannelBasicInfoGetResponse* _this = reinterpret_cast< Cloud_Channel_ChannelBasicInfoGetResponse* >(object);
  (void)_this;
}
void Cloud_Channel_ChannelBasicInfoGetResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Cloud_Channel_ChannelBasicInfoGetResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cloud_Channel_ChannelBasicInfoGetResponse& Cloud_Channel_ChannelBasicInfoGetResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Cloud_Channel_ChannelBasicInfoGetResponse_Im_2eproto.base);
  return *internal_default_instance();
}


void Cloud_Channel_ChannelBasicInfoGetResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Cloud.Channel.ChannelBasicInfoGetResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  basicinfo_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Cloud_Channel_ChannelBasicInfoGetResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .AcFunDanmu.Im.Cloud.Channel.ChannelBasicInfo basicInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_basicinfo(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Cloud_Channel_ChannelBasicInfoGetResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Cloud.Channel.ChannelBasicInfoGetResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .AcFunDanmu.Im.Cloud.Channel.ChannelBasicInfo basicInfo = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_basicinfo_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_basicinfo(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Cloud.Channel.ChannelBasicInfoGetResponse)
  return target;
}

size_t Cloud_Channel_ChannelBasicInfoGetResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Cloud.Channel.ChannelBasicInfoGetResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .AcFunDanmu.Im.Cloud.Channel.ChannelBasicInfo basicInfo = 1;
  total_size += 1UL * this->_internal_basicinfo_size();
  for (const auto& msg : this->basicinfo_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cloud_Channel_ChannelBasicInfoGetResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Cloud.Channel.ChannelBasicInfoGetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const Cloud_Channel_ChannelBasicInfoGetResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Cloud_Channel_ChannelBasicInfoGetResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Cloud.Channel.ChannelBasicInfoGetResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Cloud.Channel.ChannelBasicInfoGetResponse)
    MergeFrom(*source);
  }
}

void Cloud_Channel_ChannelBasicInfoGetResponse::MergeFrom(const Cloud_Channel_ChannelBasicInfoGetResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Cloud.Channel.ChannelBasicInfoGetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  basicinfo_.MergeFrom(from.basicinfo_);
}

void Cloud_Channel_ChannelBasicInfoGetResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Cloud.Channel.ChannelBasicInfoGetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cloud_Channel_ChannelBasicInfoGetResponse::CopyFrom(const Cloud_Channel_ChannelBasicInfoGetResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Cloud.Channel.ChannelBasicInfoGetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cloud_Channel_ChannelBasicInfoGetResponse::IsInitialized() const {
  return true;
}

void Cloud_Channel_ChannelBasicInfoGetResponse::InternalSwap(Cloud_Channel_ChannelBasicInfoGetResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  basicinfo_.InternalSwap(&other->basicinfo_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Cloud_Channel_ChannelBasicInfoGetResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Cloud_Channel_ChannelHeartbeatRequest::_Internal {
 public:
};

Cloud_Channel_ChannelHeartbeatRequest::Cloud_Channel_ChannelHeartbeatRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  channelid_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Cloud.Channel.ChannelHeartbeatRequest)
}
Cloud_Channel_ChannelHeartbeatRequest::Cloud_Channel_ChannelHeartbeatRequest(const Cloud_Channel_ChannelHeartbeatRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      channelid_(from.channelid_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Cloud.Channel.ChannelHeartbeatRequest)
}

void Cloud_Channel_ChannelHeartbeatRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Cloud_Channel_ChannelHeartbeatRequest_Im_2eproto.base);
}

Cloud_Channel_ChannelHeartbeatRequest::~Cloud_Channel_ChannelHeartbeatRequest() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Cloud.Channel.ChannelHeartbeatRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Cloud_Channel_ChannelHeartbeatRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Cloud_Channel_ChannelHeartbeatRequest::ArenaDtor(void* object) {
  Cloud_Channel_ChannelHeartbeatRequest* _this = reinterpret_cast< Cloud_Channel_ChannelHeartbeatRequest* >(object);
  (void)_this;
}
void Cloud_Channel_ChannelHeartbeatRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Cloud_Channel_ChannelHeartbeatRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cloud_Channel_ChannelHeartbeatRequest& Cloud_Channel_ChannelHeartbeatRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Cloud_Channel_ChannelHeartbeatRequest_Im_2eproto.base);
  return *internal_default_instance();
}


void Cloud_Channel_ChannelHeartbeatRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Cloud.Channel.ChannelHeartbeatRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  channelid_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Cloud_Channel_ChannelHeartbeatRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated string channelId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_channelid();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.Cloud.Channel.ChannelHeartbeatRequest.channelId"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Cloud_Channel_ChannelHeartbeatRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Cloud.Channel.ChannelHeartbeatRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string channelId = 1;
  for (int i = 0, n = this->_internal_channelid_size(); i < n; i++) {
    const auto& s = this->_internal_channelid(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.Cloud.Channel.ChannelHeartbeatRequest.channelId");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Cloud.Channel.ChannelHeartbeatRequest)
  return target;
}

size_t Cloud_Channel_ChannelHeartbeatRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Cloud.Channel.ChannelHeartbeatRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string channelId = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(channelid_.size());
  for (int i = 0, n = channelid_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      channelid_.Get(i));
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cloud_Channel_ChannelHeartbeatRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Cloud.Channel.ChannelHeartbeatRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const Cloud_Channel_ChannelHeartbeatRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Cloud_Channel_ChannelHeartbeatRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Cloud.Channel.ChannelHeartbeatRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Cloud.Channel.ChannelHeartbeatRequest)
    MergeFrom(*source);
  }
}

void Cloud_Channel_ChannelHeartbeatRequest::MergeFrom(const Cloud_Channel_ChannelHeartbeatRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Cloud.Channel.ChannelHeartbeatRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  channelid_.MergeFrom(from.channelid_);
}

void Cloud_Channel_ChannelHeartbeatRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Cloud.Channel.ChannelHeartbeatRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cloud_Channel_ChannelHeartbeatRequest::CopyFrom(const Cloud_Channel_ChannelHeartbeatRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Cloud.Channel.ChannelHeartbeatRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cloud_Channel_ChannelHeartbeatRequest::IsInitialized() const {
  return true;
}

void Cloud_Channel_ChannelHeartbeatRequest::InternalSwap(Cloud_Channel_ChannelHeartbeatRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  channelid_.InternalSwap(&other->channelid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Cloud_Channel_ChannelHeartbeatRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Cloud_Channel_ChannelHeartbeatResponse::_Internal {
 public:
};

Cloud_Channel_ChannelHeartbeatResponse::Cloud_Channel_ChannelHeartbeatResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  notexistchannelid_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Cloud.Channel.ChannelHeartbeatResponse)
}
Cloud_Channel_ChannelHeartbeatResponse::Cloud_Channel_ChannelHeartbeatResponse(const Cloud_Channel_ChannelHeartbeatResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      notexistchannelid_(from.notexistchannelid_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Cloud.Channel.ChannelHeartbeatResponse)
}

void Cloud_Channel_ChannelHeartbeatResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Cloud_Channel_ChannelHeartbeatResponse_Im_2eproto.base);
}

Cloud_Channel_ChannelHeartbeatResponse::~Cloud_Channel_ChannelHeartbeatResponse() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Cloud.Channel.ChannelHeartbeatResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Cloud_Channel_ChannelHeartbeatResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Cloud_Channel_ChannelHeartbeatResponse::ArenaDtor(void* object) {
  Cloud_Channel_ChannelHeartbeatResponse* _this = reinterpret_cast< Cloud_Channel_ChannelHeartbeatResponse* >(object);
  (void)_this;
}
void Cloud_Channel_ChannelHeartbeatResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Cloud_Channel_ChannelHeartbeatResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cloud_Channel_ChannelHeartbeatResponse& Cloud_Channel_ChannelHeartbeatResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Cloud_Channel_ChannelHeartbeatResponse_Im_2eproto.base);
  return *internal_default_instance();
}


void Cloud_Channel_ChannelHeartbeatResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Cloud.Channel.ChannelHeartbeatResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  notexistchannelid_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Cloud_Channel_ChannelHeartbeatResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated string notExistChannelId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_notexistchannelid();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.Cloud.Channel.ChannelHeartbeatResponse.notExistChannelId"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Cloud_Channel_ChannelHeartbeatResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Cloud.Channel.ChannelHeartbeatResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string notExistChannelId = 1;
  for (int i = 0, n = this->_internal_notexistchannelid_size(); i < n; i++) {
    const auto& s = this->_internal_notexistchannelid(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.Cloud.Channel.ChannelHeartbeatResponse.notExistChannelId");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Cloud.Channel.ChannelHeartbeatResponse)
  return target;
}

size_t Cloud_Channel_ChannelHeartbeatResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Cloud.Channel.ChannelHeartbeatResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string notExistChannelId = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(notexistchannelid_.size());
  for (int i = 0, n = notexistchannelid_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      notexistchannelid_.Get(i));
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cloud_Channel_ChannelHeartbeatResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Cloud.Channel.ChannelHeartbeatResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const Cloud_Channel_ChannelHeartbeatResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Cloud_Channel_ChannelHeartbeatResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Cloud.Channel.ChannelHeartbeatResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Cloud.Channel.ChannelHeartbeatResponse)
    MergeFrom(*source);
  }
}

void Cloud_Channel_ChannelHeartbeatResponse::MergeFrom(const Cloud_Channel_ChannelHeartbeatResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Cloud.Channel.ChannelHeartbeatResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  notexistchannelid_.MergeFrom(from.notexistchannelid_);
}

void Cloud_Channel_ChannelHeartbeatResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Cloud.Channel.ChannelHeartbeatResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cloud_Channel_ChannelHeartbeatResponse::CopyFrom(const Cloud_Channel_ChannelHeartbeatResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Cloud.Channel.ChannelHeartbeatResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cloud_Channel_ChannelHeartbeatResponse::IsInitialized() const {
  return true;
}

void Cloud_Channel_ChannelHeartbeatResponse::InternalSwap(Cloud_Channel_ChannelHeartbeatResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  notexistchannelid_.InternalSwap(&other->notexistchannelid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Cloud_Channel_ChannelHeartbeatResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Cloud_Channel_ChannelBasicInfoNotify::_Internal {
 public:
  static const ::AcFunDanmu::Im::Cloud_Channel_UserActionInfo& useractioninfo(const Cloud_Channel_ChannelBasicInfoNotify* msg);
  static const ::AcFunDanmu::Im::Cloud_Channel_ChannelBasicInfo& basicinfo(const Cloud_Channel_ChannelBasicInfoNotify* msg);
};

const ::AcFunDanmu::Im::Cloud_Channel_UserActionInfo&
Cloud_Channel_ChannelBasicInfoNotify::_Internal::useractioninfo(const Cloud_Channel_ChannelBasicInfoNotify* msg) {
  return *msg->useractioninfo_;
}
const ::AcFunDanmu::Im::Cloud_Channel_ChannelBasicInfo&
Cloud_Channel_ChannelBasicInfoNotify::_Internal::basicinfo(const Cloud_Channel_ChannelBasicInfoNotify* msg) {
  return *msg->basicinfo_;
}
Cloud_Channel_ChannelBasicInfoNotify::Cloud_Channel_ChannelBasicInfoNotify(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Cloud.Channel.ChannelBasicInfoNotify)
}
Cloud_Channel_ChannelBasicInfoNotify::Cloud_Channel_ChannelBasicInfoNotify(const Cloud_Channel_ChannelBasicInfoNotify& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_useractioninfo()) {
    useractioninfo_ = new ::AcFunDanmu::Im::Cloud_Channel_UserActionInfo(*from.useractioninfo_);
  } else {
    useractioninfo_ = nullptr;
  }
  if (from._internal_has_basicinfo()) {
    basicinfo_ = new ::AcFunDanmu::Im::Cloud_Channel_ChannelBasicInfo(*from.basicinfo_);
  } else {
    basicinfo_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Cloud.Channel.ChannelBasicInfoNotify)
}

void Cloud_Channel_ChannelBasicInfoNotify::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Cloud_Channel_ChannelBasicInfoNotify_Im_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&useractioninfo_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&basicinfo_) -
      reinterpret_cast<char*>(&useractioninfo_)) + sizeof(basicinfo_));
}

Cloud_Channel_ChannelBasicInfoNotify::~Cloud_Channel_ChannelBasicInfoNotify() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Cloud.Channel.ChannelBasicInfoNotify)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Cloud_Channel_ChannelBasicInfoNotify::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete useractioninfo_;
  if (this != internal_default_instance()) delete basicinfo_;
}

void Cloud_Channel_ChannelBasicInfoNotify::ArenaDtor(void* object) {
  Cloud_Channel_ChannelBasicInfoNotify* _this = reinterpret_cast< Cloud_Channel_ChannelBasicInfoNotify* >(object);
  (void)_this;
}
void Cloud_Channel_ChannelBasicInfoNotify::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Cloud_Channel_ChannelBasicInfoNotify::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cloud_Channel_ChannelBasicInfoNotify& Cloud_Channel_ChannelBasicInfoNotify::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Cloud_Channel_ChannelBasicInfoNotify_Im_2eproto.base);
  return *internal_default_instance();
}


void Cloud_Channel_ChannelBasicInfoNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Cloud.Channel.ChannelBasicInfoNotify)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && useractioninfo_ != nullptr) {
    delete useractioninfo_;
  }
  useractioninfo_ = nullptr;
  if (GetArena() == nullptr && basicinfo_ != nullptr) {
    delete basicinfo_;
  }
  basicinfo_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Cloud_Channel_ChannelBasicInfoNotify::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .AcFunDanmu.Im.Cloud.Channel.UserActionInfo userActionInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_useractioninfo(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .AcFunDanmu.Im.Cloud.Channel.ChannelBasicInfo basicInfo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_basicinfo(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Cloud_Channel_ChannelBasicInfoNotify::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Cloud.Channel.ChannelBasicInfoNotify)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .AcFunDanmu.Im.Cloud.Channel.UserActionInfo userActionInfo = 1;
  if (this->has_useractioninfo()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::useractioninfo(this), target, stream);
  }

  // .AcFunDanmu.Im.Cloud.Channel.ChannelBasicInfo basicInfo = 2;
  if (this->has_basicinfo()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::basicinfo(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Cloud.Channel.ChannelBasicInfoNotify)
  return target;
}

size_t Cloud_Channel_ChannelBasicInfoNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Cloud.Channel.ChannelBasicInfoNotify)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .AcFunDanmu.Im.Cloud.Channel.UserActionInfo userActionInfo = 1;
  if (this->has_useractioninfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *useractioninfo_);
  }

  // .AcFunDanmu.Im.Cloud.Channel.ChannelBasicInfo basicInfo = 2;
  if (this->has_basicinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *basicinfo_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cloud_Channel_ChannelBasicInfoNotify::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Cloud.Channel.ChannelBasicInfoNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const Cloud_Channel_ChannelBasicInfoNotify* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Cloud_Channel_ChannelBasicInfoNotify>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Cloud.Channel.ChannelBasicInfoNotify)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Cloud.Channel.ChannelBasicInfoNotify)
    MergeFrom(*source);
  }
}

void Cloud_Channel_ChannelBasicInfoNotify::MergeFrom(const Cloud_Channel_ChannelBasicInfoNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Cloud.Channel.ChannelBasicInfoNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_useractioninfo()) {
    _internal_mutable_useractioninfo()->::AcFunDanmu::Im::Cloud_Channel_UserActionInfo::MergeFrom(from._internal_useractioninfo());
  }
  if (from.has_basicinfo()) {
    _internal_mutable_basicinfo()->::AcFunDanmu::Im::Cloud_Channel_ChannelBasicInfo::MergeFrom(from._internal_basicinfo());
  }
}

void Cloud_Channel_ChannelBasicInfoNotify::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Cloud.Channel.ChannelBasicInfoNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cloud_Channel_ChannelBasicInfoNotify::CopyFrom(const Cloud_Channel_ChannelBasicInfoNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Cloud.Channel.ChannelBasicInfoNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cloud_Channel_ChannelBasicInfoNotify::IsInitialized() const {
  return true;
}

void Cloud_Channel_ChannelBasicInfoNotify::InternalSwap(Cloud_Channel_ChannelBasicInfoNotify* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Cloud_Channel_ChannelBasicInfoNotify, basicinfo_)
      + sizeof(Cloud_Channel_ChannelBasicInfoNotify::basicinfo_)
      - PROTOBUF_FIELD_OFFSET(Cloud_Channel_ChannelBasicInfoNotify, useractioninfo_)>(
          reinterpret_cast<char*>(&useractioninfo_),
          reinterpret_cast<char*>(&other->useractioninfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Cloud_Channel_ChannelBasicInfoNotify::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Cloud_Channel::_Internal {
 public:
};

Cloud_Channel::Cloud_Channel(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Cloud.Channel)
}
Cloud_Channel::Cloud_Channel(const Cloud_Channel& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Cloud.Channel)
}

void Cloud_Channel::SharedCtor() {
}

Cloud_Channel::~Cloud_Channel() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Cloud.Channel)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Cloud_Channel::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Cloud_Channel::ArenaDtor(void* object) {
  Cloud_Channel* _this = reinterpret_cast< Cloud_Channel* >(object);
  (void)_this;
}
void Cloud_Channel::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Cloud_Channel::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cloud_Channel& Cloud_Channel::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Cloud_Channel_Im_2eproto.base);
  return *internal_default_instance();
}


void Cloud_Channel::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Cloud.Channel)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Cloud_Channel::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Cloud_Channel::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Cloud.Channel)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Cloud.Channel)
  return target;
}

size_t Cloud_Channel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Cloud.Channel)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cloud_Channel::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Cloud.Channel)
  GOOGLE_DCHECK_NE(&from, this);
  const Cloud_Channel* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Cloud_Channel>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Cloud.Channel)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Cloud.Channel)
    MergeFrom(*source);
  }
}

void Cloud_Channel::MergeFrom(const Cloud_Channel& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Cloud.Channel)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Cloud_Channel::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Cloud.Channel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cloud_Channel::CopyFrom(const Cloud_Channel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Cloud.Channel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cloud_Channel::IsInitialized() const {
  return true;
}

void Cloud_Channel::InternalSwap(Cloud_Channel* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Cloud_Channel::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Cloud_Config_ClientConfigGetRequest::_Internal {
 public:
};

Cloud_Config_ClientConfigGetRequest::Cloud_Config_ClientConfigGetRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Cloud.Config.ClientConfigGetRequest)
}
Cloud_Config_ClientConfigGetRequest::Cloud_Config_ClientConfigGetRequest(const Cloud_Config_ClientConfigGetRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  version_ = from.version_;
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Cloud.Config.ClientConfigGetRequest)
}

void Cloud_Config_ClientConfigGetRequest::SharedCtor() {
  version_ = 0u;
}

Cloud_Config_ClientConfigGetRequest::~Cloud_Config_ClientConfigGetRequest() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Cloud.Config.ClientConfigGetRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Cloud_Config_ClientConfigGetRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Cloud_Config_ClientConfigGetRequest::ArenaDtor(void* object) {
  Cloud_Config_ClientConfigGetRequest* _this = reinterpret_cast< Cloud_Config_ClientConfigGetRequest* >(object);
  (void)_this;
}
void Cloud_Config_ClientConfigGetRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Cloud_Config_ClientConfigGetRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cloud_Config_ClientConfigGetRequest& Cloud_Config_ClientConfigGetRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Cloud_Config_ClientConfigGetRequest_Im_2eproto.base);
  return *internal_default_instance();
}


void Cloud_Config_ClientConfigGetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Cloud.Config.ClientConfigGetRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  version_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Cloud_Config_ClientConfigGetRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 version = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          version_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Cloud_Config_ClientConfigGetRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Cloud.Config.ClientConfigGetRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 version = 1;
  if (this->version() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_version(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Cloud.Config.ClientConfigGetRequest)
  return target;
}

size_t Cloud_Config_ClientConfigGetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Cloud.Config.ClientConfigGetRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 version = 1;
  if (this->version() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_version());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cloud_Config_ClientConfigGetRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Cloud.Config.ClientConfigGetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const Cloud_Config_ClientConfigGetRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Cloud_Config_ClientConfigGetRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Cloud.Config.ClientConfigGetRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Cloud.Config.ClientConfigGetRequest)
    MergeFrom(*source);
  }
}

void Cloud_Config_ClientConfigGetRequest::MergeFrom(const Cloud_Config_ClientConfigGetRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Cloud.Config.ClientConfigGetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.version() != 0) {
    _internal_set_version(from._internal_version());
  }
}

void Cloud_Config_ClientConfigGetRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Cloud.Config.ClientConfigGetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cloud_Config_ClientConfigGetRequest::CopyFrom(const Cloud_Config_ClientConfigGetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Cloud.Config.ClientConfigGetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cloud_Config_ClientConfigGetRequest::IsInitialized() const {
  return true;
}

void Cloud_Config_ClientConfigGetRequest::InternalSwap(Cloud_Config_ClientConfigGetRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(version_, other->version_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Cloud_Config_ClientConfigGetRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Cloud_Config_ClientConfigGetResponse::_Internal {
 public:
  static const ::AcFunDanmu::Im::Cloud_Config_ClientConfig& clientconfig(const Cloud_Config_ClientConfigGetResponse* msg);
};

const ::AcFunDanmu::Im::Cloud_Config_ClientConfig&
Cloud_Config_ClientConfigGetResponse::_Internal::clientconfig(const Cloud_Config_ClientConfigGetResponse* msg) {
  return *msg->clientconfig_;
}
Cloud_Config_ClientConfigGetResponse::Cloud_Config_ClientConfigGetResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Cloud.Config.ClientConfigGetResponse)
}
Cloud_Config_ClientConfigGetResponse::Cloud_Config_ClientConfigGetResponse(const Cloud_Config_ClientConfigGetResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_clientconfig()) {
    clientconfig_ = new ::AcFunDanmu::Im::Cloud_Config_ClientConfig(*from.clientconfig_);
  } else {
    clientconfig_ = nullptr;
  }
  version_ = from.version_;
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Cloud.Config.ClientConfigGetResponse)
}

void Cloud_Config_ClientConfigGetResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Cloud_Config_ClientConfigGetResponse_Im_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&clientconfig_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&version_) -
      reinterpret_cast<char*>(&clientconfig_)) + sizeof(version_));
}

Cloud_Config_ClientConfigGetResponse::~Cloud_Config_ClientConfigGetResponse() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Cloud.Config.ClientConfigGetResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Cloud_Config_ClientConfigGetResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete clientconfig_;
}

void Cloud_Config_ClientConfigGetResponse::ArenaDtor(void* object) {
  Cloud_Config_ClientConfigGetResponse* _this = reinterpret_cast< Cloud_Config_ClientConfigGetResponse* >(object);
  (void)_this;
}
void Cloud_Config_ClientConfigGetResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Cloud_Config_ClientConfigGetResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cloud_Config_ClientConfigGetResponse& Cloud_Config_ClientConfigGetResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Cloud_Config_ClientConfigGetResponse_Im_2eproto.base);
  return *internal_default_instance();
}


void Cloud_Config_ClientConfigGetResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Cloud.Config.ClientConfigGetResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && clientconfig_ != nullptr) {
    delete clientconfig_;
  }
  clientconfig_ = nullptr;
  version_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Cloud_Config_ClientConfigGetResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 version = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          version_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .AcFunDanmu.Im.Cloud.Config.ClientConfig clientConfig = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_clientconfig(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Cloud_Config_ClientConfigGetResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Cloud.Config.ClientConfigGetResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 version = 1;
  if (this->version() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_version(), target);
  }

  // .AcFunDanmu.Im.Cloud.Config.ClientConfig clientConfig = 2;
  if (this->has_clientconfig()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::clientconfig(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Cloud.Config.ClientConfigGetResponse)
  return target;
}

size_t Cloud_Config_ClientConfigGetResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Cloud.Config.ClientConfigGetResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .AcFunDanmu.Im.Cloud.Config.ClientConfig clientConfig = 2;
  if (this->has_clientconfig()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *clientconfig_);
  }

  // uint32 version = 1;
  if (this->version() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_version());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cloud_Config_ClientConfigGetResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Cloud.Config.ClientConfigGetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const Cloud_Config_ClientConfigGetResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Cloud_Config_ClientConfigGetResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Cloud.Config.ClientConfigGetResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Cloud.Config.ClientConfigGetResponse)
    MergeFrom(*source);
  }
}

void Cloud_Config_ClientConfigGetResponse::MergeFrom(const Cloud_Config_ClientConfigGetResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Cloud.Config.ClientConfigGetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_clientconfig()) {
    _internal_mutable_clientconfig()->::AcFunDanmu::Im::Cloud_Config_ClientConfig::MergeFrom(from._internal_clientconfig());
  }
  if (from.version() != 0) {
    _internal_set_version(from._internal_version());
  }
}

void Cloud_Config_ClientConfigGetResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Cloud.Config.ClientConfigGetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cloud_Config_ClientConfigGetResponse::CopyFrom(const Cloud_Config_ClientConfigGetResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Cloud.Config.ClientConfigGetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cloud_Config_ClientConfigGetResponse::IsInitialized() const {
  return true;
}

void Cloud_Config_ClientConfigGetResponse::InternalSwap(Cloud_Config_ClientConfigGetResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Cloud_Config_ClientConfigGetResponse, version_)
      + sizeof(Cloud_Config_ClientConfigGetResponse::version_)
      - PROTOBUF_FIELD_OFFSET(Cloud_Config_ClientConfigGetResponse, clientconfig_)>(
          reinterpret_cast<char*>(&clientconfig_),
          reinterpret_cast<char*>(&other->clientconfig_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Cloud_Config_ClientConfigGetResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Cloud_Config_NetworkQualityDetectionConfig::_Internal {
 public:
};

Cloud_Config_NetworkQualityDetectionConfig::Cloud_Config_NetworkQualityDetectionConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Cloud.Config.NetworkQualityDetectionConfig)
}
Cloud_Config_NetworkQualityDetectionConfig::Cloud_Config_NetworkQualityDetectionConfig(const Cloud_Config_NetworkQualityDetectionConfig& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  detectiondomain_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_detectiondomain().empty()) {
    detectiondomain_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_detectiondomain(), 
      GetArena());
  }
  detectioninvervalsec_ = from.detectioninvervalsec_;
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Cloud.Config.NetworkQualityDetectionConfig)
}

void Cloud_Config_NetworkQualityDetectionConfig::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Cloud_Config_NetworkQualityDetectionConfig_Im_2eproto.base);
  detectiondomain_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  detectioninvervalsec_ = 0;
}

Cloud_Config_NetworkQualityDetectionConfig::~Cloud_Config_NetworkQualityDetectionConfig() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Cloud.Config.NetworkQualityDetectionConfig)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Cloud_Config_NetworkQualityDetectionConfig::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  detectiondomain_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Cloud_Config_NetworkQualityDetectionConfig::ArenaDtor(void* object) {
  Cloud_Config_NetworkQualityDetectionConfig* _this = reinterpret_cast< Cloud_Config_NetworkQualityDetectionConfig* >(object);
  (void)_this;
}
void Cloud_Config_NetworkQualityDetectionConfig::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Cloud_Config_NetworkQualityDetectionConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cloud_Config_NetworkQualityDetectionConfig& Cloud_Config_NetworkQualityDetectionConfig::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Cloud_Config_NetworkQualityDetectionConfig_Im_2eproto.base);
  return *internal_default_instance();
}


void Cloud_Config_NetworkQualityDetectionConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Cloud.Config.NetworkQualityDetectionConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  detectiondomain_.ClearToEmpty();
  detectioninvervalsec_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Cloud_Config_NetworkQualityDetectionConfig::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string detectionDomain = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_detectiondomain();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.Cloud.Config.NetworkQualityDetectionConfig.detectionDomain"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 detectionInvervalSec = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          detectioninvervalsec_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Cloud_Config_NetworkQualityDetectionConfig::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Cloud.Config.NetworkQualityDetectionConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string detectionDomain = 1;
  if (this->detectiondomain().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_detectiondomain().data(), static_cast<int>(this->_internal_detectiondomain().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.Cloud.Config.NetworkQualityDetectionConfig.detectionDomain");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_detectiondomain(), target);
  }

  // int32 detectionInvervalSec = 2;
  if (this->detectioninvervalsec() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_detectioninvervalsec(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Cloud.Config.NetworkQualityDetectionConfig)
  return target;
}

size_t Cloud_Config_NetworkQualityDetectionConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Cloud.Config.NetworkQualityDetectionConfig)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string detectionDomain = 1;
  if (this->detectiondomain().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_detectiondomain());
  }

  // int32 detectionInvervalSec = 2;
  if (this->detectioninvervalsec() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_detectioninvervalsec());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cloud_Config_NetworkQualityDetectionConfig::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Cloud.Config.NetworkQualityDetectionConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const Cloud_Config_NetworkQualityDetectionConfig* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Cloud_Config_NetworkQualityDetectionConfig>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Cloud.Config.NetworkQualityDetectionConfig)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Cloud.Config.NetworkQualityDetectionConfig)
    MergeFrom(*source);
  }
}

void Cloud_Config_NetworkQualityDetectionConfig::MergeFrom(const Cloud_Config_NetworkQualityDetectionConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Cloud.Config.NetworkQualityDetectionConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.detectiondomain().size() > 0) {
    _internal_set_detectiondomain(from._internal_detectiondomain());
  }
  if (from.detectioninvervalsec() != 0) {
    _internal_set_detectioninvervalsec(from._internal_detectioninvervalsec());
  }
}

void Cloud_Config_NetworkQualityDetectionConfig::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Cloud.Config.NetworkQualityDetectionConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cloud_Config_NetworkQualityDetectionConfig::CopyFrom(const Cloud_Config_NetworkQualityDetectionConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Cloud.Config.NetworkQualityDetectionConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cloud_Config_NetworkQualityDetectionConfig::IsInitialized() const {
  return true;
}

void Cloud_Config_NetworkQualityDetectionConfig::InternalSwap(Cloud_Config_NetworkQualityDetectionConfig* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  detectiondomain_.Swap(&other->detectiondomain_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(detectioninvervalsec_, other->detectioninvervalsec_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Cloud_Config_NetworkQualityDetectionConfig::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Cloud_Config_ClientConfig::_Internal {
 public:
  static const ::AcFunDanmu::Im::Cloud_Config_NetworkQualityDetectionConfig& networkqualitydetectionconfig(const Cloud_Config_ClientConfig* msg);
};

const ::AcFunDanmu::Im::Cloud_Config_NetworkQualityDetectionConfig&
Cloud_Config_ClientConfig::_Internal::networkqualitydetectionconfig(const Cloud_Config_ClientConfig* msg) {
  return *msg->networkqualitydetectionconfig_;
}
Cloud_Config_ClientConfig::Cloud_Config_ClientConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Cloud.Config.ClientConfig)
}
Cloud_Config_ClientConfig::Cloud_Config_ClientConfig(const Cloud_Config_ClientConfig& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  resourceuploadingdomain_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_resourceuploadingdomain().empty()) {
    resourceuploadingdomain_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_resourceuploadingdomain(), 
      GetArena());
  }
  if (from._internal_has_networkqualitydetectionconfig()) {
    networkqualitydetectionconfig_ = new ::AcFunDanmu::Im::Cloud_Config_NetworkQualityDetectionConfig(*from.networkqualitydetectionconfig_);
  } else {
    networkqualitydetectionconfig_ = nullptr;
  }
  ::memcpy(&fetchuserstatusinterval_, &from.fetchuserstatusinterval_,
    static_cast<size_t>(reinterpret_cast<char*>(&batchsendmessagemaxcount_) -
    reinterpret_cast<char*>(&fetchuserstatusinterval_)) + sizeof(batchsendmessagemaxcount_));
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Cloud.Config.ClientConfig)
}

void Cloud_Config_ClientConfig::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Cloud_Config_ClientConfig_Im_2eproto.base);
  resourceuploadingdomain_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&networkqualitydetectionconfig_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&batchsendmessagemaxcount_) -
      reinterpret_cast<char*>(&networkqualitydetectionconfig_)) + sizeof(batchsendmessagemaxcount_));
}

Cloud_Config_ClientConfig::~Cloud_Config_ClientConfig() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Cloud.Config.ClientConfig)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Cloud_Config_ClientConfig::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  resourceuploadingdomain_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete networkqualitydetectionconfig_;
}

void Cloud_Config_ClientConfig::ArenaDtor(void* object) {
  Cloud_Config_ClientConfig* _this = reinterpret_cast< Cloud_Config_ClientConfig* >(object);
  (void)_this;
}
void Cloud_Config_ClientConfig::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Cloud_Config_ClientConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cloud_Config_ClientConfig& Cloud_Config_ClientConfig::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Cloud_Config_ClientConfig_Im_2eproto.base);
  return *internal_default_instance();
}


void Cloud_Config_ClientConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Cloud.Config.ClientConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  resourceuploadingdomain_.ClearToEmpty();
  if (GetArena() == nullptr && networkqualitydetectionconfig_ != nullptr) {
    delete networkqualitydetectionconfig_;
  }
  networkqualitydetectionconfig_ = nullptr;
  ::memset(&fetchuserstatusinterval_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&batchsendmessagemaxcount_) -
      reinterpret_cast<char*>(&fetchuserstatusinterval_)) + sizeof(batchsendmessagemaxcount_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Cloud_Config_ClientConfig::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 fetchUserStatusInterval = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          fetchuserstatusinterval_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 channelUserHeartbeatInterval = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          channeluserheartbeatinterval_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .AcFunDanmu.Im.Cloud.Config.NetworkQualityDetectionConfig networkQualityDetectionConfig = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_networkqualitydetectionconfig(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 inputtingTipDisplayInterval = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          inputtingtipdisplayinterval_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 batchSendMessageMaxCount = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          batchsendmessagemaxcount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string resourceUploadingDomain = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_resourceuploadingdomain();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.Cloud.Config.ClientConfig.resourceUploadingDomain"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Cloud_Config_ClientConfig::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Cloud.Config.ClientConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 fetchUserStatusInterval = 1;
  if (this->fetchuserstatusinterval() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_fetchuserstatusinterval(), target);
  }

  // int32 channelUserHeartbeatInterval = 2;
  if (this->channeluserheartbeatinterval() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_channeluserheartbeatinterval(), target);
  }

  // .AcFunDanmu.Im.Cloud.Config.NetworkQualityDetectionConfig networkQualityDetectionConfig = 3;
  if (this->has_networkqualitydetectionconfig()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::networkqualitydetectionconfig(this), target, stream);
  }

  // int32 inputtingTipDisplayInterval = 4;
  if (this->inputtingtipdisplayinterval() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_inputtingtipdisplayinterval(), target);
  }

  // int32 batchSendMessageMaxCount = 5;
  if (this->batchsendmessagemaxcount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_batchsendmessagemaxcount(), target);
  }

  // string resourceUploadingDomain = 6;
  if (this->resourceuploadingdomain().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_resourceuploadingdomain().data(), static_cast<int>(this->_internal_resourceuploadingdomain().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.Cloud.Config.ClientConfig.resourceUploadingDomain");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_resourceuploadingdomain(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Cloud.Config.ClientConfig)
  return target;
}

size_t Cloud_Config_ClientConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Cloud.Config.ClientConfig)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string resourceUploadingDomain = 6;
  if (this->resourceuploadingdomain().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_resourceuploadingdomain());
  }

  // .AcFunDanmu.Im.Cloud.Config.NetworkQualityDetectionConfig networkQualityDetectionConfig = 3;
  if (this->has_networkqualitydetectionconfig()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *networkqualitydetectionconfig_);
  }

  // int32 fetchUserStatusInterval = 1;
  if (this->fetchuserstatusinterval() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_fetchuserstatusinterval());
  }

  // int32 channelUserHeartbeatInterval = 2;
  if (this->channeluserheartbeatinterval() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_channeluserheartbeatinterval());
  }

  // int32 inputtingTipDisplayInterval = 4;
  if (this->inputtingtipdisplayinterval() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_inputtingtipdisplayinterval());
  }

  // int32 batchSendMessageMaxCount = 5;
  if (this->batchsendmessagemaxcount() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_batchsendmessagemaxcount());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cloud_Config_ClientConfig::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Cloud.Config.ClientConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const Cloud_Config_ClientConfig* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Cloud_Config_ClientConfig>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Cloud.Config.ClientConfig)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Cloud.Config.ClientConfig)
    MergeFrom(*source);
  }
}

void Cloud_Config_ClientConfig::MergeFrom(const Cloud_Config_ClientConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Cloud.Config.ClientConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.resourceuploadingdomain().size() > 0) {
    _internal_set_resourceuploadingdomain(from._internal_resourceuploadingdomain());
  }
  if (from.has_networkqualitydetectionconfig()) {
    _internal_mutable_networkqualitydetectionconfig()->::AcFunDanmu::Im::Cloud_Config_NetworkQualityDetectionConfig::MergeFrom(from._internal_networkqualitydetectionconfig());
  }
  if (from.fetchuserstatusinterval() != 0) {
    _internal_set_fetchuserstatusinterval(from._internal_fetchuserstatusinterval());
  }
  if (from.channeluserheartbeatinterval() != 0) {
    _internal_set_channeluserheartbeatinterval(from._internal_channeluserheartbeatinterval());
  }
  if (from.inputtingtipdisplayinterval() != 0) {
    _internal_set_inputtingtipdisplayinterval(from._internal_inputtingtipdisplayinterval());
  }
  if (from.batchsendmessagemaxcount() != 0) {
    _internal_set_batchsendmessagemaxcount(from._internal_batchsendmessagemaxcount());
  }
}

void Cloud_Config_ClientConfig::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Cloud.Config.ClientConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cloud_Config_ClientConfig::CopyFrom(const Cloud_Config_ClientConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Cloud.Config.ClientConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cloud_Config_ClientConfig::IsInitialized() const {
  return true;
}

void Cloud_Config_ClientConfig::InternalSwap(Cloud_Config_ClientConfig* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  resourceuploadingdomain_.Swap(&other->resourceuploadingdomain_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Cloud_Config_ClientConfig, batchsendmessagemaxcount_)
      + sizeof(Cloud_Config_ClientConfig::batchsendmessagemaxcount_)
      - PROTOBUF_FIELD_OFFSET(Cloud_Config_ClientConfig, networkqualitydetectionconfig_)>(
          reinterpret_cast<char*>(&networkqualitydetectionconfig_),
          reinterpret_cast<char*>(&other->networkqualitydetectionconfig_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Cloud_Config_ClientConfig::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Cloud_Config::_Internal {
 public:
};

Cloud_Config::Cloud_Config(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Cloud.Config)
}
Cloud_Config::Cloud_Config(const Cloud_Config& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Cloud.Config)
}

void Cloud_Config::SharedCtor() {
}

Cloud_Config::~Cloud_Config() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Cloud.Config)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Cloud_Config::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Cloud_Config::ArenaDtor(void* object) {
  Cloud_Config* _this = reinterpret_cast< Cloud_Config* >(object);
  (void)_this;
}
void Cloud_Config::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Cloud_Config::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cloud_Config& Cloud_Config::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Cloud_Config_Im_2eproto.base);
  return *internal_default_instance();
}


void Cloud_Config::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Cloud.Config)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Cloud_Config::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Cloud_Config::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Cloud.Config)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Cloud.Config)
  return target;
}

size_t Cloud_Config::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Cloud.Config)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cloud_Config::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Cloud.Config)
  GOOGLE_DCHECK_NE(&from, this);
  const Cloud_Config* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Cloud_Config>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Cloud.Config)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Cloud.Config)
    MergeFrom(*source);
  }
}

void Cloud_Config::MergeFrom(const Cloud_Config& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Cloud.Config)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Cloud_Config::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Cloud.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cloud_Config::CopyFrom(const Cloud_Config& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Cloud.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cloud_Config::IsInitialized() const {
  return true;
}

void Cloud_Config::InternalSwap(Cloud_Config* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Cloud_Config::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Cloud_Profile_UserOnlineStatus::_Internal {
 public:
  static const ::AcFunDanmu::Im::Basic_User& user(const Cloud_Profile_UserOnlineStatus* msg);
};

const ::AcFunDanmu::Im::Basic_User&
Cloud_Profile_UserOnlineStatus::_Internal::user(const Cloud_Profile_UserOnlineStatus* msg) {
  return *msg->user_;
}
Cloud_Profile_UserOnlineStatus::Cloud_Profile_UserOnlineStatus(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Cloud.Profile.UserOnlineStatus)
}
Cloud_Profile_UserOnlineStatus::Cloud_Profile_UserOnlineStatus(const Cloud_Profile_UserOnlineStatus& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_user()) {
    user_ = new ::AcFunDanmu::Im::Basic_User(*from.user_);
  } else {
    user_ = nullptr;
  }
  ::memcpy(&lastofflinetime_, &from.lastofflinetime_,
    static_cast<size_t>(reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&lastofflinetime_)) + sizeof(status_));
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Cloud.Profile.UserOnlineStatus)
}

void Cloud_Profile_UserOnlineStatus::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Cloud_Profile_UserOnlineStatus_Im_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&user_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&user_)) + sizeof(status_));
}

Cloud_Profile_UserOnlineStatus::~Cloud_Profile_UserOnlineStatus() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Cloud.Profile.UserOnlineStatus)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Cloud_Profile_UserOnlineStatus::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete user_;
}

void Cloud_Profile_UserOnlineStatus::ArenaDtor(void* object) {
  Cloud_Profile_UserOnlineStatus* _this = reinterpret_cast< Cloud_Profile_UserOnlineStatus* >(object);
  (void)_this;
}
void Cloud_Profile_UserOnlineStatus::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Cloud_Profile_UserOnlineStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cloud_Profile_UserOnlineStatus& Cloud_Profile_UserOnlineStatus::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Cloud_Profile_UserOnlineStatus_Im_2eproto.base);
  return *internal_default_instance();
}


void Cloud_Profile_UserOnlineStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Cloud.Profile.UserOnlineStatus)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && user_ != nullptr) {
    delete user_;
  }
  user_ = nullptr;
  ::memset(&lastofflinetime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&lastofflinetime_)) + sizeof(status_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Cloud_Profile_UserOnlineStatus::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .AcFunDanmu.Im.Basic.User user = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_user(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 lastOfflineTime = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          lastofflinetime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .AcFunDanmu.Im.Cloud.Profile.UserOnlineStatus.Status status = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_status(static_cast<::AcFunDanmu::Im::Cloud_Profile_UserOnlineStatus_Status>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Cloud_Profile_UserOnlineStatus::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Cloud.Profile.UserOnlineStatus)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .AcFunDanmu.Im.Basic.User user = 1;
  if (this->has_user()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::user(this), target, stream);
  }

  // int64 lastOfflineTime = 2;
  if (this->lastofflinetime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_lastofflinetime(), target);
  }

  // .AcFunDanmu.Im.Cloud.Profile.UserOnlineStatus.Status status = 3;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Cloud.Profile.UserOnlineStatus)
  return target;
}

size_t Cloud_Profile_UserOnlineStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Cloud.Profile.UserOnlineStatus)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .AcFunDanmu.Im.Basic.User user = 1;
  if (this->has_user()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *user_);
  }

  // int64 lastOfflineTime = 2;
  if (this->lastofflinetime() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_lastofflinetime());
  }

  // .AcFunDanmu.Im.Cloud.Profile.UserOnlineStatus.Status status = 3;
  if (this->status() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_status());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cloud_Profile_UserOnlineStatus::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Cloud.Profile.UserOnlineStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const Cloud_Profile_UserOnlineStatus* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Cloud_Profile_UserOnlineStatus>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Cloud.Profile.UserOnlineStatus)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Cloud.Profile.UserOnlineStatus)
    MergeFrom(*source);
  }
}

void Cloud_Profile_UserOnlineStatus::MergeFrom(const Cloud_Profile_UserOnlineStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Cloud.Profile.UserOnlineStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_user()) {
    _internal_mutable_user()->::AcFunDanmu::Im::Basic_User::MergeFrom(from._internal_user());
  }
  if (from.lastofflinetime() != 0) {
    _internal_set_lastofflinetime(from._internal_lastofflinetime());
  }
  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void Cloud_Profile_UserOnlineStatus::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Cloud.Profile.UserOnlineStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cloud_Profile_UserOnlineStatus::CopyFrom(const Cloud_Profile_UserOnlineStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Cloud.Profile.UserOnlineStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cloud_Profile_UserOnlineStatus::IsInitialized() const {
  return true;
}

void Cloud_Profile_UserOnlineStatus::InternalSwap(Cloud_Profile_UserOnlineStatus* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Cloud_Profile_UserOnlineStatus, status_)
      + sizeof(Cloud_Profile_UserOnlineStatus::status_)
      - PROTOBUF_FIELD_OFFSET(Cloud_Profile_UserOnlineStatus, user_)>(
          reinterpret_cast<char*>(&user_),
          reinterpret_cast<char*>(&other->user_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Cloud_Profile_UserOnlineStatus::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Cloud_Profile_ProfileBatchOnlineTimeRequest::_Internal {
 public:
};

Cloud_Profile_ProfileBatchOnlineTimeRequest::Cloud_Profile_ProfileBatchOnlineTimeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  user_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Cloud.Profile.ProfileBatchOnlineTimeRequest)
}
Cloud_Profile_ProfileBatchOnlineTimeRequest::Cloud_Profile_ProfileBatchOnlineTimeRequest(const Cloud_Profile_ProfileBatchOnlineTimeRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      user_(from.user_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Cloud.Profile.ProfileBatchOnlineTimeRequest)
}

void Cloud_Profile_ProfileBatchOnlineTimeRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Cloud_Profile_ProfileBatchOnlineTimeRequest_Im_2eproto.base);
}

Cloud_Profile_ProfileBatchOnlineTimeRequest::~Cloud_Profile_ProfileBatchOnlineTimeRequest() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Cloud.Profile.ProfileBatchOnlineTimeRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Cloud_Profile_ProfileBatchOnlineTimeRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Cloud_Profile_ProfileBatchOnlineTimeRequest::ArenaDtor(void* object) {
  Cloud_Profile_ProfileBatchOnlineTimeRequest* _this = reinterpret_cast< Cloud_Profile_ProfileBatchOnlineTimeRequest* >(object);
  (void)_this;
}
void Cloud_Profile_ProfileBatchOnlineTimeRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Cloud_Profile_ProfileBatchOnlineTimeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cloud_Profile_ProfileBatchOnlineTimeRequest& Cloud_Profile_ProfileBatchOnlineTimeRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Cloud_Profile_ProfileBatchOnlineTimeRequest_Im_2eproto.base);
  return *internal_default_instance();
}


void Cloud_Profile_ProfileBatchOnlineTimeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Cloud.Profile.ProfileBatchOnlineTimeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  user_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Cloud_Profile_ProfileBatchOnlineTimeRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .AcFunDanmu.Im.Basic.User user = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_user(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Cloud_Profile_ProfileBatchOnlineTimeRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Cloud.Profile.ProfileBatchOnlineTimeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .AcFunDanmu.Im.Basic.User user = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_user_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_user(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Cloud.Profile.ProfileBatchOnlineTimeRequest)
  return target;
}

size_t Cloud_Profile_ProfileBatchOnlineTimeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Cloud.Profile.ProfileBatchOnlineTimeRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .AcFunDanmu.Im.Basic.User user = 1;
  total_size += 1UL * this->_internal_user_size();
  for (const auto& msg : this->user_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cloud_Profile_ProfileBatchOnlineTimeRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Cloud.Profile.ProfileBatchOnlineTimeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const Cloud_Profile_ProfileBatchOnlineTimeRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Cloud_Profile_ProfileBatchOnlineTimeRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Cloud.Profile.ProfileBatchOnlineTimeRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Cloud.Profile.ProfileBatchOnlineTimeRequest)
    MergeFrom(*source);
  }
}

void Cloud_Profile_ProfileBatchOnlineTimeRequest::MergeFrom(const Cloud_Profile_ProfileBatchOnlineTimeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Cloud.Profile.ProfileBatchOnlineTimeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  user_.MergeFrom(from.user_);
}

void Cloud_Profile_ProfileBatchOnlineTimeRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Cloud.Profile.ProfileBatchOnlineTimeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cloud_Profile_ProfileBatchOnlineTimeRequest::CopyFrom(const Cloud_Profile_ProfileBatchOnlineTimeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Cloud.Profile.ProfileBatchOnlineTimeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cloud_Profile_ProfileBatchOnlineTimeRequest::IsInitialized() const {
  return true;
}

void Cloud_Profile_ProfileBatchOnlineTimeRequest::InternalSwap(Cloud_Profile_ProfileBatchOnlineTimeRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  user_.InternalSwap(&other->user_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Cloud_Profile_ProfileBatchOnlineTimeRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Cloud_Profile_ProfileBatchOnlineTimeResponse::_Internal {
 public:
};

Cloud_Profile_ProfileBatchOnlineTimeResponse::Cloud_Profile_ProfileBatchOnlineTimeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  useronlinestatus_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Cloud.Profile.ProfileBatchOnlineTimeResponse)
}
Cloud_Profile_ProfileBatchOnlineTimeResponse::Cloud_Profile_ProfileBatchOnlineTimeResponse(const Cloud_Profile_ProfileBatchOnlineTimeResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      useronlinestatus_(from.useronlinestatus_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Cloud.Profile.ProfileBatchOnlineTimeResponse)
}

void Cloud_Profile_ProfileBatchOnlineTimeResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Cloud_Profile_ProfileBatchOnlineTimeResponse_Im_2eproto.base);
}

Cloud_Profile_ProfileBatchOnlineTimeResponse::~Cloud_Profile_ProfileBatchOnlineTimeResponse() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Cloud.Profile.ProfileBatchOnlineTimeResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Cloud_Profile_ProfileBatchOnlineTimeResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Cloud_Profile_ProfileBatchOnlineTimeResponse::ArenaDtor(void* object) {
  Cloud_Profile_ProfileBatchOnlineTimeResponse* _this = reinterpret_cast< Cloud_Profile_ProfileBatchOnlineTimeResponse* >(object);
  (void)_this;
}
void Cloud_Profile_ProfileBatchOnlineTimeResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Cloud_Profile_ProfileBatchOnlineTimeResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cloud_Profile_ProfileBatchOnlineTimeResponse& Cloud_Profile_ProfileBatchOnlineTimeResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Cloud_Profile_ProfileBatchOnlineTimeResponse_Im_2eproto.base);
  return *internal_default_instance();
}


void Cloud_Profile_ProfileBatchOnlineTimeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Cloud.Profile.ProfileBatchOnlineTimeResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  useronlinestatus_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Cloud_Profile_ProfileBatchOnlineTimeResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .AcFunDanmu.Im.Cloud.Profile.UserOnlineStatus userOnlineStatus = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_useronlinestatus(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Cloud_Profile_ProfileBatchOnlineTimeResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Cloud.Profile.ProfileBatchOnlineTimeResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .AcFunDanmu.Im.Cloud.Profile.UserOnlineStatus userOnlineStatus = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_useronlinestatus_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_useronlinestatus(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Cloud.Profile.ProfileBatchOnlineTimeResponse)
  return target;
}

size_t Cloud_Profile_ProfileBatchOnlineTimeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Cloud.Profile.ProfileBatchOnlineTimeResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .AcFunDanmu.Im.Cloud.Profile.UserOnlineStatus userOnlineStatus = 1;
  total_size += 1UL * this->_internal_useronlinestatus_size();
  for (const auto& msg : this->useronlinestatus_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cloud_Profile_ProfileBatchOnlineTimeResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Cloud.Profile.ProfileBatchOnlineTimeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const Cloud_Profile_ProfileBatchOnlineTimeResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Cloud_Profile_ProfileBatchOnlineTimeResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Cloud.Profile.ProfileBatchOnlineTimeResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Cloud.Profile.ProfileBatchOnlineTimeResponse)
    MergeFrom(*source);
  }
}

void Cloud_Profile_ProfileBatchOnlineTimeResponse::MergeFrom(const Cloud_Profile_ProfileBatchOnlineTimeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Cloud.Profile.ProfileBatchOnlineTimeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  useronlinestatus_.MergeFrom(from.useronlinestatus_);
}

void Cloud_Profile_ProfileBatchOnlineTimeResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Cloud.Profile.ProfileBatchOnlineTimeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cloud_Profile_ProfileBatchOnlineTimeResponse::CopyFrom(const Cloud_Profile_ProfileBatchOnlineTimeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Cloud.Profile.ProfileBatchOnlineTimeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cloud_Profile_ProfileBatchOnlineTimeResponse::IsInitialized() const {
  return true;
}

void Cloud_Profile_ProfileBatchOnlineTimeResponse::InternalSwap(Cloud_Profile_ProfileBatchOnlineTimeResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  useronlinestatus_.InternalSwap(&other->useronlinestatus_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Cloud_Profile_ProfileBatchOnlineTimeResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Cloud_Profile::_Internal {
 public:
};

Cloud_Profile::Cloud_Profile(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Cloud.Profile)
}
Cloud_Profile::Cloud_Profile(const Cloud_Profile& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Cloud.Profile)
}

void Cloud_Profile::SharedCtor() {
}

Cloud_Profile::~Cloud_Profile() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Cloud.Profile)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Cloud_Profile::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Cloud_Profile::ArenaDtor(void* object) {
  Cloud_Profile* _this = reinterpret_cast< Cloud_Profile* >(object);
  (void)_this;
}
void Cloud_Profile::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Cloud_Profile::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cloud_Profile& Cloud_Profile::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Cloud_Profile_Im_2eproto.base);
  return *internal_default_instance();
}


void Cloud_Profile::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Cloud.Profile)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Cloud_Profile::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Cloud_Profile::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Cloud.Profile)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Cloud.Profile)
  return target;
}

size_t Cloud_Profile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Cloud.Profile)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cloud_Profile::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Cloud.Profile)
  GOOGLE_DCHECK_NE(&from, this);
  const Cloud_Profile* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Cloud_Profile>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Cloud.Profile)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Cloud.Profile)
    MergeFrom(*source);
  }
}

void Cloud_Profile::MergeFrom(const Cloud_Profile& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Cloud.Profile)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Cloud_Profile::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Cloud.Profile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cloud_Profile::CopyFrom(const Cloud_Profile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Cloud.Profile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cloud_Profile::IsInitialized() const {
  return true;
}

void Cloud_Profile::InternalSwap(Cloud_Profile* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Cloud_Profile::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Cloud_Data_Update_KsImDataUpdatePushPayload::_Internal {
 public:
  static const ::AcFunDanmu::Im::Cloud_Data_Update_KsImDataUpdatePushPayload& type(const Cloud_Data_Update_KsImDataUpdatePushPayload* msg);
};

const ::AcFunDanmu::Im::Cloud_Data_Update_KsImDataUpdatePushPayload&
Cloud_Data_Update_KsImDataUpdatePushPayload::_Internal::type(const Cloud_Data_Update_KsImDataUpdatePushPayload* msg) {
  return *msg->type_;
}
Cloud_Data_Update_KsImDataUpdatePushPayload::Cloud_Data_Update_KsImDataUpdatePushPayload(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Cloud.Data.Update.KsImDataUpdatePushPayload)
}
Cloud_Data_Update_KsImDataUpdatePushPayload::Cloud_Data_Update_KsImDataUpdatePushPayload(const Cloud_Data_Update_KsImDataUpdatePushPayload& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  content_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_content().empty()) {
    content_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_content(), 
      GetArena());
  }
  if (from._internal_has_type()) {
    type_ = new ::AcFunDanmu::Im::Cloud_Data_Update_KsImDataUpdatePushPayload(*from.type_);
  } else {
    type_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Cloud.Data.Update.KsImDataUpdatePushPayload)
}

void Cloud_Data_Update_KsImDataUpdatePushPayload::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Cloud_Data_Update_KsImDataUpdatePushPayload_Im_2eproto.base);
  content_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  type_ = nullptr;
}

Cloud_Data_Update_KsImDataUpdatePushPayload::~Cloud_Data_Update_KsImDataUpdatePushPayload() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Cloud.Data.Update.KsImDataUpdatePushPayload)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Cloud_Data_Update_KsImDataUpdatePushPayload::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  content_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete type_;
}

void Cloud_Data_Update_KsImDataUpdatePushPayload::ArenaDtor(void* object) {
  Cloud_Data_Update_KsImDataUpdatePushPayload* _this = reinterpret_cast< Cloud_Data_Update_KsImDataUpdatePushPayload* >(object);
  (void)_this;
}
void Cloud_Data_Update_KsImDataUpdatePushPayload::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Cloud_Data_Update_KsImDataUpdatePushPayload::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cloud_Data_Update_KsImDataUpdatePushPayload& Cloud_Data_Update_KsImDataUpdatePushPayload::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Cloud_Data_Update_KsImDataUpdatePushPayload_Im_2eproto.base);
  return *internal_default_instance();
}


void Cloud_Data_Update_KsImDataUpdatePushPayload::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Cloud.Data.Update.KsImDataUpdatePushPayload)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  content_.ClearToEmpty();
  if (GetArena() == nullptr && type_ != nullptr) {
    delete type_;
  }
  type_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Cloud_Data_Update_KsImDataUpdatePushPayload::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .AcFunDanmu.Im.Cloud.Data.Update.KsImDataUpdatePushPayload type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_type(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes content = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_content();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Cloud_Data_Update_KsImDataUpdatePushPayload::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Cloud.Data.Update.KsImDataUpdatePushPayload)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .AcFunDanmu.Im.Cloud.Data.Update.KsImDataUpdatePushPayload type = 1;
  if (this->has_type()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::type(this), target, stream);
  }

  // bytes content = 2;
  if (this->content().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_content(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Cloud.Data.Update.KsImDataUpdatePushPayload)
  return target;
}

size_t Cloud_Data_Update_KsImDataUpdatePushPayload::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Cloud.Data.Update.KsImDataUpdatePushPayload)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes content = 2;
  if (this->content().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_content());
  }

  // .AcFunDanmu.Im.Cloud.Data.Update.KsImDataUpdatePushPayload type = 1;
  if (this->has_type()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *type_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cloud_Data_Update_KsImDataUpdatePushPayload::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Cloud.Data.Update.KsImDataUpdatePushPayload)
  GOOGLE_DCHECK_NE(&from, this);
  const Cloud_Data_Update_KsImDataUpdatePushPayload* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Cloud_Data_Update_KsImDataUpdatePushPayload>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Cloud.Data.Update.KsImDataUpdatePushPayload)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Cloud.Data.Update.KsImDataUpdatePushPayload)
    MergeFrom(*source);
  }
}

void Cloud_Data_Update_KsImDataUpdatePushPayload::MergeFrom(const Cloud_Data_Update_KsImDataUpdatePushPayload& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Cloud.Data.Update.KsImDataUpdatePushPayload)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.content().size() > 0) {
    _internal_set_content(from._internal_content());
  }
  if (from.has_type()) {
    _internal_mutable_type()->::AcFunDanmu::Im::Cloud_Data_Update_KsImDataUpdatePushPayload::MergeFrom(from._internal_type());
  }
}

void Cloud_Data_Update_KsImDataUpdatePushPayload::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Cloud.Data.Update.KsImDataUpdatePushPayload)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cloud_Data_Update_KsImDataUpdatePushPayload::CopyFrom(const Cloud_Data_Update_KsImDataUpdatePushPayload& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Cloud.Data.Update.KsImDataUpdatePushPayload)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cloud_Data_Update_KsImDataUpdatePushPayload::IsInitialized() const {
  return true;
}

void Cloud_Data_Update_KsImDataUpdatePushPayload::InternalSwap(Cloud_Data_Update_KsImDataUpdatePushPayload* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  content_.Swap(&other->content_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(type_, other->type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Cloud_Data_Update_KsImDataUpdatePushPayload::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Cloud_Data_Update_GroupInfoDataUpdate::_Internal {
 public:
};

Cloud_Data_Update_GroupInfoDataUpdate::Cloud_Data_Update_GroupInfoDataUpdate(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Cloud.Data.Update.GroupInfoDataUpdate)
}
Cloud_Data_Update_GroupInfoDataUpdate::Cloud_Data_Update_GroupInfoDataUpdate(const Cloud_Data_Update_GroupInfoDataUpdate& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  groupid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_groupid().empty()) {
    groupid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_groupid(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Cloud.Data.Update.GroupInfoDataUpdate)
}

void Cloud_Data_Update_GroupInfoDataUpdate::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Cloud_Data_Update_GroupInfoDataUpdate_Im_2eproto.base);
  groupid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Cloud_Data_Update_GroupInfoDataUpdate::~Cloud_Data_Update_GroupInfoDataUpdate() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Cloud.Data.Update.GroupInfoDataUpdate)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Cloud_Data_Update_GroupInfoDataUpdate::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  groupid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Cloud_Data_Update_GroupInfoDataUpdate::ArenaDtor(void* object) {
  Cloud_Data_Update_GroupInfoDataUpdate* _this = reinterpret_cast< Cloud_Data_Update_GroupInfoDataUpdate* >(object);
  (void)_this;
}
void Cloud_Data_Update_GroupInfoDataUpdate::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Cloud_Data_Update_GroupInfoDataUpdate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cloud_Data_Update_GroupInfoDataUpdate& Cloud_Data_Update_GroupInfoDataUpdate::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Cloud_Data_Update_GroupInfoDataUpdate_Im_2eproto.base);
  return *internal_default_instance();
}


void Cloud_Data_Update_GroupInfoDataUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Cloud.Data.Update.GroupInfoDataUpdate)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  groupid_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Cloud_Data_Update_GroupInfoDataUpdate::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string groupId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_groupid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.Cloud.Data.Update.GroupInfoDataUpdate.groupId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Cloud_Data_Update_GroupInfoDataUpdate::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Cloud.Data.Update.GroupInfoDataUpdate)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string groupId = 1;
  if (this->groupid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_groupid().data(), static_cast<int>(this->_internal_groupid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.Cloud.Data.Update.GroupInfoDataUpdate.groupId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_groupid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Cloud.Data.Update.GroupInfoDataUpdate)
  return target;
}

size_t Cloud_Data_Update_GroupInfoDataUpdate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Cloud.Data.Update.GroupInfoDataUpdate)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string groupId = 1;
  if (this->groupid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_groupid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cloud_Data_Update_GroupInfoDataUpdate::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Cloud.Data.Update.GroupInfoDataUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  const Cloud_Data_Update_GroupInfoDataUpdate* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Cloud_Data_Update_GroupInfoDataUpdate>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Cloud.Data.Update.GroupInfoDataUpdate)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Cloud.Data.Update.GroupInfoDataUpdate)
    MergeFrom(*source);
  }
}

void Cloud_Data_Update_GroupInfoDataUpdate::MergeFrom(const Cloud_Data_Update_GroupInfoDataUpdate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Cloud.Data.Update.GroupInfoDataUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.groupid().size() > 0) {
    _internal_set_groupid(from._internal_groupid());
  }
}

void Cloud_Data_Update_GroupInfoDataUpdate::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Cloud.Data.Update.GroupInfoDataUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cloud_Data_Update_GroupInfoDataUpdate::CopyFrom(const Cloud_Data_Update_GroupInfoDataUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Cloud.Data.Update.GroupInfoDataUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cloud_Data_Update_GroupInfoDataUpdate::IsInitialized() const {
  return true;
}

void Cloud_Data_Update_GroupInfoDataUpdate::InternalSwap(Cloud_Data_Update_GroupInfoDataUpdate* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  groupid_.Swap(&other->groupid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata Cloud_Data_Update_GroupInfoDataUpdate::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Cloud_Data_Update_GroupMemberListUpdate::_Internal {
 public:
};

Cloud_Data_Update_GroupMemberListUpdate::Cloud_Data_Update_GroupMemberListUpdate(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Cloud.Data.Update.GroupMemberListUpdate)
}
Cloud_Data_Update_GroupMemberListUpdate::Cloud_Data_Update_GroupMemberListUpdate(const Cloud_Data_Update_GroupMemberListUpdate& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  groupid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_groupid().empty()) {
    groupid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_groupid(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Cloud.Data.Update.GroupMemberListUpdate)
}

void Cloud_Data_Update_GroupMemberListUpdate::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Cloud_Data_Update_GroupMemberListUpdate_Im_2eproto.base);
  groupid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Cloud_Data_Update_GroupMemberListUpdate::~Cloud_Data_Update_GroupMemberListUpdate() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Cloud.Data.Update.GroupMemberListUpdate)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Cloud_Data_Update_GroupMemberListUpdate::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  groupid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Cloud_Data_Update_GroupMemberListUpdate::ArenaDtor(void* object) {
  Cloud_Data_Update_GroupMemberListUpdate* _this = reinterpret_cast< Cloud_Data_Update_GroupMemberListUpdate* >(object);
  (void)_this;
}
void Cloud_Data_Update_GroupMemberListUpdate::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Cloud_Data_Update_GroupMemberListUpdate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cloud_Data_Update_GroupMemberListUpdate& Cloud_Data_Update_GroupMemberListUpdate::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Cloud_Data_Update_GroupMemberListUpdate_Im_2eproto.base);
  return *internal_default_instance();
}


void Cloud_Data_Update_GroupMemberListUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Cloud.Data.Update.GroupMemberListUpdate)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  groupid_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Cloud_Data_Update_GroupMemberListUpdate::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string groupId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_groupid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.Cloud.Data.Update.GroupMemberListUpdate.groupId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Cloud_Data_Update_GroupMemberListUpdate::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Cloud.Data.Update.GroupMemberListUpdate)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string groupId = 1;
  if (this->groupid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_groupid().data(), static_cast<int>(this->_internal_groupid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.Cloud.Data.Update.GroupMemberListUpdate.groupId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_groupid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Cloud.Data.Update.GroupMemberListUpdate)
  return target;
}

size_t Cloud_Data_Update_GroupMemberListUpdate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Cloud.Data.Update.GroupMemberListUpdate)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string groupId = 1;
  if (this->groupid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_groupid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cloud_Data_Update_GroupMemberListUpdate::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Cloud.Data.Update.GroupMemberListUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  const Cloud_Data_Update_GroupMemberListUpdate* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Cloud_Data_Update_GroupMemberListUpdate>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Cloud.Data.Update.GroupMemberListUpdate)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Cloud.Data.Update.GroupMemberListUpdate)
    MergeFrom(*source);
  }
}

void Cloud_Data_Update_GroupMemberListUpdate::MergeFrom(const Cloud_Data_Update_GroupMemberListUpdate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Cloud.Data.Update.GroupMemberListUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.groupid().size() > 0) {
    _internal_set_groupid(from._internal_groupid());
  }
}

void Cloud_Data_Update_GroupMemberListUpdate::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Cloud.Data.Update.GroupMemberListUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cloud_Data_Update_GroupMemberListUpdate::CopyFrom(const Cloud_Data_Update_GroupMemberListUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Cloud.Data.Update.GroupMemberListUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cloud_Data_Update_GroupMemberListUpdate::IsInitialized() const {
  return true;
}

void Cloud_Data_Update_GroupMemberListUpdate::InternalSwap(Cloud_Data_Update_GroupMemberListUpdate* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  groupid_.Swap(&other->groupid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata Cloud_Data_Update_GroupMemberListUpdate::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Cloud_Data_Update_YouBeKicked::_Internal {
 public:
};

Cloud_Data_Update_YouBeKicked::Cloud_Data_Update_YouBeKicked(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Cloud.Data.Update.YouBeKicked)
}
Cloud_Data_Update_YouBeKicked::Cloud_Data_Update_YouBeKicked(const Cloud_Data_Update_YouBeKicked& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  groupid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_groupid().empty()) {
    groupid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_groupid(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Cloud.Data.Update.YouBeKicked)
}

void Cloud_Data_Update_YouBeKicked::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Cloud_Data_Update_YouBeKicked_Im_2eproto.base);
  groupid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Cloud_Data_Update_YouBeKicked::~Cloud_Data_Update_YouBeKicked() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Cloud.Data.Update.YouBeKicked)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Cloud_Data_Update_YouBeKicked::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  groupid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Cloud_Data_Update_YouBeKicked::ArenaDtor(void* object) {
  Cloud_Data_Update_YouBeKicked* _this = reinterpret_cast< Cloud_Data_Update_YouBeKicked* >(object);
  (void)_this;
}
void Cloud_Data_Update_YouBeKicked::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Cloud_Data_Update_YouBeKicked::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cloud_Data_Update_YouBeKicked& Cloud_Data_Update_YouBeKicked::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Cloud_Data_Update_YouBeKicked_Im_2eproto.base);
  return *internal_default_instance();
}


void Cloud_Data_Update_YouBeKicked::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Cloud.Data.Update.YouBeKicked)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  groupid_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Cloud_Data_Update_YouBeKicked::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string groupId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_groupid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.Cloud.Data.Update.YouBeKicked.groupId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Cloud_Data_Update_YouBeKicked::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Cloud.Data.Update.YouBeKicked)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string groupId = 1;
  if (this->groupid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_groupid().data(), static_cast<int>(this->_internal_groupid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.Cloud.Data.Update.YouBeKicked.groupId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_groupid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Cloud.Data.Update.YouBeKicked)
  return target;
}

size_t Cloud_Data_Update_YouBeKicked::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Cloud.Data.Update.YouBeKicked)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string groupId = 1;
  if (this->groupid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_groupid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cloud_Data_Update_YouBeKicked::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Cloud.Data.Update.YouBeKicked)
  GOOGLE_DCHECK_NE(&from, this);
  const Cloud_Data_Update_YouBeKicked* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Cloud_Data_Update_YouBeKicked>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Cloud.Data.Update.YouBeKicked)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Cloud.Data.Update.YouBeKicked)
    MergeFrom(*source);
  }
}

void Cloud_Data_Update_YouBeKicked::MergeFrom(const Cloud_Data_Update_YouBeKicked& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Cloud.Data.Update.YouBeKicked)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.groupid().size() > 0) {
    _internal_set_groupid(from._internal_groupid());
  }
}

void Cloud_Data_Update_YouBeKicked::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Cloud.Data.Update.YouBeKicked)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cloud_Data_Update_YouBeKicked::CopyFrom(const Cloud_Data_Update_YouBeKicked& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Cloud.Data.Update.YouBeKicked)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cloud_Data_Update_YouBeKicked::IsInitialized() const {
  return true;
}

void Cloud_Data_Update_YouBeKicked::InternalSwap(Cloud_Data_Update_YouBeKicked* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  groupid_.Swap(&other->groupid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata Cloud_Data_Update_YouBeKicked::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Cloud_Data_Update_MessageRead::_Internal {
 public:
};

Cloud_Data_Update_MessageRead::Cloud_Data_Update_MessageRead(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Cloud.Data.Update.MessageRead)
}
Cloud_Data_Update_MessageRead::Cloud_Data_Update_MessageRead(const Cloud_Data_Update_MessageRead& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  strtargetid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_strtargetid().empty()) {
    strtargetid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_strtargetid(), 
      GetArena());
  }
  ::memcpy(&readseq_, &from.readseq_,
    static_cast<size_t>(reinterpret_cast<char*>(&chattargettype_) -
    reinterpret_cast<char*>(&readseq_)) + sizeof(chattargettype_));
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Cloud.Data.Update.MessageRead)
}

void Cloud_Data_Update_MessageRead::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Cloud_Data_Update_MessageRead_Im_2eproto.base);
  strtargetid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&readseq_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&chattargettype_) -
      reinterpret_cast<char*>(&readseq_)) + sizeof(chattargettype_));
}

Cloud_Data_Update_MessageRead::~Cloud_Data_Update_MessageRead() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Cloud.Data.Update.MessageRead)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Cloud_Data_Update_MessageRead::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  strtargetid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Cloud_Data_Update_MessageRead::ArenaDtor(void* object) {
  Cloud_Data_Update_MessageRead* _this = reinterpret_cast< Cloud_Data_Update_MessageRead* >(object);
  (void)_this;
}
void Cloud_Data_Update_MessageRead::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Cloud_Data_Update_MessageRead::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cloud_Data_Update_MessageRead& Cloud_Data_Update_MessageRead::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Cloud_Data_Update_MessageRead_Im_2eproto.base);
  return *internal_default_instance();
}


void Cloud_Data_Update_MessageRead::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Cloud.Data.Update.MessageRead)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  strtargetid_.ClearToEmpty();
  ::memset(&readseq_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&chattargettype_) -
      reinterpret_cast<char*>(&readseq_)) + sizeof(chattargettype_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Cloud_Data_Update_MessageRead::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string strTargetId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_strtargetid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.Cloud.Data.Update.MessageRead.strTargetId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 readSeq = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          readseq_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .AcFunDanmu.Im.ImMessage.ChatTargetType chatTargetType = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_chattargettype(static_cast<::AcFunDanmu::Im::ImMessage_ChatTargetType>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Cloud_Data_Update_MessageRead::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Cloud.Data.Update.MessageRead)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string strTargetId = 1;
  if (this->strtargetid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_strtargetid().data(), static_cast<int>(this->_internal_strtargetid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.Cloud.Data.Update.MessageRead.strTargetId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_strtargetid(), target);
  }

  // int64 readSeq = 2;
  if (this->readseq() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_readseq(), target);
  }

  // .AcFunDanmu.Im.ImMessage.ChatTargetType chatTargetType = 3;
  if (this->chattargettype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->_internal_chattargettype(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Cloud.Data.Update.MessageRead)
  return target;
}

size_t Cloud_Data_Update_MessageRead::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Cloud.Data.Update.MessageRead)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string strTargetId = 1;
  if (this->strtargetid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_strtargetid());
  }

  // int64 readSeq = 2;
  if (this->readseq() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_readseq());
  }

  // .AcFunDanmu.Im.ImMessage.ChatTargetType chatTargetType = 3;
  if (this->chattargettype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_chattargettype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cloud_Data_Update_MessageRead::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Cloud.Data.Update.MessageRead)
  GOOGLE_DCHECK_NE(&from, this);
  const Cloud_Data_Update_MessageRead* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Cloud_Data_Update_MessageRead>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Cloud.Data.Update.MessageRead)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Cloud.Data.Update.MessageRead)
    MergeFrom(*source);
  }
}

void Cloud_Data_Update_MessageRead::MergeFrom(const Cloud_Data_Update_MessageRead& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Cloud.Data.Update.MessageRead)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.strtargetid().size() > 0) {
    _internal_set_strtargetid(from._internal_strtargetid());
  }
  if (from.readseq() != 0) {
    _internal_set_readseq(from._internal_readseq());
  }
  if (from.chattargettype() != 0) {
    _internal_set_chattargettype(from._internal_chattargettype());
  }
}

void Cloud_Data_Update_MessageRead::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Cloud.Data.Update.MessageRead)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cloud_Data_Update_MessageRead::CopyFrom(const Cloud_Data_Update_MessageRead& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Cloud.Data.Update.MessageRead)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cloud_Data_Update_MessageRead::IsInitialized() const {
  return true;
}

void Cloud_Data_Update_MessageRead::InternalSwap(Cloud_Data_Update_MessageRead* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  strtargetid_.Swap(&other->strtargetid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Cloud_Data_Update_MessageRead, chattargettype_)
      + sizeof(Cloud_Data_Update_MessageRead::chattargettype_)
      - PROTOBUF_FIELD_OFFSET(Cloud_Data_Update_MessageRead, readseq_)>(
          reinterpret_cast<char*>(&readseq_),
          reinterpret_cast<char*>(&other->readseq_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Cloud_Data_Update_MessageRead::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Cloud_Data_Update_MessageReceipt::_Internal {
 public:
  static const ::AcFunDanmu::Im::ImMessage_ChatTarget& chattarget(const Cloud_Data_Update_MessageReceipt* msg);
  static const ::AcFunDanmu::Im::ImMessage_MessageReceiptStatus& receiptstatus(const Cloud_Data_Update_MessageReceipt* msg);
};

const ::AcFunDanmu::Im::ImMessage_ChatTarget&
Cloud_Data_Update_MessageReceipt::_Internal::chattarget(const Cloud_Data_Update_MessageReceipt* msg) {
  return *msg->chattarget_;
}
const ::AcFunDanmu::Im::ImMessage_MessageReceiptStatus&
Cloud_Data_Update_MessageReceipt::_Internal::receiptstatus(const Cloud_Data_Update_MessageReceipt* msg) {
  return *msg->receiptstatus_;
}
Cloud_Data_Update_MessageReceipt::Cloud_Data_Update_MessageReceipt(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Cloud.Data.Update.MessageReceipt)
}
Cloud_Data_Update_MessageReceipt::Cloud_Data_Update_MessageReceipt(const Cloud_Data_Update_MessageReceipt& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_chattarget()) {
    chattarget_ = new ::AcFunDanmu::Im::ImMessage_ChatTarget(*from.chattarget_);
  } else {
    chattarget_ = nullptr;
  }
  if (from._internal_has_receiptstatus()) {
    receiptstatus_ = new ::AcFunDanmu::Im::ImMessage_MessageReceiptStatus(*from.receiptstatus_);
  } else {
    receiptstatus_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Cloud.Data.Update.MessageReceipt)
}

void Cloud_Data_Update_MessageReceipt::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Cloud_Data_Update_MessageReceipt_Im_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&chattarget_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&receiptstatus_) -
      reinterpret_cast<char*>(&chattarget_)) + sizeof(receiptstatus_));
}

Cloud_Data_Update_MessageReceipt::~Cloud_Data_Update_MessageReceipt() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Cloud.Data.Update.MessageReceipt)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Cloud_Data_Update_MessageReceipt::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete chattarget_;
  if (this != internal_default_instance()) delete receiptstatus_;
}

void Cloud_Data_Update_MessageReceipt::ArenaDtor(void* object) {
  Cloud_Data_Update_MessageReceipt* _this = reinterpret_cast< Cloud_Data_Update_MessageReceipt* >(object);
  (void)_this;
}
void Cloud_Data_Update_MessageReceipt::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Cloud_Data_Update_MessageReceipt::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cloud_Data_Update_MessageReceipt& Cloud_Data_Update_MessageReceipt::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Cloud_Data_Update_MessageReceipt_Im_2eproto.base);
  return *internal_default_instance();
}


void Cloud_Data_Update_MessageReceipt::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Cloud.Data.Update.MessageReceipt)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && chattarget_ != nullptr) {
    delete chattarget_;
  }
  chattarget_ = nullptr;
  if (GetArena() == nullptr && receiptstatus_ != nullptr) {
    delete receiptstatus_;
  }
  receiptstatus_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Cloud_Data_Update_MessageReceipt::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .AcFunDanmu.Im.ImMessage.ChatTarget chatTarget = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_chattarget(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .AcFunDanmu.Im.ImMessage.MessageReceiptStatus receiptStatus = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_receiptstatus(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Cloud_Data_Update_MessageReceipt::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Cloud.Data.Update.MessageReceipt)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .AcFunDanmu.Im.ImMessage.ChatTarget chatTarget = 1;
  if (this->has_chattarget()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::chattarget(this), target, stream);
  }

  // .AcFunDanmu.Im.ImMessage.MessageReceiptStatus receiptStatus = 2;
  if (this->has_receiptstatus()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::receiptstatus(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Cloud.Data.Update.MessageReceipt)
  return target;
}

size_t Cloud_Data_Update_MessageReceipt::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Cloud.Data.Update.MessageReceipt)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .AcFunDanmu.Im.ImMessage.ChatTarget chatTarget = 1;
  if (this->has_chattarget()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *chattarget_);
  }

  // .AcFunDanmu.Im.ImMessage.MessageReceiptStatus receiptStatus = 2;
  if (this->has_receiptstatus()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *receiptstatus_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cloud_Data_Update_MessageReceipt::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Cloud.Data.Update.MessageReceipt)
  GOOGLE_DCHECK_NE(&from, this);
  const Cloud_Data_Update_MessageReceipt* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Cloud_Data_Update_MessageReceipt>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Cloud.Data.Update.MessageReceipt)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Cloud.Data.Update.MessageReceipt)
    MergeFrom(*source);
  }
}

void Cloud_Data_Update_MessageReceipt::MergeFrom(const Cloud_Data_Update_MessageReceipt& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Cloud.Data.Update.MessageReceipt)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_chattarget()) {
    _internal_mutable_chattarget()->::AcFunDanmu::Im::ImMessage_ChatTarget::MergeFrom(from._internal_chattarget());
  }
  if (from.has_receiptstatus()) {
    _internal_mutable_receiptstatus()->::AcFunDanmu::Im::ImMessage_MessageReceiptStatus::MergeFrom(from._internal_receiptstatus());
  }
}

void Cloud_Data_Update_MessageReceipt::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Cloud.Data.Update.MessageReceipt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cloud_Data_Update_MessageReceipt::CopyFrom(const Cloud_Data_Update_MessageReceipt& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Cloud.Data.Update.MessageReceipt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cloud_Data_Update_MessageReceipt::IsInitialized() const {
  return true;
}

void Cloud_Data_Update_MessageReceipt::InternalSwap(Cloud_Data_Update_MessageReceipt* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Cloud_Data_Update_MessageReceipt, receiptstatus_)
      + sizeof(Cloud_Data_Update_MessageReceipt::receiptstatus_)
      - PROTOBUF_FIELD_OFFSET(Cloud_Data_Update_MessageReceipt, chattarget_)>(
          reinterpret_cast<char*>(&chattarget_),
          reinterpret_cast<char*>(&other->chattarget_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Cloud_Data_Update_MessageReceipt::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Cloud_Data_Update::_Internal {
 public:
};

Cloud_Data_Update::Cloud_Data_Update(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Cloud.Data.Update)
}
Cloud_Data_Update::Cloud_Data_Update(const Cloud_Data_Update& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Cloud.Data.Update)
}

void Cloud_Data_Update::SharedCtor() {
}

Cloud_Data_Update::~Cloud_Data_Update() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Cloud.Data.Update)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Cloud_Data_Update::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Cloud_Data_Update::ArenaDtor(void* object) {
  Cloud_Data_Update* _this = reinterpret_cast< Cloud_Data_Update* >(object);
  (void)_this;
}
void Cloud_Data_Update::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Cloud_Data_Update::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cloud_Data_Update& Cloud_Data_Update::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Cloud_Data_Update_Im_2eproto.base);
  return *internal_default_instance();
}


void Cloud_Data_Update::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Cloud.Data.Update)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Cloud_Data_Update::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Cloud_Data_Update::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Cloud.Data.Update)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Cloud.Data.Update)
  return target;
}

size_t Cloud_Data_Update::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Cloud.Data.Update)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cloud_Data_Update::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Cloud.Data.Update)
  GOOGLE_DCHECK_NE(&from, this);
  const Cloud_Data_Update* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Cloud_Data_Update>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Cloud.Data.Update)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Cloud.Data.Update)
    MergeFrom(*source);
  }
}

void Cloud_Data_Update::MergeFrom(const Cloud_Data_Update& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Cloud.Data.Update)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Cloud_Data_Update::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Cloud.Data.Update)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cloud_Data_Update::CopyFrom(const Cloud_Data_Update& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Cloud.Data.Update)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cloud_Data_Update::IsInitialized() const {
  return true;
}

void Cloud_Data_Update::InternalSwap(Cloud_Data_Update* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Cloud_Data_Update::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Cloud_Data::_Internal {
 public:
};

Cloud_Data::Cloud_Data(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Cloud.Data)
}
Cloud_Data::Cloud_Data(const Cloud_Data& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Cloud.Data)
}

void Cloud_Data::SharedCtor() {
}

Cloud_Data::~Cloud_Data() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Cloud.Data)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Cloud_Data::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Cloud_Data::ArenaDtor(void* object) {
  Cloud_Data* _this = reinterpret_cast< Cloud_Data* >(object);
  (void)_this;
}
void Cloud_Data::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Cloud_Data::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cloud_Data& Cloud_Data::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Cloud_Data_Im_2eproto.base);
  return *internal_default_instance();
}


void Cloud_Data::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Cloud.Data)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Cloud_Data::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Cloud_Data::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Cloud.Data)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Cloud.Data)
  return target;
}

size_t Cloud_Data::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Cloud.Data)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cloud_Data::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Cloud.Data)
  GOOGLE_DCHECK_NE(&from, this);
  const Cloud_Data* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Cloud_Data>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Cloud.Data)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Cloud.Data)
    MergeFrom(*source);
  }
}

void Cloud_Data::MergeFrom(const Cloud_Data& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Cloud.Data)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Cloud_Data::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Cloud.Data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cloud_Data::CopyFrom(const Cloud_Data& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Cloud.Data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cloud_Data::IsInitialized() const {
  return true;
}

void Cloud_Data::InternalSwap(Cloud_Data* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Cloud_Data::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Cloud_Message_ImcRecalledMessage::_Internal {
 public:
  static const ::AcFunDanmu::Im::ImMessage_Message& originmsg(const Cloud_Message_ImcRecalledMessage* msg);
  static const ::AcFunDanmu::Im::Cloud_Message_ImcNoticeMessage& noticemsg(const Cloud_Message_ImcRecalledMessage* msg);
};

const ::AcFunDanmu::Im::ImMessage_Message&
Cloud_Message_ImcRecalledMessage::_Internal::originmsg(const Cloud_Message_ImcRecalledMessage* msg) {
  return *msg->originmsg_;
}
const ::AcFunDanmu::Im::Cloud_Message_ImcNoticeMessage&
Cloud_Message_ImcRecalledMessage::_Internal::noticemsg(const Cloud_Message_ImcRecalledMessage* msg) {
  return *msg->noticemsg_;
}
Cloud_Message_ImcRecalledMessage::Cloud_Message_ImcRecalledMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Cloud.Message.ImcRecalledMessage)
}
Cloud_Message_ImcRecalledMessage::Cloud_Message_ImcRecalledMessage(const Cloud_Message_ImcRecalledMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_originmsg()) {
    originmsg_ = new ::AcFunDanmu::Im::ImMessage_Message(*from.originmsg_);
  } else {
    originmsg_ = nullptr;
  }
  if (from._internal_has_noticemsg()) {
    noticemsg_ = new ::AcFunDanmu::Im::Cloud_Message_ImcNoticeMessage(*from.noticemsg_);
  } else {
    noticemsg_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Cloud.Message.ImcRecalledMessage)
}

void Cloud_Message_ImcRecalledMessage::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Cloud_Message_ImcRecalledMessage_Im_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&originmsg_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&noticemsg_) -
      reinterpret_cast<char*>(&originmsg_)) + sizeof(noticemsg_));
}

Cloud_Message_ImcRecalledMessage::~Cloud_Message_ImcRecalledMessage() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Cloud.Message.ImcRecalledMessage)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Cloud_Message_ImcRecalledMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete originmsg_;
  if (this != internal_default_instance()) delete noticemsg_;
}

void Cloud_Message_ImcRecalledMessage::ArenaDtor(void* object) {
  Cloud_Message_ImcRecalledMessage* _this = reinterpret_cast< Cloud_Message_ImcRecalledMessage* >(object);
  (void)_this;
}
void Cloud_Message_ImcRecalledMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Cloud_Message_ImcRecalledMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cloud_Message_ImcRecalledMessage& Cloud_Message_ImcRecalledMessage::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Cloud_Message_ImcRecalledMessage_Im_2eproto.base);
  return *internal_default_instance();
}


void Cloud_Message_ImcRecalledMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Cloud.Message.ImcRecalledMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && originmsg_ != nullptr) {
    delete originmsg_;
  }
  originmsg_ = nullptr;
  if (GetArena() == nullptr && noticemsg_ != nullptr) {
    delete noticemsg_;
  }
  noticemsg_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Cloud_Message_ImcRecalledMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .AcFunDanmu.Im.ImMessage.Message originMsg = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_originmsg(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .AcFunDanmu.Im.Cloud.Message.ImcNoticeMessage noticeMsg = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_noticemsg(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Cloud_Message_ImcRecalledMessage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Cloud.Message.ImcRecalledMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .AcFunDanmu.Im.ImMessage.Message originMsg = 1;
  if (this->has_originmsg()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::originmsg(this), target, stream);
  }

  // .AcFunDanmu.Im.Cloud.Message.ImcNoticeMessage noticeMsg = 2;
  if (this->has_noticemsg()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::noticemsg(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Cloud.Message.ImcRecalledMessage)
  return target;
}

size_t Cloud_Message_ImcRecalledMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Cloud.Message.ImcRecalledMessage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .AcFunDanmu.Im.ImMessage.Message originMsg = 1;
  if (this->has_originmsg()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *originmsg_);
  }

  // .AcFunDanmu.Im.Cloud.Message.ImcNoticeMessage noticeMsg = 2;
  if (this->has_noticemsg()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *noticemsg_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cloud_Message_ImcRecalledMessage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Cloud.Message.ImcRecalledMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const Cloud_Message_ImcRecalledMessage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Cloud_Message_ImcRecalledMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Cloud.Message.ImcRecalledMessage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Cloud.Message.ImcRecalledMessage)
    MergeFrom(*source);
  }
}

void Cloud_Message_ImcRecalledMessage::MergeFrom(const Cloud_Message_ImcRecalledMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Cloud.Message.ImcRecalledMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_originmsg()) {
    _internal_mutable_originmsg()->::AcFunDanmu::Im::ImMessage_Message::MergeFrom(from._internal_originmsg());
  }
  if (from.has_noticemsg()) {
    _internal_mutable_noticemsg()->::AcFunDanmu::Im::Cloud_Message_ImcNoticeMessage::MergeFrom(from._internal_noticemsg());
  }
}

void Cloud_Message_ImcRecalledMessage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Cloud.Message.ImcRecalledMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cloud_Message_ImcRecalledMessage::CopyFrom(const Cloud_Message_ImcRecalledMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Cloud.Message.ImcRecalledMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cloud_Message_ImcRecalledMessage::IsInitialized() const {
  return true;
}

void Cloud_Message_ImcRecalledMessage::InternalSwap(Cloud_Message_ImcRecalledMessage* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Cloud_Message_ImcRecalledMessage, noticemsg_)
      + sizeof(Cloud_Message_ImcRecalledMessage::noticemsg_)
      - PROTOBUF_FIELD_OFFSET(Cloud_Message_ImcRecalledMessage, originmsg_)>(
          reinterpret_cast<char*>(&originmsg_),
          reinterpret_cast<char*>(&other->originmsg_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Cloud_Message_ImcRecalledMessage::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Cloud_Message_ImcReplaceMessage::_Internal {
 public:
  static const ::AcFunDanmu::Im::ImMessage_Message& replacemsg(const Cloud_Message_ImcReplaceMessage* msg);
};

const ::AcFunDanmu::Im::ImMessage_Message&
Cloud_Message_ImcReplaceMessage::_Internal::replacemsg(const Cloud_Message_ImcReplaceMessage* msg) {
  return *msg->replacemsg_;
}
Cloud_Message_ImcReplaceMessage::Cloud_Message_ImcReplaceMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Cloud.Message.ImcReplaceMessage)
}
Cloud_Message_ImcReplaceMessage::Cloud_Message_ImcReplaceMessage(const Cloud_Message_ImcReplaceMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_replacemsg()) {
    replacemsg_ = new ::AcFunDanmu::Im::ImMessage_Message(*from.replacemsg_);
  } else {
    replacemsg_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Cloud.Message.ImcReplaceMessage)
}

void Cloud_Message_ImcReplaceMessage::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Cloud_Message_ImcReplaceMessage_Im_2eproto.base);
  replacemsg_ = nullptr;
}

Cloud_Message_ImcReplaceMessage::~Cloud_Message_ImcReplaceMessage() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Cloud.Message.ImcReplaceMessage)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Cloud_Message_ImcReplaceMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete replacemsg_;
}

void Cloud_Message_ImcReplaceMessage::ArenaDtor(void* object) {
  Cloud_Message_ImcReplaceMessage* _this = reinterpret_cast< Cloud_Message_ImcReplaceMessage* >(object);
  (void)_this;
}
void Cloud_Message_ImcReplaceMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Cloud_Message_ImcReplaceMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cloud_Message_ImcReplaceMessage& Cloud_Message_ImcReplaceMessage::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Cloud_Message_ImcReplaceMessage_Im_2eproto.base);
  return *internal_default_instance();
}


void Cloud_Message_ImcReplaceMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Cloud.Message.ImcReplaceMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && replacemsg_ != nullptr) {
    delete replacemsg_;
  }
  replacemsg_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Cloud_Message_ImcReplaceMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .AcFunDanmu.Im.ImMessage.Message replaceMsg = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_replacemsg(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Cloud_Message_ImcReplaceMessage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Cloud.Message.ImcReplaceMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .AcFunDanmu.Im.ImMessage.Message replaceMsg = 1;
  if (this->has_replacemsg()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::replacemsg(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Cloud.Message.ImcReplaceMessage)
  return target;
}

size_t Cloud_Message_ImcReplaceMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Cloud.Message.ImcReplaceMessage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .AcFunDanmu.Im.ImMessage.Message replaceMsg = 1;
  if (this->has_replacemsg()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *replacemsg_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cloud_Message_ImcReplaceMessage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Cloud.Message.ImcReplaceMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const Cloud_Message_ImcReplaceMessage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Cloud_Message_ImcReplaceMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Cloud.Message.ImcReplaceMessage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Cloud.Message.ImcReplaceMessage)
    MergeFrom(*source);
  }
}

void Cloud_Message_ImcReplaceMessage::MergeFrom(const Cloud_Message_ImcReplaceMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Cloud.Message.ImcReplaceMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_replacemsg()) {
    _internal_mutable_replacemsg()->::AcFunDanmu::Im::ImMessage_Message::MergeFrom(from._internal_replacemsg());
  }
}

void Cloud_Message_ImcReplaceMessage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Cloud.Message.ImcReplaceMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cloud_Message_ImcReplaceMessage::CopyFrom(const Cloud_Message_ImcReplaceMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Cloud.Message.ImcReplaceMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cloud_Message_ImcReplaceMessage::IsInitialized() const {
  return true;
}

void Cloud_Message_ImcReplaceMessage::InternalSwap(Cloud_Message_ImcReplaceMessage* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(replacemsg_, other->replacemsg_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Cloud_Message_ImcReplaceMessage::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Cloud_Message_Text::_Internal {
 public:
};

Cloud_Message_Text::Cloud_Message_Text(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Cloud.Message.Text)
}
Cloud_Message_Text::Cloud_Message_Text(const Cloud_Message_Text& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  text_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_text().empty()) {
    text_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_text(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Cloud.Message.Text)
}

void Cloud_Message_Text::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Cloud_Message_Text_Im_2eproto.base);
  text_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Cloud_Message_Text::~Cloud_Message_Text() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Cloud.Message.Text)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Cloud_Message_Text::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  text_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Cloud_Message_Text::ArenaDtor(void* object) {
  Cloud_Message_Text* _this = reinterpret_cast< Cloud_Message_Text* >(object);
  (void)_this;
}
void Cloud_Message_Text::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Cloud_Message_Text::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cloud_Message_Text& Cloud_Message_Text::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Cloud_Message_Text_Im_2eproto.base);
  return *internal_default_instance();
}


void Cloud_Message_Text::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Cloud.Message.Text)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  text_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Cloud_Message_Text::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string text = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_text();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.Cloud.Message.Text.text"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Cloud_Message_Text::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Cloud.Message.Text)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string text = 1;
  if (this->text().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_text().data(), static_cast<int>(this->_internal_text().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.Cloud.Message.Text.text");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_text(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Cloud.Message.Text)
  return target;
}

size_t Cloud_Message_Text::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Cloud.Message.Text)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string text = 1;
  if (this->text().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_text());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cloud_Message_Text::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Cloud.Message.Text)
  GOOGLE_DCHECK_NE(&from, this);
  const Cloud_Message_Text* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Cloud_Message_Text>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Cloud.Message.Text)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Cloud.Message.Text)
    MergeFrom(*source);
  }
}

void Cloud_Message_Text::MergeFrom(const Cloud_Message_Text& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Cloud.Message.Text)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.text().size() > 0) {
    _internal_set_text(from._internal_text());
  }
}

void Cloud_Message_Text::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Cloud.Message.Text)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cloud_Message_Text::CopyFrom(const Cloud_Message_Text& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Cloud.Message.Text)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cloud_Message_Text::IsInitialized() const {
  return true;
}

void Cloud_Message_Text::InternalSwap(Cloud_Message_Text* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  text_.Swap(&other->text_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata Cloud_Message_Text::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Cloud_Message_Image::_Internal {
 public:
};

Cloud_Message_Image::Cloud_Message_Image(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Cloud.Message.Image)
}
Cloud_Message_Image::Cloud_Message_Image(const Cloud_Message_Image& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_uri().empty()) {
    uri_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_uri(), 
      GetArena());
  }
  ::memcpy(&width_, &from.width_,
    static_cast<size_t>(reinterpret_cast<char*>(&height_) -
    reinterpret_cast<char*>(&width_)) + sizeof(height_));
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Cloud.Message.Image)
}

void Cloud_Message_Image::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Cloud_Message_Image_Im_2eproto.base);
  uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&width_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&height_) -
      reinterpret_cast<char*>(&width_)) + sizeof(height_));
}

Cloud_Message_Image::~Cloud_Message_Image() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Cloud.Message.Image)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Cloud_Message_Image::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  uri_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Cloud_Message_Image::ArenaDtor(void* object) {
  Cloud_Message_Image* _this = reinterpret_cast< Cloud_Message_Image* >(object);
  (void)_this;
}
void Cloud_Message_Image::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Cloud_Message_Image::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cloud_Message_Image& Cloud_Message_Image::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Cloud_Message_Image_Im_2eproto.base);
  return *internal_default_instance();
}


void Cloud_Message_Image::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Cloud.Message.Image)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uri_.ClearToEmpty();
  ::memset(&width_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&height_) -
      reinterpret_cast<char*>(&width_)) + sizeof(height_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Cloud_Message_Image::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string uri = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_uri();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.Cloud.Message.Image.uri"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 width = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          width_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 height = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          height_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Cloud_Message_Image::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Cloud.Message.Image)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string uri = 1;
  if (this->uri().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_uri().data(), static_cast<int>(this->_internal_uri().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.Cloud.Message.Image.uri");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_uri(), target);
  }

  // int32 width = 2;
  if (this->width() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_width(), target);
  }

  // int32 height = 3;
  if (this->height() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_height(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Cloud.Message.Image)
  return target;
}

size_t Cloud_Message_Image::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Cloud.Message.Image)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string uri = 1;
  if (this->uri().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_uri());
  }

  // int32 width = 2;
  if (this->width() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_width());
  }

  // int32 height = 3;
  if (this->height() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_height());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cloud_Message_Image::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Cloud.Message.Image)
  GOOGLE_DCHECK_NE(&from, this);
  const Cloud_Message_Image* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Cloud_Message_Image>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Cloud.Message.Image)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Cloud.Message.Image)
    MergeFrom(*source);
  }
}

void Cloud_Message_Image::MergeFrom(const Cloud_Message_Image& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Cloud.Message.Image)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uri().size() > 0) {
    _internal_set_uri(from._internal_uri());
  }
  if (from.width() != 0) {
    _internal_set_width(from._internal_width());
  }
  if (from.height() != 0) {
    _internal_set_height(from._internal_height());
  }
}

void Cloud_Message_Image::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Cloud.Message.Image)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cloud_Message_Image::CopyFrom(const Cloud_Message_Image& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Cloud.Message.Image)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cloud_Message_Image::IsInitialized() const {
  return true;
}

void Cloud_Message_Image::InternalSwap(Cloud_Message_Image* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  uri_.Swap(&other->uri_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Cloud_Message_Image, height_)
      + sizeof(Cloud_Message_Image::height_)
      - PROTOBUF_FIELD_OFFSET(Cloud_Message_Image, width_)>(
          reinterpret_cast<char*>(&width_),
          reinterpret_cast<char*>(&other->width_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Cloud_Message_Image::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Cloud_Message_Audio::_Internal {
 public:
};

Cloud_Message_Audio::Cloud_Message_Audio(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Cloud.Message.Audio)
}
Cloud_Message_Audio::Cloud_Message_Audio(const Cloud_Message_Audio& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_uri().empty()) {
    uri_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_uri(), 
      GetArena());
  }
  type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_type().empty()) {
    type_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_type(), 
      GetArena());
  }
  duration_ = from.duration_;
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Cloud.Message.Audio)
}

void Cloud_Message_Audio::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Cloud_Message_Audio_Im_2eproto.base);
  uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  duration_ = 0;
}

Cloud_Message_Audio::~Cloud_Message_Audio() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Cloud.Message.Audio)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Cloud_Message_Audio::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  uri_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Cloud_Message_Audio::ArenaDtor(void* object) {
  Cloud_Message_Audio* _this = reinterpret_cast< Cloud_Message_Audio* >(object);
  (void)_this;
}
void Cloud_Message_Audio::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Cloud_Message_Audio::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cloud_Message_Audio& Cloud_Message_Audio::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Cloud_Message_Audio_Im_2eproto.base);
  return *internal_default_instance();
}


void Cloud_Message_Audio::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Cloud.Message.Audio)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uri_.ClearToEmpty();
  type_.ClearToEmpty();
  duration_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Cloud_Message_Audio::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string uri = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_uri();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.Cloud.Message.Audio.uri"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 duration = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          duration_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string type = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.Cloud.Message.Audio.type"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Cloud_Message_Audio::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Cloud.Message.Audio)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string uri = 1;
  if (this->uri().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_uri().data(), static_cast<int>(this->_internal_uri().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.Cloud.Message.Audio.uri");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_uri(), target);
  }

  // int32 duration = 2;
  if (this->duration() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_duration(), target);
  }

  // string type = 3;
  if (this->type().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_type().data(), static_cast<int>(this->_internal_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.Cloud.Message.Audio.type");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Cloud.Message.Audio)
  return target;
}

size_t Cloud_Message_Audio::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Cloud.Message.Audio)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string uri = 1;
  if (this->uri().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_uri());
  }

  // string type = 3;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_type());
  }

  // int32 duration = 2;
  if (this->duration() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_duration());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cloud_Message_Audio::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Cloud.Message.Audio)
  GOOGLE_DCHECK_NE(&from, this);
  const Cloud_Message_Audio* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Cloud_Message_Audio>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Cloud.Message.Audio)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Cloud.Message.Audio)
    MergeFrom(*source);
  }
}

void Cloud_Message_Audio::MergeFrom(const Cloud_Message_Audio& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Cloud.Message.Audio)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uri().size() > 0) {
    _internal_set_uri(from._internal_uri());
  }
  if (from.type().size() > 0) {
    _internal_set_type(from._internal_type());
  }
  if (from.duration() != 0) {
    _internal_set_duration(from._internal_duration());
  }
}

void Cloud_Message_Audio::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Cloud.Message.Audio)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cloud_Message_Audio::CopyFrom(const Cloud_Message_Audio& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Cloud.Message.Audio)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cloud_Message_Audio::IsInitialized() const {
  return true;
}

void Cloud_Message_Audio::InternalSwap(Cloud_Message_Audio* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  uri_.Swap(&other->uri_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  type_.Swap(&other->type_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(duration_, other->duration_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Cloud_Message_Audio::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Cloud_Message_Video::_Internal {
 public:
};

Cloud_Message_Video::Cloud_Message_Video(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Cloud.Message.Video)
}
Cloud_Message_Video::Cloud_Message_Video(const Cloud_Message_Video& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_uri().empty()) {
    uri_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_uri(), 
      GetArena());
  }
  coveruri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_coveruri().empty()) {
    coveruri_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_coveruri(), 
      GetArena());
  }
  type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_type().empty()) {
    type_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_type(), 
      GetArena());
  }
  ::memcpy(&duration_, &from.duration_,
    static_cast<size_t>(reinterpret_cast<char*>(&height_) -
    reinterpret_cast<char*>(&duration_)) + sizeof(height_));
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Cloud.Message.Video)
}

void Cloud_Message_Video::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Cloud_Message_Video_Im_2eproto.base);
  uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  coveruri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&duration_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&height_) -
      reinterpret_cast<char*>(&duration_)) + sizeof(height_));
}

Cloud_Message_Video::~Cloud_Message_Video() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Cloud.Message.Video)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Cloud_Message_Video::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  uri_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  coveruri_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Cloud_Message_Video::ArenaDtor(void* object) {
  Cloud_Message_Video* _this = reinterpret_cast< Cloud_Message_Video* >(object);
  (void)_this;
}
void Cloud_Message_Video::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Cloud_Message_Video::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cloud_Message_Video& Cloud_Message_Video::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Cloud_Message_Video_Im_2eproto.base);
  return *internal_default_instance();
}


void Cloud_Message_Video::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Cloud.Message.Video)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uri_.ClearToEmpty();
  coveruri_.ClearToEmpty();
  type_.ClearToEmpty();
  ::memset(&duration_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&height_) -
      reinterpret_cast<char*>(&duration_)) + sizeof(height_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Cloud_Message_Video::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string uri = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_uri();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.Cloud.Message.Video.uri"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 duration = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          duration_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 width = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          width_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 height = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          height_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string coverUri = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_coveruri();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.Cloud.Message.Video.coverUri"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string type = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.Cloud.Message.Video.type"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Cloud_Message_Video::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Cloud.Message.Video)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string uri = 1;
  if (this->uri().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_uri().data(), static_cast<int>(this->_internal_uri().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.Cloud.Message.Video.uri");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_uri(), target);
  }

  // int32 duration = 2;
  if (this->duration() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_duration(), target);
  }

  // int32 width = 3;
  if (this->width() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_width(), target);
  }

  // int32 height = 4;
  if (this->height() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_height(), target);
  }

  // string coverUri = 5;
  if (this->coveruri().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_coveruri().data(), static_cast<int>(this->_internal_coveruri().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.Cloud.Message.Video.coverUri");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_coveruri(), target);
  }

  // string type = 6;
  if (this->type().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_type().data(), static_cast<int>(this->_internal_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.Cloud.Message.Video.type");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Cloud.Message.Video)
  return target;
}

size_t Cloud_Message_Video::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Cloud.Message.Video)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string uri = 1;
  if (this->uri().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_uri());
  }

  // string coverUri = 5;
  if (this->coveruri().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_coveruri());
  }

  // string type = 6;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_type());
  }

  // int32 duration = 2;
  if (this->duration() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_duration());
  }

  // int32 width = 3;
  if (this->width() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_width());
  }

  // int32 height = 4;
  if (this->height() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_height());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cloud_Message_Video::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Cloud.Message.Video)
  GOOGLE_DCHECK_NE(&from, this);
  const Cloud_Message_Video* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Cloud_Message_Video>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Cloud.Message.Video)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Cloud.Message.Video)
    MergeFrom(*source);
  }
}

void Cloud_Message_Video::MergeFrom(const Cloud_Message_Video& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Cloud.Message.Video)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uri().size() > 0) {
    _internal_set_uri(from._internal_uri());
  }
  if (from.coveruri().size() > 0) {
    _internal_set_coveruri(from._internal_coveruri());
  }
  if (from.type().size() > 0) {
    _internal_set_type(from._internal_type());
  }
  if (from.duration() != 0) {
    _internal_set_duration(from._internal_duration());
  }
  if (from.width() != 0) {
    _internal_set_width(from._internal_width());
  }
  if (from.height() != 0) {
    _internal_set_height(from._internal_height());
  }
}

void Cloud_Message_Video::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Cloud.Message.Video)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cloud_Message_Video::CopyFrom(const Cloud_Message_Video& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Cloud.Message.Video)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cloud_Message_Video::IsInitialized() const {
  return true;
}

void Cloud_Message_Video::InternalSwap(Cloud_Message_Video* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  uri_.Swap(&other->uri_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  coveruri_.Swap(&other->coveruri_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  type_.Swap(&other->type_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Cloud_Message_Video, height_)
      + sizeof(Cloud_Message_Video::height_)
      - PROTOBUF_FIELD_OFFSET(Cloud_Message_Video, duration_)>(
          reinterpret_cast<char*>(&duration_),
          reinterpret_cast<char*>(&other->duration_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Cloud_Message_Video::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Cloud_Message_Custom::_Internal {
 public:
};

Cloud_Message_Custom::Cloud_Message_Custom(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Cloud.Message.Custom)
}
Cloud_Message_Custom::Cloud_Message_Custom(const Cloud_Message_Custom& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  payload_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_payload().empty()) {
    payload_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_payload(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Cloud.Message.Custom)
}

void Cloud_Message_Custom::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Cloud_Message_Custom_Im_2eproto.base);
  payload_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Cloud_Message_Custom::~Cloud_Message_Custom() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Cloud.Message.Custom)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Cloud_Message_Custom::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  payload_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Cloud_Message_Custom::ArenaDtor(void* object) {
  Cloud_Message_Custom* _this = reinterpret_cast< Cloud_Message_Custom* >(object);
  (void)_this;
}
void Cloud_Message_Custom::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Cloud_Message_Custom::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cloud_Message_Custom& Cloud_Message_Custom::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Cloud_Message_Custom_Im_2eproto.base);
  return *internal_default_instance();
}


void Cloud_Message_Custom::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Cloud.Message.Custom)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  payload_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Cloud_Message_Custom::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string payload = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_payload();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.Cloud.Message.Custom.payload"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Cloud_Message_Custom::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Cloud.Message.Custom)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string payload = 1;
  if (this->payload().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_payload().data(), static_cast<int>(this->_internal_payload().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.Cloud.Message.Custom.payload");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_payload(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Cloud.Message.Custom)
  return target;
}

size_t Cloud_Message_Custom::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Cloud.Message.Custom)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string payload = 1;
  if (this->payload().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_payload());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cloud_Message_Custom::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Cloud.Message.Custom)
  GOOGLE_DCHECK_NE(&from, this);
  const Cloud_Message_Custom* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Cloud_Message_Custom>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Cloud.Message.Custom)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Cloud.Message.Custom)
    MergeFrom(*source);
  }
}

void Cloud_Message_Custom::MergeFrom(const Cloud_Message_Custom& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Cloud.Message.Custom)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.payload().size() > 0) {
    _internal_set_payload(from._internal_payload());
  }
}

void Cloud_Message_Custom::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Cloud.Message.Custom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cloud_Message_Custom::CopyFrom(const Cloud_Message_Custom& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Cloud.Message.Custom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cloud_Message_Custom::IsInitialized() const {
  return true;
}

void Cloud_Message_Custom::InternalSwap(Cloud_Message_Custom* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  payload_.Swap(&other->payload_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata Cloud_Message_Custom::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Cloud_Message_PicUrl::_Internal {
 public:
};

Cloud_Message_PicUrl::Cloud_Message_PicUrl(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Cloud.Message.PicUrl)
}
Cloud_Message_PicUrl::Cloud_Message_PicUrl(const Cloud_Message_PicUrl& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  cdn_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_cdn().empty()) {
    cdn_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_cdn(), 
      GetArena());
  }
  url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_url().empty()) {
    url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_url(), 
      GetArena());
  }
  urlpattern_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_urlpattern().empty()) {
    urlpattern_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_urlpattern(), 
      GetArena());
  }
  ip_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_ip().empty()) {
    ip_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_ip(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Cloud.Message.PicUrl)
}

void Cloud_Message_PicUrl::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Cloud_Message_PicUrl_Im_2eproto.base);
  cdn_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  urlpattern_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ip_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Cloud_Message_PicUrl::~Cloud_Message_PicUrl() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Cloud.Message.PicUrl)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Cloud_Message_PicUrl::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  cdn_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  url_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  urlpattern_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ip_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Cloud_Message_PicUrl::ArenaDtor(void* object) {
  Cloud_Message_PicUrl* _this = reinterpret_cast< Cloud_Message_PicUrl* >(object);
  (void)_this;
}
void Cloud_Message_PicUrl::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Cloud_Message_PicUrl::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cloud_Message_PicUrl& Cloud_Message_PicUrl::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Cloud_Message_PicUrl_Im_2eproto.base);
  return *internal_default_instance();
}


void Cloud_Message_PicUrl::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Cloud.Message.PicUrl)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cdn_.ClearToEmpty();
  url_.ClearToEmpty();
  urlpattern_.ClearToEmpty();
  ip_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Cloud_Message_PicUrl::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string cdn = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_cdn();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.Cloud.Message.PicUrl.cdn"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string url = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_url();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.Cloud.Message.PicUrl.url"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string urlPattern = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_urlpattern();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.Cloud.Message.PicUrl.urlPattern"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string ip = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_ip();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.Cloud.Message.PicUrl.ip"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Cloud_Message_PicUrl::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Cloud.Message.PicUrl)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cdn = 1;
  if (this->cdn().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_cdn().data(), static_cast<int>(this->_internal_cdn().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.Cloud.Message.PicUrl.cdn");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_cdn(), target);
  }

  // string url = 2;
  if (this->url().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_url().data(), static_cast<int>(this->_internal_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.Cloud.Message.PicUrl.url");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_url(), target);
  }

  // string urlPattern = 3;
  if (this->urlpattern().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_urlpattern().data(), static_cast<int>(this->_internal_urlpattern().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.Cloud.Message.PicUrl.urlPattern");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_urlpattern(), target);
  }

  // string ip = 4;
  if (this->ip().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_ip().data(), static_cast<int>(this->_internal_ip().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.Cloud.Message.PicUrl.ip");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_ip(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Cloud.Message.PicUrl)
  return target;
}

size_t Cloud_Message_PicUrl::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Cloud.Message.PicUrl)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string cdn = 1;
  if (this->cdn().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_cdn());
  }

  // string url = 2;
  if (this->url().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_url());
  }

  // string urlPattern = 3;
  if (this->urlpattern().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_urlpattern());
  }

  // string ip = 4;
  if (this->ip().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_ip());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cloud_Message_PicUrl::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Cloud.Message.PicUrl)
  GOOGLE_DCHECK_NE(&from, this);
  const Cloud_Message_PicUrl* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Cloud_Message_PicUrl>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Cloud.Message.PicUrl)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Cloud.Message.PicUrl)
    MergeFrom(*source);
  }
}

void Cloud_Message_PicUrl::MergeFrom(const Cloud_Message_PicUrl& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Cloud.Message.PicUrl)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cdn().size() > 0) {
    _internal_set_cdn(from._internal_cdn());
  }
  if (from.url().size() > 0) {
    _internal_set_url(from._internal_url());
  }
  if (from.urlpattern().size() > 0) {
    _internal_set_urlpattern(from._internal_urlpattern());
  }
  if (from.ip().size() > 0) {
    _internal_set_ip(from._internal_ip());
  }
}

void Cloud_Message_PicUrl::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Cloud.Message.PicUrl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cloud_Message_PicUrl::CopyFrom(const Cloud_Message_PicUrl& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Cloud.Message.PicUrl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cloud_Message_PicUrl::IsInitialized() const {
  return true;
}

void Cloud_Message_PicUrl::InternalSwap(Cloud_Message_PicUrl* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  cdn_.Swap(&other->cdn_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  url_.Swap(&other->url_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  urlpattern_.Swap(&other->urlpattern_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ip_.Swap(&other->ip_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata Cloud_Message_PicUrl::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Cloud_Message_Emoticon_Code::_Internal {
 public:
};

Cloud_Message_Emoticon_Code::Cloud_Message_Emoticon_Code(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  code_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Cloud.Message.Emoticon.Code)
}
Cloud_Message_Emoticon_Code::Cloud_Message_Emoticon_Code(const Cloud_Message_Emoticon_Code& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      code_(from.code_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  language_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_language().empty()) {
    language_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_language(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Cloud.Message.Emoticon.Code)
}

void Cloud_Message_Emoticon_Code::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Cloud_Message_Emoticon_Code_Im_2eproto.base);
  language_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Cloud_Message_Emoticon_Code::~Cloud_Message_Emoticon_Code() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Cloud.Message.Emoticon.Code)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Cloud_Message_Emoticon_Code::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  language_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Cloud_Message_Emoticon_Code::ArenaDtor(void* object) {
  Cloud_Message_Emoticon_Code* _this = reinterpret_cast< Cloud_Message_Emoticon_Code* >(object);
  (void)_this;
}
void Cloud_Message_Emoticon_Code::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Cloud_Message_Emoticon_Code::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cloud_Message_Emoticon_Code& Cloud_Message_Emoticon_Code::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Cloud_Message_Emoticon_Code_Im_2eproto.base);
  return *internal_default_instance();
}


void Cloud_Message_Emoticon_Code::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Cloud.Message.Emoticon.Code)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  code_.Clear();
  language_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Cloud_Message_Emoticon_Code::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string language = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_language();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.Cloud.Message.Emoticon.Code.language"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string code = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_code();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.Cloud.Message.Emoticon.Code.code"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Cloud_Message_Emoticon_Code::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Cloud.Message.Emoticon.Code)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string language = 1;
  if (this->language().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_language().data(), static_cast<int>(this->_internal_language().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.Cloud.Message.Emoticon.Code.language");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_language(), target);
  }

  // repeated string code = 2;
  for (int i = 0, n = this->_internal_code_size(); i < n; i++) {
    const auto& s = this->_internal_code(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.Cloud.Message.Emoticon.Code.code");
    target = stream->WriteString(2, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Cloud.Message.Emoticon.Code)
  return target;
}

size_t Cloud_Message_Emoticon_Code::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Cloud.Message.Emoticon.Code)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string code = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(code_.size());
  for (int i = 0, n = code_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      code_.Get(i));
  }

  // string language = 1;
  if (this->language().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_language());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cloud_Message_Emoticon_Code::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Cloud.Message.Emoticon.Code)
  GOOGLE_DCHECK_NE(&from, this);
  const Cloud_Message_Emoticon_Code* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Cloud_Message_Emoticon_Code>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Cloud.Message.Emoticon.Code)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Cloud.Message.Emoticon.Code)
    MergeFrom(*source);
  }
}

void Cloud_Message_Emoticon_Code::MergeFrom(const Cloud_Message_Emoticon_Code& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Cloud.Message.Emoticon.Code)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  code_.MergeFrom(from.code_);
  if (from.language().size() > 0) {
    _internal_set_language(from._internal_language());
  }
}

void Cloud_Message_Emoticon_Code::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Cloud.Message.Emoticon.Code)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cloud_Message_Emoticon_Code::CopyFrom(const Cloud_Message_Emoticon_Code& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Cloud.Message.Emoticon.Code)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cloud_Message_Emoticon_Code::IsInitialized() const {
  return true;
}

void Cloud_Message_Emoticon_Code::InternalSwap(Cloud_Message_Emoticon_Code* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  code_.InternalSwap(&other->code_);
  language_.Swap(&other->language_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata Cloud_Message_Emoticon_Code::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Cloud_Message_Emoticon::_Internal {
 public:
};

Cloud_Message_Emoticon::Cloud_Message_Emoticon(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  bigurl_(arena),
  emoticoncode_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Cloud.Message.Emoticon)
}
Cloud_Message_Emoticon::Cloud_Message_Emoticon(const Cloud_Message_Emoticon& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      bigurl_(from.bigurl_),
      emoticoncode_(from.emoticoncode_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArena());
  }
  packageid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_packageid().empty()) {
    packageid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_packageid(), 
      GetArena());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&height_) -
    reinterpret_cast<char*>(&type_)) + sizeof(height_));
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Cloud.Message.Emoticon)
}

void Cloud_Message_Emoticon::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Cloud_Message_Emoticon_Im_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  packageid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&type_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&height_) -
      reinterpret_cast<char*>(&type_)) + sizeof(height_));
}

Cloud_Message_Emoticon::~Cloud_Message_Emoticon() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Cloud.Message.Emoticon)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Cloud_Message_Emoticon::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  packageid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Cloud_Message_Emoticon::ArenaDtor(void* object) {
  Cloud_Message_Emoticon* _this = reinterpret_cast< Cloud_Message_Emoticon* >(object);
  (void)_this;
}
void Cloud_Message_Emoticon::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Cloud_Message_Emoticon::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cloud_Message_Emoticon& Cloud_Message_Emoticon::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Cloud_Message_Emoticon_Im_2eproto.base);
  return *internal_default_instance();
}


void Cloud_Message_Emoticon::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Cloud.Message.Emoticon)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bigurl_.Clear();
  emoticoncode_.Clear();
  id_.ClearToEmpty();
  packageid_.ClearToEmpty();
  name_.ClearToEmpty();
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&height_) -
      reinterpret_cast<char*>(&type_)) + sizeof(height_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Cloud_Message_Emoticon::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.Cloud.Message.Emoticon.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string packageId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_packageid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.Cloud.Message.Emoticon.packageId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.Cloud.Message.Emoticon.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .AcFunDanmu.Im.Cloud.Message.Emoticon.Type type = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::AcFunDanmu::Im::Cloud_Message_Emoticon_Type>(val));
        } else goto handle_unusual;
        continue;
      // repeated .AcFunDanmu.Im.Cloud.Message.PicUrl bigUrl = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_bigurl(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else goto handle_unusual;
        continue;
      // int32 width = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          width_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 height = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          height_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .AcFunDanmu.Im.Cloud.Message.Emoticon.Code emoticonCOde = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_emoticoncode(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<66>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Cloud_Message_Emoticon::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Cloud.Message.Emoticon)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.Cloud.Message.Emoticon.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string packageId = 2;
  if (this->packageid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_packageid().data(), static_cast<int>(this->_internal_packageid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.Cloud.Message.Emoticon.packageId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_packageid(), target);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.Cloud.Message.Emoticon.name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_name(), target);
  }

  // .AcFunDanmu.Im.Cloud.Message.Emoticon.Type type = 4;
  if (this->type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      4, this->_internal_type(), target);
  }

  // repeated .AcFunDanmu.Im.Cloud.Message.PicUrl bigUrl = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_bigurl_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, this->_internal_bigurl(i), target, stream);
  }

  // int32 width = 6;
  if (this->width() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->_internal_width(), target);
  }

  // int32 height = 7;
  if (this->height() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(7, this->_internal_height(), target);
  }

  // repeated .AcFunDanmu.Im.Cloud.Message.Emoticon.Code emoticonCOde = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_emoticoncode_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(8, this->_internal_emoticoncode(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Cloud.Message.Emoticon)
  return target;
}

size_t Cloud_Message_Emoticon::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Cloud.Message.Emoticon)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .AcFunDanmu.Im.Cloud.Message.PicUrl bigUrl = 5;
  total_size += 1UL * this->_internal_bigurl_size();
  for (const auto& msg : this->bigurl_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .AcFunDanmu.Im.Cloud.Message.Emoticon.Code emoticonCOde = 8;
  total_size += 1UL * this->_internal_emoticoncode_size();
  for (const auto& msg : this->emoticoncode_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string packageId = 2;
  if (this->packageid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_packageid());
  }

  // string name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .AcFunDanmu.Im.Cloud.Message.Emoticon.Type type = 4;
  if (this->type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_type());
  }

  // int32 width = 6;
  if (this->width() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_width());
  }

  // int32 height = 7;
  if (this->height() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_height());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cloud_Message_Emoticon::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Cloud.Message.Emoticon)
  GOOGLE_DCHECK_NE(&from, this);
  const Cloud_Message_Emoticon* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Cloud_Message_Emoticon>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Cloud.Message.Emoticon)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Cloud.Message.Emoticon)
    MergeFrom(*source);
  }
}

void Cloud_Message_Emoticon::MergeFrom(const Cloud_Message_Emoticon& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Cloud.Message.Emoticon)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  bigurl_.MergeFrom(from.bigurl_);
  emoticoncode_.MergeFrom(from.emoticoncode_);
  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.packageid().size() > 0) {
    _internal_set_packageid(from._internal_packageid());
  }
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.type() != 0) {
    _internal_set_type(from._internal_type());
  }
  if (from.width() != 0) {
    _internal_set_width(from._internal_width());
  }
  if (from.height() != 0) {
    _internal_set_height(from._internal_height());
  }
}

void Cloud_Message_Emoticon::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Cloud.Message.Emoticon)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cloud_Message_Emoticon::CopyFrom(const Cloud_Message_Emoticon& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Cloud.Message.Emoticon)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cloud_Message_Emoticon::IsInitialized() const {
  return true;
}

void Cloud_Message_Emoticon::InternalSwap(Cloud_Message_Emoticon* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  bigurl_.InternalSwap(&other->bigurl_);
  emoticoncode_.InternalSwap(&other->emoticoncode_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  packageid_.Swap(&other->packageid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Cloud_Message_Emoticon, height_)
      + sizeof(Cloud_Message_Emoticon::height_)
      - PROTOBUF_FIELD_OFFSET(Cloud_Message_Emoticon, type_)>(
          reinterpret_cast<char*>(&type_),
          reinterpret_cast<char*>(&other->type_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Cloud_Message_Emoticon::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Cloud_Message_File::_Internal {
 public:
};

Cloud_Message_File::Cloud_Message_File(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Cloud.Message.File)
}
Cloud_Message_File::Cloud_Message_File(const Cloud_Message_File& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_uri().empty()) {
    uri_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_uri(), 
      GetArena());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  ext_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_ext().empty()) {
    ext_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_ext(), 
      GetArena());
  }
  extra_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_extra().empty()) {
    extra_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_extra(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Cloud.Message.File)
}

void Cloud_Message_File::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Cloud_Message_File_Im_2eproto.base);
  uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ext_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  extra_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Cloud_Message_File::~Cloud_Message_File() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Cloud.Message.File)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Cloud_Message_File::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  uri_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ext_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  extra_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Cloud_Message_File::ArenaDtor(void* object) {
  Cloud_Message_File* _this = reinterpret_cast< Cloud_Message_File* >(object);
  (void)_this;
}
void Cloud_Message_File::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Cloud_Message_File::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cloud_Message_File& Cloud_Message_File::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Cloud_Message_File_Im_2eproto.base);
  return *internal_default_instance();
}


void Cloud_Message_File::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Cloud.Message.File)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uri_.ClearToEmpty();
  name_.ClearToEmpty();
  ext_.ClearToEmpty();
  extra_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Cloud_Message_File::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string uri = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_uri();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.Cloud.Message.File.uri"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.Cloud.Message.File.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string ext = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_ext();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.Cloud.Message.File.ext"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string extra = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_extra();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.Cloud.Message.File.extra"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Cloud_Message_File::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Cloud.Message.File)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string uri = 1;
  if (this->uri().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_uri().data(), static_cast<int>(this->_internal_uri().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.Cloud.Message.File.uri");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_uri(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.Cloud.Message.File.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // string ext = 3;
  if (this->ext().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_ext().data(), static_cast<int>(this->_internal_ext().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.Cloud.Message.File.ext");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_ext(), target);
  }

  // string extra = 4;
  if (this->extra().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_extra().data(), static_cast<int>(this->_internal_extra().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.Cloud.Message.File.extra");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_extra(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Cloud.Message.File)
  return target;
}

size_t Cloud_Message_File::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Cloud.Message.File)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string uri = 1;
  if (this->uri().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_uri());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string ext = 3;
  if (this->ext().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_ext());
  }

  // string extra = 4;
  if (this->extra().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_extra());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cloud_Message_File::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Cloud.Message.File)
  GOOGLE_DCHECK_NE(&from, this);
  const Cloud_Message_File* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Cloud_Message_File>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Cloud.Message.File)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Cloud.Message.File)
    MergeFrom(*source);
  }
}

void Cloud_Message_File::MergeFrom(const Cloud_Message_File& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Cloud.Message.File)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uri().size() > 0) {
    _internal_set_uri(from._internal_uri());
  }
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.ext().size() > 0) {
    _internal_set_ext(from._internal_ext());
  }
  if (from.extra().size() > 0) {
    _internal_set_extra(from._internal_extra());
  }
}

void Cloud_Message_File::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Cloud.Message.File)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cloud_Message_File::CopyFrom(const Cloud_Message_File& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Cloud.Message.File)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cloud_Message_File::IsInitialized() const {
  return true;
}

void Cloud_Message_File::InternalSwap(Cloud_Message_File* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  uri_.Swap(&other->uri_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ext_.Swap(&other->ext_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  extra_.Swap(&other->extra_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata Cloud_Message_File::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Cloud_Message_Reference_ReferenceMessage::_Internal {
 public:
};

Cloud_Message_Reference_ReferenceMessage::Cloud_Message_Reference_ReferenceMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Cloud.Message.Reference.ReferenceMessage)
}
Cloud_Message_Reference_ReferenceMessage::Cloud_Message_Reference_ReferenceMessage(const Cloud_Message_Reference_ReferenceMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  content_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_content().empty()) {
    content_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_content(), 
      GetArena());
  }
  contenttype_ = from.contenttype_;
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Cloud.Message.Reference.ReferenceMessage)
}

void Cloud_Message_Reference_ReferenceMessage::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Cloud_Message_Reference_ReferenceMessage_Im_2eproto.base);
  content_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  contenttype_ = 0;
}

Cloud_Message_Reference_ReferenceMessage::~Cloud_Message_Reference_ReferenceMessage() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Cloud.Message.Reference.ReferenceMessage)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Cloud_Message_Reference_ReferenceMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  content_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Cloud_Message_Reference_ReferenceMessage::ArenaDtor(void* object) {
  Cloud_Message_Reference_ReferenceMessage* _this = reinterpret_cast< Cloud_Message_Reference_ReferenceMessage* >(object);
  (void)_this;
}
void Cloud_Message_Reference_ReferenceMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Cloud_Message_Reference_ReferenceMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cloud_Message_Reference_ReferenceMessage& Cloud_Message_Reference_ReferenceMessage::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Cloud_Message_Reference_ReferenceMessage_Im_2eproto.base);
  return *internal_default_instance();
}


void Cloud_Message_Reference_ReferenceMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Cloud.Message.Reference.ReferenceMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  content_.ClearToEmpty();
  contenttype_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Cloud_Message_Reference_ReferenceMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 contentType = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          contenttype_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes content = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_content();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Cloud_Message_Reference_ReferenceMessage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Cloud.Message.Reference.ReferenceMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 contentType = 1;
  if (this->contenttype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_contenttype(), target);
  }

  // bytes content = 2;
  if (this->content().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_content(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Cloud.Message.Reference.ReferenceMessage)
  return target;
}

size_t Cloud_Message_Reference_ReferenceMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Cloud.Message.Reference.ReferenceMessage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes content = 2;
  if (this->content().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_content());
  }

  // int32 contentType = 1;
  if (this->contenttype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_contenttype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cloud_Message_Reference_ReferenceMessage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Cloud.Message.Reference.ReferenceMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const Cloud_Message_Reference_ReferenceMessage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Cloud_Message_Reference_ReferenceMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Cloud.Message.Reference.ReferenceMessage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Cloud.Message.Reference.ReferenceMessage)
    MergeFrom(*source);
  }
}

void Cloud_Message_Reference_ReferenceMessage::MergeFrom(const Cloud_Message_Reference_ReferenceMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Cloud.Message.Reference.ReferenceMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.content().size() > 0) {
    _internal_set_content(from._internal_content());
  }
  if (from.contenttype() != 0) {
    _internal_set_contenttype(from._internal_contenttype());
  }
}

void Cloud_Message_Reference_ReferenceMessage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Cloud.Message.Reference.ReferenceMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cloud_Message_Reference_ReferenceMessage::CopyFrom(const Cloud_Message_Reference_ReferenceMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Cloud.Message.Reference.ReferenceMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cloud_Message_Reference_ReferenceMessage::IsInitialized() const {
  return true;
}

void Cloud_Message_Reference_ReferenceMessage::InternalSwap(Cloud_Message_Reference_ReferenceMessage* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  content_.Swap(&other->content_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(contenttype_, other->contenttype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Cloud_Message_Reference_ReferenceMessage::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Cloud_Message_Reference::_Internal {
 public:
  static const ::AcFunDanmu::Im::ImMessage_Message& originmsg(const Cloud_Message_Reference* msg);
  static const ::AcFunDanmu::Im::Cloud_Message_Reference_ReferenceMessage& referencemsg(const Cloud_Message_Reference* msg);
};

const ::AcFunDanmu::Im::ImMessage_Message&
Cloud_Message_Reference::_Internal::originmsg(const Cloud_Message_Reference* msg) {
  return *msg->originmsg_;
}
const ::AcFunDanmu::Im::Cloud_Message_Reference_ReferenceMessage&
Cloud_Message_Reference::_Internal::referencemsg(const Cloud_Message_Reference* msg) {
  return *msg->referencemsg_;
}
Cloud_Message_Reference::Cloud_Message_Reference(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Cloud.Message.Reference)
}
Cloud_Message_Reference::Cloud_Message_Reference(const Cloud_Message_Reference& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_originmsg()) {
    originmsg_ = new ::AcFunDanmu::Im::ImMessage_Message(*from.originmsg_);
  } else {
    originmsg_ = nullptr;
  }
  if (from._internal_has_referencemsg()) {
    referencemsg_ = new ::AcFunDanmu::Im::Cloud_Message_Reference_ReferenceMessage(*from.referencemsg_);
  } else {
    referencemsg_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Cloud.Message.Reference)
}

void Cloud_Message_Reference::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Cloud_Message_Reference_Im_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&originmsg_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&referencemsg_) -
      reinterpret_cast<char*>(&originmsg_)) + sizeof(referencemsg_));
}

Cloud_Message_Reference::~Cloud_Message_Reference() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Cloud.Message.Reference)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Cloud_Message_Reference::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete originmsg_;
  if (this != internal_default_instance()) delete referencemsg_;
}

void Cloud_Message_Reference::ArenaDtor(void* object) {
  Cloud_Message_Reference* _this = reinterpret_cast< Cloud_Message_Reference* >(object);
  (void)_this;
}
void Cloud_Message_Reference::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Cloud_Message_Reference::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cloud_Message_Reference& Cloud_Message_Reference::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Cloud_Message_Reference_Im_2eproto.base);
  return *internal_default_instance();
}


void Cloud_Message_Reference::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Cloud.Message.Reference)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && originmsg_ != nullptr) {
    delete originmsg_;
  }
  originmsg_ = nullptr;
  if (GetArena() == nullptr && referencemsg_ != nullptr) {
    delete referencemsg_;
  }
  referencemsg_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Cloud_Message_Reference::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .AcFunDanmu.Im.ImMessage.Message originMsg = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_originmsg(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .AcFunDanmu.Im.Cloud.Message.Reference.ReferenceMessage referenceMsg = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_referencemsg(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Cloud_Message_Reference::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Cloud.Message.Reference)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .AcFunDanmu.Im.ImMessage.Message originMsg = 1;
  if (this->has_originmsg()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::originmsg(this), target, stream);
  }

  // .AcFunDanmu.Im.Cloud.Message.Reference.ReferenceMessage referenceMsg = 2;
  if (this->has_referencemsg()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::referencemsg(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Cloud.Message.Reference)
  return target;
}

size_t Cloud_Message_Reference::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Cloud.Message.Reference)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .AcFunDanmu.Im.ImMessage.Message originMsg = 1;
  if (this->has_originmsg()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *originmsg_);
  }

  // .AcFunDanmu.Im.Cloud.Message.Reference.ReferenceMessage referenceMsg = 2;
  if (this->has_referencemsg()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *referencemsg_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cloud_Message_Reference::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Cloud.Message.Reference)
  GOOGLE_DCHECK_NE(&from, this);
  const Cloud_Message_Reference* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Cloud_Message_Reference>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Cloud.Message.Reference)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Cloud.Message.Reference)
    MergeFrom(*source);
  }
}

void Cloud_Message_Reference::MergeFrom(const Cloud_Message_Reference& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Cloud.Message.Reference)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_originmsg()) {
    _internal_mutable_originmsg()->::AcFunDanmu::Im::ImMessage_Message::MergeFrom(from._internal_originmsg());
  }
  if (from.has_referencemsg()) {
    _internal_mutable_referencemsg()->::AcFunDanmu::Im::Cloud_Message_Reference_ReferenceMessage::MergeFrom(from._internal_referencemsg());
  }
}

void Cloud_Message_Reference::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Cloud.Message.Reference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cloud_Message_Reference::CopyFrom(const Cloud_Message_Reference& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Cloud.Message.Reference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cloud_Message_Reference::IsInitialized() const {
  return true;
}

void Cloud_Message_Reference::InternalSwap(Cloud_Message_Reference* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Cloud_Message_Reference, referencemsg_)
      + sizeof(Cloud_Message_Reference::referencemsg_)
      - PROTOBUF_FIELD_OFFSET(Cloud_Message_Reference, originmsg_)>(
          reinterpret_cast<char*>(&originmsg_),
          reinterpret_cast<char*>(&other->originmsg_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Cloud_Message_Reference::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Cloud_Message_ForwardMessageContent::_Internal {
 public:
};

Cloud_Message_ForwardMessageContent::Cloud_Message_ForwardMessageContent(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  message_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Cloud.Message.ForwardMessageContent)
}
Cloud_Message_ForwardMessageContent::Cloud_Message_ForwardMessageContent(const Cloud_Message_ForwardMessageContent& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      message_(from.message_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Cloud.Message.ForwardMessageContent)
}

void Cloud_Message_ForwardMessageContent::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Cloud_Message_ForwardMessageContent_Im_2eproto.base);
}

Cloud_Message_ForwardMessageContent::~Cloud_Message_ForwardMessageContent() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Cloud.Message.ForwardMessageContent)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Cloud_Message_ForwardMessageContent::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Cloud_Message_ForwardMessageContent::ArenaDtor(void* object) {
  Cloud_Message_ForwardMessageContent* _this = reinterpret_cast< Cloud_Message_ForwardMessageContent* >(object);
  (void)_this;
}
void Cloud_Message_ForwardMessageContent::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Cloud_Message_ForwardMessageContent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cloud_Message_ForwardMessageContent& Cloud_Message_ForwardMessageContent::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Cloud_Message_ForwardMessageContent_Im_2eproto.base);
  return *internal_default_instance();
}


void Cloud_Message_ForwardMessageContent::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Cloud.Message.ForwardMessageContent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Cloud_Message_ForwardMessageContent::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .AcFunDanmu.Im.ImMessage.Message message = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_message(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Cloud_Message_ForwardMessageContent::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Cloud.Message.ForwardMessageContent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .AcFunDanmu.Im.ImMessage.Message message = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_message_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_message(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Cloud.Message.ForwardMessageContent)
  return target;
}

size_t Cloud_Message_ForwardMessageContent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Cloud.Message.ForwardMessageContent)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .AcFunDanmu.Im.ImMessage.Message message = 1;
  total_size += 1UL * this->_internal_message_size();
  for (const auto& msg : this->message_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cloud_Message_ForwardMessageContent::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Cloud.Message.ForwardMessageContent)
  GOOGLE_DCHECK_NE(&from, this);
  const Cloud_Message_ForwardMessageContent* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Cloud_Message_ForwardMessageContent>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Cloud.Message.ForwardMessageContent)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Cloud.Message.ForwardMessageContent)
    MergeFrom(*source);
  }
}

void Cloud_Message_ForwardMessageContent::MergeFrom(const Cloud_Message_ForwardMessageContent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Cloud.Message.ForwardMessageContent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  message_.MergeFrom(from.message_);
}

void Cloud_Message_ForwardMessageContent::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Cloud.Message.ForwardMessageContent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cloud_Message_ForwardMessageContent::CopyFrom(const Cloud_Message_ForwardMessageContent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Cloud.Message.ForwardMessageContent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cloud_Message_ForwardMessageContent::IsInitialized() const {
  return true;
}

void Cloud_Message_ForwardMessageContent::InternalSwap(Cloud_Message_ForwardMessageContent* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  message_.InternalSwap(&other->message_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Cloud_Message_ForwardMessageContent::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Cloud_Message_NoticePlaceholderMeta::_Internal {
 public:
};

Cloud_Message_NoticePlaceholderMeta::Cloud_Message_NoticePlaceholderMeta(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Cloud.Message.NoticePlaceholderMeta)
}
Cloud_Message_NoticePlaceholderMeta::Cloud_Message_NoticePlaceholderMeta(const Cloud_Message_NoticePlaceholderMeta& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  targetid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_targetid().empty()) {
    targetid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_targetid(), 
      GetArena());
  }
  ::memcpy(&startindex_, &from.startindex_,
    static_cast<size_t>(reinterpret_cast<char*>(&length_) -
    reinterpret_cast<char*>(&startindex_)) + sizeof(length_));
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Cloud.Message.NoticePlaceholderMeta)
}

void Cloud_Message_NoticePlaceholderMeta::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Cloud_Message_NoticePlaceholderMeta_Im_2eproto.base);
  targetid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&startindex_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&length_) -
      reinterpret_cast<char*>(&startindex_)) + sizeof(length_));
}

Cloud_Message_NoticePlaceholderMeta::~Cloud_Message_NoticePlaceholderMeta() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Cloud.Message.NoticePlaceholderMeta)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Cloud_Message_NoticePlaceholderMeta::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  targetid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Cloud_Message_NoticePlaceholderMeta::ArenaDtor(void* object) {
  Cloud_Message_NoticePlaceholderMeta* _this = reinterpret_cast< Cloud_Message_NoticePlaceholderMeta* >(object);
  (void)_this;
}
void Cloud_Message_NoticePlaceholderMeta::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Cloud_Message_NoticePlaceholderMeta::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cloud_Message_NoticePlaceholderMeta& Cloud_Message_NoticePlaceholderMeta::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Cloud_Message_NoticePlaceholderMeta_Im_2eproto.base);
  return *internal_default_instance();
}


void Cloud_Message_NoticePlaceholderMeta::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Cloud.Message.NoticePlaceholderMeta)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  targetid_.ClearToEmpty();
  ::memset(&startindex_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&length_) -
      reinterpret_cast<char*>(&startindex_)) + sizeof(length_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Cloud_Message_NoticePlaceholderMeta::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string targetId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_targetid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.Cloud.Message.NoticePlaceholderMeta.targetId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 startIndex = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          startindex_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 length = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          length_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Cloud_Message_NoticePlaceholderMeta::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Cloud.Message.NoticePlaceholderMeta)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string targetId = 1;
  if (this->targetid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_targetid().data(), static_cast<int>(this->_internal_targetid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.Cloud.Message.NoticePlaceholderMeta.targetId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_targetid(), target);
  }

  // int32 startIndex = 2;
  if (this->startindex() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_startindex(), target);
  }

  // int32 length = 3;
  if (this->length() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_length(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Cloud.Message.NoticePlaceholderMeta)
  return target;
}

size_t Cloud_Message_NoticePlaceholderMeta::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Cloud.Message.NoticePlaceholderMeta)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string targetId = 1;
  if (this->targetid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_targetid());
  }

  // int32 startIndex = 2;
  if (this->startindex() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_startindex());
  }

  // int32 length = 3;
  if (this->length() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_length());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cloud_Message_NoticePlaceholderMeta::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Cloud.Message.NoticePlaceholderMeta)
  GOOGLE_DCHECK_NE(&from, this);
  const Cloud_Message_NoticePlaceholderMeta* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Cloud_Message_NoticePlaceholderMeta>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Cloud.Message.NoticePlaceholderMeta)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Cloud.Message.NoticePlaceholderMeta)
    MergeFrom(*source);
  }
}

void Cloud_Message_NoticePlaceholderMeta::MergeFrom(const Cloud_Message_NoticePlaceholderMeta& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Cloud.Message.NoticePlaceholderMeta)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.targetid().size() > 0) {
    _internal_set_targetid(from._internal_targetid());
  }
  if (from.startindex() != 0) {
    _internal_set_startindex(from._internal_startindex());
  }
  if (from.length() != 0) {
    _internal_set_length(from._internal_length());
  }
}

void Cloud_Message_NoticePlaceholderMeta::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Cloud.Message.NoticePlaceholderMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cloud_Message_NoticePlaceholderMeta::CopyFrom(const Cloud_Message_NoticePlaceholderMeta& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Cloud.Message.NoticePlaceholderMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cloud_Message_NoticePlaceholderMeta::IsInitialized() const {
  return true;
}

void Cloud_Message_NoticePlaceholderMeta::InternalSwap(Cloud_Message_NoticePlaceholderMeta* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  targetid_.Swap(&other->targetid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Cloud_Message_NoticePlaceholderMeta, length_)
      + sizeof(Cloud_Message_NoticePlaceholderMeta::length_)
      - PROTOBUF_FIELD_OFFSET(Cloud_Message_NoticePlaceholderMeta, startindex_)>(
          reinterpret_cast<char*>(&startindex_),
          reinterpret_cast<char*>(&other->startindex_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Cloud_Message_NoticePlaceholderMeta::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Cloud_Message_ImcNoticeMessage::_Internal {
 public:
};

Cloud_Message_ImcNoticeMessage::Cloud_Message_ImcNoticeMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  noticeplaceholdermeta_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Cloud.Message.ImcNoticeMessage)
}
Cloud_Message_ImcNoticeMessage::Cloud_Message_ImcNoticeMessage(const Cloud_Message_ImcNoticeMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      noticeplaceholdermeta_(from.noticeplaceholdermeta_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  text_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_text().empty()) {
    text_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_text(), 
      GetArena());
  }
  noticemetainfo_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_noticemetainfo().empty()) {
    noticemetainfo_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_noticemetainfo(), 
      GetArena());
  }
  noticemetatype_ = from.noticemetatype_;
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Cloud.Message.ImcNoticeMessage)
}

void Cloud_Message_ImcNoticeMessage::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Cloud_Message_ImcNoticeMessage_Im_2eproto.base);
  text_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  noticemetainfo_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  noticemetatype_ = 0;
}

Cloud_Message_ImcNoticeMessage::~Cloud_Message_ImcNoticeMessage() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Cloud.Message.ImcNoticeMessage)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Cloud_Message_ImcNoticeMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  text_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  noticemetainfo_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Cloud_Message_ImcNoticeMessage::ArenaDtor(void* object) {
  Cloud_Message_ImcNoticeMessage* _this = reinterpret_cast< Cloud_Message_ImcNoticeMessage* >(object);
  (void)_this;
}
void Cloud_Message_ImcNoticeMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Cloud_Message_ImcNoticeMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cloud_Message_ImcNoticeMessage& Cloud_Message_ImcNoticeMessage::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Cloud_Message_ImcNoticeMessage_Im_2eproto.base);
  return *internal_default_instance();
}


void Cloud_Message_ImcNoticeMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Cloud.Message.ImcNoticeMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  noticeplaceholdermeta_.Clear();
  text_.ClearToEmpty();
  noticemetainfo_.ClearToEmpty();
  noticemetatype_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Cloud_Message_ImcNoticeMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string text = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_text();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.Cloud.Message.ImcNoticeMessage.text"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .AcFunDanmu.Im.Cloud.Message.NoticePlaceholderMeta noticePlaceholderMeta = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_noticeplaceholdermeta(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // int32 noticeMetaType = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          noticemetatype_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes noticeMetaInfo = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_noticemetainfo();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Cloud_Message_ImcNoticeMessage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Cloud.Message.ImcNoticeMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string text = 1;
  if (this->text().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_text().data(), static_cast<int>(this->_internal_text().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.Cloud.Message.ImcNoticeMessage.text");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_text(), target);
  }

  // repeated .AcFunDanmu.Im.Cloud.Message.NoticePlaceholderMeta noticePlaceholderMeta = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_noticeplaceholdermeta_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_noticeplaceholdermeta(i), target, stream);
  }

  // int32 noticeMetaType = 3;
  if (this->noticemetatype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_noticemetatype(), target);
  }

  // bytes noticeMetaInfo = 4;
  if (this->noticemetainfo().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_noticemetainfo(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Cloud.Message.ImcNoticeMessage)
  return target;
}

size_t Cloud_Message_ImcNoticeMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Cloud.Message.ImcNoticeMessage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .AcFunDanmu.Im.Cloud.Message.NoticePlaceholderMeta noticePlaceholderMeta = 2;
  total_size += 1UL * this->_internal_noticeplaceholdermeta_size();
  for (const auto& msg : this->noticeplaceholdermeta_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string text = 1;
  if (this->text().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_text());
  }

  // bytes noticeMetaInfo = 4;
  if (this->noticemetainfo().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_noticemetainfo());
  }

  // int32 noticeMetaType = 3;
  if (this->noticemetatype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_noticemetatype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cloud_Message_ImcNoticeMessage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Cloud.Message.ImcNoticeMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const Cloud_Message_ImcNoticeMessage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Cloud_Message_ImcNoticeMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Cloud.Message.ImcNoticeMessage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Cloud.Message.ImcNoticeMessage)
    MergeFrom(*source);
  }
}

void Cloud_Message_ImcNoticeMessage::MergeFrom(const Cloud_Message_ImcNoticeMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Cloud.Message.ImcNoticeMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  noticeplaceholdermeta_.MergeFrom(from.noticeplaceholdermeta_);
  if (from.text().size() > 0) {
    _internal_set_text(from._internal_text());
  }
  if (from.noticemetainfo().size() > 0) {
    _internal_set_noticemetainfo(from._internal_noticemetainfo());
  }
  if (from.noticemetatype() != 0) {
    _internal_set_noticemetatype(from._internal_noticemetatype());
  }
}

void Cloud_Message_ImcNoticeMessage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Cloud.Message.ImcNoticeMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cloud_Message_ImcNoticeMessage::CopyFrom(const Cloud_Message_ImcNoticeMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Cloud.Message.ImcNoticeMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cloud_Message_ImcNoticeMessage::IsInitialized() const {
  return true;
}

void Cloud_Message_ImcNoticeMessage::InternalSwap(Cloud_Message_ImcNoticeMessage* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  noticeplaceholdermeta_.InternalSwap(&other->noticeplaceholdermeta_);
  text_.Swap(&other->text_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  noticemetainfo_.Swap(&other->noticemetainfo_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(noticemetatype_, other->noticemetatype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Cloud_Message_ImcNoticeMessage::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Cloud_Message_ConfirmInviteIntoGroupNoticeMetaInfo::_Internal {
 public:
};

Cloud_Message_ConfirmInviteIntoGroupNoticeMetaInfo::Cloud_Message_ConfirmInviteIntoGroupNoticeMetaInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Cloud.Message.ConfirmInviteIntoGroupNoticeMetaInfo)
}
Cloud_Message_ConfirmInviteIntoGroupNoticeMetaInfo::Cloud_Message_ConfirmInviteIntoGroupNoticeMetaInfo(const Cloud_Message_ConfirmInviteIntoGroupNoticeMetaInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  groupid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_groupid().empty()) {
    groupid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_groupid(), 
      GetArena());
  }
  ::memcpy(&requestid_, &from.requestid_,
    static_cast<size_t>(reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&requestid_)) + sizeof(status_));
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Cloud.Message.ConfirmInviteIntoGroupNoticeMetaInfo)
}

void Cloud_Message_ConfirmInviteIntoGroupNoticeMetaInfo::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Cloud_Message_ConfirmInviteIntoGroupNoticeMetaInfo_Im_2eproto.base);
  groupid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&requestid_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&requestid_)) + sizeof(status_));
}

Cloud_Message_ConfirmInviteIntoGroupNoticeMetaInfo::~Cloud_Message_ConfirmInviteIntoGroupNoticeMetaInfo() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Cloud.Message.ConfirmInviteIntoGroupNoticeMetaInfo)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Cloud_Message_ConfirmInviteIntoGroupNoticeMetaInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  groupid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Cloud_Message_ConfirmInviteIntoGroupNoticeMetaInfo::ArenaDtor(void* object) {
  Cloud_Message_ConfirmInviteIntoGroupNoticeMetaInfo* _this = reinterpret_cast< Cloud_Message_ConfirmInviteIntoGroupNoticeMetaInfo* >(object);
  (void)_this;
}
void Cloud_Message_ConfirmInviteIntoGroupNoticeMetaInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Cloud_Message_ConfirmInviteIntoGroupNoticeMetaInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cloud_Message_ConfirmInviteIntoGroupNoticeMetaInfo& Cloud_Message_ConfirmInviteIntoGroupNoticeMetaInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Cloud_Message_ConfirmInviteIntoGroupNoticeMetaInfo_Im_2eproto.base);
  return *internal_default_instance();
}


void Cloud_Message_ConfirmInviteIntoGroupNoticeMetaInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Cloud.Message.ConfirmInviteIntoGroupNoticeMetaInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  groupid_.ClearToEmpty();
  ::memset(&requestid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&requestid_)) + sizeof(status_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Cloud_Message_ConfirmInviteIntoGroupNoticeMetaInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 requestId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          requestid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string groupId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_groupid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.Cloud.Message.ConfirmInviteIntoGroupNoticeMetaInfo.groupId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .AcFunDanmu.Im.Cloud.Message.JoinRequestStatus status = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_status(static_cast<::AcFunDanmu::Im::Cloud_Message_JoinRequestStatus>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Cloud_Message_ConfirmInviteIntoGroupNoticeMetaInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Cloud.Message.ConfirmInviteIntoGroupNoticeMetaInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 requestId = 1;
  if (this->requestid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_requestid(), target);
  }

  // string groupId = 2;
  if (this->groupid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_groupid().data(), static_cast<int>(this->_internal_groupid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.Cloud.Message.ConfirmInviteIntoGroupNoticeMetaInfo.groupId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_groupid(), target);
  }

  // .AcFunDanmu.Im.Cloud.Message.JoinRequestStatus status = 3;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Cloud.Message.ConfirmInviteIntoGroupNoticeMetaInfo)
  return target;
}

size_t Cloud_Message_ConfirmInviteIntoGroupNoticeMetaInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Cloud.Message.ConfirmInviteIntoGroupNoticeMetaInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string groupId = 2;
  if (this->groupid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_groupid());
  }

  // int64 requestId = 1;
  if (this->requestid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_requestid());
  }

  // .AcFunDanmu.Im.Cloud.Message.JoinRequestStatus status = 3;
  if (this->status() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_status());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cloud_Message_ConfirmInviteIntoGroupNoticeMetaInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Cloud.Message.ConfirmInviteIntoGroupNoticeMetaInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const Cloud_Message_ConfirmInviteIntoGroupNoticeMetaInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Cloud_Message_ConfirmInviteIntoGroupNoticeMetaInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Cloud.Message.ConfirmInviteIntoGroupNoticeMetaInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Cloud.Message.ConfirmInviteIntoGroupNoticeMetaInfo)
    MergeFrom(*source);
  }
}

void Cloud_Message_ConfirmInviteIntoGroupNoticeMetaInfo::MergeFrom(const Cloud_Message_ConfirmInviteIntoGroupNoticeMetaInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Cloud.Message.ConfirmInviteIntoGroupNoticeMetaInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.groupid().size() > 0) {
    _internal_set_groupid(from._internal_groupid());
  }
  if (from.requestid() != 0) {
    _internal_set_requestid(from._internal_requestid());
  }
  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void Cloud_Message_ConfirmInviteIntoGroupNoticeMetaInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Cloud.Message.ConfirmInviteIntoGroupNoticeMetaInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cloud_Message_ConfirmInviteIntoGroupNoticeMetaInfo::CopyFrom(const Cloud_Message_ConfirmInviteIntoGroupNoticeMetaInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Cloud.Message.ConfirmInviteIntoGroupNoticeMetaInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cloud_Message_ConfirmInviteIntoGroupNoticeMetaInfo::IsInitialized() const {
  return true;
}

void Cloud_Message_ConfirmInviteIntoGroupNoticeMetaInfo::InternalSwap(Cloud_Message_ConfirmInviteIntoGroupNoticeMetaInfo* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  groupid_.Swap(&other->groupid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Cloud_Message_ConfirmInviteIntoGroupNoticeMetaInfo, status_)
      + sizeof(Cloud_Message_ConfirmInviteIntoGroupNoticeMetaInfo::status_)
      - PROTOBUF_FIELD_OFFSET(Cloud_Message_ConfirmInviteIntoGroupNoticeMetaInfo, requestid_)>(
          reinterpret_cast<char*>(&requestid_),
          reinterpret_cast<char*>(&other->requestid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Cloud_Message_ConfirmInviteIntoGroupNoticeMetaInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Cloud_Message_ConfirmJoinIntoGroupNoticeMetaInfo::_Internal {
 public:
};

Cloud_Message_ConfirmJoinIntoGroupNoticeMetaInfo::Cloud_Message_ConfirmJoinIntoGroupNoticeMetaInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Cloud.Message.ConfirmJoinIntoGroupNoticeMetaInfo)
}
Cloud_Message_ConfirmJoinIntoGroupNoticeMetaInfo::Cloud_Message_ConfirmJoinIntoGroupNoticeMetaInfo(const Cloud_Message_ConfirmJoinIntoGroupNoticeMetaInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  groupid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_groupid().empty()) {
    groupid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_groupid(), 
      GetArena());
  }
  ::memcpy(&requestid_, &from.requestid_,
    static_cast<size_t>(reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&requestid_)) + sizeof(status_));
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Cloud.Message.ConfirmJoinIntoGroupNoticeMetaInfo)
}

void Cloud_Message_ConfirmJoinIntoGroupNoticeMetaInfo::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Cloud_Message_ConfirmJoinIntoGroupNoticeMetaInfo_Im_2eproto.base);
  groupid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&requestid_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&requestid_)) + sizeof(status_));
}

Cloud_Message_ConfirmJoinIntoGroupNoticeMetaInfo::~Cloud_Message_ConfirmJoinIntoGroupNoticeMetaInfo() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Cloud.Message.ConfirmJoinIntoGroupNoticeMetaInfo)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Cloud_Message_ConfirmJoinIntoGroupNoticeMetaInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  groupid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Cloud_Message_ConfirmJoinIntoGroupNoticeMetaInfo::ArenaDtor(void* object) {
  Cloud_Message_ConfirmJoinIntoGroupNoticeMetaInfo* _this = reinterpret_cast< Cloud_Message_ConfirmJoinIntoGroupNoticeMetaInfo* >(object);
  (void)_this;
}
void Cloud_Message_ConfirmJoinIntoGroupNoticeMetaInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Cloud_Message_ConfirmJoinIntoGroupNoticeMetaInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cloud_Message_ConfirmJoinIntoGroupNoticeMetaInfo& Cloud_Message_ConfirmJoinIntoGroupNoticeMetaInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Cloud_Message_ConfirmJoinIntoGroupNoticeMetaInfo_Im_2eproto.base);
  return *internal_default_instance();
}


void Cloud_Message_ConfirmJoinIntoGroupNoticeMetaInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Cloud.Message.ConfirmJoinIntoGroupNoticeMetaInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  groupid_.ClearToEmpty();
  ::memset(&requestid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&requestid_)) + sizeof(status_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Cloud_Message_ConfirmJoinIntoGroupNoticeMetaInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 requestId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          requestid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string groupId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_groupid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.Cloud.Message.ConfirmJoinIntoGroupNoticeMetaInfo.groupId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .AcFunDanmu.Im.Cloud.Message.JoinRequestStatus status = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_status(static_cast<::AcFunDanmu::Im::Cloud_Message_JoinRequestStatus>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Cloud_Message_ConfirmJoinIntoGroupNoticeMetaInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Cloud.Message.ConfirmJoinIntoGroupNoticeMetaInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 requestId = 1;
  if (this->requestid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_requestid(), target);
  }

  // string groupId = 2;
  if (this->groupid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_groupid().data(), static_cast<int>(this->_internal_groupid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.Cloud.Message.ConfirmJoinIntoGroupNoticeMetaInfo.groupId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_groupid(), target);
  }

  // .AcFunDanmu.Im.Cloud.Message.JoinRequestStatus status = 3;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Cloud.Message.ConfirmJoinIntoGroupNoticeMetaInfo)
  return target;
}

size_t Cloud_Message_ConfirmJoinIntoGroupNoticeMetaInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Cloud.Message.ConfirmJoinIntoGroupNoticeMetaInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string groupId = 2;
  if (this->groupid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_groupid());
  }

  // int64 requestId = 1;
  if (this->requestid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_requestid());
  }

  // .AcFunDanmu.Im.Cloud.Message.JoinRequestStatus status = 3;
  if (this->status() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_status());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cloud_Message_ConfirmJoinIntoGroupNoticeMetaInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Cloud.Message.ConfirmJoinIntoGroupNoticeMetaInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const Cloud_Message_ConfirmJoinIntoGroupNoticeMetaInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Cloud_Message_ConfirmJoinIntoGroupNoticeMetaInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Cloud.Message.ConfirmJoinIntoGroupNoticeMetaInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Cloud.Message.ConfirmJoinIntoGroupNoticeMetaInfo)
    MergeFrom(*source);
  }
}

void Cloud_Message_ConfirmJoinIntoGroupNoticeMetaInfo::MergeFrom(const Cloud_Message_ConfirmJoinIntoGroupNoticeMetaInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Cloud.Message.ConfirmJoinIntoGroupNoticeMetaInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.groupid().size() > 0) {
    _internal_set_groupid(from._internal_groupid());
  }
  if (from.requestid() != 0) {
    _internal_set_requestid(from._internal_requestid());
  }
  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void Cloud_Message_ConfirmJoinIntoGroupNoticeMetaInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Cloud.Message.ConfirmJoinIntoGroupNoticeMetaInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cloud_Message_ConfirmJoinIntoGroupNoticeMetaInfo::CopyFrom(const Cloud_Message_ConfirmJoinIntoGroupNoticeMetaInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Cloud.Message.ConfirmJoinIntoGroupNoticeMetaInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cloud_Message_ConfirmJoinIntoGroupNoticeMetaInfo::IsInitialized() const {
  return true;
}

void Cloud_Message_ConfirmJoinIntoGroupNoticeMetaInfo::InternalSwap(Cloud_Message_ConfirmJoinIntoGroupNoticeMetaInfo* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  groupid_.Swap(&other->groupid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Cloud_Message_ConfirmJoinIntoGroupNoticeMetaInfo, status_)
      + sizeof(Cloud_Message_ConfirmJoinIntoGroupNoticeMetaInfo::status_)
      - PROTOBUF_FIELD_OFFSET(Cloud_Message_ConfirmJoinIntoGroupNoticeMetaInfo, requestid_)>(
          reinterpret_cast<char*>(&requestid_),
          reinterpret_cast<char*>(&other->requestid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Cloud_Message_ConfirmJoinIntoGroupNoticeMetaInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Cloud_Message_GroupCreateRequest::_Internal {
 public:
};

Cloud_Message_GroupCreateRequest::Cloud_Message_GroupCreateRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  members_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Cloud.Message.GroupCreateRequest)
}
Cloud_Message_GroupCreateRequest::Cloud_Message_GroupCreateRequest(const Cloud_Message_GroupCreateRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      members_(from.members_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Cloud.Message.GroupCreateRequest)
}

void Cloud_Message_GroupCreateRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Cloud_Message_GroupCreateRequest_Im_2eproto.base);
}

Cloud_Message_GroupCreateRequest::~Cloud_Message_GroupCreateRequest() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Cloud.Message.GroupCreateRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Cloud_Message_GroupCreateRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Cloud_Message_GroupCreateRequest::ArenaDtor(void* object) {
  Cloud_Message_GroupCreateRequest* _this = reinterpret_cast< Cloud_Message_GroupCreateRequest* >(object);
  (void)_this;
}
void Cloud_Message_GroupCreateRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Cloud_Message_GroupCreateRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cloud_Message_GroupCreateRequest& Cloud_Message_GroupCreateRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Cloud_Message_GroupCreateRequest_Im_2eproto.base);
  return *internal_default_instance();
}


void Cloud_Message_GroupCreateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Cloud.Message.GroupCreateRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  members_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Cloud_Message_GroupCreateRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .AcFunDanmu.Im.Basic.User members = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_members(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Cloud_Message_GroupCreateRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Cloud.Message.GroupCreateRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .AcFunDanmu.Im.Basic.User members = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_members_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_members(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Cloud.Message.GroupCreateRequest)
  return target;
}

size_t Cloud_Message_GroupCreateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Cloud.Message.GroupCreateRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .AcFunDanmu.Im.Basic.User members = 1;
  total_size += 1UL * this->_internal_members_size();
  for (const auto& msg : this->members_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cloud_Message_GroupCreateRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Cloud.Message.GroupCreateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const Cloud_Message_GroupCreateRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Cloud_Message_GroupCreateRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Cloud.Message.GroupCreateRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Cloud.Message.GroupCreateRequest)
    MergeFrom(*source);
  }
}

void Cloud_Message_GroupCreateRequest::MergeFrom(const Cloud_Message_GroupCreateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Cloud.Message.GroupCreateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  members_.MergeFrom(from.members_);
}

void Cloud_Message_GroupCreateRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Cloud.Message.GroupCreateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cloud_Message_GroupCreateRequest::CopyFrom(const Cloud_Message_GroupCreateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Cloud.Message.GroupCreateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cloud_Message_GroupCreateRequest::IsInitialized() const {
  return true;
}

void Cloud_Message_GroupCreateRequest::InternalSwap(Cloud_Message_GroupCreateRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  members_.InternalSwap(&other->members_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Cloud_Message_GroupCreateRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Cloud_Message_GroupCreateReponse::_Internal {
 public:
  static const ::AcFunDanmu::Im::Cloud_Message_GroupInfo& groupinfo(const Cloud_Message_GroupCreateReponse* msg);
};

const ::AcFunDanmu::Im::Cloud_Message_GroupInfo&
Cloud_Message_GroupCreateReponse::_Internal::groupinfo(const Cloud_Message_GroupCreateReponse* msg) {
  return *msg->groupinfo_;
}
Cloud_Message_GroupCreateReponse::Cloud_Message_GroupCreateReponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  members_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Cloud.Message.GroupCreateReponse)
}
Cloud_Message_GroupCreateReponse::Cloud_Message_GroupCreateReponse(const Cloud_Message_GroupCreateReponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      members_(from.members_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  groupid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_groupid().empty()) {
    groupid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_groupid(), 
      GetArena());
  }
  if (from._internal_has_groupinfo()) {
    groupinfo_ = new ::AcFunDanmu::Im::Cloud_Message_GroupInfo(*from.groupinfo_);
  } else {
    groupinfo_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Cloud.Message.GroupCreateReponse)
}

void Cloud_Message_GroupCreateReponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Cloud_Message_GroupCreateReponse_Im_2eproto.base);
  groupid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  groupinfo_ = nullptr;
}

Cloud_Message_GroupCreateReponse::~Cloud_Message_GroupCreateReponse() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Cloud.Message.GroupCreateReponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Cloud_Message_GroupCreateReponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  groupid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete groupinfo_;
}

void Cloud_Message_GroupCreateReponse::ArenaDtor(void* object) {
  Cloud_Message_GroupCreateReponse* _this = reinterpret_cast< Cloud_Message_GroupCreateReponse* >(object);
  (void)_this;
}
void Cloud_Message_GroupCreateReponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Cloud_Message_GroupCreateReponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cloud_Message_GroupCreateReponse& Cloud_Message_GroupCreateReponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Cloud_Message_GroupCreateReponse_Im_2eproto.base);
  return *internal_default_instance();
}


void Cloud_Message_GroupCreateReponse::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Cloud.Message.GroupCreateReponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  members_.Clear();
  groupid_.ClearToEmpty();
  if (GetArena() == nullptr && groupinfo_ != nullptr) {
    delete groupinfo_;
  }
  groupinfo_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Cloud_Message_GroupCreateReponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string groupId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_groupid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.Cloud.Message.GroupCreateReponse.groupId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .AcFunDanmu.Im.Cloud.Message.GroupInfo groupInfo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_groupinfo(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .AcFunDanmu.Im.Cloud.Message.GroupMember members = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_members(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Cloud_Message_GroupCreateReponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Cloud.Message.GroupCreateReponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string groupId = 1;
  if (this->groupid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_groupid().data(), static_cast<int>(this->_internal_groupid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.Cloud.Message.GroupCreateReponse.groupId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_groupid(), target);
  }

  // .AcFunDanmu.Im.Cloud.Message.GroupInfo groupInfo = 2;
  if (this->has_groupinfo()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::groupinfo(this), target, stream);
  }

  // repeated .AcFunDanmu.Im.Cloud.Message.GroupMember members = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_members_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_members(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Cloud.Message.GroupCreateReponse)
  return target;
}

size_t Cloud_Message_GroupCreateReponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Cloud.Message.GroupCreateReponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .AcFunDanmu.Im.Cloud.Message.GroupMember members = 3;
  total_size += 1UL * this->_internal_members_size();
  for (const auto& msg : this->members_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string groupId = 1;
  if (this->groupid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_groupid());
  }

  // .AcFunDanmu.Im.Cloud.Message.GroupInfo groupInfo = 2;
  if (this->has_groupinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *groupinfo_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cloud_Message_GroupCreateReponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Cloud.Message.GroupCreateReponse)
  GOOGLE_DCHECK_NE(&from, this);
  const Cloud_Message_GroupCreateReponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Cloud_Message_GroupCreateReponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Cloud.Message.GroupCreateReponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Cloud.Message.GroupCreateReponse)
    MergeFrom(*source);
  }
}

void Cloud_Message_GroupCreateReponse::MergeFrom(const Cloud_Message_GroupCreateReponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Cloud.Message.GroupCreateReponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  members_.MergeFrom(from.members_);
  if (from.groupid().size() > 0) {
    _internal_set_groupid(from._internal_groupid());
  }
  if (from.has_groupinfo()) {
    _internal_mutable_groupinfo()->::AcFunDanmu::Im::Cloud_Message_GroupInfo::MergeFrom(from._internal_groupinfo());
  }
}

void Cloud_Message_GroupCreateReponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Cloud.Message.GroupCreateReponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cloud_Message_GroupCreateReponse::CopyFrom(const Cloud_Message_GroupCreateReponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Cloud.Message.GroupCreateReponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cloud_Message_GroupCreateReponse::IsInitialized() const {
  return true;
}

void Cloud_Message_GroupCreateReponse::InternalSwap(Cloud_Message_GroupCreateReponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  members_.InternalSwap(&other->members_);
  groupid_.Swap(&other->groupid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(groupinfo_, other->groupinfo_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Cloud_Message_GroupCreateReponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Cloud_Message_GroupDeleteRequest::_Internal {
 public:
};

Cloud_Message_GroupDeleteRequest::Cloud_Message_GroupDeleteRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Cloud.Message.GroupDeleteRequest)
}
Cloud_Message_GroupDeleteRequest::Cloud_Message_GroupDeleteRequest(const Cloud_Message_GroupDeleteRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  groupid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_groupid().empty()) {
    groupid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_groupid(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Cloud.Message.GroupDeleteRequest)
}

void Cloud_Message_GroupDeleteRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Cloud_Message_GroupDeleteRequest_Im_2eproto.base);
  groupid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Cloud_Message_GroupDeleteRequest::~Cloud_Message_GroupDeleteRequest() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Cloud.Message.GroupDeleteRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Cloud_Message_GroupDeleteRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  groupid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Cloud_Message_GroupDeleteRequest::ArenaDtor(void* object) {
  Cloud_Message_GroupDeleteRequest* _this = reinterpret_cast< Cloud_Message_GroupDeleteRequest* >(object);
  (void)_this;
}
void Cloud_Message_GroupDeleteRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Cloud_Message_GroupDeleteRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cloud_Message_GroupDeleteRequest& Cloud_Message_GroupDeleteRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Cloud_Message_GroupDeleteRequest_Im_2eproto.base);
  return *internal_default_instance();
}


void Cloud_Message_GroupDeleteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Cloud.Message.GroupDeleteRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  groupid_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Cloud_Message_GroupDeleteRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string groupId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_groupid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.Cloud.Message.GroupDeleteRequest.groupId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Cloud_Message_GroupDeleteRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Cloud.Message.GroupDeleteRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string groupId = 1;
  if (this->groupid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_groupid().data(), static_cast<int>(this->_internal_groupid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.Cloud.Message.GroupDeleteRequest.groupId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_groupid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Cloud.Message.GroupDeleteRequest)
  return target;
}

size_t Cloud_Message_GroupDeleteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Cloud.Message.GroupDeleteRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string groupId = 1;
  if (this->groupid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_groupid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cloud_Message_GroupDeleteRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Cloud.Message.GroupDeleteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const Cloud_Message_GroupDeleteRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Cloud_Message_GroupDeleteRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Cloud.Message.GroupDeleteRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Cloud.Message.GroupDeleteRequest)
    MergeFrom(*source);
  }
}

void Cloud_Message_GroupDeleteRequest::MergeFrom(const Cloud_Message_GroupDeleteRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Cloud.Message.GroupDeleteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.groupid().size() > 0) {
    _internal_set_groupid(from._internal_groupid());
  }
}

void Cloud_Message_GroupDeleteRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Cloud.Message.GroupDeleteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cloud_Message_GroupDeleteRequest::CopyFrom(const Cloud_Message_GroupDeleteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Cloud.Message.GroupDeleteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cloud_Message_GroupDeleteRequest::IsInitialized() const {
  return true;
}

void Cloud_Message_GroupDeleteRequest::InternalSwap(Cloud_Message_GroupDeleteRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  groupid_.Swap(&other->groupid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata Cloud_Message_GroupDeleteRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Cloud_Message_GroupDeleteResponse::_Internal {
 public:
};

Cloud_Message_GroupDeleteResponse::Cloud_Message_GroupDeleteResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Cloud.Message.GroupDeleteResponse)
}
Cloud_Message_GroupDeleteResponse::Cloud_Message_GroupDeleteResponse(const Cloud_Message_GroupDeleteResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Cloud.Message.GroupDeleteResponse)
}

void Cloud_Message_GroupDeleteResponse::SharedCtor() {
}

Cloud_Message_GroupDeleteResponse::~Cloud_Message_GroupDeleteResponse() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Cloud.Message.GroupDeleteResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Cloud_Message_GroupDeleteResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Cloud_Message_GroupDeleteResponse::ArenaDtor(void* object) {
  Cloud_Message_GroupDeleteResponse* _this = reinterpret_cast< Cloud_Message_GroupDeleteResponse* >(object);
  (void)_this;
}
void Cloud_Message_GroupDeleteResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Cloud_Message_GroupDeleteResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cloud_Message_GroupDeleteResponse& Cloud_Message_GroupDeleteResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Cloud_Message_GroupDeleteResponse_Im_2eproto.base);
  return *internal_default_instance();
}


void Cloud_Message_GroupDeleteResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Cloud.Message.GroupDeleteResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Cloud_Message_GroupDeleteResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Cloud_Message_GroupDeleteResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Cloud.Message.GroupDeleteResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Cloud.Message.GroupDeleteResponse)
  return target;
}

size_t Cloud_Message_GroupDeleteResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Cloud.Message.GroupDeleteResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cloud_Message_GroupDeleteResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Cloud.Message.GroupDeleteResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const Cloud_Message_GroupDeleteResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Cloud_Message_GroupDeleteResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Cloud.Message.GroupDeleteResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Cloud.Message.GroupDeleteResponse)
    MergeFrom(*source);
  }
}

void Cloud_Message_GroupDeleteResponse::MergeFrom(const Cloud_Message_GroupDeleteResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Cloud.Message.GroupDeleteResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Cloud_Message_GroupDeleteResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Cloud.Message.GroupDeleteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cloud_Message_GroupDeleteResponse::CopyFrom(const Cloud_Message_GroupDeleteResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Cloud.Message.GroupDeleteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cloud_Message_GroupDeleteResponse::IsInitialized() const {
  return true;
}

void Cloud_Message_GroupDeleteResponse::InternalSwap(Cloud_Message_GroupDeleteResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Cloud_Message_GroupDeleteResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Cloud_Message_GroupInviteRequest::_Internal {
 public:
};

Cloud_Message_GroupInviteRequest::Cloud_Message_GroupInviteRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  members_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Cloud.Message.GroupInviteRequest)
}
Cloud_Message_GroupInviteRequest::Cloud_Message_GroupInviteRequest(const Cloud_Message_GroupInviteRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      members_(from.members_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  groupid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_groupid().empty()) {
    groupid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_groupid(), 
      GetArena());
  }
  desccontent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_desccontent().empty()) {
    desccontent_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_desccontent(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Cloud.Message.GroupInviteRequest)
}

void Cloud_Message_GroupInviteRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Cloud_Message_GroupInviteRequest_Im_2eproto.base);
  groupid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  desccontent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Cloud_Message_GroupInviteRequest::~Cloud_Message_GroupInviteRequest() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Cloud.Message.GroupInviteRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Cloud_Message_GroupInviteRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  groupid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  desccontent_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Cloud_Message_GroupInviteRequest::ArenaDtor(void* object) {
  Cloud_Message_GroupInviteRequest* _this = reinterpret_cast< Cloud_Message_GroupInviteRequest* >(object);
  (void)_this;
}
void Cloud_Message_GroupInviteRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Cloud_Message_GroupInviteRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cloud_Message_GroupInviteRequest& Cloud_Message_GroupInviteRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Cloud_Message_GroupInviteRequest_Im_2eproto.base);
  return *internal_default_instance();
}


void Cloud_Message_GroupInviteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Cloud.Message.GroupInviteRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  members_.Clear();
  groupid_.ClearToEmpty();
  desccontent_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Cloud_Message_GroupInviteRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string groupId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_groupid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.Cloud.Message.GroupInviteRequest.groupId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .AcFunDanmu.Im.Basic.User members = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_members(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // string descContent = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_desccontent();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.Cloud.Message.GroupInviteRequest.descContent"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Cloud_Message_GroupInviteRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Cloud.Message.GroupInviteRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string groupId = 1;
  if (this->groupid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_groupid().data(), static_cast<int>(this->_internal_groupid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.Cloud.Message.GroupInviteRequest.groupId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_groupid(), target);
  }

  // repeated .AcFunDanmu.Im.Basic.User members = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_members_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_members(i), target, stream);
  }

  // string descContent = 3;
  if (this->desccontent().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_desccontent().data(), static_cast<int>(this->_internal_desccontent().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.Cloud.Message.GroupInviteRequest.descContent");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_desccontent(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Cloud.Message.GroupInviteRequest)
  return target;
}

size_t Cloud_Message_GroupInviteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Cloud.Message.GroupInviteRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .AcFunDanmu.Im.Basic.User members = 2;
  total_size += 1UL * this->_internal_members_size();
  for (const auto& msg : this->members_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string groupId = 1;
  if (this->groupid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_groupid());
  }

  // string descContent = 3;
  if (this->desccontent().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_desccontent());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cloud_Message_GroupInviteRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Cloud.Message.GroupInviteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const Cloud_Message_GroupInviteRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Cloud_Message_GroupInviteRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Cloud.Message.GroupInviteRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Cloud.Message.GroupInviteRequest)
    MergeFrom(*source);
  }
}

void Cloud_Message_GroupInviteRequest::MergeFrom(const Cloud_Message_GroupInviteRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Cloud.Message.GroupInviteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  members_.MergeFrom(from.members_);
  if (from.groupid().size() > 0) {
    _internal_set_groupid(from._internal_groupid());
  }
  if (from.desccontent().size() > 0) {
    _internal_set_desccontent(from._internal_desccontent());
  }
}

void Cloud_Message_GroupInviteRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Cloud.Message.GroupInviteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cloud_Message_GroupInviteRequest::CopyFrom(const Cloud_Message_GroupInviteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Cloud.Message.GroupInviteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cloud_Message_GroupInviteRequest::IsInitialized() const {
  return true;
}

void Cloud_Message_GroupInviteRequest::InternalSwap(Cloud_Message_GroupInviteRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  members_.InternalSwap(&other->members_);
  groupid_.Swap(&other->groupid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  desccontent_.Swap(&other->desccontent_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata Cloud_Message_GroupInviteRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Cloud_Message_GroupInvideResponse::_Internal {
 public:
};

Cloud_Message_GroupInvideResponse::Cloud_Message_GroupInvideResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Cloud.Message.GroupInvideResponse)
}
Cloud_Message_GroupInvideResponse::Cloud_Message_GroupInvideResponse(const Cloud_Message_GroupInvideResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  groupid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_groupid().empty()) {
    groupid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_groupid(), 
      GetArena());
  }
  invitestatus_ = from.invitestatus_;
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Cloud.Message.GroupInvideResponse)
}

void Cloud_Message_GroupInvideResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Cloud_Message_GroupInvideResponse_Im_2eproto.base);
  groupid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  invitestatus_ = 0;
}

Cloud_Message_GroupInvideResponse::~Cloud_Message_GroupInvideResponse() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Cloud.Message.GroupInvideResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Cloud_Message_GroupInvideResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  groupid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Cloud_Message_GroupInvideResponse::ArenaDtor(void* object) {
  Cloud_Message_GroupInvideResponse* _this = reinterpret_cast< Cloud_Message_GroupInvideResponse* >(object);
  (void)_this;
}
void Cloud_Message_GroupInvideResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Cloud_Message_GroupInvideResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cloud_Message_GroupInvideResponse& Cloud_Message_GroupInvideResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Cloud_Message_GroupInvideResponse_Im_2eproto.base);
  return *internal_default_instance();
}


void Cloud_Message_GroupInvideResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Cloud.Message.GroupInvideResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  groupid_.ClearToEmpty();
  invitestatus_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Cloud_Message_GroupInvideResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string groupId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_groupid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.Cloud.Message.GroupInvideResponse.groupId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .AcFunDanmu.Im.Cloud.Message.GroupInvideResponse.InviteStatus inviteStatus = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_invitestatus(static_cast<::AcFunDanmu::Im::Cloud_Message_GroupInvideResponse_InviteStatus>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Cloud_Message_GroupInvideResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Cloud.Message.GroupInvideResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string groupId = 1;
  if (this->groupid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_groupid().data(), static_cast<int>(this->_internal_groupid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.Cloud.Message.GroupInvideResponse.groupId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_groupid(), target);
  }

  // .AcFunDanmu.Im.Cloud.Message.GroupInvideResponse.InviteStatus inviteStatus = 2;
  if (this->invitestatus() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_invitestatus(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Cloud.Message.GroupInvideResponse)
  return target;
}

size_t Cloud_Message_GroupInvideResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Cloud.Message.GroupInvideResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string groupId = 1;
  if (this->groupid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_groupid());
  }

  // .AcFunDanmu.Im.Cloud.Message.GroupInvideResponse.InviteStatus inviteStatus = 2;
  if (this->invitestatus() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_invitestatus());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cloud_Message_GroupInvideResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Cloud.Message.GroupInvideResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const Cloud_Message_GroupInvideResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Cloud_Message_GroupInvideResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Cloud.Message.GroupInvideResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Cloud.Message.GroupInvideResponse)
    MergeFrom(*source);
  }
}

void Cloud_Message_GroupInvideResponse::MergeFrom(const Cloud_Message_GroupInvideResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Cloud.Message.GroupInvideResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.groupid().size() > 0) {
    _internal_set_groupid(from._internal_groupid());
  }
  if (from.invitestatus() != 0) {
    _internal_set_invitestatus(from._internal_invitestatus());
  }
}

void Cloud_Message_GroupInvideResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Cloud.Message.GroupInvideResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cloud_Message_GroupInvideResponse::CopyFrom(const Cloud_Message_GroupInvideResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Cloud.Message.GroupInvideResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cloud_Message_GroupInvideResponse::IsInitialized() const {
  return true;
}

void Cloud_Message_GroupInvideResponse::InternalSwap(Cloud_Message_GroupInvideResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  groupid_.Swap(&other->groupid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(invitestatus_, other->invitestatus_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Cloud_Message_GroupInvideResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Cloud_Message_GroupJoinRequest::_Internal {
 public:
  static const ::AcFunDanmu::Im::Basic_User& inviter(const Cloud_Message_GroupJoinRequest* msg);
};

const ::AcFunDanmu::Im::Basic_User&
Cloud_Message_GroupJoinRequest::_Internal::inviter(const Cloud_Message_GroupJoinRequest* msg) {
  return *msg->inviter_;
}
Cloud_Message_GroupJoinRequest::Cloud_Message_GroupJoinRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Cloud.Message.GroupJoinRequest)
}
Cloud_Message_GroupJoinRequest::Cloud_Message_GroupJoinRequest(const Cloud_Message_GroupJoinRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  groupid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_groupid().empty()) {
    groupid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_groupid(), 
      GetArena());
  }
  desccontent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_desccontent().empty()) {
    desccontent_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_desccontent(), 
      GetArena());
  }
  if (from._internal_has_inviter()) {
    inviter_ = new ::AcFunDanmu::Im::Basic_User(*from.inviter_);
  } else {
    inviter_ = nullptr;
  }
  findtype_ = from.findtype_;
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Cloud.Message.GroupJoinRequest)
}

void Cloud_Message_GroupJoinRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Cloud_Message_GroupJoinRequest_Im_2eproto.base);
  groupid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  desccontent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&inviter_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&findtype_) -
      reinterpret_cast<char*>(&inviter_)) + sizeof(findtype_));
}

Cloud_Message_GroupJoinRequest::~Cloud_Message_GroupJoinRequest() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Cloud.Message.GroupJoinRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Cloud_Message_GroupJoinRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  groupid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  desccontent_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete inviter_;
}

void Cloud_Message_GroupJoinRequest::ArenaDtor(void* object) {
  Cloud_Message_GroupJoinRequest* _this = reinterpret_cast< Cloud_Message_GroupJoinRequest* >(object);
  (void)_this;
}
void Cloud_Message_GroupJoinRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Cloud_Message_GroupJoinRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cloud_Message_GroupJoinRequest& Cloud_Message_GroupJoinRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Cloud_Message_GroupJoinRequest_Im_2eproto.base);
  return *internal_default_instance();
}


void Cloud_Message_GroupJoinRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Cloud.Message.GroupJoinRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  groupid_.ClearToEmpty();
  desccontent_.ClearToEmpty();
  if (GetArena() == nullptr && inviter_ != nullptr) {
    delete inviter_;
  }
  inviter_ = nullptr;
  findtype_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Cloud_Message_GroupJoinRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string groupId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_groupid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.Cloud.Message.GroupJoinRequest.groupId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .AcFunDanmu.Im.Basic.User inviter = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_inviter(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string descContent = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_desccontent();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.Cloud.Message.GroupJoinRequest.descContent"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .AcFunDanmu.Im.Cloud.Message.GroupFindType findType = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_findtype(static_cast<::AcFunDanmu::Im::Cloud_Message_GroupFindType>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Cloud_Message_GroupJoinRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Cloud.Message.GroupJoinRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string groupId = 1;
  if (this->groupid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_groupid().data(), static_cast<int>(this->_internal_groupid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.Cloud.Message.GroupJoinRequest.groupId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_groupid(), target);
  }

  // .AcFunDanmu.Im.Basic.User inviter = 2;
  if (this->has_inviter()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::inviter(this), target, stream);
  }

  // string descContent = 3;
  if (this->desccontent().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_desccontent().data(), static_cast<int>(this->_internal_desccontent().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.Cloud.Message.GroupJoinRequest.descContent");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_desccontent(), target);
  }

  // .AcFunDanmu.Im.Cloud.Message.GroupFindType findType = 4;
  if (this->findtype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      4, this->_internal_findtype(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Cloud.Message.GroupJoinRequest)
  return target;
}

size_t Cloud_Message_GroupJoinRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Cloud.Message.GroupJoinRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string groupId = 1;
  if (this->groupid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_groupid());
  }

  // string descContent = 3;
  if (this->desccontent().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_desccontent());
  }

  // .AcFunDanmu.Im.Basic.User inviter = 2;
  if (this->has_inviter()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *inviter_);
  }

  // .AcFunDanmu.Im.Cloud.Message.GroupFindType findType = 4;
  if (this->findtype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_findtype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cloud_Message_GroupJoinRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Cloud.Message.GroupJoinRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const Cloud_Message_GroupJoinRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Cloud_Message_GroupJoinRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Cloud.Message.GroupJoinRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Cloud.Message.GroupJoinRequest)
    MergeFrom(*source);
  }
}

void Cloud_Message_GroupJoinRequest::MergeFrom(const Cloud_Message_GroupJoinRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Cloud.Message.GroupJoinRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.groupid().size() > 0) {
    _internal_set_groupid(from._internal_groupid());
  }
  if (from.desccontent().size() > 0) {
    _internal_set_desccontent(from._internal_desccontent());
  }
  if (from.has_inviter()) {
    _internal_mutable_inviter()->::AcFunDanmu::Im::Basic_User::MergeFrom(from._internal_inviter());
  }
  if (from.findtype() != 0) {
    _internal_set_findtype(from._internal_findtype());
  }
}

void Cloud_Message_GroupJoinRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Cloud.Message.GroupJoinRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cloud_Message_GroupJoinRequest::CopyFrom(const Cloud_Message_GroupJoinRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Cloud.Message.GroupJoinRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cloud_Message_GroupJoinRequest::IsInitialized() const {
  return true;
}

void Cloud_Message_GroupJoinRequest::InternalSwap(Cloud_Message_GroupJoinRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  groupid_.Swap(&other->groupid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  desccontent_.Swap(&other->desccontent_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Cloud_Message_GroupJoinRequest, findtype_)
      + sizeof(Cloud_Message_GroupJoinRequest::findtype_)
      - PROTOBUF_FIELD_OFFSET(Cloud_Message_GroupJoinRequest, inviter_)>(
          reinterpret_cast<char*>(&inviter_),
          reinterpret_cast<char*>(&other->inviter_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Cloud_Message_GroupJoinRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Cloud_Message_GroupJoinResponse::_Internal {
 public:
};

Cloud_Message_GroupJoinResponse::Cloud_Message_GroupJoinResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Cloud.Message.GroupJoinResponse)
}
Cloud_Message_GroupJoinResponse::Cloud_Message_GroupJoinResponse(const Cloud_Message_GroupJoinResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  joinstatus_ = from.joinstatus_;
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Cloud.Message.GroupJoinResponse)
}

void Cloud_Message_GroupJoinResponse::SharedCtor() {
  joinstatus_ = 0;
}

Cloud_Message_GroupJoinResponse::~Cloud_Message_GroupJoinResponse() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Cloud.Message.GroupJoinResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Cloud_Message_GroupJoinResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Cloud_Message_GroupJoinResponse::ArenaDtor(void* object) {
  Cloud_Message_GroupJoinResponse* _this = reinterpret_cast< Cloud_Message_GroupJoinResponse* >(object);
  (void)_this;
}
void Cloud_Message_GroupJoinResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Cloud_Message_GroupJoinResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cloud_Message_GroupJoinResponse& Cloud_Message_GroupJoinResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Cloud_Message_GroupJoinResponse_Im_2eproto.base);
  return *internal_default_instance();
}


void Cloud_Message_GroupJoinResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Cloud.Message.GroupJoinResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  joinstatus_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Cloud_Message_GroupJoinResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .AcFunDanmu.Im.Cloud.Message.GroupJoinResponse.JoinStatus joinStatus = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_joinstatus(static_cast<::AcFunDanmu::Im::Cloud_Message_GroupJoinResponse_JoinStatus>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Cloud_Message_GroupJoinResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Cloud.Message.GroupJoinResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .AcFunDanmu.Im.Cloud.Message.GroupJoinResponse.JoinStatus joinStatus = 1;
  if (this->joinstatus() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_joinstatus(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Cloud.Message.GroupJoinResponse)
  return target;
}

size_t Cloud_Message_GroupJoinResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Cloud.Message.GroupJoinResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .AcFunDanmu.Im.Cloud.Message.GroupJoinResponse.JoinStatus joinStatus = 1;
  if (this->joinstatus() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_joinstatus());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cloud_Message_GroupJoinResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Cloud.Message.GroupJoinResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const Cloud_Message_GroupJoinResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Cloud_Message_GroupJoinResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Cloud.Message.GroupJoinResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Cloud.Message.GroupJoinResponse)
    MergeFrom(*source);
  }
}

void Cloud_Message_GroupJoinResponse::MergeFrom(const Cloud_Message_GroupJoinResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Cloud.Message.GroupJoinResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.joinstatus() != 0) {
    _internal_set_joinstatus(from._internal_joinstatus());
  }
}

void Cloud_Message_GroupJoinResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Cloud.Message.GroupJoinResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cloud_Message_GroupJoinResponse::CopyFrom(const Cloud_Message_GroupJoinResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Cloud.Message.GroupJoinResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cloud_Message_GroupJoinResponse::IsInitialized() const {
  return true;
}

void Cloud_Message_GroupJoinResponse::InternalSwap(Cloud_Message_GroupJoinResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(joinstatus_, other->joinstatus_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Cloud_Message_GroupJoinResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Cloud_Message_GroupJoinRequestAckRequest::_Internal {
 public:
};

Cloud_Message_GroupJoinRequestAckRequest::Cloud_Message_GroupJoinRequestAckRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Cloud.Message.GroupJoinRequestAckRequest)
}
Cloud_Message_GroupJoinRequestAckRequest::Cloud_Message_GroupJoinRequestAckRequest(const Cloud_Message_GroupJoinRequestAckRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  groupid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_groupid().empty()) {
    groupid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_groupid(), 
      GetArena());
  }
  ::memcpy(&reqid_, &from.reqid_,
    static_cast<size_t>(reinterpret_cast<char*>(&groupjoinacktype_) -
    reinterpret_cast<char*>(&reqid_)) + sizeof(groupjoinacktype_));
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Cloud.Message.GroupJoinRequestAckRequest)
}

void Cloud_Message_GroupJoinRequestAckRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Cloud_Message_GroupJoinRequestAckRequest_Im_2eproto.base);
  groupid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&reqid_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&groupjoinacktype_) -
      reinterpret_cast<char*>(&reqid_)) + sizeof(groupjoinacktype_));
}

Cloud_Message_GroupJoinRequestAckRequest::~Cloud_Message_GroupJoinRequestAckRequest() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Cloud.Message.GroupJoinRequestAckRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Cloud_Message_GroupJoinRequestAckRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  groupid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Cloud_Message_GroupJoinRequestAckRequest::ArenaDtor(void* object) {
  Cloud_Message_GroupJoinRequestAckRequest* _this = reinterpret_cast< Cloud_Message_GroupJoinRequestAckRequest* >(object);
  (void)_this;
}
void Cloud_Message_GroupJoinRequestAckRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Cloud_Message_GroupJoinRequestAckRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cloud_Message_GroupJoinRequestAckRequest& Cloud_Message_GroupJoinRequestAckRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Cloud_Message_GroupJoinRequestAckRequest_Im_2eproto.base);
  return *internal_default_instance();
}


void Cloud_Message_GroupJoinRequestAckRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Cloud.Message.GroupJoinRequestAckRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  groupid_.ClearToEmpty();
  ::memset(&reqid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&groupjoinacktype_) -
      reinterpret_cast<char*>(&reqid_)) + sizeof(groupjoinacktype_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Cloud_Message_GroupJoinRequestAckRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 reqId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          reqid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string groupId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_groupid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.Cloud.Message.GroupJoinRequestAckRequest.groupId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .AcFunDanmu.Im.Cloud.Message.GroupJoinRequestAckRequest.GroupJoinAckType groupJoinAckType = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_groupjoinacktype(static_cast<::AcFunDanmu::Im::Cloud_Message_GroupJoinRequestAckRequest_GroupJoinAckType>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Cloud_Message_GroupJoinRequestAckRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Cloud.Message.GroupJoinRequestAckRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 reqId = 1;
  if (this->reqid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_reqid(), target);
  }

  // string groupId = 2;
  if (this->groupid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_groupid().data(), static_cast<int>(this->_internal_groupid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.Cloud.Message.GroupJoinRequestAckRequest.groupId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_groupid(), target);
  }

  // .AcFunDanmu.Im.Cloud.Message.GroupJoinRequestAckRequest.GroupJoinAckType groupJoinAckType = 3;
  if (this->groupjoinacktype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->_internal_groupjoinacktype(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Cloud.Message.GroupJoinRequestAckRequest)
  return target;
}

size_t Cloud_Message_GroupJoinRequestAckRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Cloud.Message.GroupJoinRequestAckRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string groupId = 2;
  if (this->groupid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_groupid());
  }

  // int64 reqId = 1;
  if (this->reqid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_reqid());
  }

  // .AcFunDanmu.Im.Cloud.Message.GroupJoinRequestAckRequest.GroupJoinAckType groupJoinAckType = 3;
  if (this->groupjoinacktype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_groupjoinacktype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cloud_Message_GroupJoinRequestAckRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Cloud.Message.GroupJoinRequestAckRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const Cloud_Message_GroupJoinRequestAckRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Cloud_Message_GroupJoinRequestAckRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Cloud.Message.GroupJoinRequestAckRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Cloud.Message.GroupJoinRequestAckRequest)
    MergeFrom(*source);
  }
}

void Cloud_Message_GroupJoinRequestAckRequest::MergeFrom(const Cloud_Message_GroupJoinRequestAckRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Cloud.Message.GroupJoinRequestAckRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.groupid().size() > 0) {
    _internal_set_groupid(from._internal_groupid());
  }
  if (from.reqid() != 0) {
    _internal_set_reqid(from._internal_reqid());
  }
  if (from.groupjoinacktype() != 0) {
    _internal_set_groupjoinacktype(from._internal_groupjoinacktype());
  }
}

void Cloud_Message_GroupJoinRequestAckRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Cloud.Message.GroupJoinRequestAckRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cloud_Message_GroupJoinRequestAckRequest::CopyFrom(const Cloud_Message_GroupJoinRequestAckRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Cloud.Message.GroupJoinRequestAckRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cloud_Message_GroupJoinRequestAckRequest::IsInitialized() const {
  return true;
}

void Cloud_Message_GroupJoinRequestAckRequest::InternalSwap(Cloud_Message_GroupJoinRequestAckRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  groupid_.Swap(&other->groupid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Cloud_Message_GroupJoinRequestAckRequest, groupjoinacktype_)
      + sizeof(Cloud_Message_GroupJoinRequestAckRequest::groupjoinacktype_)
      - PROTOBUF_FIELD_OFFSET(Cloud_Message_GroupJoinRequestAckRequest, reqid_)>(
          reinterpret_cast<char*>(&reqid_),
          reinterpret_cast<char*>(&other->reqid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Cloud_Message_GroupJoinRequestAckRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Cloud_Message_GroupJoinRequestAckResponse::_Internal {
 public:
};

Cloud_Message_GroupJoinRequestAckResponse::Cloud_Message_GroupJoinRequestAckResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Cloud.Message.GroupJoinRequestAckResponse)
}
Cloud_Message_GroupJoinRequestAckResponse::Cloud_Message_GroupJoinRequestAckResponse(const Cloud_Message_GroupJoinRequestAckResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Cloud.Message.GroupJoinRequestAckResponse)
}

void Cloud_Message_GroupJoinRequestAckResponse::SharedCtor() {
}

Cloud_Message_GroupJoinRequestAckResponse::~Cloud_Message_GroupJoinRequestAckResponse() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Cloud.Message.GroupJoinRequestAckResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Cloud_Message_GroupJoinRequestAckResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Cloud_Message_GroupJoinRequestAckResponse::ArenaDtor(void* object) {
  Cloud_Message_GroupJoinRequestAckResponse* _this = reinterpret_cast< Cloud_Message_GroupJoinRequestAckResponse* >(object);
  (void)_this;
}
void Cloud_Message_GroupJoinRequestAckResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Cloud_Message_GroupJoinRequestAckResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cloud_Message_GroupJoinRequestAckResponse& Cloud_Message_GroupJoinRequestAckResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Cloud_Message_GroupJoinRequestAckResponse_Im_2eproto.base);
  return *internal_default_instance();
}


void Cloud_Message_GroupJoinRequestAckResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Cloud.Message.GroupJoinRequestAckResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Cloud_Message_GroupJoinRequestAckResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Cloud_Message_GroupJoinRequestAckResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Cloud.Message.GroupJoinRequestAckResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Cloud.Message.GroupJoinRequestAckResponse)
  return target;
}

size_t Cloud_Message_GroupJoinRequestAckResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Cloud.Message.GroupJoinRequestAckResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cloud_Message_GroupJoinRequestAckResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Cloud.Message.GroupJoinRequestAckResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const Cloud_Message_GroupJoinRequestAckResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Cloud_Message_GroupJoinRequestAckResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Cloud.Message.GroupJoinRequestAckResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Cloud.Message.GroupJoinRequestAckResponse)
    MergeFrom(*source);
  }
}

void Cloud_Message_GroupJoinRequestAckResponse::MergeFrom(const Cloud_Message_GroupJoinRequestAckResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Cloud.Message.GroupJoinRequestAckResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Cloud_Message_GroupJoinRequestAckResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Cloud.Message.GroupJoinRequestAckResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cloud_Message_GroupJoinRequestAckResponse::CopyFrom(const Cloud_Message_GroupJoinRequestAckResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Cloud.Message.GroupJoinRequestAckResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cloud_Message_GroupJoinRequestAckResponse::IsInitialized() const {
  return true;
}

void Cloud_Message_GroupJoinRequestAckResponse::InternalSwap(Cloud_Message_GroupJoinRequestAckResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Cloud_Message_GroupJoinRequestAckResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Cloud_Message_GroupJoinRequestGetRequest::_Internal {
 public:
};

Cloud_Message_GroupJoinRequestGetRequest::Cloud_Message_GroupJoinRequestGetRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Cloud.Message.GroupJoinRequestGetRequest)
}
Cloud_Message_GroupJoinRequestGetRequest::Cloud_Message_GroupJoinRequestGetRequest(const Cloud_Message_GroupJoinRequestGetRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  groupid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_groupid().empty()) {
    groupid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_groupid(), 
      GetArena());
  }
  reqseq_ = from.reqseq_;
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Cloud.Message.GroupJoinRequestGetRequest)
}

void Cloud_Message_GroupJoinRequestGetRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Cloud_Message_GroupJoinRequestGetRequest_Im_2eproto.base);
  groupid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  reqseq_ = PROTOBUF_LONGLONG(0);
}

Cloud_Message_GroupJoinRequestGetRequest::~Cloud_Message_GroupJoinRequestGetRequest() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Cloud.Message.GroupJoinRequestGetRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Cloud_Message_GroupJoinRequestGetRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  groupid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Cloud_Message_GroupJoinRequestGetRequest::ArenaDtor(void* object) {
  Cloud_Message_GroupJoinRequestGetRequest* _this = reinterpret_cast< Cloud_Message_GroupJoinRequestGetRequest* >(object);
  (void)_this;
}
void Cloud_Message_GroupJoinRequestGetRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Cloud_Message_GroupJoinRequestGetRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cloud_Message_GroupJoinRequestGetRequest& Cloud_Message_GroupJoinRequestGetRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Cloud_Message_GroupJoinRequestGetRequest_Im_2eproto.base);
  return *internal_default_instance();
}


void Cloud_Message_GroupJoinRequestGetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Cloud.Message.GroupJoinRequestGetRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  groupid_.ClearToEmpty();
  reqseq_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Cloud_Message_GroupJoinRequestGetRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 reqSeq = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          reqseq_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string groupId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_groupid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.Cloud.Message.GroupJoinRequestGetRequest.groupId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Cloud_Message_GroupJoinRequestGetRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Cloud.Message.GroupJoinRequestGetRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 reqSeq = 1;
  if (this->reqseq() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_reqseq(), target);
  }

  // string groupId = 2;
  if (this->groupid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_groupid().data(), static_cast<int>(this->_internal_groupid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.Cloud.Message.GroupJoinRequestGetRequest.groupId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_groupid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Cloud.Message.GroupJoinRequestGetRequest)
  return target;
}

size_t Cloud_Message_GroupJoinRequestGetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Cloud.Message.GroupJoinRequestGetRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string groupId = 2;
  if (this->groupid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_groupid());
  }

  // int64 reqSeq = 1;
  if (this->reqseq() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_reqseq());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cloud_Message_GroupJoinRequestGetRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Cloud.Message.GroupJoinRequestGetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const Cloud_Message_GroupJoinRequestGetRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Cloud_Message_GroupJoinRequestGetRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Cloud.Message.GroupJoinRequestGetRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Cloud.Message.GroupJoinRequestGetRequest)
    MergeFrom(*source);
  }
}

void Cloud_Message_GroupJoinRequestGetRequest::MergeFrom(const Cloud_Message_GroupJoinRequestGetRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Cloud.Message.GroupJoinRequestGetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.groupid().size() > 0) {
    _internal_set_groupid(from._internal_groupid());
  }
  if (from.reqseq() != 0) {
    _internal_set_reqseq(from._internal_reqseq());
  }
}

void Cloud_Message_GroupJoinRequestGetRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Cloud.Message.GroupJoinRequestGetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cloud_Message_GroupJoinRequestGetRequest::CopyFrom(const Cloud_Message_GroupJoinRequestGetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Cloud.Message.GroupJoinRequestGetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cloud_Message_GroupJoinRequestGetRequest::IsInitialized() const {
  return true;
}

void Cloud_Message_GroupJoinRequestGetRequest::InternalSwap(Cloud_Message_GroupJoinRequestGetRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  groupid_.Swap(&other->groupid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(reqseq_, other->reqseq_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Cloud_Message_GroupJoinRequestGetRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Cloud_Message_GroupJoinRequestGetResponse::_Internal {
 public:
  static const ::AcFunDanmu::Im::Basic_User& inviter(const Cloud_Message_GroupJoinRequestGetResponse* msg);
};

const ::AcFunDanmu::Im::Basic_User&
Cloud_Message_GroupJoinRequestGetResponse::_Internal::inviter(const Cloud_Message_GroupJoinRequestGetResponse* msg) {
  return *msg->inviter_;
}
Cloud_Message_GroupJoinRequestGetResponse::Cloud_Message_GroupJoinRequestGetResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  invitees_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Cloud.Message.GroupJoinRequestGetResponse)
}
Cloud_Message_GroupJoinRequestGetResponse::Cloud_Message_GroupJoinRequestGetResponse(const Cloud_Message_GroupJoinRequestGetResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      invitees_(from.invitees_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  groupid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_groupid().empty()) {
    groupid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_groupid(), 
      GetArena());
  }
  desccontent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_desccontent().empty()) {
    desccontent_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_desccontent(), 
      GetArena());
  }
  if (from._internal_has_inviter()) {
    inviter_ = new ::AcFunDanmu::Im::Basic_User(*from.inviter_);
  } else {
    inviter_ = nullptr;
  }
  ::memcpy(&findway_, &from.findway_,
    static_cast<size_t>(reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&findway_)) + sizeof(status_));
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Cloud.Message.GroupJoinRequestGetResponse)
}

void Cloud_Message_GroupJoinRequestGetResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Cloud_Message_GroupJoinRequestGetResponse_Im_2eproto.base);
  groupid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  desccontent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&inviter_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&inviter_)) + sizeof(status_));
}

Cloud_Message_GroupJoinRequestGetResponse::~Cloud_Message_GroupJoinRequestGetResponse() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Cloud.Message.GroupJoinRequestGetResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Cloud_Message_GroupJoinRequestGetResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  groupid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  desccontent_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete inviter_;
}

void Cloud_Message_GroupJoinRequestGetResponse::ArenaDtor(void* object) {
  Cloud_Message_GroupJoinRequestGetResponse* _this = reinterpret_cast< Cloud_Message_GroupJoinRequestGetResponse* >(object);
  (void)_this;
}
void Cloud_Message_GroupJoinRequestGetResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Cloud_Message_GroupJoinRequestGetResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cloud_Message_GroupJoinRequestGetResponse& Cloud_Message_GroupJoinRequestGetResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Cloud_Message_GroupJoinRequestGetResponse_Im_2eproto.base);
  return *internal_default_instance();
}


void Cloud_Message_GroupJoinRequestGetResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Cloud.Message.GroupJoinRequestGetResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  invitees_.Clear();
  groupid_.ClearToEmpty();
  desccontent_.ClearToEmpty();
  if (GetArena() == nullptr && inviter_ != nullptr) {
    delete inviter_;
  }
  inviter_ = nullptr;
  ::memset(&findway_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&findway_)) + sizeof(status_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Cloud_Message_GroupJoinRequestGetResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string groupId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_groupid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.Cloud.Message.GroupJoinRequestGetResponse.groupId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .AcFunDanmu.Im.Basic.User inviter = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_inviter(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .AcFunDanmu.Im.Basic.User invitees = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_invitees(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      // .AcFunDanmu.Im.Cloud.Message.GroupFindType findWay = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_findway(static_cast<::AcFunDanmu::Im::Cloud_Message_GroupFindType>(val));
        } else goto handle_unusual;
        continue;
      // string descContent = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_desccontent();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.Cloud.Message.GroupJoinRequestGetResponse.descContent"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .AcFunDanmu.Im.Cloud.Message.JoinRequestStatus status = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_status(static_cast<::AcFunDanmu::Im::Cloud_Message_JoinRequestStatus>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Cloud_Message_GroupJoinRequestGetResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Cloud.Message.GroupJoinRequestGetResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string groupId = 1;
  if (this->groupid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_groupid().data(), static_cast<int>(this->_internal_groupid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.Cloud.Message.GroupJoinRequestGetResponse.groupId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_groupid(), target);
  }

  // .AcFunDanmu.Im.Basic.User inviter = 2;
  if (this->has_inviter()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::inviter(this), target, stream);
  }

  // repeated .AcFunDanmu.Im.Basic.User invitees = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_invitees_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_invitees(i), target, stream);
  }

  // .AcFunDanmu.Im.Cloud.Message.GroupFindType findWay = 4;
  if (this->findway() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      4, this->_internal_findway(), target);
  }

  // string descContent = 5;
  if (this->desccontent().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_desccontent().data(), static_cast<int>(this->_internal_desccontent().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.Cloud.Message.GroupJoinRequestGetResponse.descContent");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_desccontent(), target);
  }

  // .AcFunDanmu.Im.Cloud.Message.JoinRequestStatus status = 6;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      6, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Cloud.Message.GroupJoinRequestGetResponse)
  return target;
}

size_t Cloud_Message_GroupJoinRequestGetResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Cloud.Message.GroupJoinRequestGetResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .AcFunDanmu.Im.Basic.User invitees = 3;
  total_size += 1UL * this->_internal_invitees_size();
  for (const auto& msg : this->invitees_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string groupId = 1;
  if (this->groupid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_groupid());
  }

  // string descContent = 5;
  if (this->desccontent().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_desccontent());
  }

  // .AcFunDanmu.Im.Basic.User inviter = 2;
  if (this->has_inviter()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *inviter_);
  }

  // .AcFunDanmu.Im.Cloud.Message.GroupFindType findWay = 4;
  if (this->findway() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_findway());
  }

  // .AcFunDanmu.Im.Cloud.Message.JoinRequestStatus status = 6;
  if (this->status() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_status());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cloud_Message_GroupJoinRequestGetResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Cloud.Message.GroupJoinRequestGetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const Cloud_Message_GroupJoinRequestGetResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Cloud_Message_GroupJoinRequestGetResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Cloud.Message.GroupJoinRequestGetResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Cloud.Message.GroupJoinRequestGetResponse)
    MergeFrom(*source);
  }
}

void Cloud_Message_GroupJoinRequestGetResponse::MergeFrom(const Cloud_Message_GroupJoinRequestGetResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Cloud.Message.GroupJoinRequestGetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  invitees_.MergeFrom(from.invitees_);
  if (from.groupid().size() > 0) {
    _internal_set_groupid(from._internal_groupid());
  }
  if (from.desccontent().size() > 0) {
    _internal_set_desccontent(from._internal_desccontent());
  }
  if (from.has_inviter()) {
    _internal_mutable_inviter()->::AcFunDanmu::Im::Basic_User::MergeFrom(from._internal_inviter());
  }
  if (from.findway() != 0) {
    _internal_set_findway(from._internal_findway());
  }
  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void Cloud_Message_GroupJoinRequestGetResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Cloud.Message.GroupJoinRequestGetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cloud_Message_GroupJoinRequestGetResponse::CopyFrom(const Cloud_Message_GroupJoinRequestGetResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Cloud.Message.GroupJoinRequestGetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cloud_Message_GroupJoinRequestGetResponse::IsInitialized() const {
  return true;
}

void Cloud_Message_GroupJoinRequestGetResponse::InternalSwap(Cloud_Message_GroupJoinRequestGetResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  invitees_.InternalSwap(&other->invitees_);
  groupid_.Swap(&other->groupid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  desccontent_.Swap(&other->desccontent_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Cloud_Message_GroupJoinRequestGetResponse, status_)
      + sizeof(Cloud_Message_GroupJoinRequestGetResponse::status_)
      - PROTOBUF_FIELD_OFFSET(Cloud_Message_GroupJoinRequestGetResponse, inviter_)>(
          reinterpret_cast<char*>(&inviter_),
          reinterpret_cast<char*>(&other->inviter_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Cloud_Message_GroupJoinRequestGetResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Cloud_Message_GroupJoinRequestCancelRequest::_Internal {
 public:
};

Cloud_Message_GroupJoinRequestCancelRequest::Cloud_Message_GroupJoinRequestCancelRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Cloud.Message.GroupJoinRequestCancelRequest)
}
Cloud_Message_GroupJoinRequestCancelRequest::Cloud_Message_GroupJoinRequestCancelRequest(const Cloud_Message_GroupJoinRequestCancelRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  groupid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_groupid().empty()) {
    groupid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_groupid(), 
      GetArena());
  }
  reqseq_ = from.reqseq_;
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Cloud.Message.GroupJoinRequestCancelRequest)
}

void Cloud_Message_GroupJoinRequestCancelRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Cloud_Message_GroupJoinRequestCancelRequest_Im_2eproto.base);
  groupid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  reqseq_ = PROTOBUF_LONGLONG(0);
}

Cloud_Message_GroupJoinRequestCancelRequest::~Cloud_Message_GroupJoinRequestCancelRequest() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Cloud.Message.GroupJoinRequestCancelRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Cloud_Message_GroupJoinRequestCancelRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  groupid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Cloud_Message_GroupJoinRequestCancelRequest::ArenaDtor(void* object) {
  Cloud_Message_GroupJoinRequestCancelRequest* _this = reinterpret_cast< Cloud_Message_GroupJoinRequestCancelRequest* >(object);
  (void)_this;
}
void Cloud_Message_GroupJoinRequestCancelRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Cloud_Message_GroupJoinRequestCancelRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cloud_Message_GroupJoinRequestCancelRequest& Cloud_Message_GroupJoinRequestCancelRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Cloud_Message_GroupJoinRequestCancelRequest_Im_2eproto.base);
  return *internal_default_instance();
}


void Cloud_Message_GroupJoinRequestCancelRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Cloud.Message.GroupJoinRequestCancelRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  groupid_.ClearToEmpty();
  reqseq_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Cloud_Message_GroupJoinRequestCancelRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 reqSeq = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          reqseq_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string groupId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_groupid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.Cloud.Message.GroupJoinRequestCancelRequest.groupId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Cloud_Message_GroupJoinRequestCancelRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Cloud.Message.GroupJoinRequestCancelRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 reqSeq = 1;
  if (this->reqseq() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_reqseq(), target);
  }

  // string groupId = 2;
  if (this->groupid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_groupid().data(), static_cast<int>(this->_internal_groupid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.Cloud.Message.GroupJoinRequestCancelRequest.groupId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_groupid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Cloud.Message.GroupJoinRequestCancelRequest)
  return target;
}

size_t Cloud_Message_GroupJoinRequestCancelRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Cloud.Message.GroupJoinRequestCancelRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string groupId = 2;
  if (this->groupid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_groupid());
  }

  // int64 reqSeq = 1;
  if (this->reqseq() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_reqseq());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cloud_Message_GroupJoinRequestCancelRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Cloud.Message.GroupJoinRequestCancelRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const Cloud_Message_GroupJoinRequestCancelRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Cloud_Message_GroupJoinRequestCancelRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Cloud.Message.GroupJoinRequestCancelRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Cloud.Message.GroupJoinRequestCancelRequest)
    MergeFrom(*source);
  }
}

void Cloud_Message_GroupJoinRequestCancelRequest::MergeFrom(const Cloud_Message_GroupJoinRequestCancelRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Cloud.Message.GroupJoinRequestCancelRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.groupid().size() > 0) {
    _internal_set_groupid(from._internal_groupid());
  }
  if (from.reqseq() != 0) {
    _internal_set_reqseq(from._internal_reqseq());
  }
}

void Cloud_Message_GroupJoinRequestCancelRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Cloud.Message.GroupJoinRequestCancelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cloud_Message_GroupJoinRequestCancelRequest::CopyFrom(const Cloud_Message_GroupJoinRequestCancelRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Cloud.Message.GroupJoinRequestCancelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cloud_Message_GroupJoinRequestCancelRequest::IsInitialized() const {
  return true;
}

void Cloud_Message_GroupJoinRequestCancelRequest::InternalSwap(Cloud_Message_GroupJoinRequestCancelRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  groupid_.Swap(&other->groupid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(reqseq_, other->reqseq_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Cloud_Message_GroupJoinRequestCancelRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Cloud_Message_GroupJoinRequestCancelResposne::_Internal {
 public:
  static const ::AcFunDanmu::Im::Basic_User& inviter(const Cloud_Message_GroupJoinRequestCancelResposne* msg);
};

const ::AcFunDanmu::Im::Basic_User&
Cloud_Message_GroupJoinRequestCancelResposne::_Internal::inviter(const Cloud_Message_GroupJoinRequestCancelResposne* msg) {
  return *msg->inviter_;
}
Cloud_Message_GroupJoinRequestCancelResposne::Cloud_Message_GroupJoinRequestCancelResposne(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  invitees_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Cloud.Message.GroupJoinRequestCancelResposne)
}
Cloud_Message_GroupJoinRequestCancelResposne::Cloud_Message_GroupJoinRequestCancelResposne(const Cloud_Message_GroupJoinRequestCancelResposne& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      invitees_(from.invitees_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  groupid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_groupid().empty()) {
    groupid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_groupid(), 
      GetArena());
  }
  desccontent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_desccontent().empty()) {
    desccontent_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_desccontent(), 
      GetArena());
  }
  if (from._internal_has_inviter()) {
    inviter_ = new ::AcFunDanmu::Im::Basic_User(*from.inviter_);
  } else {
    inviter_ = nullptr;
  }
  ::memcpy(&findway_, &from.findway_,
    static_cast<size_t>(reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&findway_)) + sizeof(status_));
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Cloud.Message.GroupJoinRequestCancelResposne)
}

void Cloud_Message_GroupJoinRequestCancelResposne::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Cloud_Message_GroupJoinRequestCancelResposne_Im_2eproto.base);
  groupid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  desccontent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&inviter_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&inviter_)) + sizeof(status_));
}

Cloud_Message_GroupJoinRequestCancelResposne::~Cloud_Message_GroupJoinRequestCancelResposne() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Cloud.Message.GroupJoinRequestCancelResposne)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Cloud_Message_GroupJoinRequestCancelResposne::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  groupid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  desccontent_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete inviter_;
}

void Cloud_Message_GroupJoinRequestCancelResposne::ArenaDtor(void* object) {
  Cloud_Message_GroupJoinRequestCancelResposne* _this = reinterpret_cast< Cloud_Message_GroupJoinRequestCancelResposne* >(object);
  (void)_this;
}
void Cloud_Message_GroupJoinRequestCancelResposne::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Cloud_Message_GroupJoinRequestCancelResposne::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cloud_Message_GroupJoinRequestCancelResposne& Cloud_Message_GroupJoinRequestCancelResposne::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Cloud_Message_GroupJoinRequestCancelResposne_Im_2eproto.base);
  return *internal_default_instance();
}


void Cloud_Message_GroupJoinRequestCancelResposne::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Cloud.Message.GroupJoinRequestCancelResposne)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  invitees_.Clear();
  groupid_.ClearToEmpty();
  desccontent_.ClearToEmpty();
  if (GetArena() == nullptr && inviter_ != nullptr) {
    delete inviter_;
  }
  inviter_ = nullptr;
  ::memset(&findway_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&findway_)) + sizeof(status_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Cloud_Message_GroupJoinRequestCancelResposne::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string groupId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_groupid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.Cloud.Message.GroupJoinRequestCancelResposne.groupId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .AcFunDanmu.Im.Basic.User inviter = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_inviter(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .AcFunDanmu.Im.Basic.User invitees = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_invitees(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      // .AcFunDanmu.Im.Cloud.Message.GroupFindType findWay = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_findway(static_cast<::AcFunDanmu::Im::Cloud_Message_GroupFindType>(val));
        } else goto handle_unusual;
        continue;
      // string descContent = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_desccontent();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.Cloud.Message.GroupJoinRequestCancelResposne.descContent"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .AcFunDanmu.Im.Cloud.Message.JoinRequestStatus status = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_status(static_cast<::AcFunDanmu::Im::Cloud_Message_JoinRequestStatus>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Cloud_Message_GroupJoinRequestCancelResposne::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Cloud.Message.GroupJoinRequestCancelResposne)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string groupId = 1;
  if (this->groupid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_groupid().data(), static_cast<int>(this->_internal_groupid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.Cloud.Message.GroupJoinRequestCancelResposne.groupId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_groupid(), target);
  }

  // .AcFunDanmu.Im.Basic.User inviter = 2;
  if (this->has_inviter()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::inviter(this), target, stream);
  }

  // repeated .AcFunDanmu.Im.Basic.User invitees = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_invitees_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_invitees(i), target, stream);
  }

  // .AcFunDanmu.Im.Cloud.Message.GroupFindType findWay = 4;
  if (this->findway() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      4, this->_internal_findway(), target);
  }

  // string descContent = 5;
  if (this->desccontent().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_desccontent().data(), static_cast<int>(this->_internal_desccontent().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.Cloud.Message.GroupJoinRequestCancelResposne.descContent");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_desccontent(), target);
  }

  // .AcFunDanmu.Im.Cloud.Message.JoinRequestStatus status = 6;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      6, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Cloud.Message.GroupJoinRequestCancelResposne)
  return target;
}

size_t Cloud_Message_GroupJoinRequestCancelResposne::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Cloud.Message.GroupJoinRequestCancelResposne)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .AcFunDanmu.Im.Basic.User invitees = 3;
  total_size += 1UL * this->_internal_invitees_size();
  for (const auto& msg : this->invitees_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string groupId = 1;
  if (this->groupid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_groupid());
  }

  // string descContent = 5;
  if (this->desccontent().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_desccontent());
  }

  // .AcFunDanmu.Im.Basic.User inviter = 2;
  if (this->has_inviter()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *inviter_);
  }

  // .AcFunDanmu.Im.Cloud.Message.GroupFindType findWay = 4;
  if (this->findway() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_findway());
  }

  // .AcFunDanmu.Im.Cloud.Message.JoinRequestStatus status = 6;
  if (this->status() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_status());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cloud_Message_GroupJoinRequestCancelResposne::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Cloud.Message.GroupJoinRequestCancelResposne)
  GOOGLE_DCHECK_NE(&from, this);
  const Cloud_Message_GroupJoinRequestCancelResposne* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Cloud_Message_GroupJoinRequestCancelResposne>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Cloud.Message.GroupJoinRequestCancelResposne)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Cloud.Message.GroupJoinRequestCancelResposne)
    MergeFrom(*source);
  }
}

void Cloud_Message_GroupJoinRequestCancelResposne::MergeFrom(const Cloud_Message_GroupJoinRequestCancelResposne& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Cloud.Message.GroupJoinRequestCancelResposne)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  invitees_.MergeFrom(from.invitees_);
  if (from.groupid().size() > 0) {
    _internal_set_groupid(from._internal_groupid());
  }
  if (from.desccontent().size() > 0) {
    _internal_set_desccontent(from._internal_desccontent());
  }
  if (from.has_inviter()) {
    _internal_mutable_inviter()->::AcFunDanmu::Im::Basic_User::MergeFrom(from._internal_inviter());
  }
  if (from.findway() != 0) {
    _internal_set_findway(from._internal_findway());
  }
  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void Cloud_Message_GroupJoinRequestCancelResposne::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Cloud.Message.GroupJoinRequestCancelResposne)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cloud_Message_GroupJoinRequestCancelResposne::CopyFrom(const Cloud_Message_GroupJoinRequestCancelResposne& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Cloud.Message.GroupJoinRequestCancelResposne)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cloud_Message_GroupJoinRequestCancelResposne::IsInitialized() const {
  return true;
}

void Cloud_Message_GroupJoinRequestCancelResposne::InternalSwap(Cloud_Message_GroupJoinRequestCancelResposne* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  invitees_.InternalSwap(&other->invitees_);
  groupid_.Swap(&other->groupid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  desccontent_.Swap(&other->desccontent_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Cloud_Message_GroupJoinRequestCancelResposne, status_)
      + sizeof(Cloud_Message_GroupJoinRequestCancelResposne::status_)
      - PROTOBUF_FIELD_OFFSET(Cloud_Message_GroupJoinRequestCancelResposne, inviter_)>(
          reinterpret_cast<char*>(&inviter_),
          reinterpret_cast<char*>(&other->inviter_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Cloud_Message_GroupJoinRequestCancelResposne::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Cloud_Message_GroupQuitRequest::_Internal {
 public:
};

Cloud_Message_GroupQuitRequest::Cloud_Message_GroupQuitRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Cloud.Message.GroupQuitRequest)
}
Cloud_Message_GroupQuitRequest::Cloud_Message_GroupQuitRequest(const Cloud_Message_GroupQuitRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  groupid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_groupid().empty()) {
    groupid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_groupid(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Cloud.Message.GroupQuitRequest)
}

void Cloud_Message_GroupQuitRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Cloud_Message_GroupQuitRequest_Im_2eproto.base);
  groupid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Cloud_Message_GroupQuitRequest::~Cloud_Message_GroupQuitRequest() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Cloud.Message.GroupQuitRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Cloud_Message_GroupQuitRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  groupid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Cloud_Message_GroupQuitRequest::ArenaDtor(void* object) {
  Cloud_Message_GroupQuitRequest* _this = reinterpret_cast< Cloud_Message_GroupQuitRequest* >(object);
  (void)_this;
}
void Cloud_Message_GroupQuitRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Cloud_Message_GroupQuitRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cloud_Message_GroupQuitRequest& Cloud_Message_GroupQuitRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Cloud_Message_GroupQuitRequest_Im_2eproto.base);
  return *internal_default_instance();
}


void Cloud_Message_GroupQuitRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Cloud.Message.GroupQuitRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  groupid_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Cloud_Message_GroupQuitRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string groupId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_groupid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.Cloud.Message.GroupQuitRequest.groupId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Cloud_Message_GroupQuitRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Cloud.Message.GroupQuitRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string groupId = 1;
  if (this->groupid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_groupid().data(), static_cast<int>(this->_internal_groupid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.Cloud.Message.GroupQuitRequest.groupId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_groupid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Cloud.Message.GroupQuitRequest)
  return target;
}

size_t Cloud_Message_GroupQuitRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Cloud.Message.GroupQuitRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string groupId = 1;
  if (this->groupid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_groupid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cloud_Message_GroupQuitRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Cloud.Message.GroupQuitRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const Cloud_Message_GroupQuitRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Cloud_Message_GroupQuitRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Cloud.Message.GroupQuitRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Cloud.Message.GroupQuitRequest)
    MergeFrom(*source);
  }
}

void Cloud_Message_GroupQuitRequest::MergeFrom(const Cloud_Message_GroupQuitRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Cloud.Message.GroupQuitRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.groupid().size() > 0) {
    _internal_set_groupid(from._internal_groupid());
  }
}

void Cloud_Message_GroupQuitRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Cloud.Message.GroupQuitRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cloud_Message_GroupQuitRequest::CopyFrom(const Cloud_Message_GroupQuitRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Cloud.Message.GroupQuitRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cloud_Message_GroupQuitRequest::IsInitialized() const {
  return true;
}

void Cloud_Message_GroupQuitRequest::InternalSwap(Cloud_Message_GroupQuitRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  groupid_.Swap(&other->groupid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata Cloud_Message_GroupQuitRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Cloud_Message_GroupQuitResponse::_Internal {
 public:
};

Cloud_Message_GroupQuitResponse::Cloud_Message_GroupQuitResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Cloud.Message.GroupQuitResponse)
}
Cloud_Message_GroupQuitResponse::Cloud_Message_GroupQuitResponse(const Cloud_Message_GroupQuitResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  groupid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_groupid().empty()) {
    groupid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_groupid(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Cloud.Message.GroupQuitResponse)
}

void Cloud_Message_GroupQuitResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Cloud_Message_GroupQuitResponse_Im_2eproto.base);
  groupid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Cloud_Message_GroupQuitResponse::~Cloud_Message_GroupQuitResponse() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Cloud.Message.GroupQuitResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Cloud_Message_GroupQuitResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  groupid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Cloud_Message_GroupQuitResponse::ArenaDtor(void* object) {
  Cloud_Message_GroupQuitResponse* _this = reinterpret_cast< Cloud_Message_GroupQuitResponse* >(object);
  (void)_this;
}
void Cloud_Message_GroupQuitResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Cloud_Message_GroupQuitResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cloud_Message_GroupQuitResponse& Cloud_Message_GroupQuitResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Cloud_Message_GroupQuitResponse_Im_2eproto.base);
  return *internal_default_instance();
}


void Cloud_Message_GroupQuitResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Cloud.Message.GroupQuitResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  groupid_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Cloud_Message_GroupQuitResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string groupId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_groupid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.Cloud.Message.GroupQuitResponse.groupId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Cloud_Message_GroupQuitResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Cloud.Message.GroupQuitResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string groupId = 1;
  if (this->groupid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_groupid().data(), static_cast<int>(this->_internal_groupid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.Cloud.Message.GroupQuitResponse.groupId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_groupid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Cloud.Message.GroupQuitResponse)
  return target;
}

size_t Cloud_Message_GroupQuitResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Cloud.Message.GroupQuitResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string groupId = 1;
  if (this->groupid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_groupid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cloud_Message_GroupQuitResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Cloud.Message.GroupQuitResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const Cloud_Message_GroupQuitResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Cloud_Message_GroupQuitResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Cloud.Message.GroupQuitResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Cloud.Message.GroupQuitResponse)
    MergeFrom(*source);
  }
}

void Cloud_Message_GroupQuitResponse::MergeFrom(const Cloud_Message_GroupQuitResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Cloud.Message.GroupQuitResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.groupid().size() > 0) {
    _internal_set_groupid(from._internal_groupid());
  }
}

void Cloud_Message_GroupQuitResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Cloud.Message.GroupQuitResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cloud_Message_GroupQuitResponse::CopyFrom(const Cloud_Message_GroupQuitResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Cloud.Message.GroupQuitResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cloud_Message_GroupQuitResponse::IsInitialized() const {
  return true;
}

void Cloud_Message_GroupQuitResponse::InternalSwap(Cloud_Message_GroupQuitResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  groupid_.Swap(&other->groupid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata Cloud_Message_GroupQuitResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Cloud_Message_GroupKickRequest::_Internal {
 public:
};

Cloud_Message_GroupKickRequest::Cloud_Message_GroupKickRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  target_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Cloud.Message.GroupKickRequest)
}
Cloud_Message_GroupKickRequest::Cloud_Message_GroupKickRequest(const Cloud_Message_GroupKickRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      target_(from.target_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  groupid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_groupid().empty()) {
    groupid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_groupid(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Cloud.Message.GroupKickRequest)
}

void Cloud_Message_GroupKickRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Cloud_Message_GroupKickRequest_Im_2eproto.base);
  groupid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Cloud_Message_GroupKickRequest::~Cloud_Message_GroupKickRequest() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Cloud.Message.GroupKickRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Cloud_Message_GroupKickRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  groupid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Cloud_Message_GroupKickRequest::ArenaDtor(void* object) {
  Cloud_Message_GroupKickRequest* _this = reinterpret_cast< Cloud_Message_GroupKickRequest* >(object);
  (void)_this;
}
void Cloud_Message_GroupKickRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Cloud_Message_GroupKickRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cloud_Message_GroupKickRequest& Cloud_Message_GroupKickRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Cloud_Message_GroupKickRequest_Im_2eproto.base);
  return *internal_default_instance();
}


void Cloud_Message_GroupKickRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Cloud.Message.GroupKickRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  target_.Clear();
  groupid_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Cloud_Message_GroupKickRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string groupId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_groupid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.Cloud.Message.GroupKickRequest.groupId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .AcFunDanmu.Im.Basic.User target = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_target(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Cloud_Message_GroupKickRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Cloud.Message.GroupKickRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string groupId = 1;
  if (this->groupid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_groupid().data(), static_cast<int>(this->_internal_groupid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.Cloud.Message.GroupKickRequest.groupId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_groupid(), target);
  }

  // repeated .AcFunDanmu.Im.Basic.User target = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_target_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_target(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Cloud.Message.GroupKickRequest)
  return target;
}

size_t Cloud_Message_GroupKickRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Cloud.Message.GroupKickRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .AcFunDanmu.Im.Basic.User target = 2;
  total_size += 1UL * this->_internal_target_size();
  for (const auto& msg : this->target_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string groupId = 1;
  if (this->groupid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_groupid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cloud_Message_GroupKickRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Cloud.Message.GroupKickRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const Cloud_Message_GroupKickRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Cloud_Message_GroupKickRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Cloud.Message.GroupKickRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Cloud.Message.GroupKickRequest)
    MergeFrom(*source);
  }
}

void Cloud_Message_GroupKickRequest::MergeFrom(const Cloud_Message_GroupKickRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Cloud.Message.GroupKickRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  target_.MergeFrom(from.target_);
  if (from.groupid().size() > 0) {
    _internal_set_groupid(from._internal_groupid());
  }
}

void Cloud_Message_GroupKickRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Cloud.Message.GroupKickRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cloud_Message_GroupKickRequest::CopyFrom(const Cloud_Message_GroupKickRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Cloud.Message.GroupKickRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cloud_Message_GroupKickRequest::IsInitialized() const {
  return true;
}

void Cloud_Message_GroupKickRequest::InternalSwap(Cloud_Message_GroupKickRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  target_.InternalSwap(&other->target_);
  groupid_.Swap(&other->groupid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata Cloud_Message_GroupKickRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Cloud_Message_GroupKickResponse::_Internal {
 public:
};

Cloud_Message_GroupKickResponse::Cloud_Message_GroupKickResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Cloud.Message.GroupKickResponse)
}
Cloud_Message_GroupKickResponse::Cloud_Message_GroupKickResponse(const Cloud_Message_GroupKickResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  groupid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_groupid().empty()) {
    groupid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_groupid(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Cloud.Message.GroupKickResponse)
}

void Cloud_Message_GroupKickResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Cloud_Message_GroupKickResponse_Im_2eproto.base);
  groupid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Cloud_Message_GroupKickResponse::~Cloud_Message_GroupKickResponse() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Cloud.Message.GroupKickResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Cloud_Message_GroupKickResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  groupid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Cloud_Message_GroupKickResponse::ArenaDtor(void* object) {
  Cloud_Message_GroupKickResponse* _this = reinterpret_cast< Cloud_Message_GroupKickResponse* >(object);
  (void)_this;
}
void Cloud_Message_GroupKickResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Cloud_Message_GroupKickResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cloud_Message_GroupKickResponse& Cloud_Message_GroupKickResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Cloud_Message_GroupKickResponse_Im_2eproto.base);
  return *internal_default_instance();
}


void Cloud_Message_GroupKickResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Cloud.Message.GroupKickResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  groupid_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Cloud_Message_GroupKickResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string groupId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_groupid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.Cloud.Message.GroupKickResponse.groupId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Cloud_Message_GroupKickResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Cloud.Message.GroupKickResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string groupId = 1;
  if (this->groupid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_groupid().data(), static_cast<int>(this->_internal_groupid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.Cloud.Message.GroupKickResponse.groupId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_groupid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Cloud.Message.GroupKickResponse)
  return target;
}

size_t Cloud_Message_GroupKickResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Cloud.Message.GroupKickResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string groupId = 1;
  if (this->groupid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_groupid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cloud_Message_GroupKickResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Cloud.Message.GroupKickResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const Cloud_Message_GroupKickResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Cloud_Message_GroupKickResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Cloud.Message.GroupKickResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Cloud.Message.GroupKickResponse)
    MergeFrom(*source);
  }
}

void Cloud_Message_GroupKickResponse::MergeFrom(const Cloud_Message_GroupKickResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Cloud.Message.GroupKickResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.groupid().size() > 0) {
    _internal_set_groupid(from._internal_groupid());
  }
}

void Cloud_Message_GroupKickResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Cloud.Message.GroupKickResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cloud_Message_GroupKickResponse::CopyFrom(const Cloud_Message_GroupKickResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Cloud.Message.GroupKickResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cloud_Message_GroupKickResponse::IsInitialized() const {
  return true;
}

void Cloud_Message_GroupKickResponse::InternalSwap(Cloud_Message_GroupKickResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  groupid_.Swap(&other->groupid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata Cloud_Message_GroupKickResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Cloud_Message_GroupSettingRequest::_Internal {
 public:
  static const ::AcFunDanmu::Im::Cloud_Message_GroupSettingRename& rename(const Cloud_Message_GroupSettingRequest* msg);
  static const ::AcFunDanmu::Im::Cloud_Message_GroupSettingDesc& desc(const Cloud_Message_GroupSettingRequest* msg);
  static const ::AcFunDanmu::Im::Cloud_Message_GroupSettingJoinNeedPermission& joinneedpermission(const Cloud_Message_GroupSettingRequest* msg);
};

const ::AcFunDanmu::Im::Cloud_Message_GroupSettingRename&
Cloud_Message_GroupSettingRequest::_Internal::rename(const Cloud_Message_GroupSettingRequest* msg) {
  return *msg->GroupSetting_.rename_;
}
const ::AcFunDanmu::Im::Cloud_Message_GroupSettingDesc&
Cloud_Message_GroupSettingRequest::_Internal::desc(const Cloud_Message_GroupSettingRequest* msg) {
  return *msg->GroupSetting_.desc_;
}
const ::AcFunDanmu::Im::Cloud_Message_GroupSettingJoinNeedPermission&
Cloud_Message_GroupSettingRequest::_Internal::joinneedpermission(const Cloud_Message_GroupSettingRequest* msg) {
  return *msg->GroupSetting_.joinneedpermission_;
}
void Cloud_Message_GroupSettingRequest::set_allocated_rename(::AcFunDanmu::Im::Cloud_Message_GroupSettingRename* rename) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_GroupSetting();
  if (rename) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(rename);
    if (message_arena != submessage_arena) {
      rename = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, rename, submessage_arena);
    }
    set_has_rename();
    GroupSetting_.rename_ = rename;
  }
  // @@protoc_insertion_point(field_set_allocated:AcFunDanmu.Im.Cloud.Message.GroupSettingRequest.rename)
}
void Cloud_Message_GroupSettingRequest::set_allocated_desc(::AcFunDanmu::Im::Cloud_Message_GroupSettingDesc* desc) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_GroupSetting();
  if (desc) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(desc);
    if (message_arena != submessage_arena) {
      desc = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, desc, submessage_arena);
    }
    set_has_desc();
    GroupSetting_.desc_ = desc;
  }
  // @@protoc_insertion_point(field_set_allocated:AcFunDanmu.Im.Cloud.Message.GroupSettingRequest.desc)
}
void Cloud_Message_GroupSettingRequest::set_allocated_joinneedpermission(::AcFunDanmu::Im::Cloud_Message_GroupSettingJoinNeedPermission* joinneedpermission) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_GroupSetting();
  if (joinneedpermission) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(joinneedpermission);
    if (message_arena != submessage_arena) {
      joinneedpermission = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, joinneedpermission, submessage_arena);
    }
    set_has_joinneedpermission();
    GroupSetting_.joinneedpermission_ = joinneedpermission;
  }
  // @@protoc_insertion_point(field_set_allocated:AcFunDanmu.Im.Cloud.Message.GroupSettingRequest.joinNeedPermission)
}
Cloud_Message_GroupSettingRequest::Cloud_Message_GroupSettingRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Cloud.Message.GroupSettingRequest)
}
Cloud_Message_GroupSettingRequest::Cloud_Message_GroupSettingRequest(const Cloud_Message_GroupSettingRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  groupid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_groupid().empty()) {
    groupid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_groupid(), 
      GetArena());
  }
  clear_has_GroupSetting();
  switch (from.GroupSetting_case()) {
    case kRename: {
      _internal_mutable_rename()->::AcFunDanmu::Im::Cloud_Message_GroupSettingRename::MergeFrom(from._internal_rename());
      break;
    }
    case kDesc: {
      _internal_mutable_desc()->::AcFunDanmu::Im::Cloud_Message_GroupSettingDesc::MergeFrom(from._internal_desc());
      break;
    }
    case kJoinNeedPermission: {
      _internal_mutable_joinneedpermission()->::AcFunDanmu::Im::Cloud_Message_GroupSettingJoinNeedPermission::MergeFrom(from._internal_joinneedpermission());
      break;
    }
    case GROUPSETTING_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Cloud.Message.GroupSettingRequest)
}

void Cloud_Message_GroupSettingRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Cloud_Message_GroupSettingRequest_Im_2eproto.base);
  groupid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  clear_has_GroupSetting();
}

Cloud_Message_GroupSettingRequest::~Cloud_Message_GroupSettingRequest() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Cloud.Message.GroupSettingRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Cloud_Message_GroupSettingRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  groupid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (has_GroupSetting()) {
    clear_GroupSetting();
  }
}

void Cloud_Message_GroupSettingRequest::ArenaDtor(void* object) {
  Cloud_Message_GroupSettingRequest* _this = reinterpret_cast< Cloud_Message_GroupSettingRequest* >(object);
  (void)_this;
}
void Cloud_Message_GroupSettingRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Cloud_Message_GroupSettingRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cloud_Message_GroupSettingRequest& Cloud_Message_GroupSettingRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Cloud_Message_GroupSettingRequest_Im_2eproto.base);
  return *internal_default_instance();
}


void Cloud_Message_GroupSettingRequest::clear_GroupSetting() {
// @@protoc_insertion_point(one_of_clear_start:AcFunDanmu.Im.Cloud.Message.GroupSettingRequest)
  switch (GroupSetting_case()) {
    case kRename: {
      if (GetArena() == nullptr) {
        delete GroupSetting_.rename_;
      }
      break;
    }
    case kDesc: {
      if (GetArena() == nullptr) {
        delete GroupSetting_.desc_;
      }
      break;
    }
    case kJoinNeedPermission: {
      if (GetArena() == nullptr) {
        delete GroupSetting_.joinneedpermission_;
      }
      break;
    }
    case GROUPSETTING_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = GROUPSETTING_NOT_SET;
}


void Cloud_Message_GroupSettingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Cloud.Message.GroupSettingRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  groupid_.ClearToEmpty();
  clear_GroupSetting();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Cloud_Message_GroupSettingRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string groupId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_groupid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.Cloud.Message.GroupSettingRequest.groupId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .AcFunDanmu.Im.Cloud.Message.GroupSettingRename rename = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_rename(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .AcFunDanmu.Im.Cloud.Message.GroupSettingDesc desc = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_desc(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .AcFunDanmu.Im.Cloud.Message.GroupSettingJoinNeedPermission joinNeedPermission = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_joinneedpermission(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Cloud_Message_GroupSettingRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Cloud.Message.GroupSettingRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string groupId = 1;
  if (this->groupid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_groupid().data(), static_cast<int>(this->_internal_groupid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.Cloud.Message.GroupSettingRequest.groupId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_groupid(), target);
  }

  // .AcFunDanmu.Im.Cloud.Message.GroupSettingRename rename = 2;
  if (_internal_has_rename()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::rename(this), target, stream);
  }

  // .AcFunDanmu.Im.Cloud.Message.GroupSettingDesc desc = 3;
  if (_internal_has_desc()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::desc(this), target, stream);
  }

  // .AcFunDanmu.Im.Cloud.Message.GroupSettingJoinNeedPermission joinNeedPermission = 4;
  if (_internal_has_joinneedpermission()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::joinneedpermission(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Cloud.Message.GroupSettingRequest)
  return target;
}

size_t Cloud_Message_GroupSettingRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Cloud.Message.GroupSettingRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string groupId = 1;
  if (this->groupid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_groupid());
  }

  switch (GroupSetting_case()) {
    // .AcFunDanmu.Im.Cloud.Message.GroupSettingRename rename = 2;
    case kRename: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *GroupSetting_.rename_);
      break;
    }
    // .AcFunDanmu.Im.Cloud.Message.GroupSettingDesc desc = 3;
    case kDesc: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *GroupSetting_.desc_);
      break;
    }
    // .AcFunDanmu.Im.Cloud.Message.GroupSettingJoinNeedPermission joinNeedPermission = 4;
    case kJoinNeedPermission: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *GroupSetting_.joinneedpermission_);
      break;
    }
    case GROUPSETTING_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cloud_Message_GroupSettingRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Cloud.Message.GroupSettingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const Cloud_Message_GroupSettingRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Cloud_Message_GroupSettingRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Cloud.Message.GroupSettingRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Cloud.Message.GroupSettingRequest)
    MergeFrom(*source);
  }
}

void Cloud_Message_GroupSettingRequest::MergeFrom(const Cloud_Message_GroupSettingRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Cloud.Message.GroupSettingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.groupid().size() > 0) {
    _internal_set_groupid(from._internal_groupid());
  }
  switch (from.GroupSetting_case()) {
    case kRename: {
      _internal_mutable_rename()->::AcFunDanmu::Im::Cloud_Message_GroupSettingRename::MergeFrom(from._internal_rename());
      break;
    }
    case kDesc: {
      _internal_mutable_desc()->::AcFunDanmu::Im::Cloud_Message_GroupSettingDesc::MergeFrom(from._internal_desc());
      break;
    }
    case kJoinNeedPermission: {
      _internal_mutable_joinneedpermission()->::AcFunDanmu::Im::Cloud_Message_GroupSettingJoinNeedPermission::MergeFrom(from._internal_joinneedpermission());
      break;
    }
    case GROUPSETTING_NOT_SET: {
      break;
    }
  }
}

void Cloud_Message_GroupSettingRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Cloud.Message.GroupSettingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cloud_Message_GroupSettingRequest::CopyFrom(const Cloud_Message_GroupSettingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Cloud.Message.GroupSettingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cloud_Message_GroupSettingRequest::IsInitialized() const {
  return true;
}

void Cloud_Message_GroupSettingRequest::InternalSwap(Cloud_Message_GroupSettingRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  groupid_.Swap(&other->groupid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(GroupSetting_, other->GroupSetting_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata Cloud_Message_GroupSettingRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Cloud_Message_GroupSettingRename::_Internal {
 public:
};

Cloud_Message_GroupSettingRename::Cloud_Message_GroupSettingRename(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Cloud.Message.GroupSettingRename)
}
Cloud_Message_GroupSettingRename::Cloud_Message_GroupSettingRename(const Cloud_Message_GroupSettingRename& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  groupname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_groupname().empty()) {
    groupname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_groupname(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Cloud.Message.GroupSettingRename)
}

void Cloud_Message_GroupSettingRename::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Cloud_Message_GroupSettingRename_Im_2eproto.base);
  groupname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Cloud_Message_GroupSettingRename::~Cloud_Message_GroupSettingRename() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Cloud.Message.GroupSettingRename)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Cloud_Message_GroupSettingRename::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  groupname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Cloud_Message_GroupSettingRename::ArenaDtor(void* object) {
  Cloud_Message_GroupSettingRename* _this = reinterpret_cast< Cloud_Message_GroupSettingRename* >(object);
  (void)_this;
}
void Cloud_Message_GroupSettingRename::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Cloud_Message_GroupSettingRename::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cloud_Message_GroupSettingRename& Cloud_Message_GroupSettingRename::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Cloud_Message_GroupSettingRename_Im_2eproto.base);
  return *internal_default_instance();
}


void Cloud_Message_GroupSettingRename::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Cloud.Message.GroupSettingRename)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  groupname_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Cloud_Message_GroupSettingRename::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string groupName = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_groupname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.Cloud.Message.GroupSettingRename.groupName"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Cloud_Message_GroupSettingRename::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Cloud.Message.GroupSettingRename)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string groupName = 1;
  if (this->groupname().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_groupname().data(), static_cast<int>(this->_internal_groupname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.Cloud.Message.GroupSettingRename.groupName");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_groupname(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Cloud.Message.GroupSettingRename)
  return target;
}

size_t Cloud_Message_GroupSettingRename::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Cloud.Message.GroupSettingRename)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string groupName = 1;
  if (this->groupname().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_groupname());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cloud_Message_GroupSettingRename::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Cloud.Message.GroupSettingRename)
  GOOGLE_DCHECK_NE(&from, this);
  const Cloud_Message_GroupSettingRename* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Cloud_Message_GroupSettingRename>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Cloud.Message.GroupSettingRename)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Cloud.Message.GroupSettingRename)
    MergeFrom(*source);
  }
}

void Cloud_Message_GroupSettingRename::MergeFrom(const Cloud_Message_GroupSettingRename& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Cloud.Message.GroupSettingRename)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.groupname().size() > 0) {
    _internal_set_groupname(from._internal_groupname());
  }
}

void Cloud_Message_GroupSettingRename::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Cloud.Message.GroupSettingRename)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cloud_Message_GroupSettingRename::CopyFrom(const Cloud_Message_GroupSettingRename& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Cloud.Message.GroupSettingRename)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cloud_Message_GroupSettingRename::IsInitialized() const {
  return true;
}

void Cloud_Message_GroupSettingRename::InternalSwap(Cloud_Message_GroupSettingRename* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  groupname_.Swap(&other->groupname_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata Cloud_Message_GroupSettingRename::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Cloud_Message_GroupSettingDesc::_Internal {
 public:
};

Cloud_Message_GroupSettingDesc::Cloud_Message_GroupSettingDesc(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Cloud.Message.GroupSettingDesc)
}
Cloud_Message_GroupSettingDesc::Cloud_Message_GroupSettingDesc(const Cloud_Message_GroupSettingDesc& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  desc_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_desc().empty()) {
    desc_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_desc(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Cloud.Message.GroupSettingDesc)
}

void Cloud_Message_GroupSettingDesc::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Cloud_Message_GroupSettingDesc_Im_2eproto.base);
  desc_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Cloud_Message_GroupSettingDesc::~Cloud_Message_GroupSettingDesc() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Cloud.Message.GroupSettingDesc)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Cloud_Message_GroupSettingDesc::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  desc_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Cloud_Message_GroupSettingDesc::ArenaDtor(void* object) {
  Cloud_Message_GroupSettingDesc* _this = reinterpret_cast< Cloud_Message_GroupSettingDesc* >(object);
  (void)_this;
}
void Cloud_Message_GroupSettingDesc::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Cloud_Message_GroupSettingDesc::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cloud_Message_GroupSettingDesc& Cloud_Message_GroupSettingDesc::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Cloud_Message_GroupSettingDesc_Im_2eproto.base);
  return *internal_default_instance();
}


void Cloud_Message_GroupSettingDesc::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Cloud.Message.GroupSettingDesc)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  desc_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Cloud_Message_GroupSettingDesc::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string desc = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_desc();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.Cloud.Message.GroupSettingDesc.desc"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Cloud_Message_GroupSettingDesc::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Cloud.Message.GroupSettingDesc)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string desc = 1;
  if (this->desc().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_desc().data(), static_cast<int>(this->_internal_desc().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.Cloud.Message.GroupSettingDesc.desc");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_desc(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Cloud.Message.GroupSettingDesc)
  return target;
}

size_t Cloud_Message_GroupSettingDesc::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Cloud.Message.GroupSettingDesc)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string desc = 1;
  if (this->desc().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_desc());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cloud_Message_GroupSettingDesc::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Cloud.Message.GroupSettingDesc)
  GOOGLE_DCHECK_NE(&from, this);
  const Cloud_Message_GroupSettingDesc* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Cloud_Message_GroupSettingDesc>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Cloud.Message.GroupSettingDesc)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Cloud.Message.GroupSettingDesc)
    MergeFrom(*source);
  }
}

void Cloud_Message_GroupSettingDesc::MergeFrom(const Cloud_Message_GroupSettingDesc& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Cloud.Message.GroupSettingDesc)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.desc().size() > 0) {
    _internal_set_desc(from._internal_desc());
  }
}

void Cloud_Message_GroupSettingDesc::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Cloud.Message.GroupSettingDesc)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cloud_Message_GroupSettingDesc::CopyFrom(const Cloud_Message_GroupSettingDesc& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Cloud.Message.GroupSettingDesc)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cloud_Message_GroupSettingDesc::IsInitialized() const {
  return true;
}

void Cloud_Message_GroupSettingDesc::InternalSwap(Cloud_Message_GroupSettingDesc* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  desc_.Swap(&other->desc_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata Cloud_Message_GroupSettingDesc::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Cloud_Message_GroupSettingJoinNeedPermission::_Internal {
 public:
};

Cloud_Message_GroupSettingJoinNeedPermission::Cloud_Message_GroupSettingJoinNeedPermission(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Cloud.Message.GroupSettingJoinNeedPermission)
}
Cloud_Message_GroupSettingJoinNeedPermission::Cloud_Message_GroupSettingJoinNeedPermission(const Cloud_Message_GroupSettingJoinNeedPermission& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  joinneedpermission_ = from.joinneedpermission_;
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Cloud.Message.GroupSettingJoinNeedPermission)
}

void Cloud_Message_GroupSettingJoinNeedPermission::SharedCtor() {
  joinneedpermission_ = 0;
}

Cloud_Message_GroupSettingJoinNeedPermission::~Cloud_Message_GroupSettingJoinNeedPermission() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Cloud.Message.GroupSettingJoinNeedPermission)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Cloud_Message_GroupSettingJoinNeedPermission::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Cloud_Message_GroupSettingJoinNeedPermission::ArenaDtor(void* object) {
  Cloud_Message_GroupSettingJoinNeedPermission* _this = reinterpret_cast< Cloud_Message_GroupSettingJoinNeedPermission* >(object);
  (void)_this;
}
void Cloud_Message_GroupSettingJoinNeedPermission::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Cloud_Message_GroupSettingJoinNeedPermission::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cloud_Message_GroupSettingJoinNeedPermission& Cloud_Message_GroupSettingJoinNeedPermission::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Cloud_Message_GroupSettingJoinNeedPermission_Im_2eproto.base);
  return *internal_default_instance();
}


void Cloud_Message_GroupSettingJoinNeedPermission::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Cloud.Message.GroupSettingJoinNeedPermission)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  joinneedpermission_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Cloud_Message_GroupSettingJoinNeedPermission::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .AcFunDanmu.Im.Cloud.Message.JoinNeedPermissionType joinNeedPermission = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_joinneedpermission(static_cast<::AcFunDanmu::Im::Cloud_Message_JoinNeedPermissionType>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Cloud_Message_GroupSettingJoinNeedPermission::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Cloud.Message.GroupSettingJoinNeedPermission)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .AcFunDanmu.Im.Cloud.Message.JoinNeedPermissionType joinNeedPermission = 1;
  if (this->joinneedpermission() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_joinneedpermission(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Cloud.Message.GroupSettingJoinNeedPermission)
  return target;
}

size_t Cloud_Message_GroupSettingJoinNeedPermission::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Cloud.Message.GroupSettingJoinNeedPermission)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .AcFunDanmu.Im.Cloud.Message.JoinNeedPermissionType joinNeedPermission = 1;
  if (this->joinneedpermission() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_joinneedpermission());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cloud_Message_GroupSettingJoinNeedPermission::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Cloud.Message.GroupSettingJoinNeedPermission)
  GOOGLE_DCHECK_NE(&from, this);
  const Cloud_Message_GroupSettingJoinNeedPermission* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Cloud_Message_GroupSettingJoinNeedPermission>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Cloud.Message.GroupSettingJoinNeedPermission)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Cloud.Message.GroupSettingJoinNeedPermission)
    MergeFrom(*source);
  }
}

void Cloud_Message_GroupSettingJoinNeedPermission::MergeFrom(const Cloud_Message_GroupSettingJoinNeedPermission& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Cloud.Message.GroupSettingJoinNeedPermission)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.joinneedpermission() != 0) {
    _internal_set_joinneedpermission(from._internal_joinneedpermission());
  }
}

void Cloud_Message_GroupSettingJoinNeedPermission::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Cloud.Message.GroupSettingJoinNeedPermission)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cloud_Message_GroupSettingJoinNeedPermission::CopyFrom(const Cloud_Message_GroupSettingJoinNeedPermission& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Cloud.Message.GroupSettingJoinNeedPermission)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cloud_Message_GroupSettingJoinNeedPermission::IsInitialized() const {
  return true;
}

void Cloud_Message_GroupSettingJoinNeedPermission::InternalSwap(Cloud_Message_GroupSettingJoinNeedPermission* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(joinneedpermission_, other->joinneedpermission_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Cloud_Message_GroupSettingJoinNeedPermission::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Cloud_Message_GroupSettingResponse::_Internal {
 public:
};

Cloud_Message_GroupSettingResponse::Cloud_Message_GroupSettingResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Cloud.Message.GroupSettingResponse)
}
Cloud_Message_GroupSettingResponse::Cloud_Message_GroupSettingResponse(const Cloud_Message_GroupSettingResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Cloud.Message.GroupSettingResponse)
}

void Cloud_Message_GroupSettingResponse::SharedCtor() {
}

Cloud_Message_GroupSettingResponse::~Cloud_Message_GroupSettingResponse() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Cloud.Message.GroupSettingResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Cloud_Message_GroupSettingResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Cloud_Message_GroupSettingResponse::ArenaDtor(void* object) {
  Cloud_Message_GroupSettingResponse* _this = reinterpret_cast< Cloud_Message_GroupSettingResponse* >(object);
  (void)_this;
}
void Cloud_Message_GroupSettingResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Cloud_Message_GroupSettingResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cloud_Message_GroupSettingResponse& Cloud_Message_GroupSettingResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Cloud_Message_GroupSettingResponse_Im_2eproto.base);
  return *internal_default_instance();
}


void Cloud_Message_GroupSettingResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Cloud.Message.GroupSettingResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Cloud_Message_GroupSettingResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Cloud_Message_GroupSettingResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Cloud.Message.GroupSettingResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Cloud.Message.GroupSettingResponse)
  return target;
}

size_t Cloud_Message_GroupSettingResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Cloud.Message.GroupSettingResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cloud_Message_GroupSettingResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Cloud.Message.GroupSettingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const Cloud_Message_GroupSettingResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Cloud_Message_GroupSettingResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Cloud.Message.GroupSettingResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Cloud.Message.GroupSettingResponse)
    MergeFrom(*source);
  }
}

void Cloud_Message_GroupSettingResponse::MergeFrom(const Cloud_Message_GroupSettingResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Cloud.Message.GroupSettingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Cloud_Message_GroupSettingResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Cloud.Message.GroupSettingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cloud_Message_GroupSettingResponse::CopyFrom(const Cloud_Message_GroupSettingResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Cloud.Message.GroupSettingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cloud_Message_GroupSettingResponse::IsInitialized() const {
  return true;
}

void Cloud_Message_GroupSettingResponse::InternalSwap(Cloud_Message_GroupSettingResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Cloud_Message_GroupSettingResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Cloud_Message_GroupMemberSettingRequest::_Internal {
 public:
  static const ::AcFunDanmu::Im::Cloud_Message_SetUserNickname& setnickname(const Cloud_Message_GroupMemberSettingRequest* msg);
  static const ::AcFunDanmu::Im::Cloud_Message_SetUserAntiDisturbing& setantidisturbing(const Cloud_Message_GroupMemberSettingRequest* msg);
};

const ::AcFunDanmu::Im::Cloud_Message_SetUserNickname&
Cloud_Message_GroupMemberSettingRequest::_Internal::setnickname(const Cloud_Message_GroupMemberSettingRequest* msg) {
  return *msg->UserSetting_.setnickname_;
}
const ::AcFunDanmu::Im::Cloud_Message_SetUserAntiDisturbing&
Cloud_Message_GroupMemberSettingRequest::_Internal::setantidisturbing(const Cloud_Message_GroupMemberSettingRequest* msg) {
  return *msg->UserSetting_.setantidisturbing_;
}
void Cloud_Message_GroupMemberSettingRequest::set_allocated_setnickname(::AcFunDanmu::Im::Cloud_Message_SetUserNickname* setnickname) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_UserSetting();
  if (setnickname) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(setnickname);
    if (message_arena != submessage_arena) {
      setnickname = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, setnickname, submessage_arena);
    }
    set_has_setnickname();
    UserSetting_.setnickname_ = setnickname;
  }
  // @@protoc_insertion_point(field_set_allocated:AcFunDanmu.Im.Cloud.Message.GroupMemberSettingRequest.setNickname)
}
void Cloud_Message_GroupMemberSettingRequest::set_allocated_setantidisturbing(::AcFunDanmu::Im::Cloud_Message_SetUserAntiDisturbing* setantidisturbing) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_UserSetting();
  if (setantidisturbing) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(setantidisturbing);
    if (message_arena != submessage_arena) {
      setantidisturbing = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, setantidisturbing, submessage_arena);
    }
    set_has_setantidisturbing();
    UserSetting_.setantidisturbing_ = setantidisturbing;
  }
  // @@protoc_insertion_point(field_set_allocated:AcFunDanmu.Im.Cloud.Message.GroupMemberSettingRequest.setAntiDisturbing)
}
Cloud_Message_GroupMemberSettingRequest::Cloud_Message_GroupMemberSettingRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Cloud.Message.GroupMemberSettingRequest)
}
Cloud_Message_GroupMemberSettingRequest::Cloud_Message_GroupMemberSettingRequest(const Cloud_Message_GroupMemberSettingRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  groupid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_groupid().empty()) {
    groupid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_groupid(), 
      GetArena());
  }
  clear_has_UserSetting();
  switch (from.UserSetting_case()) {
    case kSetNickname: {
      _internal_mutable_setnickname()->::AcFunDanmu::Im::Cloud_Message_SetUserNickname::MergeFrom(from._internal_setnickname());
      break;
    }
    case kSetAntiDisturbing: {
      _internal_mutable_setantidisturbing()->::AcFunDanmu::Im::Cloud_Message_SetUserAntiDisturbing::MergeFrom(from._internal_setantidisturbing());
      break;
    }
    case USERSETTING_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Cloud.Message.GroupMemberSettingRequest)
}

void Cloud_Message_GroupMemberSettingRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Cloud_Message_GroupMemberSettingRequest_Im_2eproto.base);
  groupid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  clear_has_UserSetting();
}

Cloud_Message_GroupMemberSettingRequest::~Cloud_Message_GroupMemberSettingRequest() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Cloud.Message.GroupMemberSettingRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Cloud_Message_GroupMemberSettingRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  groupid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (has_UserSetting()) {
    clear_UserSetting();
  }
}

void Cloud_Message_GroupMemberSettingRequest::ArenaDtor(void* object) {
  Cloud_Message_GroupMemberSettingRequest* _this = reinterpret_cast< Cloud_Message_GroupMemberSettingRequest* >(object);
  (void)_this;
}
void Cloud_Message_GroupMemberSettingRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Cloud_Message_GroupMemberSettingRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cloud_Message_GroupMemberSettingRequest& Cloud_Message_GroupMemberSettingRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Cloud_Message_GroupMemberSettingRequest_Im_2eproto.base);
  return *internal_default_instance();
}


void Cloud_Message_GroupMemberSettingRequest::clear_UserSetting() {
// @@protoc_insertion_point(one_of_clear_start:AcFunDanmu.Im.Cloud.Message.GroupMemberSettingRequest)
  switch (UserSetting_case()) {
    case kSetNickname: {
      if (GetArena() == nullptr) {
        delete UserSetting_.setnickname_;
      }
      break;
    }
    case kSetAntiDisturbing: {
      if (GetArena() == nullptr) {
        delete UserSetting_.setantidisturbing_;
      }
      break;
    }
    case USERSETTING_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = USERSETTING_NOT_SET;
}


void Cloud_Message_GroupMemberSettingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Cloud.Message.GroupMemberSettingRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  groupid_.ClearToEmpty();
  clear_UserSetting();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Cloud_Message_GroupMemberSettingRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string groupId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_groupid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.Cloud.Message.GroupMemberSettingRequest.groupId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .AcFunDanmu.Im.Cloud.Message.SetUserNickname setNickname = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_setnickname(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .AcFunDanmu.Im.Cloud.Message.SetUserAntiDisturbing setAntiDisturbing = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_setantidisturbing(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Cloud_Message_GroupMemberSettingRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Cloud.Message.GroupMemberSettingRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string groupId = 1;
  if (this->groupid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_groupid().data(), static_cast<int>(this->_internal_groupid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.Cloud.Message.GroupMemberSettingRequest.groupId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_groupid(), target);
  }

  // .AcFunDanmu.Im.Cloud.Message.SetUserNickname setNickname = 2;
  if (_internal_has_setnickname()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::setnickname(this), target, stream);
  }

  // .AcFunDanmu.Im.Cloud.Message.SetUserAntiDisturbing setAntiDisturbing = 3;
  if (_internal_has_setantidisturbing()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::setantidisturbing(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Cloud.Message.GroupMemberSettingRequest)
  return target;
}

size_t Cloud_Message_GroupMemberSettingRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Cloud.Message.GroupMemberSettingRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string groupId = 1;
  if (this->groupid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_groupid());
  }

  switch (UserSetting_case()) {
    // .AcFunDanmu.Im.Cloud.Message.SetUserNickname setNickname = 2;
    case kSetNickname: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *UserSetting_.setnickname_);
      break;
    }
    // .AcFunDanmu.Im.Cloud.Message.SetUserAntiDisturbing setAntiDisturbing = 3;
    case kSetAntiDisturbing: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *UserSetting_.setantidisturbing_);
      break;
    }
    case USERSETTING_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cloud_Message_GroupMemberSettingRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Cloud.Message.GroupMemberSettingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const Cloud_Message_GroupMemberSettingRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Cloud_Message_GroupMemberSettingRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Cloud.Message.GroupMemberSettingRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Cloud.Message.GroupMemberSettingRequest)
    MergeFrom(*source);
  }
}

void Cloud_Message_GroupMemberSettingRequest::MergeFrom(const Cloud_Message_GroupMemberSettingRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Cloud.Message.GroupMemberSettingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.groupid().size() > 0) {
    _internal_set_groupid(from._internal_groupid());
  }
  switch (from.UserSetting_case()) {
    case kSetNickname: {
      _internal_mutable_setnickname()->::AcFunDanmu::Im::Cloud_Message_SetUserNickname::MergeFrom(from._internal_setnickname());
      break;
    }
    case kSetAntiDisturbing: {
      _internal_mutable_setantidisturbing()->::AcFunDanmu::Im::Cloud_Message_SetUserAntiDisturbing::MergeFrom(from._internal_setantidisturbing());
      break;
    }
    case USERSETTING_NOT_SET: {
      break;
    }
  }
}

void Cloud_Message_GroupMemberSettingRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Cloud.Message.GroupMemberSettingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cloud_Message_GroupMemberSettingRequest::CopyFrom(const Cloud_Message_GroupMemberSettingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Cloud.Message.GroupMemberSettingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cloud_Message_GroupMemberSettingRequest::IsInitialized() const {
  return true;
}

void Cloud_Message_GroupMemberSettingRequest::InternalSwap(Cloud_Message_GroupMemberSettingRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  groupid_.Swap(&other->groupid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(UserSetting_, other->UserSetting_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata Cloud_Message_GroupMemberSettingRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Cloud_Message_SetUserNickname::_Internal {
 public:
};

Cloud_Message_SetUserNickname::Cloud_Message_SetUserNickname(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Cloud.Message.SetUserNickname)
}
Cloud_Message_SetUserNickname::Cloud_Message_SetUserNickname(const Cloud_Message_SetUserNickname& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  nickname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_nickname().empty()) {
    nickname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_nickname(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Cloud.Message.SetUserNickname)
}

void Cloud_Message_SetUserNickname::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Cloud_Message_SetUserNickname_Im_2eproto.base);
  nickname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Cloud_Message_SetUserNickname::~Cloud_Message_SetUserNickname() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Cloud.Message.SetUserNickname)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Cloud_Message_SetUserNickname::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  nickname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Cloud_Message_SetUserNickname::ArenaDtor(void* object) {
  Cloud_Message_SetUserNickname* _this = reinterpret_cast< Cloud_Message_SetUserNickname* >(object);
  (void)_this;
}
void Cloud_Message_SetUserNickname::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Cloud_Message_SetUserNickname::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cloud_Message_SetUserNickname& Cloud_Message_SetUserNickname::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Cloud_Message_SetUserNickname_Im_2eproto.base);
  return *internal_default_instance();
}


void Cloud_Message_SetUserNickname::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Cloud.Message.SetUserNickname)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  nickname_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Cloud_Message_SetUserNickname::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string nickname = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_nickname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.Cloud.Message.SetUserNickname.nickname"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Cloud_Message_SetUserNickname::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Cloud.Message.SetUserNickname)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string nickname = 1;
  if (this->nickname().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_nickname().data(), static_cast<int>(this->_internal_nickname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.Cloud.Message.SetUserNickname.nickname");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_nickname(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Cloud.Message.SetUserNickname)
  return target;
}

size_t Cloud_Message_SetUserNickname::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Cloud.Message.SetUserNickname)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string nickname = 1;
  if (this->nickname().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_nickname());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cloud_Message_SetUserNickname::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Cloud.Message.SetUserNickname)
  GOOGLE_DCHECK_NE(&from, this);
  const Cloud_Message_SetUserNickname* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Cloud_Message_SetUserNickname>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Cloud.Message.SetUserNickname)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Cloud.Message.SetUserNickname)
    MergeFrom(*source);
  }
}

void Cloud_Message_SetUserNickname::MergeFrom(const Cloud_Message_SetUserNickname& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Cloud.Message.SetUserNickname)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.nickname().size() > 0) {
    _internal_set_nickname(from._internal_nickname());
  }
}

void Cloud_Message_SetUserNickname::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Cloud.Message.SetUserNickname)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cloud_Message_SetUserNickname::CopyFrom(const Cloud_Message_SetUserNickname& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Cloud.Message.SetUserNickname)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cloud_Message_SetUserNickname::IsInitialized() const {
  return true;
}

void Cloud_Message_SetUserNickname::InternalSwap(Cloud_Message_SetUserNickname* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  nickname_.Swap(&other->nickname_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata Cloud_Message_SetUserNickname::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Cloud_Message_SetUserAntiDisturbing::_Internal {
 public:
};

Cloud_Message_SetUserAntiDisturbing::Cloud_Message_SetUserAntiDisturbing(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Cloud.Message.SetUserAntiDisturbing)
}
Cloud_Message_SetUserAntiDisturbing::Cloud_Message_SetUserAntiDisturbing(const Cloud_Message_SetUserAntiDisturbing& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  antidisturbing_ = from.antidisturbing_;
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Cloud.Message.SetUserAntiDisturbing)
}

void Cloud_Message_SetUserAntiDisturbing::SharedCtor() {
  antidisturbing_ = false;
}

Cloud_Message_SetUserAntiDisturbing::~Cloud_Message_SetUserAntiDisturbing() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Cloud.Message.SetUserAntiDisturbing)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Cloud_Message_SetUserAntiDisturbing::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Cloud_Message_SetUserAntiDisturbing::ArenaDtor(void* object) {
  Cloud_Message_SetUserAntiDisturbing* _this = reinterpret_cast< Cloud_Message_SetUserAntiDisturbing* >(object);
  (void)_this;
}
void Cloud_Message_SetUserAntiDisturbing::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Cloud_Message_SetUserAntiDisturbing::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cloud_Message_SetUserAntiDisturbing& Cloud_Message_SetUserAntiDisturbing::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Cloud_Message_SetUserAntiDisturbing_Im_2eproto.base);
  return *internal_default_instance();
}


void Cloud_Message_SetUserAntiDisturbing::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Cloud.Message.SetUserAntiDisturbing)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  antidisturbing_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Cloud_Message_SetUserAntiDisturbing::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool antiDisturbing = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          antidisturbing_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Cloud_Message_SetUserAntiDisturbing::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Cloud.Message.SetUserAntiDisturbing)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool antiDisturbing = 1;
  if (this->antidisturbing() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_antidisturbing(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Cloud.Message.SetUserAntiDisturbing)
  return target;
}

size_t Cloud_Message_SetUserAntiDisturbing::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Cloud.Message.SetUserAntiDisturbing)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool antiDisturbing = 1;
  if (this->antidisturbing() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cloud_Message_SetUserAntiDisturbing::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Cloud.Message.SetUserAntiDisturbing)
  GOOGLE_DCHECK_NE(&from, this);
  const Cloud_Message_SetUserAntiDisturbing* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Cloud_Message_SetUserAntiDisturbing>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Cloud.Message.SetUserAntiDisturbing)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Cloud.Message.SetUserAntiDisturbing)
    MergeFrom(*source);
  }
}

void Cloud_Message_SetUserAntiDisturbing::MergeFrom(const Cloud_Message_SetUserAntiDisturbing& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Cloud.Message.SetUserAntiDisturbing)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.antidisturbing() != 0) {
    _internal_set_antidisturbing(from._internal_antidisturbing());
  }
}

void Cloud_Message_SetUserAntiDisturbing::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Cloud.Message.SetUserAntiDisturbing)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cloud_Message_SetUserAntiDisturbing::CopyFrom(const Cloud_Message_SetUserAntiDisturbing& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Cloud.Message.SetUserAntiDisturbing)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cloud_Message_SetUserAntiDisturbing::IsInitialized() const {
  return true;
}

void Cloud_Message_SetUserAntiDisturbing::InternalSwap(Cloud_Message_SetUserAntiDisturbing* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(antidisturbing_, other->antidisturbing_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Cloud_Message_SetUserAntiDisturbing::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Cloud_Message_GroupMemberSettingResponse::_Internal {
 public:
};

Cloud_Message_GroupMemberSettingResponse::Cloud_Message_GroupMemberSettingResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Cloud.Message.GroupMemberSettingResponse)
}
Cloud_Message_GroupMemberSettingResponse::Cloud_Message_GroupMemberSettingResponse(const Cloud_Message_GroupMemberSettingResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Cloud.Message.GroupMemberSettingResponse)
}

void Cloud_Message_GroupMemberSettingResponse::SharedCtor() {
}

Cloud_Message_GroupMemberSettingResponse::~Cloud_Message_GroupMemberSettingResponse() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Cloud.Message.GroupMemberSettingResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Cloud_Message_GroupMemberSettingResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Cloud_Message_GroupMemberSettingResponse::ArenaDtor(void* object) {
  Cloud_Message_GroupMemberSettingResponse* _this = reinterpret_cast< Cloud_Message_GroupMemberSettingResponse* >(object);
  (void)_this;
}
void Cloud_Message_GroupMemberSettingResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Cloud_Message_GroupMemberSettingResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cloud_Message_GroupMemberSettingResponse& Cloud_Message_GroupMemberSettingResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Cloud_Message_GroupMemberSettingResponse_Im_2eproto.base);
  return *internal_default_instance();
}


void Cloud_Message_GroupMemberSettingResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Cloud.Message.GroupMemberSettingResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Cloud_Message_GroupMemberSettingResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Cloud_Message_GroupMemberSettingResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Cloud.Message.GroupMemberSettingResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Cloud.Message.GroupMemberSettingResponse)
  return target;
}

size_t Cloud_Message_GroupMemberSettingResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Cloud.Message.GroupMemberSettingResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cloud_Message_GroupMemberSettingResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Cloud.Message.GroupMemberSettingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const Cloud_Message_GroupMemberSettingResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Cloud_Message_GroupMemberSettingResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Cloud.Message.GroupMemberSettingResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Cloud.Message.GroupMemberSettingResponse)
    MergeFrom(*source);
  }
}

void Cloud_Message_GroupMemberSettingResponse::MergeFrom(const Cloud_Message_GroupMemberSettingResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Cloud.Message.GroupMemberSettingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Cloud_Message_GroupMemberSettingResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Cloud.Message.GroupMemberSettingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cloud_Message_GroupMemberSettingResponse::CopyFrom(const Cloud_Message_GroupMemberSettingResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Cloud.Message.GroupMemberSettingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cloud_Message_GroupMemberSettingResponse::IsInitialized() const {
  return true;
}

void Cloud_Message_GroupMemberSettingResponse::InternalSwap(Cloud_Message_GroupMemberSettingResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Cloud_Message_GroupMemberSettingResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Cloud_Message_GroupMemberListGetRequest::_Internal {
 public:
  static const ::AcFunDanmu::Im::Basic_SyncCookie& synccookie(const Cloud_Message_GroupMemberListGetRequest* msg);
};

const ::AcFunDanmu::Im::Basic_SyncCookie&
Cloud_Message_GroupMemberListGetRequest::_Internal::synccookie(const Cloud_Message_GroupMemberListGetRequest* msg) {
  return *msg->synccookie_;
}
Cloud_Message_GroupMemberListGetRequest::Cloud_Message_GroupMemberListGetRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Cloud.Message.GroupMemberListGetRequest)
}
Cloud_Message_GroupMemberListGetRequest::Cloud_Message_GroupMemberListGetRequest(const Cloud_Message_GroupMemberListGetRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  groupid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_groupid().empty()) {
    groupid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_groupid(), 
      GetArena());
  }
  if (from._internal_has_synccookie()) {
    synccookie_ = new ::AcFunDanmu::Im::Basic_SyncCookie(*from.synccookie_);
  } else {
    synccookie_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Cloud.Message.GroupMemberListGetRequest)
}

void Cloud_Message_GroupMemberListGetRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Cloud_Message_GroupMemberListGetRequest_Im_2eproto.base);
  groupid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  synccookie_ = nullptr;
}

Cloud_Message_GroupMemberListGetRequest::~Cloud_Message_GroupMemberListGetRequest() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Cloud.Message.GroupMemberListGetRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Cloud_Message_GroupMemberListGetRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  groupid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete synccookie_;
}

void Cloud_Message_GroupMemberListGetRequest::ArenaDtor(void* object) {
  Cloud_Message_GroupMemberListGetRequest* _this = reinterpret_cast< Cloud_Message_GroupMemberListGetRequest* >(object);
  (void)_this;
}
void Cloud_Message_GroupMemberListGetRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Cloud_Message_GroupMemberListGetRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cloud_Message_GroupMemberListGetRequest& Cloud_Message_GroupMemberListGetRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Cloud_Message_GroupMemberListGetRequest_Im_2eproto.base);
  return *internal_default_instance();
}


void Cloud_Message_GroupMemberListGetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Cloud.Message.GroupMemberListGetRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  groupid_.ClearToEmpty();
  if (GetArena() == nullptr && synccookie_ != nullptr) {
    delete synccookie_;
  }
  synccookie_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Cloud_Message_GroupMemberListGetRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string groupId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_groupid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.Cloud.Message.GroupMemberListGetRequest.groupId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .AcFunDanmu.Im.Basic.SyncCookie syncCookie = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_synccookie(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Cloud_Message_GroupMemberListGetRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Cloud.Message.GroupMemberListGetRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string groupId = 1;
  if (this->groupid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_groupid().data(), static_cast<int>(this->_internal_groupid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.Cloud.Message.GroupMemberListGetRequest.groupId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_groupid(), target);
  }

  // .AcFunDanmu.Im.Basic.SyncCookie syncCookie = 2;
  if (this->has_synccookie()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::synccookie(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Cloud.Message.GroupMemberListGetRequest)
  return target;
}

size_t Cloud_Message_GroupMemberListGetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Cloud.Message.GroupMemberListGetRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string groupId = 1;
  if (this->groupid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_groupid());
  }

  // .AcFunDanmu.Im.Basic.SyncCookie syncCookie = 2;
  if (this->has_synccookie()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *synccookie_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cloud_Message_GroupMemberListGetRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Cloud.Message.GroupMemberListGetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const Cloud_Message_GroupMemberListGetRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Cloud_Message_GroupMemberListGetRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Cloud.Message.GroupMemberListGetRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Cloud.Message.GroupMemberListGetRequest)
    MergeFrom(*source);
  }
}

void Cloud_Message_GroupMemberListGetRequest::MergeFrom(const Cloud_Message_GroupMemberListGetRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Cloud.Message.GroupMemberListGetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.groupid().size() > 0) {
    _internal_set_groupid(from._internal_groupid());
  }
  if (from.has_synccookie()) {
    _internal_mutable_synccookie()->::AcFunDanmu::Im::Basic_SyncCookie::MergeFrom(from._internal_synccookie());
  }
}

void Cloud_Message_GroupMemberListGetRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Cloud.Message.GroupMemberListGetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cloud_Message_GroupMemberListGetRequest::CopyFrom(const Cloud_Message_GroupMemberListGetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Cloud.Message.GroupMemberListGetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cloud_Message_GroupMemberListGetRequest::IsInitialized() const {
  return true;
}

void Cloud_Message_GroupMemberListGetRequest::InternalSwap(Cloud_Message_GroupMemberListGetRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  groupid_.Swap(&other->groupid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(synccookie_, other->synccookie_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Cloud_Message_GroupMemberListGetRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Cloud_Message_GroupMemberListGetResponse::_Internal {
 public:
  static const ::AcFunDanmu::Im::Basic_SyncCookie& synccookie(const Cloud_Message_GroupMemberListGetResponse* msg);
};

const ::AcFunDanmu::Im::Basic_SyncCookie&
Cloud_Message_GroupMemberListGetResponse::_Internal::synccookie(const Cloud_Message_GroupMemberListGetResponse* msg) {
  return *msg->synccookie_;
}
Cloud_Message_GroupMemberListGetResponse::Cloud_Message_GroupMemberListGetResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  members_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Cloud.Message.GroupMemberListGetResponse)
}
Cloud_Message_GroupMemberListGetResponse::Cloud_Message_GroupMemberListGetResponse(const Cloud_Message_GroupMemberListGetResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      members_(from.members_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_synccookie()) {
    synccookie_ = new ::AcFunDanmu::Im::Basic_SyncCookie(*from.synccookie_);
  } else {
    synccookie_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Cloud.Message.GroupMemberListGetResponse)
}

void Cloud_Message_GroupMemberListGetResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Cloud_Message_GroupMemberListGetResponse_Im_2eproto.base);
  synccookie_ = nullptr;
}

Cloud_Message_GroupMemberListGetResponse::~Cloud_Message_GroupMemberListGetResponse() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Cloud.Message.GroupMemberListGetResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Cloud_Message_GroupMemberListGetResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete synccookie_;
}

void Cloud_Message_GroupMemberListGetResponse::ArenaDtor(void* object) {
  Cloud_Message_GroupMemberListGetResponse* _this = reinterpret_cast< Cloud_Message_GroupMemberListGetResponse* >(object);
  (void)_this;
}
void Cloud_Message_GroupMemberListGetResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Cloud_Message_GroupMemberListGetResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cloud_Message_GroupMemberListGetResponse& Cloud_Message_GroupMemberListGetResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Cloud_Message_GroupMemberListGetResponse_Im_2eproto.base);
  return *internal_default_instance();
}


void Cloud_Message_GroupMemberListGetResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Cloud.Message.GroupMemberListGetResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  members_.Clear();
  if (GetArena() == nullptr && synccookie_ != nullptr) {
    delete synccookie_;
  }
  synccookie_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Cloud_Message_GroupMemberListGetResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .AcFunDanmu.Im.Cloud.Message.GroupMember members = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_members(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // .AcFunDanmu.Im.Basic.SyncCookie syncCookie = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_synccookie(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Cloud_Message_GroupMemberListGetResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Cloud.Message.GroupMemberListGetResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .AcFunDanmu.Im.Cloud.Message.GroupMember members = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_members_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_members(i), target, stream);
  }

  // .AcFunDanmu.Im.Basic.SyncCookie syncCookie = 2;
  if (this->has_synccookie()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::synccookie(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Cloud.Message.GroupMemberListGetResponse)
  return target;
}

size_t Cloud_Message_GroupMemberListGetResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Cloud.Message.GroupMemberListGetResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .AcFunDanmu.Im.Cloud.Message.GroupMember members = 1;
  total_size += 1UL * this->_internal_members_size();
  for (const auto& msg : this->members_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .AcFunDanmu.Im.Basic.SyncCookie syncCookie = 2;
  if (this->has_synccookie()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *synccookie_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cloud_Message_GroupMemberListGetResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Cloud.Message.GroupMemberListGetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const Cloud_Message_GroupMemberListGetResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Cloud_Message_GroupMemberListGetResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Cloud.Message.GroupMemberListGetResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Cloud.Message.GroupMemberListGetResponse)
    MergeFrom(*source);
  }
}

void Cloud_Message_GroupMemberListGetResponse::MergeFrom(const Cloud_Message_GroupMemberListGetResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Cloud.Message.GroupMemberListGetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  members_.MergeFrom(from.members_);
  if (from.has_synccookie()) {
    _internal_mutable_synccookie()->::AcFunDanmu::Im::Basic_SyncCookie::MergeFrom(from._internal_synccookie());
  }
}

void Cloud_Message_GroupMemberListGetResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Cloud.Message.GroupMemberListGetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cloud_Message_GroupMemberListGetResponse::CopyFrom(const Cloud_Message_GroupMemberListGetResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Cloud.Message.GroupMemberListGetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cloud_Message_GroupMemberListGetResponse::IsInitialized() const {
  return true;
}

void Cloud_Message_GroupMemberListGetResponse::InternalSwap(Cloud_Message_GroupMemberListGetResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  members_.InternalSwap(&other->members_);
  swap(synccookie_, other->synccookie_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Cloud_Message_GroupMemberListGetResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Cloud_Message_GroupMemberGetRequest::_Internal {
 public:
  static const ::AcFunDanmu::Im::Basic_User& user(const Cloud_Message_GroupMemberGetRequest* msg);
};

const ::AcFunDanmu::Im::Basic_User&
Cloud_Message_GroupMemberGetRequest::_Internal::user(const Cloud_Message_GroupMemberGetRequest* msg) {
  return *msg->user_;
}
Cloud_Message_GroupMemberGetRequest::Cloud_Message_GroupMemberGetRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Cloud.Message.GroupMemberGetRequest)
}
Cloud_Message_GroupMemberGetRequest::Cloud_Message_GroupMemberGetRequest(const Cloud_Message_GroupMemberGetRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  groupid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_groupid().empty()) {
    groupid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_groupid(), 
      GetArena());
  }
  if (from._internal_has_user()) {
    user_ = new ::AcFunDanmu::Im::Basic_User(*from.user_);
  } else {
    user_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Cloud.Message.GroupMemberGetRequest)
}

void Cloud_Message_GroupMemberGetRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Cloud_Message_GroupMemberGetRequest_Im_2eproto.base);
  groupid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  user_ = nullptr;
}

Cloud_Message_GroupMemberGetRequest::~Cloud_Message_GroupMemberGetRequest() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Cloud.Message.GroupMemberGetRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Cloud_Message_GroupMemberGetRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  groupid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete user_;
}

void Cloud_Message_GroupMemberGetRequest::ArenaDtor(void* object) {
  Cloud_Message_GroupMemberGetRequest* _this = reinterpret_cast< Cloud_Message_GroupMemberGetRequest* >(object);
  (void)_this;
}
void Cloud_Message_GroupMemberGetRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Cloud_Message_GroupMemberGetRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cloud_Message_GroupMemberGetRequest& Cloud_Message_GroupMemberGetRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Cloud_Message_GroupMemberGetRequest_Im_2eproto.base);
  return *internal_default_instance();
}


void Cloud_Message_GroupMemberGetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Cloud.Message.GroupMemberGetRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  groupid_.ClearToEmpty();
  if (GetArena() == nullptr && user_ != nullptr) {
    delete user_;
  }
  user_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Cloud_Message_GroupMemberGetRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string groupId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_groupid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.Cloud.Message.GroupMemberGetRequest.groupId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .AcFunDanmu.Im.Basic.User user = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_user(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Cloud_Message_GroupMemberGetRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Cloud.Message.GroupMemberGetRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string groupId = 1;
  if (this->groupid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_groupid().data(), static_cast<int>(this->_internal_groupid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.Cloud.Message.GroupMemberGetRequest.groupId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_groupid(), target);
  }

  // .AcFunDanmu.Im.Basic.User user = 2;
  if (this->has_user()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::user(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Cloud.Message.GroupMemberGetRequest)
  return target;
}

size_t Cloud_Message_GroupMemberGetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Cloud.Message.GroupMemberGetRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string groupId = 1;
  if (this->groupid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_groupid());
  }

  // .AcFunDanmu.Im.Basic.User user = 2;
  if (this->has_user()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *user_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cloud_Message_GroupMemberGetRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Cloud.Message.GroupMemberGetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const Cloud_Message_GroupMemberGetRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Cloud_Message_GroupMemberGetRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Cloud.Message.GroupMemberGetRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Cloud.Message.GroupMemberGetRequest)
    MergeFrom(*source);
  }
}

void Cloud_Message_GroupMemberGetRequest::MergeFrom(const Cloud_Message_GroupMemberGetRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Cloud.Message.GroupMemberGetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.groupid().size() > 0) {
    _internal_set_groupid(from._internal_groupid());
  }
  if (from.has_user()) {
    _internal_mutable_user()->::AcFunDanmu::Im::Basic_User::MergeFrom(from._internal_user());
  }
}

void Cloud_Message_GroupMemberGetRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Cloud.Message.GroupMemberGetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cloud_Message_GroupMemberGetRequest::CopyFrom(const Cloud_Message_GroupMemberGetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Cloud.Message.GroupMemberGetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cloud_Message_GroupMemberGetRequest::IsInitialized() const {
  return true;
}

void Cloud_Message_GroupMemberGetRequest::InternalSwap(Cloud_Message_GroupMemberGetRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  groupid_.Swap(&other->groupid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(user_, other->user_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Cloud_Message_GroupMemberGetRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Cloud_Message_GroupMemberGetResponse::_Internal {
 public:
  static const ::AcFunDanmu::Im::Cloud_Message_GroupMember& member(const Cloud_Message_GroupMemberGetResponse* msg);
};

const ::AcFunDanmu::Im::Cloud_Message_GroupMember&
Cloud_Message_GroupMemberGetResponse::_Internal::member(const Cloud_Message_GroupMemberGetResponse* msg) {
  return *msg->member_;
}
Cloud_Message_GroupMemberGetResponse::Cloud_Message_GroupMemberGetResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Cloud.Message.GroupMemberGetResponse)
}
Cloud_Message_GroupMemberGetResponse::Cloud_Message_GroupMemberGetResponse(const Cloud_Message_GroupMemberGetResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_member()) {
    member_ = new ::AcFunDanmu::Im::Cloud_Message_GroupMember(*from.member_);
  } else {
    member_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Cloud.Message.GroupMemberGetResponse)
}

void Cloud_Message_GroupMemberGetResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Cloud_Message_GroupMemberGetResponse_Im_2eproto.base);
  member_ = nullptr;
}

Cloud_Message_GroupMemberGetResponse::~Cloud_Message_GroupMemberGetResponse() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Cloud.Message.GroupMemberGetResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Cloud_Message_GroupMemberGetResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete member_;
}

void Cloud_Message_GroupMemberGetResponse::ArenaDtor(void* object) {
  Cloud_Message_GroupMemberGetResponse* _this = reinterpret_cast< Cloud_Message_GroupMemberGetResponse* >(object);
  (void)_this;
}
void Cloud_Message_GroupMemberGetResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Cloud_Message_GroupMemberGetResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cloud_Message_GroupMemberGetResponse& Cloud_Message_GroupMemberGetResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Cloud_Message_GroupMemberGetResponse_Im_2eproto.base);
  return *internal_default_instance();
}


void Cloud_Message_GroupMemberGetResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Cloud.Message.GroupMemberGetResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && member_ != nullptr) {
    delete member_;
  }
  member_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Cloud_Message_GroupMemberGetResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .AcFunDanmu.Im.Cloud.Message.GroupMember member = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_member(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Cloud_Message_GroupMemberGetResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Cloud.Message.GroupMemberGetResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .AcFunDanmu.Im.Cloud.Message.GroupMember member = 1;
  if (this->has_member()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::member(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Cloud.Message.GroupMemberGetResponse)
  return target;
}

size_t Cloud_Message_GroupMemberGetResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Cloud.Message.GroupMemberGetResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .AcFunDanmu.Im.Cloud.Message.GroupMember member = 1;
  if (this->has_member()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *member_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cloud_Message_GroupMemberGetResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Cloud.Message.GroupMemberGetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const Cloud_Message_GroupMemberGetResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Cloud_Message_GroupMemberGetResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Cloud.Message.GroupMemberGetResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Cloud.Message.GroupMemberGetResponse)
    MergeFrom(*source);
  }
}

void Cloud_Message_GroupMemberGetResponse::MergeFrom(const Cloud_Message_GroupMemberGetResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Cloud.Message.GroupMemberGetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_member()) {
    _internal_mutable_member()->::AcFunDanmu::Im::Cloud_Message_GroupMember::MergeFrom(from._internal_member());
  }
}

void Cloud_Message_GroupMemberGetResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Cloud.Message.GroupMemberGetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cloud_Message_GroupMemberGetResponse::CopyFrom(const Cloud_Message_GroupMemberGetResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Cloud.Message.GroupMemberGetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cloud_Message_GroupMemberGetResponse::IsInitialized() const {
  return true;
}

void Cloud_Message_GroupMemberGetResponse::InternalSwap(Cloud_Message_GroupMemberGetResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(member_, other->member_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Cloud_Message_GroupMemberGetResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Cloud_Message_UserGroupListRequest::_Internal {
 public:
  static const ::AcFunDanmu::Im::Basic_SyncCookie& synccookie(const Cloud_Message_UserGroupListRequest* msg);
};

const ::AcFunDanmu::Im::Basic_SyncCookie&
Cloud_Message_UserGroupListRequest::_Internal::synccookie(const Cloud_Message_UserGroupListRequest* msg) {
  return *msg->synccookie_;
}
Cloud_Message_UserGroupListRequest::Cloud_Message_UserGroupListRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Cloud.Message.UserGroupListRequest)
}
Cloud_Message_UserGroupListRequest::Cloud_Message_UserGroupListRequest(const Cloud_Message_UserGroupListRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_synccookie()) {
    synccookie_ = new ::AcFunDanmu::Im::Basic_SyncCookie(*from.synccookie_);
  } else {
    synccookie_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Cloud.Message.UserGroupListRequest)
}

void Cloud_Message_UserGroupListRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Cloud_Message_UserGroupListRequest_Im_2eproto.base);
  synccookie_ = nullptr;
}

Cloud_Message_UserGroupListRequest::~Cloud_Message_UserGroupListRequest() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Cloud.Message.UserGroupListRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Cloud_Message_UserGroupListRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete synccookie_;
}

void Cloud_Message_UserGroupListRequest::ArenaDtor(void* object) {
  Cloud_Message_UserGroupListRequest* _this = reinterpret_cast< Cloud_Message_UserGroupListRequest* >(object);
  (void)_this;
}
void Cloud_Message_UserGroupListRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Cloud_Message_UserGroupListRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cloud_Message_UserGroupListRequest& Cloud_Message_UserGroupListRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Cloud_Message_UserGroupListRequest_Im_2eproto.base);
  return *internal_default_instance();
}


void Cloud_Message_UserGroupListRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Cloud.Message.UserGroupListRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && synccookie_ != nullptr) {
    delete synccookie_;
  }
  synccookie_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Cloud_Message_UserGroupListRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .AcFunDanmu.Im.Basic.SyncCookie syncCookie = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_synccookie(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Cloud_Message_UserGroupListRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Cloud.Message.UserGroupListRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .AcFunDanmu.Im.Basic.SyncCookie syncCookie = 2;
  if (this->has_synccookie()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::synccookie(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Cloud.Message.UserGroupListRequest)
  return target;
}

size_t Cloud_Message_UserGroupListRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Cloud.Message.UserGroupListRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .AcFunDanmu.Im.Basic.SyncCookie syncCookie = 2;
  if (this->has_synccookie()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *synccookie_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cloud_Message_UserGroupListRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Cloud.Message.UserGroupListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const Cloud_Message_UserGroupListRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Cloud_Message_UserGroupListRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Cloud.Message.UserGroupListRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Cloud.Message.UserGroupListRequest)
    MergeFrom(*source);
  }
}

void Cloud_Message_UserGroupListRequest::MergeFrom(const Cloud_Message_UserGroupListRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Cloud.Message.UserGroupListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_synccookie()) {
    _internal_mutable_synccookie()->::AcFunDanmu::Im::Basic_SyncCookie::MergeFrom(from._internal_synccookie());
  }
}

void Cloud_Message_UserGroupListRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Cloud.Message.UserGroupListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cloud_Message_UserGroupListRequest::CopyFrom(const Cloud_Message_UserGroupListRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Cloud.Message.UserGroupListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cloud_Message_UserGroupListRequest::IsInitialized() const {
  return true;
}

void Cloud_Message_UserGroupListRequest::InternalSwap(Cloud_Message_UserGroupListRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(synccookie_, other->synccookie_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Cloud_Message_UserGroupListRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Cloud_Message_UserGroupListResponse::_Internal {
 public:
  static const ::AcFunDanmu::Im::Basic_SyncCookie& synccookie(const Cloud_Message_UserGroupListResponse* msg);
};

const ::AcFunDanmu::Im::Basic_SyncCookie&
Cloud_Message_UserGroupListResponse::_Internal::synccookie(const Cloud_Message_UserGroupListResponse* msg) {
  return *msg->synccookie_;
}
Cloud_Message_UserGroupListResponse::Cloud_Message_UserGroupListResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  usergroupinfo_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Cloud.Message.UserGroupListResponse)
}
Cloud_Message_UserGroupListResponse::Cloud_Message_UserGroupListResponse(const Cloud_Message_UserGroupListResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      usergroupinfo_(from.usergroupinfo_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_synccookie()) {
    synccookie_ = new ::AcFunDanmu::Im::Basic_SyncCookie(*from.synccookie_);
  } else {
    synccookie_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Cloud.Message.UserGroupListResponse)
}

void Cloud_Message_UserGroupListResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Cloud_Message_UserGroupListResponse_Im_2eproto.base);
  synccookie_ = nullptr;
}

Cloud_Message_UserGroupListResponse::~Cloud_Message_UserGroupListResponse() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Cloud.Message.UserGroupListResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Cloud_Message_UserGroupListResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete synccookie_;
}

void Cloud_Message_UserGroupListResponse::ArenaDtor(void* object) {
  Cloud_Message_UserGroupListResponse* _this = reinterpret_cast< Cloud_Message_UserGroupListResponse* >(object);
  (void)_this;
}
void Cloud_Message_UserGroupListResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Cloud_Message_UserGroupListResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cloud_Message_UserGroupListResponse& Cloud_Message_UserGroupListResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Cloud_Message_UserGroupListResponse_Im_2eproto.base);
  return *internal_default_instance();
}


void Cloud_Message_UserGroupListResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Cloud.Message.UserGroupListResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  usergroupinfo_.Clear();
  if (GetArena() == nullptr && synccookie_ != nullptr) {
    delete synccookie_;
  }
  synccookie_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Cloud_Message_UserGroupListResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .AcFunDanmu.Im.Cloud.Message.UserGroupInfo userGroupInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_usergroupinfo(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // .AcFunDanmu.Im.Basic.SyncCookie syncCookie = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_synccookie(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Cloud_Message_UserGroupListResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Cloud.Message.UserGroupListResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .AcFunDanmu.Im.Cloud.Message.UserGroupInfo userGroupInfo = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_usergroupinfo_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_usergroupinfo(i), target, stream);
  }

  // .AcFunDanmu.Im.Basic.SyncCookie syncCookie = 2;
  if (this->has_synccookie()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::synccookie(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Cloud.Message.UserGroupListResponse)
  return target;
}

size_t Cloud_Message_UserGroupListResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Cloud.Message.UserGroupListResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .AcFunDanmu.Im.Cloud.Message.UserGroupInfo userGroupInfo = 1;
  total_size += 1UL * this->_internal_usergroupinfo_size();
  for (const auto& msg : this->usergroupinfo_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .AcFunDanmu.Im.Basic.SyncCookie syncCookie = 2;
  if (this->has_synccookie()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *synccookie_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cloud_Message_UserGroupListResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Cloud.Message.UserGroupListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const Cloud_Message_UserGroupListResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Cloud_Message_UserGroupListResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Cloud.Message.UserGroupListResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Cloud.Message.UserGroupListResponse)
    MergeFrom(*source);
  }
}

void Cloud_Message_UserGroupListResponse::MergeFrom(const Cloud_Message_UserGroupListResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Cloud.Message.UserGroupListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  usergroupinfo_.MergeFrom(from.usergroupinfo_);
  if (from.has_synccookie()) {
    _internal_mutable_synccookie()->::AcFunDanmu::Im::Basic_SyncCookie::MergeFrom(from._internal_synccookie());
  }
}

void Cloud_Message_UserGroupListResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Cloud.Message.UserGroupListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cloud_Message_UserGroupListResponse::CopyFrom(const Cloud_Message_UserGroupListResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Cloud.Message.UserGroupListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cloud_Message_UserGroupListResponse::IsInitialized() const {
  return true;
}

void Cloud_Message_UserGroupListResponse::InternalSwap(Cloud_Message_UserGroupListResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  usergroupinfo_.InternalSwap(&other->usergroupinfo_);
  swap(synccookie_, other->synccookie_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Cloud_Message_UserGroupListResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Cloud_Message_UserGroupRecord::_Internal {
 public:
};

Cloud_Message_UserGroupRecord::Cloud_Message_UserGroupRecord(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Cloud.Message.UserGroupRecord)
}
Cloud_Message_UserGroupRecord::Cloud_Message_UserGroupRecord(const Cloud_Message_UserGroupRecord& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  groupid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_groupid().empty()) {
    groupid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_groupid(), 
      GetArena());
  }
  updatetime_ = from.updatetime_;
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Cloud.Message.UserGroupRecord)
}

void Cloud_Message_UserGroupRecord::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Cloud_Message_UserGroupRecord_Im_2eproto.base);
  groupid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  updatetime_ = PROTOBUF_LONGLONG(0);
}

Cloud_Message_UserGroupRecord::~Cloud_Message_UserGroupRecord() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Cloud.Message.UserGroupRecord)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Cloud_Message_UserGroupRecord::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  groupid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Cloud_Message_UserGroupRecord::ArenaDtor(void* object) {
  Cloud_Message_UserGroupRecord* _this = reinterpret_cast< Cloud_Message_UserGroupRecord* >(object);
  (void)_this;
}
void Cloud_Message_UserGroupRecord::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Cloud_Message_UserGroupRecord::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cloud_Message_UserGroupRecord& Cloud_Message_UserGroupRecord::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Cloud_Message_UserGroupRecord_Im_2eproto.base);
  return *internal_default_instance();
}


void Cloud_Message_UserGroupRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Cloud.Message.UserGroupRecord)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  groupid_.ClearToEmpty();
  updatetime_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Cloud_Message_UserGroupRecord::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string groupId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_groupid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.Cloud.Message.UserGroupRecord.groupId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 updateTime = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          updatetime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Cloud_Message_UserGroupRecord::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Cloud.Message.UserGroupRecord)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string groupId = 1;
  if (this->groupid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_groupid().data(), static_cast<int>(this->_internal_groupid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.Cloud.Message.UserGroupRecord.groupId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_groupid(), target);
  }

  // int64 updateTime = 2;
  if (this->updatetime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_updatetime(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Cloud.Message.UserGroupRecord)
  return target;
}

size_t Cloud_Message_UserGroupRecord::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Cloud.Message.UserGroupRecord)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string groupId = 1;
  if (this->groupid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_groupid());
  }

  // int64 updateTime = 2;
  if (this->updatetime() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_updatetime());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cloud_Message_UserGroupRecord::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Cloud.Message.UserGroupRecord)
  GOOGLE_DCHECK_NE(&from, this);
  const Cloud_Message_UserGroupRecord* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Cloud_Message_UserGroupRecord>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Cloud.Message.UserGroupRecord)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Cloud.Message.UserGroupRecord)
    MergeFrom(*source);
  }
}

void Cloud_Message_UserGroupRecord::MergeFrom(const Cloud_Message_UserGroupRecord& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Cloud.Message.UserGroupRecord)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.groupid().size() > 0) {
    _internal_set_groupid(from._internal_groupid());
  }
  if (from.updatetime() != 0) {
    _internal_set_updatetime(from._internal_updatetime());
  }
}

void Cloud_Message_UserGroupRecord::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Cloud.Message.UserGroupRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cloud_Message_UserGroupRecord::CopyFrom(const Cloud_Message_UserGroupRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Cloud.Message.UserGroupRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cloud_Message_UserGroupRecord::IsInitialized() const {
  return true;
}

void Cloud_Message_UserGroupRecord::InternalSwap(Cloud_Message_UserGroupRecord* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  groupid_.Swap(&other->groupid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(updatetime_, other->updatetime_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Cloud_Message_UserGroupRecord::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Cloud_Message_UserGroupGetRequest::_Internal {
 public:
};

Cloud_Message_UserGroupGetRequest::Cloud_Message_UserGroupGetRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  groupid_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Cloud.Message.UserGroupGetRequest)
}
Cloud_Message_UserGroupGetRequest::Cloud_Message_UserGroupGetRequest(const Cloud_Message_UserGroupGetRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      groupid_(from.groupid_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Cloud.Message.UserGroupGetRequest)
}

void Cloud_Message_UserGroupGetRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Cloud_Message_UserGroupGetRequest_Im_2eproto.base);
}

Cloud_Message_UserGroupGetRequest::~Cloud_Message_UserGroupGetRequest() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Cloud.Message.UserGroupGetRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Cloud_Message_UserGroupGetRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Cloud_Message_UserGroupGetRequest::ArenaDtor(void* object) {
  Cloud_Message_UserGroupGetRequest* _this = reinterpret_cast< Cloud_Message_UserGroupGetRequest* >(object);
  (void)_this;
}
void Cloud_Message_UserGroupGetRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Cloud_Message_UserGroupGetRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cloud_Message_UserGroupGetRequest& Cloud_Message_UserGroupGetRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Cloud_Message_UserGroupGetRequest_Im_2eproto.base);
  return *internal_default_instance();
}


void Cloud_Message_UserGroupGetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Cloud.Message.UserGroupGetRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  groupid_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Cloud_Message_UserGroupGetRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated string groupId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_groupid();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.Cloud.Message.UserGroupGetRequest.groupId"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Cloud_Message_UserGroupGetRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Cloud.Message.UserGroupGetRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string groupId = 1;
  for (int i = 0, n = this->_internal_groupid_size(); i < n; i++) {
    const auto& s = this->_internal_groupid(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.Cloud.Message.UserGroupGetRequest.groupId");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Cloud.Message.UserGroupGetRequest)
  return target;
}

size_t Cloud_Message_UserGroupGetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Cloud.Message.UserGroupGetRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string groupId = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(groupid_.size());
  for (int i = 0, n = groupid_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      groupid_.Get(i));
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cloud_Message_UserGroupGetRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Cloud.Message.UserGroupGetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const Cloud_Message_UserGroupGetRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Cloud_Message_UserGroupGetRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Cloud.Message.UserGroupGetRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Cloud.Message.UserGroupGetRequest)
    MergeFrom(*source);
  }
}

void Cloud_Message_UserGroupGetRequest::MergeFrom(const Cloud_Message_UserGroupGetRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Cloud.Message.UserGroupGetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  groupid_.MergeFrom(from.groupid_);
}

void Cloud_Message_UserGroupGetRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Cloud.Message.UserGroupGetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cloud_Message_UserGroupGetRequest::CopyFrom(const Cloud_Message_UserGroupGetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Cloud.Message.UserGroupGetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cloud_Message_UserGroupGetRequest::IsInitialized() const {
  return true;
}

void Cloud_Message_UserGroupGetRequest::InternalSwap(Cloud_Message_UserGroupGetRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  groupid_.InternalSwap(&other->groupid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Cloud_Message_UserGroupGetRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Cloud_Message_UserGroupGetResponse::_Internal {
 public:
};

Cloud_Message_UserGroupGetResponse::Cloud_Message_UserGroupGetResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  usergroupinfo_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Cloud.Message.UserGroupGetResponse)
}
Cloud_Message_UserGroupGetResponse::Cloud_Message_UserGroupGetResponse(const Cloud_Message_UserGroupGetResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      usergroupinfo_(from.usergroupinfo_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Cloud.Message.UserGroupGetResponse)
}

void Cloud_Message_UserGroupGetResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Cloud_Message_UserGroupGetResponse_Im_2eproto.base);
}

Cloud_Message_UserGroupGetResponse::~Cloud_Message_UserGroupGetResponse() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Cloud.Message.UserGroupGetResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Cloud_Message_UserGroupGetResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Cloud_Message_UserGroupGetResponse::ArenaDtor(void* object) {
  Cloud_Message_UserGroupGetResponse* _this = reinterpret_cast< Cloud_Message_UserGroupGetResponse* >(object);
  (void)_this;
}
void Cloud_Message_UserGroupGetResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Cloud_Message_UserGroupGetResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cloud_Message_UserGroupGetResponse& Cloud_Message_UserGroupGetResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Cloud_Message_UserGroupGetResponse_Im_2eproto.base);
  return *internal_default_instance();
}


void Cloud_Message_UserGroupGetResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Cloud.Message.UserGroupGetResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  usergroupinfo_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Cloud_Message_UserGroupGetResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .AcFunDanmu.Im.Cloud.Message.UserGroupInfo userGroupInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_usergroupinfo(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Cloud_Message_UserGroupGetResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Cloud.Message.UserGroupGetResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .AcFunDanmu.Im.Cloud.Message.UserGroupInfo userGroupInfo = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_usergroupinfo_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_usergroupinfo(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Cloud.Message.UserGroupGetResponse)
  return target;
}

size_t Cloud_Message_UserGroupGetResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Cloud.Message.UserGroupGetResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .AcFunDanmu.Im.Cloud.Message.UserGroupInfo userGroupInfo = 1;
  total_size += 1UL * this->_internal_usergroupinfo_size();
  for (const auto& msg : this->usergroupinfo_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cloud_Message_UserGroupGetResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Cloud.Message.UserGroupGetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const Cloud_Message_UserGroupGetResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Cloud_Message_UserGroupGetResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Cloud.Message.UserGroupGetResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Cloud.Message.UserGroupGetResponse)
    MergeFrom(*source);
  }
}

void Cloud_Message_UserGroupGetResponse::MergeFrom(const Cloud_Message_UserGroupGetResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Cloud.Message.UserGroupGetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  usergroupinfo_.MergeFrom(from.usergroupinfo_);
}

void Cloud_Message_UserGroupGetResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Cloud.Message.UserGroupGetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cloud_Message_UserGroupGetResponse::CopyFrom(const Cloud_Message_UserGroupGetResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Cloud.Message.UserGroupGetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cloud_Message_UserGroupGetResponse::IsInitialized() const {
  return true;
}

void Cloud_Message_UserGroupGetResponse::InternalSwap(Cloud_Message_UserGroupGetResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  usergroupinfo_.InternalSwap(&other->usergroupinfo_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Cloud_Message_UserGroupGetResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Cloud_Message_UserGroupInfo::_Internal {
 public:
  static const ::AcFunDanmu::Im::Cloud_Message_GroupInfo& groupinfo(const Cloud_Message_UserGroupInfo* msg);
  static const ::AcFunDanmu::Im::Cloud_Message_GroupMember& groupmember(const Cloud_Message_UserGroupInfo* msg);
};

const ::AcFunDanmu::Im::Cloud_Message_GroupInfo&
Cloud_Message_UserGroupInfo::_Internal::groupinfo(const Cloud_Message_UserGroupInfo* msg) {
  return *msg->groupinfo_;
}
const ::AcFunDanmu::Im::Cloud_Message_GroupMember&
Cloud_Message_UserGroupInfo::_Internal::groupmember(const Cloud_Message_UserGroupInfo* msg) {
  return *msg->groupmember_;
}
Cloud_Message_UserGroupInfo::Cloud_Message_UserGroupInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Cloud.Message.UserGroupInfo)
}
Cloud_Message_UserGroupInfo::Cloud_Message_UserGroupInfo(const Cloud_Message_UserGroupInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_groupinfo()) {
    groupinfo_ = new ::AcFunDanmu::Im::Cloud_Message_GroupInfo(*from.groupinfo_);
  } else {
    groupinfo_ = nullptr;
  }
  if (from._internal_has_groupmember()) {
    groupmember_ = new ::AcFunDanmu::Im::Cloud_Message_GroupMember(*from.groupmember_);
  } else {
    groupmember_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Cloud.Message.UserGroupInfo)
}

void Cloud_Message_UserGroupInfo::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Cloud_Message_UserGroupInfo_Im_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&groupinfo_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&groupmember_) -
      reinterpret_cast<char*>(&groupinfo_)) + sizeof(groupmember_));
}

Cloud_Message_UserGroupInfo::~Cloud_Message_UserGroupInfo() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Cloud.Message.UserGroupInfo)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Cloud_Message_UserGroupInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete groupinfo_;
  if (this != internal_default_instance()) delete groupmember_;
}

void Cloud_Message_UserGroupInfo::ArenaDtor(void* object) {
  Cloud_Message_UserGroupInfo* _this = reinterpret_cast< Cloud_Message_UserGroupInfo* >(object);
  (void)_this;
}
void Cloud_Message_UserGroupInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Cloud_Message_UserGroupInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cloud_Message_UserGroupInfo& Cloud_Message_UserGroupInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Cloud_Message_UserGroupInfo_Im_2eproto.base);
  return *internal_default_instance();
}


void Cloud_Message_UserGroupInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Cloud.Message.UserGroupInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && groupinfo_ != nullptr) {
    delete groupinfo_;
  }
  groupinfo_ = nullptr;
  if (GetArena() == nullptr && groupmember_ != nullptr) {
    delete groupmember_;
  }
  groupmember_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Cloud_Message_UserGroupInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .AcFunDanmu.Im.Cloud.Message.GroupInfo groupInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_groupinfo(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .AcFunDanmu.Im.Cloud.Message.GroupMember groupMember = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_groupmember(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Cloud_Message_UserGroupInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Cloud.Message.UserGroupInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .AcFunDanmu.Im.Cloud.Message.GroupInfo groupInfo = 1;
  if (this->has_groupinfo()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::groupinfo(this), target, stream);
  }

  // .AcFunDanmu.Im.Cloud.Message.GroupMember groupMember = 2;
  if (this->has_groupmember()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::groupmember(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Cloud.Message.UserGroupInfo)
  return target;
}

size_t Cloud_Message_UserGroupInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Cloud.Message.UserGroupInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .AcFunDanmu.Im.Cloud.Message.GroupInfo groupInfo = 1;
  if (this->has_groupinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *groupinfo_);
  }

  // .AcFunDanmu.Im.Cloud.Message.GroupMember groupMember = 2;
  if (this->has_groupmember()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *groupmember_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cloud_Message_UserGroupInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Cloud.Message.UserGroupInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const Cloud_Message_UserGroupInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Cloud_Message_UserGroupInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Cloud.Message.UserGroupInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Cloud.Message.UserGroupInfo)
    MergeFrom(*source);
  }
}

void Cloud_Message_UserGroupInfo::MergeFrom(const Cloud_Message_UserGroupInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Cloud.Message.UserGroupInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_groupinfo()) {
    _internal_mutable_groupinfo()->::AcFunDanmu::Im::Cloud_Message_GroupInfo::MergeFrom(from._internal_groupinfo());
  }
  if (from.has_groupmember()) {
    _internal_mutable_groupmember()->::AcFunDanmu::Im::Cloud_Message_GroupMember::MergeFrom(from._internal_groupmember());
  }
}

void Cloud_Message_UserGroupInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Cloud.Message.UserGroupInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cloud_Message_UserGroupInfo::CopyFrom(const Cloud_Message_UserGroupInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Cloud.Message.UserGroupInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cloud_Message_UserGroupInfo::IsInitialized() const {
  return true;
}

void Cloud_Message_UserGroupInfo::InternalSwap(Cloud_Message_UserGroupInfo* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Cloud_Message_UserGroupInfo, groupmember_)
      + sizeof(Cloud_Message_UserGroupInfo::groupmember_)
      - PROTOBUF_FIELD_OFFSET(Cloud_Message_UserGroupInfo, groupinfo_)>(
          reinterpret_cast<char*>(&groupinfo_),
          reinterpret_cast<char*>(&other->groupinfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Cloud_Message_UserGroupInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Cloud_Message_GroupMember::_Internal {
 public:
  static const ::AcFunDanmu::Im::Basic_User& user(const Cloud_Message_GroupMember* msg);
};

const ::AcFunDanmu::Im::Basic_User&
Cloud_Message_GroupMember::_Internal::user(const Cloud_Message_GroupMember* msg) {
  return *msg->user_;
}
Cloud_Message_GroupMember::Cloud_Message_GroupMember(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Cloud.Message.GroupMember)
}
Cloud_Message_GroupMember::Cloud_Message_GroupMember(const Cloud_Message_GroupMember& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  nickname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_nickname().empty()) {
    nickname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_nickname(), 
      GetArena());
  }
  if (from._internal_has_user()) {
    user_ = new ::AcFunDanmu::Im::Basic_User(*from.user_);
  } else {
    user_ = nullptr;
  }
  ::memcpy(&antidisturbing_, &from.antidisturbing_,
    static_cast<size_t>(reinterpret_cast<char*>(&findtype_) -
    reinterpret_cast<char*>(&antidisturbing_)) + sizeof(findtype_));
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Cloud.Message.GroupMember)
}

void Cloud_Message_GroupMember::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Cloud_Message_GroupMember_Im_2eproto.base);
  nickname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&user_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&findtype_) -
      reinterpret_cast<char*>(&user_)) + sizeof(findtype_));
}

Cloud_Message_GroupMember::~Cloud_Message_GroupMember() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Cloud.Message.GroupMember)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Cloud_Message_GroupMember::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  nickname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete user_;
}

void Cloud_Message_GroupMember::ArenaDtor(void* object) {
  Cloud_Message_GroupMember* _this = reinterpret_cast< Cloud_Message_GroupMember* >(object);
  (void)_this;
}
void Cloud_Message_GroupMember::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Cloud_Message_GroupMember::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cloud_Message_GroupMember& Cloud_Message_GroupMember::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Cloud_Message_GroupMember_Im_2eproto.base);
  return *internal_default_instance();
}


void Cloud_Message_GroupMember::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Cloud.Message.GroupMember)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  nickname_.ClearToEmpty();
  if (GetArena() == nullptr && user_ != nullptr) {
    delete user_;
  }
  user_ = nullptr;
  ::memset(&antidisturbing_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&findtype_) -
      reinterpret_cast<char*>(&antidisturbing_)) + sizeof(findtype_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Cloud_Message_GroupMember::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .AcFunDanmu.Im.Basic.User user = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_user(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string nickname = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_nickname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.Cloud.Message.GroupMember.nickname"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool antiDisturbing = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          antidisturbing_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .AcFunDanmu.Im.Cloud.Message.GroupMember.GroupMemberStatus status = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_status(static_cast<::AcFunDanmu::Im::Cloud_Message_GroupMember_GroupMemberStatus>(val));
        } else goto handle_unusual;
        continue;
      // int64 inviterId = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          inviterid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 joinTime = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          jointime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 createTime = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          createtime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 updateTime = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          updatetime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .AcFunDanmu.Im.Cloud.Message.GroupMember.GroupMemberRole role = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_role(static_cast<::AcFunDanmu::Im::Cloud_Message_GroupMember_GroupMemberRole>(val));
        } else goto handle_unusual;
        continue;
      // .AcFunDanmu.Im.Cloud.Message.GroupFindType findType = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_findtype(static_cast<::AcFunDanmu::Im::Cloud_Message_GroupFindType>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Cloud_Message_GroupMember::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Cloud.Message.GroupMember)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .AcFunDanmu.Im.Basic.User user = 1;
  if (this->has_user()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::user(this), target, stream);
  }

  // string nickname = 2;
  if (this->nickname().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_nickname().data(), static_cast<int>(this->_internal_nickname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.Cloud.Message.GroupMember.nickname");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_nickname(), target);
  }

  // bool antiDisturbing = 3;
  if (this->antidisturbing() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_antidisturbing(), target);
  }

  // .AcFunDanmu.Im.Cloud.Message.GroupMember.GroupMemberStatus status = 4;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      4, this->_internal_status(), target);
  }

  // int64 inviterId = 5;
  if (this->inviterid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(5, this->_internal_inviterid(), target);
  }

  // int64 joinTime = 6;
  if (this->jointime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(6, this->_internal_jointime(), target);
  }

  // int64 createTime = 7;
  if (this->createtime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(7, this->_internal_createtime(), target);
  }

  // int64 updateTime = 8;
  if (this->updatetime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(8, this->_internal_updatetime(), target);
  }

  // .AcFunDanmu.Im.Cloud.Message.GroupMember.GroupMemberRole role = 9;
  if (this->role() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      9, this->_internal_role(), target);
  }

  // .AcFunDanmu.Im.Cloud.Message.GroupFindType findType = 10;
  if (this->findtype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      10, this->_internal_findtype(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Cloud.Message.GroupMember)
  return target;
}

size_t Cloud_Message_GroupMember::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Cloud.Message.GroupMember)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string nickname = 2;
  if (this->nickname().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_nickname());
  }

  // .AcFunDanmu.Im.Basic.User user = 1;
  if (this->has_user()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *user_);
  }

  // bool antiDisturbing = 3;
  if (this->antidisturbing() != 0) {
    total_size += 1 + 1;
  }

  // .AcFunDanmu.Im.Cloud.Message.GroupMember.GroupMemberStatus status = 4;
  if (this->status() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_status());
  }

  // int64 inviterId = 5;
  if (this->inviterid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_inviterid());
  }

  // int64 joinTime = 6;
  if (this->jointime() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_jointime());
  }

  // int64 createTime = 7;
  if (this->createtime() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_createtime());
  }

  // int64 updateTime = 8;
  if (this->updatetime() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_updatetime());
  }

  // .AcFunDanmu.Im.Cloud.Message.GroupMember.GroupMemberRole role = 9;
  if (this->role() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_role());
  }

  // .AcFunDanmu.Im.Cloud.Message.GroupFindType findType = 10;
  if (this->findtype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_findtype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cloud_Message_GroupMember::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Cloud.Message.GroupMember)
  GOOGLE_DCHECK_NE(&from, this);
  const Cloud_Message_GroupMember* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Cloud_Message_GroupMember>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Cloud.Message.GroupMember)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Cloud.Message.GroupMember)
    MergeFrom(*source);
  }
}

void Cloud_Message_GroupMember::MergeFrom(const Cloud_Message_GroupMember& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Cloud.Message.GroupMember)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.nickname().size() > 0) {
    _internal_set_nickname(from._internal_nickname());
  }
  if (from.has_user()) {
    _internal_mutable_user()->::AcFunDanmu::Im::Basic_User::MergeFrom(from._internal_user());
  }
  if (from.antidisturbing() != 0) {
    _internal_set_antidisturbing(from._internal_antidisturbing());
  }
  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
  if (from.inviterid() != 0) {
    _internal_set_inviterid(from._internal_inviterid());
  }
  if (from.jointime() != 0) {
    _internal_set_jointime(from._internal_jointime());
  }
  if (from.createtime() != 0) {
    _internal_set_createtime(from._internal_createtime());
  }
  if (from.updatetime() != 0) {
    _internal_set_updatetime(from._internal_updatetime());
  }
  if (from.role() != 0) {
    _internal_set_role(from._internal_role());
  }
  if (from.findtype() != 0) {
    _internal_set_findtype(from._internal_findtype());
  }
}

void Cloud_Message_GroupMember::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Cloud.Message.GroupMember)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cloud_Message_GroupMember::CopyFrom(const Cloud_Message_GroupMember& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Cloud.Message.GroupMember)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cloud_Message_GroupMember::IsInitialized() const {
  return true;
}

void Cloud_Message_GroupMember::InternalSwap(Cloud_Message_GroupMember* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  nickname_.Swap(&other->nickname_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Cloud_Message_GroupMember, findtype_)
      + sizeof(Cloud_Message_GroupMember::findtype_)
      - PROTOBUF_FIELD_OFFSET(Cloud_Message_GroupMember, user_)>(
          reinterpret_cast<char*>(&user_),
          reinterpret_cast<char*>(&other->user_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Cloud_Message_GroupMember::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Cloud_Message_GroupInfo::_Internal {
 public:
  static const ::AcFunDanmu::Im::Cloud_Message_GroupBasicInfo& basicinfo(const Cloud_Message_GroupInfo* msg);
  static const ::AcFunDanmu::Im::Cloud_Message_GroupMemberBriefInfo& groupmemberbriefinfo(const Cloud_Message_GroupInfo* msg);
};

const ::AcFunDanmu::Im::Cloud_Message_GroupBasicInfo&
Cloud_Message_GroupInfo::_Internal::basicinfo(const Cloud_Message_GroupInfo* msg) {
  return *msg->basicinfo_;
}
const ::AcFunDanmu::Im::Cloud_Message_GroupMemberBriefInfo&
Cloud_Message_GroupInfo::_Internal::groupmemberbriefinfo(const Cloud_Message_GroupInfo* msg) {
  return *msg->groupmemberbriefinfo_;
}
Cloud_Message_GroupInfo::Cloud_Message_GroupInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Cloud.Message.GroupInfo)
}
Cloud_Message_GroupInfo::Cloud_Message_GroupInfo(const Cloud_Message_GroupInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_basicinfo()) {
    basicinfo_ = new ::AcFunDanmu::Im::Cloud_Message_GroupBasicInfo(*from.basicinfo_);
  } else {
    basicinfo_ = nullptr;
  }
  if (from._internal_has_groupmemberbriefinfo()) {
    groupmemberbriefinfo_ = new ::AcFunDanmu::Im::Cloud_Message_GroupMemberBriefInfo(*from.groupmemberbriefinfo_);
  } else {
    groupmemberbriefinfo_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Cloud.Message.GroupInfo)
}

void Cloud_Message_GroupInfo::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Cloud_Message_GroupInfo_Im_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&basicinfo_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&groupmemberbriefinfo_) -
      reinterpret_cast<char*>(&basicinfo_)) + sizeof(groupmemberbriefinfo_));
}

Cloud_Message_GroupInfo::~Cloud_Message_GroupInfo() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Cloud.Message.GroupInfo)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Cloud_Message_GroupInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete basicinfo_;
  if (this != internal_default_instance()) delete groupmemberbriefinfo_;
}

void Cloud_Message_GroupInfo::ArenaDtor(void* object) {
  Cloud_Message_GroupInfo* _this = reinterpret_cast< Cloud_Message_GroupInfo* >(object);
  (void)_this;
}
void Cloud_Message_GroupInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Cloud_Message_GroupInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cloud_Message_GroupInfo& Cloud_Message_GroupInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Cloud_Message_GroupInfo_Im_2eproto.base);
  return *internal_default_instance();
}


void Cloud_Message_GroupInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Cloud.Message.GroupInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && basicinfo_ != nullptr) {
    delete basicinfo_;
  }
  basicinfo_ = nullptr;
  if (GetArena() == nullptr && groupmemberbriefinfo_ != nullptr) {
    delete groupmemberbriefinfo_;
  }
  groupmemberbriefinfo_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Cloud_Message_GroupInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .AcFunDanmu.Im.Cloud.Message.GroupBasicInfo basicInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_basicinfo(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .AcFunDanmu.Im.Cloud.Message.GroupMemberBriefInfo groupMemberBriefInfo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_groupmemberbriefinfo(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Cloud_Message_GroupInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Cloud.Message.GroupInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .AcFunDanmu.Im.Cloud.Message.GroupBasicInfo basicInfo = 1;
  if (this->has_basicinfo()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::basicinfo(this), target, stream);
  }

  // .AcFunDanmu.Im.Cloud.Message.GroupMemberBriefInfo groupMemberBriefInfo = 2;
  if (this->has_groupmemberbriefinfo()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::groupmemberbriefinfo(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Cloud.Message.GroupInfo)
  return target;
}

size_t Cloud_Message_GroupInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Cloud.Message.GroupInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .AcFunDanmu.Im.Cloud.Message.GroupBasicInfo basicInfo = 1;
  if (this->has_basicinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *basicinfo_);
  }

  // .AcFunDanmu.Im.Cloud.Message.GroupMemberBriefInfo groupMemberBriefInfo = 2;
  if (this->has_groupmemberbriefinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *groupmemberbriefinfo_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cloud_Message_GroupInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Cloud.Message.GroupInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const Cloud_Message_GroupInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Cloud_Message_GroupInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Cloud.Message.GroupInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Cloud.Message.GroupInfo)
    MergeFrom(*source);
  }
}

void Cloud_Message_GroupInfo::MergeFrom(const Cloud_Message_GroupInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Cloud.Message.GroupInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_basicinfo()) {
    _internal_mutable_basicinfo()->::AcFunDanmu::Im::Cloud_Message_GroupBasicInfo::MergeFrom(from._internal_basicinfo());
  }
  if (from.has_groupmemberbriefinfo()) {
    _internal_mutable_groupmemberbriefinfo()->::AcFunDanmu::Im::Cloud_Message_GroupMemberBriefInfo::MergeFrom(from._internal_groupmemberbriefinfo());
  }
}

void Cloud_Message_GroupInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Cloud.Message.GroupInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cloud_Message_GroupInfo::CopyFrom(const Cloud_Message_GroupInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Cloud.Message.GroupInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cloud_Message_GroupInfo::IsInitialized() const {
  return true;
}

void Cloud_Message_GroupInfo::InternalSwap(Cloud_Message_GroupInfo* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Cloud_Message_GroupInfo, groupmemberbriefinfo_)
      + sizeof(Cloud_Message_GroupInfo::groupmemberbriefinfo_)
      - PROTOBUF_FIELD_OFFSET(Cloud_Message_GroupInfo, basicinfo_)>(
          reinterpret_cast<char*>(&basicinfo_),
          reinterpret_cast<char*>(&other->basicinfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Cloud_Message_GroupInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Cloud_Message_GroupBasicInfo::_Internal {
 public:
  static const ::AcFunDanmu::Im::Basic_User& admin(const Cloud_Message_GroupBasicInfo* msg);
};

const ::AcFunDanmu::Im::Basic_User&
Cloud_Message_GroupBasicInfo::_Internal::admin(const Cloud_Message_GroupBasicInfo* msg) {
  return *msg->admin_;
}
Cloud_Message_GroupBasicInfo::Cloud_Message_GroupBasicInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo)
}
Cloud_Message_GroupBasicInfo::Cloud_Message_GroupBasicInfo(const Cloud_Message_GroupBasicInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  groupid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_groupid().empty()) {
    groupid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_groupid(), 
      GetArena());
  }
  groupname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_groupname().empty()) {
    groupname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_groupname(), 
      GetArena());
  }
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_description().empty()) {
    description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_description(), 
      GetArena());
  }
  if (from._internal_has_admin()) {
    admin_ = new ::AcFunDanmu::Im::Basic_User(*from.admin_);
  } else {
    admin_ = nullptr;
  }
  ::memcpy(&groupstatus_, &from.groupstatus_,
    static_cast<size_t>(reinterpret_cast<char*>(&forbiddenstate_) -
    reinterpret_cast<char*>(&groupstatus_)) + sizeof(forbiddenstate_));
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo)
}

void Cloud_Message_GroupBasicInfo::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Cloud_Message_GroupBasicInfo_Im_2eproto.base);
  groupid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  groupname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&admin_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&forbiddenstate_) -
      reinterpret_cast<char*>(&admin_)) + sizeof(forbiddenstate_));
}

Cloud_Message_GroupBasicInfo::~Cloud_Message_GroupBasicInfo() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Cloud_Message_GroupBasicInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  groupid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  groupname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete admin_;
}

void Cloud_Message_GroupBasicInfo::ArenaDtor(void* object) {
  Cloud_Message_GroupBasicInfo* _this = reinterpret_cast< Cloud_Message_GroupBasicInfo* >(object);
  (void)_this;
}
void Cloud_Message_GroupBasicInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Cloud_Message_GroupBasicInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cloud_Message_GroupBasicInfo& Cloud_Message_GroupBasicInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Cloud_Message_GroupBasicInfo_Im_2eproto.base);
  return *internal_default_instance();
}


void Cloud_Message_GroupBasicInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  groupid_.ClearToEmpty();
  groupname_.ClearToEmpty();
  description_.ClearToEmpty();
  if (GetArena() == nullptr && admin_ != nullptr) {
    delete admin_;
  }
  admin_ = nullptr;
  ::memset(&groupstatus_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&forbiddenstate_) -
      reinterpret_cast<char*>(&groupstatus_)) + sizeof(forbiddenstate_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Cloud_Message_GroupBasicInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string groupId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_groupid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.groupId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string groupName = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_groupname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.groupName"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .AcFunDanmu.Im.Basic.User admin = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_admin(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .AcFunDanmu.Im.Cloud.Message.GroupStatus groupStatus = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_groupstatus(static_cast<::AcFunDanmu::Im::Cloud_Message_GroupStatus>(val));
        } else goto handle_unusual;
        continue;
      // string description = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_description();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.description"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .AcFunDanmu.Im.Cloud.Message.JoinNeedPermissionType joinNeedPermission = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_joinneedpermission(static_cast<::AcFunDanmu::Im::Cloud_Message_JoinNeedPermissionType>(val));
        } else goto handle_unusual;
        continue;
      // int64 createTime = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          createtime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 updateTime = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          updatetime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .AcFunDanmu.Im.Cloud.Message.GroupType groupType = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_grouptype(static_cast<::AcFunDanmu::Im::Cloud_Message_GroupType>(val));
        } else goto handle_unusual;
        continue;
      // .AcFunDanmu.Im.Cloud.Message.ForbiddenState forbiddenState = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_forbiddenstate(static_cast<::AcFunDanmu::Im::Cloud_Message_ForbiddenState>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Cloud_Message_GroupBasicInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string groupId = 1;
  if (this->groupid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_groupid().data(), static_cast<int>(this->_internal_groupid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.groupId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_groupid(), target);
  }

  // string groupName = 2;
  if (this->groupname().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_groupname().data(), static_cast<int>(this->_internal_groupname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.groupName");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_groupname(), target);
  }

  // .AcFunDanmu.Im.Basic.User admin = 3;
  if (this->has_admin()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::admin(this), target, stream);
  }

  // .AcFunDanmu.Im.Cloud.Message.GroupStatus groupStatus = 4;
  if (this->groupstatus() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      4, this->_internal_groupstatus(), target);
  }

  // string description = 5;
  if (this->description().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.description");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_description(), target);
  }

  // .AcFunDanmu.Im.Cloud.Message.JoinNeedPermissionType joinNeedPermission = 6;
  if (this->joinneedpermission() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      6, this->_internal_joinneedpermission(), target);
  }

  // int64 createTime = 7;
  if (this->createtime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(7, this->_internal_createtime(), target);
  }

  // int64 updateTime = 8;
  if (this->updatetime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(8, this->_internal_updatetime(), target);
  }

  // .AcFunDanmu.Im.Cloud.Message.GroupType groupType = 9;
  if (this->grouptype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      9, this->_internal_grouptype(), target);
  }

  // .AcFunDanmu.Im.Cloud.Message.ForbiddenState forbiddenState = 10;
  if (this->forbiddenstate() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      10, this->_internal_forbiddenstate(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo)
  return target;
}

size_t Cloud_Message_GroupBasicInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string groupId = 1;
  if (this->groupid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_groupid());
  }

  // string groupName = 2;
  if (this->groupname().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_groupname());
  }

  // string description = 5;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  // .AcFunDanmu.Im.Basic.User admin = 3;
  if (this->has_admin()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *admin_);
  }

  // .AcFunDanmu.Im.Cloud.Message.GroupStatus groupStatus = 4;
  if (this->groupstatus() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_groupstatus());
  }

  // .AcFunDanmu.Im.Cloud.Message.JoinNeedPermissionType joinNeedPermission = 6;
  if (this->joinneedpermission() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_joinneedpermission());
  }

  // int64 createTime = 7;
  if (this->createtime() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_createtime());
  }

  // int64 updateTime = 8;
  if (this->updatetime() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_updatetime());
  }

  // .AcFunDanmu.Im.Cloud.Message.GroupType groupType = 9;
  if (this->grouptype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_grouptype());
  }

  // .AcFunDanmu.Im.Cloud.Message.ForbiddenState forbiddenState = 10;
  if (this->forbiddenstate() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_forbiddenstate());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cloud_Message_GroupBasicInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const Cloud_Message_GroupBasicInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Cloud_Message_GroupBasicInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo)
    MergeFrom(*source);
  }
}

void Cloud_Message_GroupBasicInfo::MergeFrom(const Cloud_Message_GroupBasicInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.groupid().size() > 0) {
    _internal_set_groupid(from._internal_groupid());
  }
  if (from.groupname().size() > 0) {
    _internal_set_groupname(from._internal_groupname());
  }
  if (from.description().size() > 0) {
    _internal_set_description(from._internal_description());
  }
  if (from.has_admin()) {
    _internal_mutable_admin()->::AcFunDanmu::Im::Basic_User::MergeFrom(from._internal_admin());
  }
  if (from.groupstatus() != 0) {
    _internal_set_groupstatus(from._internal_groupstatus());
  }
  if (from.joinneedpermission() != 0) {
    _internal_set_joinneedpermission(from._internal_joinneedpermission());
  }
  if (from.createtime() != 0) {
    _internal_set_createtime(from._internal_createtime());
  }
  if (from.updatetime() != 0) {
    _internal_set_updatetime(from._internal_updatetime());
  }
  if (from.grouptype() != 0) {
    _internal_set_grouptype(from._internal_grouptype());
  }
  if (from.forbiddenstate() != 0) {
    _internal_set_forbiddenstate(from._internal_forbiddenstate());
  }
}

void Cloud_Message_GroupBasicInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cloud_Message_GroupBasicInfo::CopyFrom(const Cloud_Message_GroupBasicInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Cloud.Message.GroupBasicInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cloud_Message_GroupBasicInfo::IsInitialized() const {
  return true;
}

void Cloud_Message_GroupBasicInfo::InternalSwap(Cloud_Message_GroupBasicInfo* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  groupid_.Swap(&other->groupid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  groupname_.Swap(&other->groupname_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  description_.Swap(&other->description_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Cloud_Message_GroupBasicInfo, forbiddenstate_)
      + sizeof(Cloud_Message_GroupBasicInfo::forbiddenstate_)
      - PROTOBUF_FIELD_OFFSET(Cloud_Message_GroupBasicInfo, admin_)>(
          reinterpret_cast<char*>(&admin_),
          reinterpret_cast<char*>(&other->admin_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Cloud_Message_GroupBasicInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Cloud_Message_GroupMemberBriefInfo::_Internal {
 public:
};

Cloud_Message_GroupMemberBriefInfo::Cloud_Message_GroupMemberBriefInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  topmembers_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Cloud.Message.GroupMemberBriefInfo)
}
Cloud_Message_GroupMemberBriefInfo::Cloud_Message_GroupMemberBriefInfo(const Cloud_Message_GroupMemberBriefInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      topmembers_(from.topmembers_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&lastupdatetime_, &from.lastupdatetime_,
    static_cast<size_t>(reinterpret_cast<char*>(&membercount_) -
    reinterpret_cast<char*>(&lastupdatetime_)) + sizeof(membercount_));
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Cloud.Message.GroupMemberBriefInfo)
}

void Cloud_Message_GroupMemberBriefInfo::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Cloud_Message_GroupMemberBriefInfo_Im_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&lastupdatetime_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&membercount_) -
      reinterpret_cast<char*>(&lastupdatetime_)) + sizeof(membercount_));
}

Cloud_Message_GroupMemberBriefInfo::~Cloud_Message_GroupMemberBriefInfo() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Cloud.Message.GroupMemberBriefInfo)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Cloud_Message_GroupMemberBriefInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Cloud_Message_GroupMemberBriefInfo::ArenaDtor(void* object) {
  Cloud_Message_GroupMemberBriefInfo* _this = reinterpret_cast< Cloud_Message_GroupMemberBriefInfo* >(object);
  (void)_this;
}
void Cloud_Message_GroupMemberBriefInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Cloud_Message_GroupMemberBriefInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cloud_Message_GroupMemberBriefInfo& Cloud_Message_GroupMemberBriefInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Cloud_Message_GroupMemberBriefInfo_Im_2eproto.base);
  return *internal_default_instance();
}


void Cloud_Message_GroupMemberBriefInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Cloud.Message.GroupMemberBriefInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  topmembers_.Clear();
  ::memset(&lastupdatetime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&membercount_) -
      reinterpret_cast<char*>(&lastupdatetime_)) + sizeof(membercount_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Cloud_Message_GroupMemberBriefInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 memberCount = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          membercount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .AcFunDanmu.Im.Basic.User topMembers = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_topmembers(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // int64 lastUpdateTime = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          lastupdatetime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Cloud_Message_GroupMemberBriefInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Cloud.Message.GroupMemberBriefInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 memberCount = 1;
  if (this->membercount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_membercount(), target);
  }

  // repeated .AcFunDanmu.Im.Basic.User topMembers = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_topmembers_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_topmembers(i), target, stream);
  }

  // int64 lastUpdateTime = 3;
  if (this->lastupdatetime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_lastupdatetime(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Cloud.Message.GroupMemberBriefInfo)
  return target;
}

size_t Cloud_Message_GroupMemberBriefInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Cloud.Message.GroupMemberBriefInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .AcFunDanmu.Im.Basic.User topMembers = 2;
  total_size += 1UL * this->_internal_topmembers_size();
  for (const auto& msg : this->topmembers_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // int64 lastUpdateTime = 3;
  if (this->lastupdatetime() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_lastupdatetime());
  }

  // int32 memberCount = 1;
  if (this->membercount() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_membercount());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cloud_Message_GroupMemberBriefInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Cloud.Message.GroupMemberBriefInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const Cloud_Message_GroupMemberBriefInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Cloud_Message_GroupMemberBriefInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Cloud.Message.GroupMemberBriefInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Cloud.Message.GroupMemberBriefInfo)
    MergeFrom(*source);
  }
}

void Cloud_Message_GroupMemberBriefInfo::MergeFrom(const Cloud_Message_GroupMemberBriefInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Cloud.Message.GroupMemberBriefInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  topmembers_.MergeFrom(from.topmembers_);
  if (from.lastupdatetime() != 0) {
    _internal_set_lastupdatetime(from._internal_lastupdatetime());
  }
  if (from.membercount() != 0) {
    _internal_set_membercount(from._internal_membercount());
  }
}

void Cloud_Message_GroupMemberBriefInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Cloud.Message.GroupMemberBriefInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cloud_Message_GroupMemberBriefInfo::CopyFrom(const Cloud_Message_GroupMemberBriefInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Cloud.Message.GroupMemberBriefInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cloud_Message_GroupMemberBriefInfo::IsInitialized() const {
  return true;
}

void Cloud_Message_GroupMemberBriefInfo::InternalSwap(Cloud_Message_GroupMemberBriefInfo* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  topmembers_.InternalSwap(&other->topmembers_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Cloud_Message_GroupMemberBriefInfo, membercount_)
      + sizeof(Cloud_Message_GroupMemberBriefInfo::membercount_)
      - PROTOBUF_FIELD_OFFSET(Cloud_Message_GroupMemberBriefInfo, lastupdatetime_)>(
          reinterpret_cast<char*>(&lastupdatetime_),
          reinterpret_cast<char*>(&other->lastupdatetime_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Cloud_Message_GroupMemberBriefInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Cloud_Message_ImcPassThroughRequest::_Internal {
 public:
  static const ::AcFunDanmu::Im::ImMessage_ChatTarget& chattarget(const Cloud_Message_ImcPassThroughRequest* msg);
};

const ::AcFunDanmu::Im::ImMessage_ChatTarget&
Cloud_Message_ImcPassThroughRequest::_Internal::chattarget(const Cloud_Message_ImcPassThroughRequest* msg) {
  return *msg->chattarget_;
}
Cloud_Message_ImcPassThroughRequest::Cloud_Message_ImcPassThroughRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Cloud.Message.ImcPassThroughRequest)
}
Cloud_Message_ImcPassThroughRequest::Cloud_Message_ImcPassThroughRequest(const Cloud_Message_ImcPassThroughRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  content_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_content().empty()) {
    content_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_content(), 
      GetArena());
  }
  if (from._internal_has_chattarget()) {
    chattarget_ = new ::AcFunDanmu::Im::ImMessage_ChatTarget(*from.chattarget_);
  } else {
    chattarget_ = nullptr;
  }
  contenttype_ = from.contenttype_;
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Cloud.Message.ImcPassThroughRequest)
}

void Cloud_Message_ImcPassThroughRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Cloud_Message_ImcPassThroughRequest_Im_2eproto.base);
  content_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&chattarget_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&contenttype_) -
      reinterpret_cast<char*>(&chattarget_)) + sizeof(contenttype_));
}

Cloud_Message_ImcPassThroughRequest::~Cloud_Message_ImcPassThroughRequest() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Cloud.Message.ImcPassThroughRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Cloud_Message_ImcPassThroughRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  content_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete chattarget_;
}

void Cloud_Message_ImcPassThroughRequest::ArenaDtor(void* object) {
  Cloud_Message_ImcPassThroughRequest* _this = reinterpret_cast< Cloud_Message_ImcPassThroughRequest* >(object);
  (void)_this;
}
void Cloud_Message_ImcPassThroughRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Cloud_Message_ImcPassThroughRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cloud_Message_ImcPassThroughRequest& Cloud_Message_ImcPassThroughRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Cloud_Message_ImcPassThroughRequest_Im_2eproto.base);
  return *internal_default_instance();
}


void Cloud_Message_ImcPassThroughRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Cloud.Message.ImcPassThroughRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  content_.ClearToEmpty();
  if (GetArena() == nullptr && chattarget_ != nullptr) {
    delete chattarget_;
  }
  chattarget_ = nullptr;
  contenttype_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Cloud_Message_ImcPassThroughRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .AcFunDanmu.Im.ImMessage.ChatTarget chatTarget = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_chattarget(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes content = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_content();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 contentType = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          contenttype_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Cloud_Message_ImcPassThroughRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Cloud.Message.ImcPassThroughRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .AcFunDanmu.Im.ImMessage.ChatTarget chatTarget = 1;
  if (this->has_chattarget()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::chattarget(this), target, stream);
  }

  // bytes content = 2;
  if (this->content().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_content(), target);
  }

  // int32 contentType = 3;
  if (this->contenttype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_contenttype(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Cloud.Message.ImcPassThroughRequest)
  return target;
}

size_t Cloud_Message_ImcPassThroughRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Cloud.Message.ImcPassThroughRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes content = 2;
  if (this->content().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_content());
  }

  // .AcFunDanmu.Im.ImMessage.ChatTarget chatTarget = 1;
  if (this->has_chattarget()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *chattarget_);
  }

  // int32 contentType = 3;
  if (this->contenttype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_contenttype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cloud_Message_ImcPassThroughRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Cloud.Message.ImcPassThroughRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const Cloud_Message_ImcPassThroughRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Cloud_Message_ImcPassThroughRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Cloud.Message.ImcPassThroughRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Cloud.Message.ImcPassThroughRequest)
    MergeFrom(*source);
  }
}

void Cloud_Message_ImcPassThroughRequest::MergeFrom(const Cloud_Message_ImcPassThroughRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Cloud.Message.ImcPassThroughRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.content().size() > 0) {
    _internal_set_content(from._internal_content());
  }
  if (from.has_chattarget()) {
    _internal_mutable_chattarget()->::AcFunDanmu::Im::ImMessage_ChatTarget::MergeFrom(from._internal_chattarget());
  }
  if (from.contenttype() != 0) {
    _internal_set_contenttype(from._internal_contenttype());
  }
}

void Cloud_Message_ImcPassThroughRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Cloud.Message.ImcPassThroughRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cloud_Message_ImcPassThroughRequest::CopyFrom(const Cloud_Message_ImcPassThroughRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Cloud.Message.ImcPassThroughRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cloud_Message_ImcPassThroughRequest::IsInitialized() const {
  return true;
}

void Cloud_Message_ImcPassThroughRequest::InternalSwap(Cloud_Message_ImcPassThroughRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  content_.Swap(&other->content_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Cloud_Message_ImcPassThroughRequest, contenttype_)
      + sizeof(Cloud_Message_ImcPassThroughRequest::contenttype_)
      - PROTOBUF_FIELD_OFFSET(Cloud_Message_ImcPassThroughRequest, chattarget_)>(
          reinterpret_cast<char*>(&chattarget_),
          reinterpret_cast<char*>(&other->chattarget_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Cloud_Message_ImcPassThroughRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Cloud_Message_ImcPassThroughResponse::_Internal {
 public:
};

Cloud_Message_ImcPassThroughResponse::Cloud_Message_ImcPassThroughResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Cloud.Message.ImcPassThroughResponse)
}
Cloud_Message_ImcPassThroughResponse::Cloud_Message_ImcPassThroughResponse(const Cloud_Message_ImcPassThroughResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Cloud.Message.ImcPassThroughResponse)
}

void Cloud_Message_ImcPassThroughResponse::SharedCtor() {
}

Cloud_Message_ImcPassThroughResponse::~Cloud_Message_ImcPassThroughResponse() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Cloud.Message.ImcPassThroughResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Cloud_Message_ImcPassThroughResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Cloud_Message_ImcPassThroughResponse::ArenaDtor(void* object) {
  Cloud_Message_ImcPassThroughResponse* _this = reinterpret_cast< Cloud_Message_ImcPassThroughResponse* >(object);
  (void)_this;
}
void Cloud_Message_ImcPassThroughResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Cloud_Message_ImcPassThroughResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cloud_Message_ImcPassThroughResponse& Cloud_Message_ImcPassThroughResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Cloud_Message_ImcPassThroughResponse_Im_2eproto.base);
  return *internal_default_instance();
}


void Cloud_Message_ImcPassThroughResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Cloud.Message.ImcPassThroughResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Cloud_Message_ImcPassThroughResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Cloud_Message_ImcPassThroughResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Cloud.Message.ImcPassThroughResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Cloud.Message.ImcPassThroughResponse)
  return target;
}

size_t Cloud_Message_ImcPassThroughResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Cloud.Message.ImcPassThroughResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cloud_Message_ImcPassThroughResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Cloud.Message.ImcPassThroughResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const Cloud_Message_ImcPassThroughResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Cloud_Message_ImcPassThroughResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Cloud.Message.ImcPassThroughResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Cloud.Message.ImcPassThroughResponse)
    MergeFrom(*source);
  }
}

void Cloud_Message_ImcPassThroughResponse::MergeFrom(const Cloud_Message_ImcPassThroughResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Cloud.Message.ImcPassThroughResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Cloud_Message_ImcPassThroughResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Cloud.Message.ImcPassThroughResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cloud_Message_ImcPassThroughResponse::CopyFrom(const Cloud_Message_ImcPassThroughResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Cloud.Message.ImcPassThroughResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cloud_Message_ImcPassThroughResponse::IsInitialized() const {
  return true;
}

void Cloud_Message_ImcPassThroughResponse::InternalSwap(Cloud_Message_ImcPassThroughResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Cloud_Message_ImcPassThroughResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Cloud_Message_ImcPassThroughPush::_Internal {
 public:
  static const ::AcFunDanmu::Im::ImMessage_ChatTarget& chattarget(const Cloud_Message_ImcPassThroughPush* msg);
  static const ::AcFunDanmu::Im::Basic_User& fromuser(const Cloud_Message_ImcPassThroughPush* msg);
};

const ::AcFunDanmu::Im::ImMessage_ChatTarget&
Cloud_Message_ImcPassThroughPush::_Internal::chattarget(const Cloud_Message_ImcPassThroughPush* msg) {
  return *msg->chattarget_;
}
const ::AcFunDanmu::Im::Basic_User&
Cloud_Message_ImcPassThroughPush::_Internal::fromuser(const Cloud_Message_ImcPassThroughPush* msg) {
  return *msg->fromuser_;
}
Cloud_Message_ImcPassThroughPush::Cloud_Message_ImcPassThroughPush(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Cloud.Message.ImcPassThroughPush)
}
Cloud_Message_ImcPassThroughPush::Cloud_Message_ImcPassThroughPush(const Cloud_Message_ImcPassThroughPush& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  content_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_content().empty()) {
    content_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_content(), 
      GetArena());
  }
  if (from._internal_has_chattarget()) {
    chattarget_ = new ::AcFunDanmu::Im::ImMessage_ChatTarget(*from.chattarget_);
  } else {
    chattarget_ = nullptr;
  }
  if (from._internal_has_fromuser()) {
    fromuser_ = new ::AcFunDanmu::Im::Basic_User(*from.fromuser_);
  } else {
    fromuser_ = nullptr;
  }
  contenttype_ = from.contenttype_;
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Cloud.Message.ImcPassThroughPush)
}

void Cloud_Message_ImcPassThroughPush::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Cloud_Message_ImcPassThroughPush_Im_2eproto.base);
  content_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&chattarget_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&contenttype_) -
      reinterpret_cast<char*>(&chattarget_)) + sizeof(contenttype_));
}

Cloud_Message_ImcPassThroughPush::~Cloud_Message_ImcPassThroughPush() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Cloud.Message.ImcPassThroughPush)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Cloud_Message_ImcPassThroughPush::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  content_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete chattarget_;
  if (this != internal_default_instance()) delete fromuser_;
}

void Cloud_Message_ImcPassThroughPush::ArenaDtor(void* object) {
  Cloud_Message_ImcPassThroughPush* _this = reinterpret_cast< Cloud_Message_ImcPassThroughPush* >(object);
  (void)_this;
}
void Cloud_Message_ImcPassThroughPush::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Cloud_Message_ImcPassThroughPush::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cloud_Message_ImcPassThroughPush& Cloud_Message_ImcPassThroughPush::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Cloud_Message_ImcPassThroughPush_Im_2eproto.base);
  return *internal_default_instance();
}


void Cloud_Message_ImcPassThroughPush::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Cloud.Message.ImcPassThroughPush)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  content_.ClearToEmpty();
  if (GetArena() == nullptr && chattarget_ != nullptr) {
    delete chattarget_;
  }
  chattarget_ = nullptr;
  if (GetArena() == nullptr && fromuser_ != nullptr) {
    delete fromuser_;
  }
  fromuser_ = nullptr;
  contenttype_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Cloud_Message_ImcPassThroughPush::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .AcFunDanmu.Im.ImMessage.ChatTarget chatTarget = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_chattarget(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .AcFunDanmu.Im.Basic.User fromUser = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_fromuser(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes content = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_content();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 contentType = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          contenttype_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Cloud_Message_ImcPassThroughPush::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Cloud.Message.ImcPassThroughPush)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .AcFunDanmu.Im.ImMessage.ChatTarget chatTarget = 1;
  if (this->has_chattarget()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::chattarget(this), target, stream);
  }

  // .AcFunDanmu.Im.Basic.User fromUser = 2;
  if (this->has_fromuser()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::fromuser(this), target, stream);
  }

  // bytes content = 3;
  if (this->content().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_content(), target);
  }

  // int32 contentType = 4;
  if (this->contenttype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_contenttype(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Cloud.Message.ImcPassThroughPush)
  return target;
}

size_t Cloud_Message_ImcPassThroughPush::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Cloud.Message.ImcPassThroughPush)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes content = 3;
  if (this->content().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_content());
  }

  // .AcFunDanmu.Im.ImMessage.ChatTarget chatTarget = 1;
  if (this->has_chattarget()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *chattarget_);
  }

  // .AcFunDanmu.Im.Basic.User fromUser = 2;
  if (this->has_fromuser()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *fromuser_);
  }

  // int32 contentType = 4;
  if (this->contenttype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_contenttype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cloud_Message_ImcPassThroughPush::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Cloud.Message.ImcPassThroughPush)
  GOOGLE_DCHECK_NE(&from, this);
  const Cloud_Message_ImcPassThroughPush* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Cloud_Message_ImcPassThroughPush>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Cloud.Message.ImcPassThroughPush)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Cloud.Message.ImcPassThroughPush)
    MergeFrom(*source);
  }
}

void Cloud_Message_ImcPassThroughPush::MergeFrom(const Cloud_Message_ImcPassThroughPush& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Cloud.Message.ImcPassThroughPush)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.content().size() > 0) {
    _internal_set_content(from._internal_content());
  }
  if (from.has_chattarget()) {
    _internal_mutable_chattarget()->::AcFunDanmu::Im::ImMessage_ChatTarget::MergeFrom(from._internal_chattarget());
  }
  if (from.has_fromuser()) {
    _internal_mutable_fromuser()->::AcFunDanmu::Im::Basic_User::MergeFrom(from._internal_fromuser());
  }
  if (from.contenttype() != 0) {
    _internal_set_contenttype(from._internal_contenttype());
  }
}

void Cloud_Message_ImcPassThroughPush::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Cloud.Message.ImcPassThroughPush)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cloud_Message_ImcPassThroughPush::CopyFrom(const Cloud_Message_ImcPassThroughPush& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Cloud.Message.ImcPassThroughPush)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cloud_Message_ImcPassThroughPush::IsInitialized() const {
  return true;
}

void Cloud_Message_ImcPassThroughPush::InternalSwap(Cloud_Message_ImcPassThroughPush* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  content_.Swap(&other->content_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Cloud_Message_ImcPassThroughPush, contenttype_)
      + sizeof(Cloud_Message_ImcPassThroughPush::contenttype_)
      - PROTOBUF_FIELD_OFFSET(Cloud_Message_ImcPassThroughPush, chattarget_)>(
          reinterpret_cast<char*>(&chattarget_),
          reinterpret_cast<char*>(&other->chattarget_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Cloud_Message_ImcPassThroughPush::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Cloud_Message_InputtingContent::_Internal {
 public:
};

Cloud_Message_InputtingContent::Cloud_Message_InputtingContent(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Cloud.Message.InputtingContent)
}
Cloud_Message_InputtingContent::Cloud_Message_InputtingContent(const Cloud_Message_InputtingContent& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  displayinterval_ = from.displayinterval_;
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Cloud.Message.InputtingContent)
}

void Cloud_Message_InputtingContent::SharedCtor() {
  displayinterval_ = 0;
}

Cloud_Message_InputtingContent::~Cloud_Message_InputtingContent() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Cloud.Message.InputtingContent)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Cloud_Message_InputtingContent::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Cloud_Message_InputtingContent::ArenaDtor(void* object) {
  Cloud_Message_InputtingContent* _this = reinterpret_cast< Cloud_Message_InputtingContent* >(object);
  (void)_this;
}
void Cloud_Message_InputtingContent::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Cloud_Message_InputtingContent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cloud_Message_InputtingContent& Cloud_Message_InputtingContent::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Cloud_Message_InputtingContent_Im_2eproto.base);
  return *internal_default_instance();
}


void Cloud_Message_InputtingContent::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Cloud.Message.InputtingContent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  displayinterval_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Cloud_Message_InputtingContent::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 displayInterval = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          displayinterval_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Cloud_Message_InputtingContent::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Cloud.Message.InputtingContent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 displayInterval = 1;
  if (this->displayinterval() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_displayinterval(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Cloud.Message.InputtingContent)
  return target;
}

size_t Cloud_Message_InputtingContent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Cloud.Message.InputtingContent)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 displayInterval = 1;
  if (this->displayinterval() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_displayinterval());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cloud_Message_InputtingContent::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Cloud.Message.InputtingContent)
  GOOGLE_DCHECK_NE(&from, this);
  const Cloud_Message_InputtingContent* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Cloud_Message_InputtingContent>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Cloud.Message.InputtingContent)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Cloud.Message.InputtingContent)
    MergeFrom(*source);
  }
}

void Cloud_Message_InputtingContent::MergeFrom(const Cloud_Message_InputtingContent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Cloud.Message.InputtingContent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.displayinterval() != 0) {
    _internal_set_displayinterval(from._internal_displayinterval());
  }
}

void Cloud_Message_InputtingContent::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Cloud.Message.InputtingContent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cloud_Message_InputtingContent::CopyFrom(const Cloud_Message_InputtingContent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Cloud.Message.InputtingContent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cloud_Message_InputtingContent::IsInitialized() const {
  return true;
}

void Cloud_Message_InputtingContent::InternalSwap(Cloud_Message_InputtingContent* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(displayinterval_, other->displayinterval_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Cloud_Message_InputtingContent::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Cloud_Message::_Internal {
 public:
};

Cloud_Message::Cloud_Message(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Cloud.Message)
}
Cloud_Message::Cloud_Message(const Cloud_Message& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Cloud.Message)
}

void Cloud_Message::SharedCtor() {
}

Cloud_Message::~Cloud_Message() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Cloud.Message)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Cloud_Message::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Cloud_Message::ArenaDtor(void* object) {
  Cloud_Message* _this = reinterpret_cast< Cloud_Message* >(object);
  (void)_this;
}
void Cloud_Message::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Cloud_Message::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cloud_Message& Cloud_Message::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Cloud_Message_Im_2eproto.base);
  return *internal_default_instance();
}


void Cloud_Message::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Cloud.Message)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Cloud_Message::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Cloud_Message::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Cloud.Message)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Cloud.Message)
  return target;
}

size_t Cloud_Message::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Cloud.Message)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cloud_Message::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Cloud.Message)
  GOOGLE_DCHECK_NE(&from, this);
  const Cloud_Message* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Cloud_Message>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Cloud.Message)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Cloud.Message)
    MergeFrom(*source);
  }
}

void Cloud_Message::MergeFrom(const Cloud_Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Cloud.Message)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Cloud_Message::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Cloud.Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cloud_Message::CopyFrom(const Cloud_Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Cloud.Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cloud_Message::IsInitialized() const {
  return true;
}

void Cloud_Message::InternalSwap(Cloud_Message* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Cloud_Message::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Cloud::_Internal {
 public:
};

Cloud::Cloud(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.Im.Cloud)
}
Cloud::Cloud(const Cloud& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.Im.Cloud)
}

void Cloud::SharedCtor() {
}

Cloud::~Cloud() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.Im.Cloud)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Cloud::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Cloud::ArenaDtor(void* object) {
  Cloud* _this = reinterpret_cast< Cloud* >(object);
  (void)_this;
}
void Cloud::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Cloud::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cloud& Cloud::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Cloud_Im_2eproto.base);
  return *internal_default_instance();
}


void Cloud::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.Im.Cloud)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Cloud::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Cloud::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.Im.Cloud)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.Im.Cloud)
  return target;
}

size_t Cloud::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.Im.Cloud)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cloud::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.Im.Cloud)
  GOOGLE_DCHECK_NE(&from, this);
  const Cloud* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Cloud>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.Im.Cloud)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.Im.Cloud)
    MergeFrom(*source);
  }
}

void Cloud::MergeFrom(const Cloud& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.Im.Cloud)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Cloud::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.Im.Cloud)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cloud::CopyFrom(const Cloud& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.Im.Cloud)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cloud::IsInitialized() const {
  return true;
}

void Cloud::InternalSwap(Cloud* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Cloud::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace Im
}  // namespace AcFunDanmu
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Basic_PacketHeader* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Basic_PacketHeader >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Basic_PacketHeader >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Basic_User* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Basic_User >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Basic_User >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Basic_UserInstance* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Basic_UserInstance >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Basic_UserInstance >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Basic_UpstreamPayload* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Basic_UpstreamPayload >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Basic_UpstreamPayload >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Basic_DownstreamPayload* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Basic_DownstreamPayload >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Basic_DownstreamPayload >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Basic_PingRequest* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Basic_PingRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Basic_PingRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Basic_PingResponse* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Basic_PingResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Basic_PingResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Basic_RegisterRequest* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Basic_RegisterRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Basic_RegisterRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Basic_RegisterResponse* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Basic_RegisterResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Basic_RegisterResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Basic_AccessPointsConfig* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Basic_AccessPointsConfig >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Basic_AccessPointsConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Basic_UnregisterRequest* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Basic_UnregisterRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Basic_UnregisterRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Basic_UnregisterResponse* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Basic_UnregisterResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Basic_UnregisterResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Basic_KeepAliveRequest* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Basic_KeepAliveRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Basic_KeepAliveRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Basic_KeepAliveResponse* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Basic_KeepAliveResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Basic_KeepAliveResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Basic_AccessPoint* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Basic_AccessPoint >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Basic_AccessPoint >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Basic_TokenInfo* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Basic_TokenInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Basic_TokenInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Basic_PushServiceToken* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Basic_PushServiceToken >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Basic_PushServiceToken >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Basic_SettingInfo* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Basic_SettingInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Basic_SettingInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Basic_AppInfo* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Basic_AppInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Basic_AppInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Basic_DeviceInfo* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Basic_DeviceInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Basic_DeviceInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Basic_EnvInfo* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Basic_EnvInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Basic_EnvInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Basic_RequestBasicInfo* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Basic_RequestBasicInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Basic_RequestBasicInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Basic_SyncCookie* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Basic_SyncCookie >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Basic_SyncCookie >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Basic_I18nCopyWriting* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Basic_I18nCopyWriting >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Basic_I18nCopyWriting >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Basic_SdkOption* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Basic_SdkOption >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Basic_SdkOption >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Basic_LocaleMessage_ErrorMessageEntry_DoNotUse* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Basic_LocaleMessage_ErrorMessageEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Basic_LocaleMessage_ErrorMessageEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Basic_LocaleMessage* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Basic_LocaleMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Basic_LocaleMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Basic_ErrorMessage* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Basic_ErrorMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Basic_ErrorMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Basic* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Basic >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Basic >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::ImMessage_Message* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::ImMessage_Message >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::ImMessage_Message >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::ImMessage_SendMessageResponse* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::ImMessage_SendMessageResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::ImMessage_SendMessageResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::ImMessage_PullOldRequest* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::ImMessage_PullOldRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::ImMessage_PullOldRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::ImMessage_PullOldResponse* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::ImMessage_PullOldResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::ImMessage_PullOldResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::ImMessage_PullNewRequest* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::ImMessage_PullNewRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::ImMessage_PullNewRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::ImMessage_PullNewResponse* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::ImMessage_PullNewResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::ImMessage_PullNewResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::ImMessage_SessionListRequest* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::ImMessage_SessionListRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::ImMessage_SessionListRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::ImMessage_ChatSession* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::ImMessage_ChatSession >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::ImMessage_ChatSession >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::ImMessage_Reminder* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::ImMessage_Reminder >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::ImMessage_Reminder >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::ImMessage_RemindBody* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::ImMessage_RemindBody >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::ImMessage_RemindBody >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::ImMessage_ChatTarget* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::ImMessage_ChatTarget >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::ImMessage_ChatTarget >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::ImMessage_SessionListResponse* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::ImMessage_SessionListResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::ImMessage_SessionListResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::ImMessage_SessionPageListRequest* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::ImMessage_SessionPageListRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::ImMessage_SessionPageListRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::ImMessage_SessionPageListResponse* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::ImMessage_SessionPageListResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::ImMessage_SessionPageListResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::ImMessage_SessionRemoveRequest* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::ImMessage_SessionRemoveRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::ImMessage_SessionRemoveRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::ImMessage_SessionRemoveResponse* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::ImMessage_SessionRemoveResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::ImMessage_SessionRemoveResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::ImMessage_SessionCleanRequest* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::ImMessage_SessionCleanRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::ImMessage_SessionCleanRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::ImMessage_SessionCleanResponse* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::ImMessage_SessionCleanResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::ImMessage_SessionCleanResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::ImMessage_MessageDeleteRequest* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::ImMessage_MessageDeleteRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::ImMessage_MessageDeleteRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::ImMessage_MessageDeleteResponse* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::ImMessage_MessageDeleteResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::ImMessage_MessageDeleteResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::ImMessage_MessageCancelRequest* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::ImMessage_MessageCancelRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::ImMessage_MessageCancelRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::ImMessage_MessageCancelResponse* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::ImMessage_MessageCancelResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::ImMessage_MessageCancelResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::ImMessage_MessageClearRequest* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::ImMessage_MessageClearRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::ImMessage_MessageClearRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::ImMessage_MessageClearResponse* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::ImMessage_MessageClearResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::ImMessage_MessageClearResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::ImMessage_ReadSeqInfo* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::ImMessage_ReadSeqInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::ImMessage_ReadSeqInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::ImMessage_MessageReadSeqRequest* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::ImMessage_MessageReadSeqRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::ImMessage_MessageReadSeqRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::ImMessage_MessageReadSeqResponse* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::ImMessage_MessageReadSeqResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::ImMessage_MessageReadSeqResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::ImMessage_MessageReadPush* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::ImMessage_MessageReadPush >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::ImMessage_MessageReadPush >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::ImMessage_AllUnreadCountRequest* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::ImMessage_AllUnreadCountRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::ImMessage_AllUnreadCountRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::ImMessage_AllUnreadCountResponse* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::ImMessage_AllUnreadCountResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::ImMessage_AllUnreadCountResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::ImMessage_MessageReadAllRequest* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::ImMessage_MessageReadAllRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::ImMessage_MessageReadAllRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::ImMessage_MessageReadAllResponse* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::ImMessage_MessageReadAllResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::ImMessage_MessageReadAllResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::ImMessage_SesionStickyOnTopRequest* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::ImMessage_SesionStickyOnTopRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::ImMessage_SesionStickyOnTopRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::ImMessage_SessionStickyOnTopResponse* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::ImMessage_SessionStickyOnTopResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::ImMessage_SessionStickyOnTopResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::ImMessage_SessionRaw_RawEntry_DoNotUse* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::ImMessage_SessionRaw_RawEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::ImMessage_SessionRaw_RawEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::ImMessage_SessionRaw* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::ImMessage_SessionRaw >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::ImMessage_SessionRaw >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::ImMessage_MessageRecallRequest* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::ImMessage_MessageRecallRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::ImMessage_MessageRecallRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::ImMessage_MessageRecallResponse* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::ImMessage_MessageRecallResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::ImMessage_MessageRecallResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::ImMessage_MessageReceiptRequest* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::ImMessage_MessageReceiptRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::ImMessage_MessageReceiptRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::ImMessage_MessageReceiptResponse* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::ImMessage_MessageReceiptResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::ImMessage_MessageReceiptResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::ImMessage_MessageReceiptInfo* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::ImMessage_MessageReceiptInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::ImMessage_MessageReceiptInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::ImMessage_MessageReceiptCountGetRequest* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::ImMessage_MessageReceiptCountGetRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::ImMessage_MessageReceiptCountGetRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::ImMessage_MessageReceiptCountGetResponse* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::ImMessage_MessageReceiptCountGetResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::ImMessage_MessageReceiptCountGetResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::ImMessage_MessageReceiptStatus* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::ImMessage_MessageReceiptStatus >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::ImMessage_MessageReceiptStatus >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::ImMessage_MessageReceiptDetailGetRequest* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::ImMessage_MessageReceiptDetailGetRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::ImMessage_MessageReceiptDetailGetRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::ImMessage_MessageReceiptDetailGetResponse* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::ImMessage_MessageReceiptDetailGetResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::ImMessage_MessageReceiptDetailGetResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::ImMessage_MessageBatchSendRequest* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::ImMessage_MessageBatchSendRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::ImMessage_MessageBatchSendRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::ImMessage_MessageBatchSendResponse* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::ImMessage_MessageBatchSendResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::ImMessage_MessageBatchSendResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::ImMessage_ImageAttachment* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::ImMessage_ImageAttachment >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::ImMessage_ImageAttachment >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::ImMessage_AudioAttachment* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::ImMessage_AudioAttachment >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::ImMessage_AudioAttachment >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::ImMessage_GifAttachment* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::ImMessage_GifAttachment >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::ImMessage_GifAttachment >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::ImMessage_Attachment* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::ImMessage_Attachment >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::ImMessage_Attachment >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::ImMessage_Attachments* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::ImMessage_Attachments >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::ImMessage_Attachments >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::ImMessage_PlaceHolderMessage* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::ImMessage_PlaceHolderMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::ImMessage_PlaceHolderMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::ImMessage_ImageTextMessage* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::ImMessage_ImageTextMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::ImMessage_ImageTextMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::ImMessage_RichTextMessage* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::ImMessage_RichTextMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::ImMessage_RichTextMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::ImMessage_NoticeMessage* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::ImMessage_NoticeMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::ImMessage_NoticeMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::ImMessage_RichTextNoticeMessage_RichTextItem* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::ImMessage_RichTextNoticeMessage_RichTextItem >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::ImMessage_RichTextNoticeMessage_RichTextItem >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::ImMessage_RichTextNoticeMessage* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::ImMessage_RichTextNoticeMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::ImMessage_RichTextNoticeMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::ImMessage* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::ImMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::ImMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Cloud_Channel_ChannelSubscribeRequest* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Cloud_Channel_ChannelSubscribeRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Cloud_Channel_ChannelSubscribeRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Cloud_Channel_ChannelSubscribeResponse* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Cloud_Channel_ChannelSubscribeResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Cloud_Channel_ChannelSubscribeResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Cloud_Channel_ChannelUnsubscribeRequest* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Cloud_Channel_ChannelUnsubscribeRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Cloud_Channel_ChannelUnsubscribeRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Cloud_Channel_ChannelSubscribersGetRequest* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Cloud_Channel_ChannelSubscribersGetRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Cloud_Channel_ChannelSubscribersGetRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Cloud_Channel_ChannelSubscribersGetResposne* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Cloud_Channel_ChannelSubscribersGetResposne >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Cloud_Channel_ChannelSubscribersGetResposne >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Cloud_Channel_ChannelBasicInfo* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Cloud_Channel_ChannelBasicInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Cloud_Channel_ChannelBasicInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Cloud_Channel_UserActionInfo* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Cloud_Channel_UserActionInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Cloud_Channel_UserActionInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Cloud_Channel_ChannelBasicInfoGetRequest* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Cloud_Channel_ChannelBasicInfoGetRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Cloud_Channel_ChannelBasicInfoGetRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Cloud_Channel_ChannelBasicInfoGetResponse* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Cloud_Channel_ChannelBasicInfoGetResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Cloud_Channel_ChannelBasicInfoGetResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Cloud_Channel_ChannelHeartbeatRequest* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Cloud_Channel_ChannelHeartbeatRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Cloud_Channel_ChannelHeartbeatRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Cloud_Channel_ChannelHeartbeatResponse* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Cloud_Channel_ChannelHeartbeatResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Cloud_Channel_ChannelHeartbeatResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Cloud_Channel_ChannelBasicInfoNotify* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Cloud_Channel_ChannelBasicInfoNotify >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Cloud_Channel_ChannelBasicInfoNotify >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Cloud_Channel* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Cloud_Channel >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Cloud_Channel >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Cloud_Config_ClientConfigGetRequest* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Cloud_Config_ClientConfigGetRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Cloud_Config_ClientConfigGetRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Cloud_Config_ClientConfigGetResponse* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Cloud_Config_ClientConfigGetResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Cloud_Config_ClientConfigGetResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Cloud_Config_NetworkQualityDetectionConfig* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Cloud_Config_NetworkQualityDetectionConfig >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Cloud_Config_NetworkQualityDetectionConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Cloud_Config_ClientConfig* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Cloud_Config_ClientConfig >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Cloud_Config_ClientConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Cloud_Config* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Cloud_Config >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Cloud_Config >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Cloud_Profile_UserOnlineStatus* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Cloud_Profile_UserOnlineStatus >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Cloud_Profile_UserOnlineStatus >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Cloud_Profile_ProfileBatchOnlineTimeRequest* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Cloud_Profile_ProfileBatchOnlineTimeRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Cloud_Profile_ProfileBatchOnlineTimeRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Cloud_Profile_ProfileBatchOnlineTimeResponse* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Cloud_Profile_ProfileBatchOnlineTimeResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Cloud_Profile_ProfileBatchOnlineTimeResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Cloud_Profile* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Cloud_Profile >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Cloud_Profile >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Cloud_Data_Update_KsImDataUpdatePushPayload* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Cloud_Data_Update_KsImDataUpdatePushPayload >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Cloud_Data_Update_KsImDataUpdatePushPayload >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Cloud_Data_Update_GroupInfoDataUpdate* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Cloud_Data_Update_GroupInfoDataUpdate >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Cloud_Data_Update_GroupInfoDataUpdate >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Cloud_Data_Update_GroupMemberListUpdate* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Cloud_Data_Update_GroupMemberListUpdate >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Cloud_Data_Update_GroupMemberListUpdate >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Cloud_Data_Update_YouBeKicked* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Cloud_Data_Update_YouBeKicked >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Cloud_Data_Update_YouBeKicked >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Cloud_Data_Update_MessageRead* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Cloud_Data_Update_MessageRead >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Cloud_Data_Update_MessageRead >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Cloud_Data_Update_MessageReceipt* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Cloud_Data_Update_MessageReceipt >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Cloud_Data_Update_MessageReceipt >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Cloud_Data_Update* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Cloud_Data_Update >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Cloud_Data_Update >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Cloud_Data* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Cloud_Data >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Cloud_Data >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Cloud_Message_ImcRecalledMessage* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Cloud_Message_ImcRecalledMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Cloud_Message_ImcRecalledMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Cloud_Message_ImcReplaceMessage* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Cloud_Message_ImcReplaceMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Cloud_Message_ImcReplaceMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Cloud_Message_Text* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Cloud_Message_Text >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Cloud_Message_Text >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Cloud_Message_Image* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Cloud_Message_Image >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Cloud_Message_Image >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Cloud_Message_Audio* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Cloud_Message_Audio >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Cloud_Message_Audio >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Cloud_Message_Video* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Cloud_Message_Video >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Cloud_Message_Video >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Cloud_Message_Custom* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Cloud_Message_Custom >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Cloud_Message_Custom >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Cloud_Message_PicUrl* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Cloud_Message_PicUrl >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Cloud_Message_PicUrl >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Cloud_Message_Emoticon_Code* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Cloud_Message_Emoticon_Code >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Cloud_Message_Emoticon_Code >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Cloud_Message_Emoticon* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Cloud_Message_Emoticon >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Cloud_Message_Emoticon >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Cloud_Message_File* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Cloud_Message_File >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Cloud_Message_File >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Cloud_Message_Reference_ReferenceMessage* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Cloud_Message_Reference_ReferenceMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Cloud_Message_Reference_ReferenceMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Cloud_Message_Reference* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Cloud_Message_Reference >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Cloud_Message_Reference >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Cloud_Message_ForwardMessageContent* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Cloud_Message_ForwardMessageContent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Cloud_Message_ForwardMessageContent >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Cloud_Message_NoticePlaceholderMeta* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Cloud_Message_NoticePlaceholderMeta >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Cloud_Message_NoticePlaceholderMeta >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Cloud_Message_ImcNoticeMessage* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Cloud_Message_ImcNoticeMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Cloud_Message_ImcNoticeMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Cloud_Message_ConfirmInviteIntoGroupNoticeMetaInfo* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Cloud_Message_ConfirmInviteIntoGroupNoticeMetaInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Cloud_Message_ConfirmInviteIntoGroupNoticeMetaInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Cloud_Message_ConfirmJoinIntoGroupNoticeMetaInfo* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Cloud_Message_ConfirmJoinIntoGroupNoticeMetaInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Cloud_Message_ConfirmJoinIntoGroupNoticeMetaInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Cloud_Message_GroupCreateRequest* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Cloud_Message_GroupCreateRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Cloud_Message_GroupCreateRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Cloud_Message_GroupCreateReponse* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Cloud_Message_GroupCreateReponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Cloud_Message_GroupCreateReponse >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Cloud_Message_GroupDeleteRequest* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Cloud_Message_GroupDeleteRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Cloud_Message_GroupDeleteRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Cloud_Message_GroupDeleteResponse* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Cloud_Message_GroupDeleteResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Cloud_Message_GroupDeleteResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Cloud_Message_GroupInviteRequest* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Cloud_Message_GroupInviteRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Cloud_Message_GroupInviteRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Cloud_Message_GroupInvideResponse* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Cloud_Message_GroupInvideResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Cloud_Message_GroupInvideResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Cloud_Message_GroupJoinRequest* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Cloud_Message_GroupJoinRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Cloud_Message_GroupJoinRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Cloud_Message_GroupJoinResponse* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Cloud_Message_GroupJoinResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Cloud_Message_GroupJoinResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Cloud_Message_GroupJoinRequestAckRequest* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Cloud_Message_GroupJoinRequestAckRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Cloud_Message_GroupJoinRequestAckRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Cloud_Message_GroupJoinRequestAckResponse* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Cloud_Message_GroupJoinRequestAckResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Cloud_Message_GroupJoinRequestAckResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Cloud_Message_GroupJoinRequestGetRequest* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Cloud_Message_GroupJoinRequestGetRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Cloud_Message_GroupJoinRequestGetRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Cloud_Message_GroupJoinRequestGetResponse* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Cloud_Message_GroupJoinRequestGetResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Cloud_Message_GroupJoinRequestGetResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Cloud_Message_GroupJoinRequestCancelRequest* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Cloud_Message_GroupJoinRequestCancelRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Cloud_Message_GroupJoinRequestCancelRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Cloud_Message_GroupJoinRequestCancelResposne* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Cloud_Message_GroupJoinRequestCancelResposne >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Cloud_Message_GroupJoinRequestCancelResposne >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Cloud_Message_GroupQuitRequest* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Cloud_Message_GroupQuitRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Cloud_Message_GroupQuitRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Cloud_Message_GroupQuitResponse* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Cloud_Message_GroupQuitResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Cloud_Message_GroupQuitResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Cloud_Message_GroupKickRequest* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Cloud_Message_GroupKickRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Cloud_Message_GroupKickRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Cloud_Message_GroupKickResponse* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Cloud_Message_GroupKickResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Cloud_Message_GroupKickResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Cloud_Message_GroupSettingRequest* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Cloud_Message_GroupSettingRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Cloud_Message_GroupSettingRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Cloud_Message_GroupSettingRename* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Cloud_Message_GroupSettingRename >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Cloud_Message_GroupSettingRename >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Cloud_Message_GroupSettingDesc* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Cloud_Message_GroupSettingDesc >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Cloud_Message_GroupSettingDesc >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Cloud_Message_GroupSettingJoinNeedPermission* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Cloud_Message_GroupSettingJoinNeedPermission >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Cloud_Message_GroupSettingJoinNeedPermission >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Cloud_Message_GroupSettingResponse* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Cloud_Message_GroupSettingResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Cloud_Message_GroupSettingResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Cloud_Message_GroupMemberSettingRequest* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Cloud_Message_GroupMemberSettingRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Cloud_Message_GroupMemberSettingRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Cloud_Message_SetUserNickname* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Cloud_Message_SetUserNickname >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Cloud_Message_SetUserNickname >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Cloud_Message_SetUserAntiDisturbing* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Cloud_Message_SetUserAntiDisturbing >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Cloud_Message_SetUserAntiDisturbing >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Cloud_Message_GroupMemberSettingResponse* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Cloud_Message_GroupMemberSettingResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Cloud_Message_GroupMemberSettingResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Cloud_Message_GroupMemberListGetRequest* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Cloud_Message_GroupMemberListGetRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Cloud_Message_GroupMemberListGetRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Cloud_Message_GroupMemberListGetResponse* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Cloud_Message_GroupMemberListGetResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Cloud_Message_GroupMemberListGetResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Cloud_Message_GroupMemberGetRequest* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Cloud_Message_GroupMemberGetRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Cloud_Message_GroupMemberGetRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Cloud_Message_GroupMemberGetResponse* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Cloud_Message_GroupMemberGetResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Cloud_Message_GroupMemberGetResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Cloud_Message_UserGroupListRequest* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Cloud_Message_UserGroupListRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Cloud_Message_UserGroupListRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Cloud_Message_UserGroupListResponse* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Cloud_Message_UserGroupListResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Cloud_Message_UserGroupListResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Cloud_Message_UserGroupRecord* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Cloud_Message_UserGroupRecord >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Cloud_Message_UserGroupRecord >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Cloud_Message_UserGroupGetRequest* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Cloud_Message_UserGroupGetRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Cloud_Message_UserGroupGetRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Cloud_Message_UserGroupGetResponse* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Cloud_Message_UserGroupGetResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Cloud_Message_UserGroupGetResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Cloud_Message_UserGroupInfo* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Cloud_Message_UserGroupInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Cloud_Message_UserGroupInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Cloud_Message_GroupMember* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Cloud_Message_GroupMember >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Cloud_Message_GroupMember >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Cloud_Message_GroupInfo* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Cloud_Message_GroupInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Cloud_Message_GroupInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Cloud_Message_GroupBasicInfo* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Cloud_Message_GroupBasicInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Cloud_Message_GroupBasicInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Cloud_Message_GroupMemberBriefInfo* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Cloud_Message_GroupMemberBriefInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Cloud_Message_GroupMemberBriefInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Cloud_Message_ImcPassThroughRequest* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Cloud_Message_ImcPassThroughRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Cloud_Message_ImcPassThroughRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Cloud_Message_ImcPassThroughResponse* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Cloud_Message_ImcPassThroughResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Cloud_Message_ImcPassThroughResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Cloud_Message_ImcPassThroughPush* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Cloud_Message_ImcPassThroughPush >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Cloud_Message_ImcPassThroughPush >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Cloud_Message_InputtingContent* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Cloud_Message_InputtingContent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Cloud_Message_InputtingContent >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Cloud_Message* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Cloud_Message >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Cloud_Message >(arena);
}
template<> PROTOBUF_NOINLINE ::AcFunDanmu::Im::Cloud* Arena::CreateMaybeMessage< ::AcFunDanmu::Im::Cloud >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::Im::Cloud >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
