// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CommonStateSignalChatEnd.proto

#include "CommonStateSignalChatEnd.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace AcFunDanmu {
constexpr CommonStateSignalChatEnd::CommonStateSignalChatEnd(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : chatid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , endtype_(0)
{}
struct CommonStateSignalChatEndDefaultTypeInternal {
  constexpr CommonStateSignalChatEndDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CommonStateSignalChatEndDefaultTypeInternal() {}
  union {
    CommonStateSignalChatEnd _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CommonStateSignalChatEndDefaultTypeInternal _CommonStateSignalChatEnd_default_instance_;
}  // namespace AcFunDanmu
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_CommonStateSignalChatEnd_2eproto[1];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_CommonStateSignalChatEnd_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_CommonStateSignalChatEnd_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_CommonStateSignalChatEnd_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::CommonStateSignalChatEnd, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::CommonStateSignalChatEnd, chatid_),
  PROTOBUF_FIELD_OFFSET(::AcFunDanmu::CommonStateSignalChatEnd, endtype_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::AcFunDanmu::CommonStateSignalChatEnd)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AcFunDanmu::_CommonStateSignalChatEnd_default_instance_),
};

const char descriptor_table_protodef_CommonStateSignalChatEnd_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\036CommonStateSignalChatEnd.proto\022\nAcFunD"
  "anmu\"\264\002\n\030CommonStateSignalChatEnd\022\016\n\006cha"
  "tId\030\001 \001(\t\022=\n\007endType\030\002 \001(\0162,.AcFunDanmu."
  "CommonStateSignalChatEnd.EndType\"\310\001\n\007End"
  "Type\022\013\n\007UNKNOWN\020\000\022\024\n\020CANCEL_BY_AUTHOR\020\001\022"
  "\021\n\rEND_BY_AUTHOR\020\002\022\020\n\014END_BY_GUEST\020\003\022\020\n\014"
  "GUEST_REJECT\020\004\022\021\n\rGUEST_TIMEOUT\020\005\022\033\n\027GUE"
  "ST_HEARTBEAT_TIMEOUT\020\006\022\034\n\030AUTHOR_HEARTBE"
  "AT_TIMEOUT\020\007\022\025\n\021PEER_LIVE_STOPPED\020\010b\006pro"
  "to3"
  ;
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_CommonStateSignalChatEnd_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_CommonStateSignalChatEnd_2eproto = {
  false, false, 363, descriptor_table_protodef_CommonStateSignalChatEnd_2eproto, "CommonStateSignalChatEnd.proto", 
  &descriptor_table_CommonStateSignalChatEnd_2eproto_once, nullptr, 0, 1,
  schemas, file_default_instances, TableStruct_CommonStateSignalChatEnd_2eproto::offsets,
  file_level_metadata_CommonStateSignalChatEnd_2eproto, file_level_enum_descriptors_CommonStateSignalChatEnd_2eproto, file_level_service_descriptors_CommonStateSignalChatEnd_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_CommonStateSignalChatEnd_2eproto_getter() {
  return &descriptor_table_CommonStateSignalChatEnd_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_CommonStateSignalChatEnd_2eproto(&descriptor_table_CommonStateSignalChatEnd_2eproto);
namespace AcFunDanmu {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CommonStateSignalChatEnd_EndType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_CommonStateSignalChatEnd_2eproto);
  return file_level_enum_descriptors_CommonStateSignalChatEnd_2eproto[0];
}
bool CommonStateSignalChatEnd_EndType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr CommonStateSignalChatEnd_EndType CommonStateSignalChatEnd::UNKNOWN;
constexpr CommonStateSignalChatEnd_EndType CommonStateSignalChatEnd::CANCEL_BY_AUTHOR;
constexpr CommonStateSignalChatEnd_EndType CommonStateSignalChatEnd::END_BY_AUTHOR;
constexpr CommonStateSignalChatEnd_EndType CommonStateSignalChatEnd::END_BY_GUEST;
constexpr CommonStateSignalChatEnd_EndType CommonStateSignalChatEnd::GUEST_REJECT;
constexpr CommonStateSignalChatEnd_EndType CommonStateSignalChatEnd::GUEST_TIMEOUT;
constexpr CommonStateSignalChatEnd_EndType CommonStateSignalChatEnd::GUEST_HEARTBEAT_TIMEOUT;
constexpr CommonStateSignalChatEnd_EndType CommonStateSignalChatEnd::AUTHOR_HEARTBEAT_TIMEOUT;
constexpr CommonStateSignalChatEnd_EndType CommonStateSignalChatEnd::PEER_LIVE_STOPPED;
constexpr CommonStateSignalChatEnd_EndType CommonStateSignalChatEnd::EndType_MIN;
constexpr CommonStateSignalChatEnd_EndType CommonStateSignalChatEnd::EndType_MAX;
constexpr int CommonStateSignalChatEnd::EndType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)

// ===================================================================

class CommonStateSignalChatEnd::_Internal {
 public:
};

CommonStateSignalChatEnd::CommonStateSignalChatEnd(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AcFunDanmu.CommonStateSignalChatEnd)
}
CommonStateSignalChatEnd::CommonStateSignalChatEnd(const CommonStateSignalChatEnd& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  chatid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_chatid().empty()) {
    chatid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_chatid(), 
      GetArenaForAllocation());
  }
  endtype_ = from.endtype_;
  // @@protoc_insertion_point(copy_constructor:AcFunDanmu.CommonStateSignalChatEnd)
}

void CommonStateSignalChatEnd::SharedCtor() {
chatid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
endtype_ = 0;
}

CommonStateSignalChatEnd::~CommonStateSignalChatEnd() {
  // @@protoc_insertion_point(destructor:AcFunDanmu.CommonStateSignalChatEnd)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CommonStateSignalChatEnd::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  chatid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CommonStateSignalChatEnd::ArenaDtor(void* object) {
  CommonStateSignalChatEnd* _this = reinterpret_cast< CommonStateSignalChatEnd* >(object);
  (void)_this;
}
void CommonStateSignalChatEnd::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CommonStateSignalChatEnd::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CommonStateSignalChatEnd::Clear() {
// @@protoc_insertion_point(message_clear_start:AcFunDanmu.CommonStateSignalChatEnd)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  chatid_.ClearToEmpty();
  endtype_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CommonStateSignalChatEnd::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string chatId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_chatid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AcFunDanmu.CommonStateSignalChatEnd.chatId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .AcFunDanmu.CommonStateSignalChatEnd.EndType endType = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_endtype(static_cast<::AcFunDanmu::CommonStateSignalChatEnd_EndType>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CommonStateSignalChatEnd::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AcFunDanmu.CommonStateSignalChatEnd)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string chatId = 1;
  if (!this->chatid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_chatid().data(), static_cast<int>(this->_internal_chatid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AcFunDanmu.CommonStateSignalChatEnd.chatId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_chatid(), target);
  }

  // .AcFunDanmu.CommonStateSignalChatEnd.EndType endType = 2;
  if (this->endtype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_endtype(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AcFunDanmu.CommonStateSignalChatEnd)
  return target;
}

size_t CommonStateSignalChatEnd::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AcFunDanmu.CommonStateSignalChatEnd)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string chatId = 1;
  if (!this->chatid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_chatid());
  }

  // .AcFunDanmu.CommonStateSignalChatEnd.EndType endType = 2;
  if (this->endtype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_endtype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CommonStateSignalChatEnd::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AcFunDanmu.CommonStateSignalChatEnd)
  GOOGLE_DCHECK_NE(&from, this);
  const CommonStateSignalChatEnd* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CommonStateSignalChatEnd>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AcFunDanmu.CommonStateSignalChatEnd)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AcFunDanmu.CommonStateSignalChatEnd)
    MergeFrom(*source);
  }
}

void CommonStateSignalChatEnd::MergeFrom(const CommonStateSignalChatEnd& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AcFunDanmu.CommonStateSignalChatEnd)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from.chatid().empty()) {
    _internal_set_chatid(from._internal_chatid());
  }
  if (from.endtype() != 0) {
    _internal_set_endtype(from._internal_endtype());
  }
}

void CommonStateSignalChatEnd::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AcFunDanmu.CommonStateSignalChatEnd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CommonStateSignalChatEnd::CopyFrom(const CommonStateSignalChatEnd& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AcFunDanmu.CommonStateSignalChatEnd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CommonStateSignalChatEnd::IsInitialized() const {
  return true;
}

void CommonStateSignalChatEnd::InternalSwap(CommonStateSignalChatEnd* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &chatid_, GetArenaForAllocation(),
      &other->chatid_, other->GetArenaForAllocation()
  );
  swap(endtype_, other->endtype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CommonStateSignalChatEnd::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_CommonStateSignalChatEnd_2eproto_getter, &descriptor_table_CommonStateSignalChatEnd_2eproto_once,
      file_level_metadata_CommonStateSignalChatEnd_2eproto[0]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace AcFunDanmu
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::AcFunDanmu::CommonStateSignalChatEnd* Arena::CreateMaybeMessage< ::AcFunDanmu::CommonStateSignalChatEnd >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AcFunDanmu::CommonStateSignalChatEnd >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
